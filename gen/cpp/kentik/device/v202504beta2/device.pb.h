// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: kentik/device/v202504beta2/device.proto
// Protobuf C++ Version: 5.29.3

#ifndef kentik_2fdevice_2fv202504beta2_2fdevice_2eproto_2epb_2eh
#define kentik_2fdevice_2fv202504beta2_2fdevice_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field_inl.h"
#include "google/protobuf/unknown_field_set.h"
#include "google/api/annotations.pb.h"
#include "google/api/client.pb.h"
#include "google/api/field_behavior.pb.h"
#include "google/protobuf/timestamp.pb.h"
#include "google/protobuf/duration.pb.h"
#include "protoc-gen-openapiv2/options/annotations.pb.h"
#include "kentik/core/v202303/annotations.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_kentik_2fdevice_2fv202504beta2_2fdevice_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_kentik_2fdevice_2fv202504beta2_2fdevice_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_kentik_2fdevice_2fv202504beta2_2fdevice_2eproto;
namespace kentik {
namespace device {
namespace v202504beta2 {
class CreateDeviceRequest;
struct CreateDeviceRequestDefaultTypeInternal;
extern CreateDeviceRequestDefaultTypeInternal _CreateDeviceRequest_default_instance_;
class CreateDeviceResponse;
struct CreateDeviceResponseDefaultTypeInternal;
extern CreateDeviceResponseDefaultTypeInternal _CreateDeviceResponse_default_instance_;
class CreateDevicesRequest;
struct CreateDevicesRequestDefaultTypeInternal;
extern CreateDevicesRequestDefaultTypeInternal _CreateDevicesRequest_default_instance_;
class CreateDevicesResponse;
struct CreateDevicesResponseDefaultTypeInternal;
extern CreateDevicesResponseDefaultTypeInternal _CreateDevicesResponse_default_instance_;
class CustomColumnData;
struct CustomColumnDataDefaultTypeInternal;
extern CustomColumnDataDefaultTypeInternal _CustomColumnData_default_instance_;
class DeleteDeviceRequest;
struct DeleteDeviceRequestDefaultTypeInternal;
extern DeleteDeviceRequestDefaultTypeInternal _DeleteDeviceRequest_default_instance_;
class DeleteDeviceResponse;
struct DeleteDeviceResponseDefaultTypeInternal;
extern DeleteDeviceResponseDefaultTypeInternal _DeleteDeviceResponse_default_instance_;
class DeleteDevicesRequest;
struct DeleteDevicesRequestDefaultTypeInternal;
extern DeleteDevicesRequestDefaultTypeInternal _DeleteDevicesRequest_default_instance_;
class DeleteDevicesResponse;
struct DeleteDevicesResponseDefaultTypeInternal;
extern DeleteDevicesResponseDefaultTypeInternal _DeleteDevicesResponse_default_instance_;
class DeviceConcise;
struct DeviceConciseDefaultTypeInternal;
extern DeviceConciseDefaultTypeInternal _DeviceConcise_default_instance_;
class DeviceDetailed;
struct DeviceDetailedDefaultTypeInternal;
extern DeviceDetailedDefaultTypeInternal _DeviceDetailed_default_instance_;
class DeviceNmsConfig;
struct DeviceNmsConfigDefaultTypeInternal;
extern DeviceNmsConfigDefaultTypeInternal _DeviceNmsConfig_default_instance_;
class DeviceNmsSnmpConfig;
struct DeviceNmsSnmpConfigDefaultTypeInternal;
extern DeviceNmsSnmpConfigDefaultTypeInternal _DeviceNmsSnmpConfig_default_instance_;
class DeviceNmsStConfig;
struct DeviceNmsStConfigDefaultTypeInternal;
extern DeviceNmsStConfigDefaultTypeInternal _DeviceNmsStConfig_default_instance_;
class DeviceQuery;
struct DeviceQueryDefaultTypeInternal;
extern DeviceQueryDefaultTypeInternal _DeviceQuery_default_instance_;
class DeviceSnmpV3Conf;
struct DeviceSnmpV3ConfDefaultTypeInternal;
extern DeviceSnmpV3ConfDefaultTypeInternal _DeviceSnmpV3Conf_default_instance_;
class GetDeviceRequest;
struct GetDeviceRequestDefaultTypeInternal;
extern GetDeviceRequestDefaultTypeInternal _GetDeviceRequest_default_instance_;
class GetDeviceResponse;
struct GetDeviceResponseDefaultTypeInternal;
extern GetDeviceResponseDefaultTypeInternal _GetDeviceResponse_default_instance_;
class GnmiV1Conf;
struct GnmiV1ConfDefaultTypeInternal;
extern GnmiV1ConfDefaultTypeInternal _GnmiV1Conf_default_instance_;
class Interface;
struct InterfaceDefaultTypeInternal;
extern InterfaceDefaultTypeInternal _Interface_default_instance_;
class Label;
struct LabelDefaultTypeInternal;
extern LabelDefaultTypeInternal _Label_default_instance_;
class LabelConcise;
struct LabelConciseDefaultTypeInternal;
extern LabelConciseDefaultTypeInternal _LabelConcise_default_instance_;
class ListDevicesRequest;
struct ListDevicesRequestDefaultTypeInternal;
extern ListDevicesRequestDefaultTypeInternal _ListDevicesRequest_default_instance_;
class ListDevicesResponse;
struct ListDevicesResponseDefaultTypeInternal;
extern ListDevicesResponseDefaultTypeInternal _ListDevicesResponse_default_instance_;
class Plan;
struct PlanDefaultTypeInternal;
extern PlanDefaultTypeInternal _Plan_default_instance_;
class Plan_MetadataEntry_DoNotUse;
struct Plan_MetadataEntry_DoNotUseDefaultTypeInternal;
extern Plan_MetadataEntry_DoNotUseDefaultTypeInternal _Plan_MetadataEntry_DoNotUse_default_instance_;
class Site;
struct SiteDefaultTypeInternal;
extern SiteDefaultTypeInternal _Site_default_instance_;
class UpdateDeviceLabelsRequest;
struct UpdateDeviceLabelsRequestDefaultTypeInternal;
extern UpdateDeviceLabelsRequestDefaultTypeInternal _UpdateDeviceLabelsRequest_default_instance_;
class UpdateDeviceLabelsResponse;
struct UpdateDeviceLabelsResponseDefaultTypeInternal;
extern UpdateDeviceLabelsResponseDefaultTypeInternal _UpdateDeviceLabelsResponse_default_instance_;
class UpdateDeviceRequest;
struct UpdateDeviceRequestDefaultTypeInternal;
extern UpdateDeviceRequestDefaultTypeInternal _UpdateDeviceRequest_default_instance_;
class UpdateDeviceResponse;
struct UpdateDeviceResponseDefaultTypeInternal;
extern UpdateDeviceResponseDefaultTypeInternal _UpdateDeviceResponse_default_instance_;
class UpdateDevicesRequest;
struct UpdateDevicesRequestDefaultTypeInternal;
extern UpdateDevicesRequestDefaultTypeInternal _UpdateDevicesRequest_default_instance_;
class UpdateDevicesResponse;
struct UpdateDevicesResponseDefaultTypeInternal;
extern UpdateDevicesResponseDefaultTypeInternal _UpdateDevicesResponse_default_instance_;
}  // namespace v202504beta2
}  // namespace device
}  // namespace kentik
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace kentik {
namespace device {
namespace v202504beta2 {

// ===================================================================


// -------------------------------------------------------------------

class Site final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.device.v202504beta2.Site) */ {
 public:
  inline Site() : Site(nullptr) {}
  ~Site() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Site* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Site));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Site(
      ::google::protobuf::internal::ConstantInitialized);

  inline Site(const Site& from) : Site(nullptr, from) {}
  inline Site(Site&& from) noexcept
      : Site(nullptr, std::move(from)) {}
  inline Site& operator=(const Site& from) {
    CopyFrom(from);
    return *this;
  }
  inline Site& operator=(Site&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Site& default_instance() {
    return *internal_default_instance();
  }
  static inline const Site* internal_default_instance() {
    return reinterpret_cast<const Site*>(
        &_Site_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(Site& a, Site& b) { a.Swap(&b); }
  inline void Swap(Site* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Site* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Site* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Site>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Site& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Site& from) { Site::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Site* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.device.v202504beta2.Site"; }

 protected:
  explicit Site(::google::protobuf::Arena* arena);
  Site(::google::protobuf::Arena* arena, const Site& from);
  Site(::google::protobuf::Arena* arena, Site&& from) noexcept
      : Site(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
    kSiteNameFieldNumber = 2,
    kCompanyIdFieldNumber = 5,
    kLatFieldNumber = 3,
    kLonFieldNumber = 4,
  };
  // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // string site_name = 2 [json_name = "siteName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_site_name() ;
  const std::string& site_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_site_name(Arg_&& arg, Args_... args);
  std::string* mutable_site_name();
  PROTOBUF_NODISCARD std::string* release_site_name();
  void set_allocated_site_name(std::string* value);

  private:
  const std::string& _internal_site_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_site_name(
      const std::string& value);
  std::string* _internal_mutable_site_name();

  public:
  // string company_id = 5 [json_name = "companyId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_company_id() ;
  const std::string& company_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_company_id(Arg_&& arg, Args_... args);
  std::string* mutable_company_id();
  PROTOBUF_NODISCARD std::string* release_company_id();
  void set_allocated_company_id(std::string* value);

  private:
  const std::string& _internal_company_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_company_id(
      const std::string& value);
  std::string* _internal_mutable_company_id();

  public:
  // double lat = 3 [json_name = "lat", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_lat() ;
  double lat() const;
  void set_lat(double value);

  private:
  double _internal_lat() const;
  void _internal_set_lat(double value);

  public:
  // double lon = 4 [json_name = "lon", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_lon() ;
  double lon() const;
  void set_lon(double value);

  private:
  double _internal_lon() const;
  void _internal_set_lon(double value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.device.v202504beta2.Site)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      61, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Site& from_msg);
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::ArenaStringPtr site_name_;
    ::google::protobuf::internal::ArenaStringPtr company_id_;
    double lat_;
    double lon_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fdevice_2fv202504beta2_2fdevice_2eproto;
};
// -------------------------------------------------------------------

class Plan_MetadataEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  Plan_MetadataEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Plan_MetadataEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit Plan_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const Plan_MetadataEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const Plan_MetadataEntry_DoNotUse*>(
        &_Plan_MetadataEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_kentik_2fdevice_2fv202504beta2_2fdevice_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      62, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class LabelConcise final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.device.v202504beta2.LabelConcise) */ {
 public:
  inline LabelConcise() : LabelConcise(nullptr) {}
  ~LabelConcise() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(LabelConcise* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(LabelConcise));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LabelConcise(
      ::google::protobuf::internal::ConstantInitialized);

  inline LabelConcise(const LabelConcise& from) : LabelConcise(nullptr, from) {}
  inline LabelConcise(LabelConcise&& from) noexcept
      : LabelConcise(nullptr, std::move(from)) {}
  inline LabelConcise& operator=(const LabelConcise& from) {
    CopyFrom(from);
    return *this;
  }
  inline LabelConcise& operator=(LabelConcise&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LabelConcise& default_instance() {
    return *internal_default_instance();
  }
  static inline const LabelConcise* internal_default_instance() {
    return reinterpret_cast<const LabelConcise*>(
        &_LabelConcise_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 14;
  friend void swap(LabelConcise& a, LabelConcise& b) { a.Swap(&b); }
  inline void Swap(LabelConcise* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LabelConcise* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LabelConcise* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<LabelConcise>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LabelConcise& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LabelConcise& from) { LabelConcise::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(LabelConcise* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.device.v202504beta2.LabelConcise"; }

 protected:
  explicit LabelConcise(::google::protobuf::Arena* arena);
  LabelConcise(::google::protobuf::Arena* arena, const LabelConcise& from);
  LabelConcise(::google::protobuf::Arena* arena, LabelConcise&& from) noexcept
      : LabelConcise(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
  };
  // uint32 id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_id() ;
  ::uint32_t id() const;
  void set_id(::uint32_t value);

  private:
  ::uint32_t _internal_id() const;
  void _internal_set_id(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.device.v202504beta2.LabelConcise)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const LabelConcise& from_msg);
    ::uint32_t id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fdevice_2fv202504beta2_2fdevice_2eproto;
};
// -------------------------------------------------------------------

class Interface final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.device.v202504beta2.Interface) */ {
 public:
  inline Interface() : Interface(nullptr) {}
  ~Interface() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Interface* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Interface));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Interface(
      ::google::protobuf::internal::ConstantInitialized);

  inline Interface(const Interface& from) : Interface(nullptr, from) {}
  inline Interface(Interface&& from) noexcept
      : Interface(nullptr, std::move(from)) {}
  inline Interface& operator=(const Interface& from) {
    CopyFrom(from);
    return *this;
  }
  inline Interface& operator=(Interface&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Interface& default_instance() {
    return *internal_default_instance();
  }
  static inline const Interface* internal_default_instance() {
    return reinterpret_cast<const Interface*>(
        &_Interface_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(Interface& a, Interface& b) { a.Swap(&b); }
  inline void Swap(Interface* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Interface* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Interface* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Interface>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Interface& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Interface& from) { Interface::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Interface* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.device.v202504beta2.Interface"; }

 protected:
  explicit Interface(::google::protobuf::Arena* arena);
  Interface(::google::protobuf::Arena* arena, const Interface& from);
  Interface(::google::protobuf::Arena* arena, Interface&& from) noexcept
      : Interface(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kInterfaceDescriptionFieldNumber = 1,
    kInitialSnmpSpeedFieldNumber = 2,
    kDeviceIdFieldNumber = 3,
    kSnmpSpeedFieldNumber = 4,
    kSnmpAliasFieldNumber = 5,
    kSnmpIdFieldNumber = 6,
    kConnectivityTypeFieldNumber = 7,
    kNetworkBoundaryFieldNumber = 8,
    kProviderFieldNumber = 9,
  };
  // string interface_description = 1 [json_name = "interfaceDescription", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_interface_description() ;
  const std::string& interface_description() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_interface_description(Arg_&& arg, Args_... args);
  std::string* mutable_interface_description();
  PROTOBUF_NODISCARD std::string* release_interface_description();
  void set_allocated_interface_description(std::string* value);

  private:
  const std::string& _internal_interface_description() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_interface_description(
      const std::string& value);
  std::string* _internal_mutable_interface_description();

  public:
  // string initial_snmp_speed = 2 [json_name = "initialSnmpSpeed", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_initial_snmp_speed() ;
  const std::string& initial_snmp_speed() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_initial_snmp_speed(Arg_&& arg, Args_... args);
  std::string* mutable_initial_snmp_speed();
  PROTOBUF_NODISCARD std::string* release_initial_snmp_speed();
  void set_allocated_initial_snmp_speed(std::string* value);

  private:
  const std::string& _internal_initial_snmp_speed() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_initial_snmp_speed(
      const std::string& value);
  std::string* _internal_mutable_initial_snmp_speed();

  public:
  // string device_id = 3 [json_name = "deviceId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_device_id() ;
  const std::string& device_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_device_id(Arg_&& arg, Args_... args);
  std::string* mutable_device_id();
  PROTOBUF_NODISCARD std::string* release_device_id();
  void set_allocated_device_id(std::string* value);

  private:
  const std::string& _internal_device_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_device_id(
      const std::string& value);
  std::string* _internal_mutable_device_id();

  public:
  // string snmp_speed = 4 [json_name = "snmpSpeed", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_snmp_speed() ;
  const std::string& snmp_speed() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_snmp_speed(Arg_&& arg, Args_... args);
  std::string* mutable_snmp_speed();
  PROTOBUF_NODISCARD std::string* release_snmp_speed();
  void set_allocated_snmp_speed(std::string* value);

  private:
  const std::string& _internal_snmp_speed() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_snmp_speed(
      const std::string& value);
  std::string* _internal_mutable_snmp_speed();

  public:
  // string snmp_alias = 5 [json_name = "snmpAlias", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_snmp_alias() ;
  const std::string& snmp_alias() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_snmp_alias(Arg_&& arg, Args_... args);
  std::string* mutable_snmp_alias();
  PROTOBUF_NODISCARD std::string* release_snmp_alias();
  void set_allocated_snmp_alias(std::string* value);

  private:
  const std::string& _internal_snmp_alias() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_snmp_alias(
      const std::string& value);
  std::string* _internal_mutable_snmp_alias();

  public:
  // string snmp_id = 6 [json_name = "snmpId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_snmp_id() ;
  const std::string& snmp_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_snmp_id(Arg_&& arg, Args_... args);
  std::string* mutable_snmp_id();
  PROTOBUF_NODISCARD std::string* release_snmp_id();
  void set_allocated_snmp_id(std::string* value);

  private:
  const std::string& _internal_snmp_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_snmp_id(
      const std::string& value);
  std::string* _internal_mutable_snmp_id();

  public:
  // string connectivity_type = 7 [json_name = "connectivityType", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_connectivity_type() ;
  const std::string& connectivity_type() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_connectivity_type(Arg_&& arg, Args_... args);
  std::string* mutable_connectivity_type();
  PROTOBUF_NODISCARD std::string* release_connectivity_type();
  void set_allocated_connectivity_type(std::string* value);

  private:
  const std::string& _internal_connectivity_type() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_connectivity_type(
      const std::string& value);
  std::string* _internal_mutable_connectivity_type();

  public:
  // string network_boundary = 8 [json_name = "networkBoundary", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_network_boundary() ;
  const std::string& network_boundary() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_network_boundary(Arg_&& arg, Args_... args);
  std::string* mutable_network_boundary();
  PROTOBUF_NODISCARD std::string* release_network_boundary();
  void set_allocated_network_boundary(std::string* value);

  private:
  const std::string& _internal_network_boundary() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_network_boundary(
      const std::string& value);
  std::string* _internal_mutable_network_boundary();

  public:
  // string provider = 9 [json_name = "provider", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_provider() ;
  const std::string& provider() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_provider(Arg_&& arg, Args_... args);
  std::string* mutable_provider();
  PROTOBUF_NODISCARD std::string* release_provider();
  void set_allocated_provider(std::string* value);

  private:
  const std::string& _internal_provider() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_provider(
      const std::string& value);
  std::string* _internal_mutable_provider();

  public:
  // @@protoc_insertion_point(class_scope:kentik.device.v202504beta2.Interface)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 9, 0,
      169, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Interface& from_msg);
    ::google::protobuf::internal::ArenaStringPtr interface_description_;
    ::google::protobuf::internal::ArenaStringPtr initial_snmp_speed_;
    ::google::protobuf::internal::ArenaStringPtr device_id_;
    ::google::protobuf::internal::ArenaStringPtr snmp_speed_;
    ::google::protobuf::internal::ArenaStringPtr snmp_alias_;
    ::google::protobuf::internal::ArenaStringPtr snmp_id_;
    ::google::protobuf::internal::ArenaStringPtr connectivity_type_;
    ::google::protobuf::internal::ArenaStringPtr network_boundary_;
    ::google::protobuf::internal::ArenaStringPtr provider_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fdevice_2fv202504beta2_2fdevice_2eproto;
};
// -------------------------------------------------------------------

class GnmiV1Conf final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.device.v202504beta2.GnmiV1Conf) */ {
 public:
  inline GnmiV1Conf() : GnmiV1Conf(nullptr) {}
  ~GnmiV1Conf() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GnmiV1Conf* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GnmiV1Conf));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GnmiV1Conf(
      ::google::protobuf::internal::ConstantInitialized);

  inline GnmiV1Conf(const GnmiV1Conf& from) : GnmiV1Conf(nullptr, from) {}
  inline GnmiV1Conf(GnmiV1Conf&& from) noexcept
      : GnmiV1Conf(nullptr, std::move(from)) {}
  inline GnmiV1Conf& operator=(const GnmiV1Conf& from) {
    CopyFrom(from);
    return *this;
  }
  inline GnmiV1Conf& operator=(GnmiV1Conf&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GnmiV1Conf& default_instance() {
    return *internal_default_instance();
  }
  static inline const GnmiV1Conf* internal_default_instance() {
    return reinterpret_cast<const GnmiV1Conf*>(
        &_GnmiV1Conf_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(GnmiV1Conf& a, GnmiV1Conf& b) { a.Swap(&b); }
  inline void Swap(GnmiV1Conf* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GnmiV1Conf* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GnmiV1Conf* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GnmiV1Conf>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GnmiV1Conf& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GnmiV1Conf& from) { GnmiV1Conf::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GnmiV1Conf* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.device.v202504beta2.GnmiV1Conf"; }

 protected:
  explicit GnmiV1Conf(::google::protobuf::Arena* arena);
  GnmiV1Conf(::google::protobuf::Arena* arena, const GnmiV1Conf& from);
  GnmiV1Conf(::google::protobuf::Arena* arena, GnmiV1Conf&& from) noexcept
      : GnmiV1Conf(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDialoutServerFieldNumber = 1,
  };
  // string dialout_server = 1 [json_name = "dialoutServer", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_dialout_server() ;
  const std::string& dialout_server() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_dialout_server(Arg_&& arg, Args_... args);
  std::string* mutable_dialout_server();
  PROTOBUF_NODISCARD std::string* release_dialout_server();
  void set_allocated_dialout_server(std::string* value);

  private:
  const std::string& _internal_dialout_server() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_dialout_server(
      const std::string& value);
  std::string* _internal_mutable_dialout_server();

  public:
  // @@protoc_insertion_point(class_scope:kentik.device.v202504beta2.GnmiV1Conf)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      60, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GnmiV1Conf& from_msg);
    ::google::protobuf::internal::ArenaStringPtr dialout_server_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fdevice_2fv202504beta2_2fdevice_2eproto;
};
// -------------------------------------------------------------------

class DeviceSnmpV3Conf final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.device.v202504beta2.DeviceSnmpV3Conf) */ {
 public:
  inline DeviceSnmpV3Conf() : DeviceSnmpV3Conf(nullptr) {}
  ~DeviceSnmpV3Conf() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DeviceSnmpV3Conf* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DeviceSnmpV3Conf));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeviceSnmpV3Conf(
      ::google::protobuf::internal::ConstantInitialized);

  inline DeviceSnmpV3Conf(const DeviceSnmpV3Conf& from) : DeviceSnmpV3Conf(nullptr, from) {}
  inline DeviceSnmpV3Conf(DeviceSnmpV3Conf&& from) noexcept
      : DeviceSnmpV3Conf(nullptr, std::move(from)) {}
  inline DeviceSnmpV3Conf& operator=(const DeviceSnmpV3Conf& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeviceSnmpV3Conf& operator=(DeviceSnmpV3Conf&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeviceSnmpV3Conf& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeviceSnmpV3Conf* internal_default_instance() {
    return reinterpret_cast<const DeviceSnmpV3Conf*>(
        &_DeviceSnmpV3Conf_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(DeviceSnmpV3Conf& a, DeviceSnmpV3Conf& b) { a.Swap(&b); }
  inline void Swap(DeviceSnmpV3Conf* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeviceSnmpV3Conf* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeviceSnmpV3Conf* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DeviceSnmpV3Conf>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DeviceSnmpV3Conf& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DeviceSnmpV3Conf& from) { DeviceSnmpV3Conf::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DeviceSnmpV3Conf* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.device.v202504beta2.DeviceSnmpV3Conf"; }

 protected:
  explicit DeviceSnmpV3Conf(::google::protobuf::Arena* arena);
  DeviceSnmpV3Conf(::google::protobuf::Arena* arena, const DeviceSnmpV3Conf& from);
  DeviceSnmpV3Conf(::google::protobuf::Arena* arena, DeviceSnmpV3Conf&& from) noexcept
      : DeviceSnmpV3Conf(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kUsernameFieldNumber = 1,
    kAuthenticationProtocolFieldNumber = 2,
    kAuthenticationPassphraseFieldNumber = 3,
    kPrivacyProtocolFieldNumber = 4,
    kPrivacyPassphraseFieldNumber = 5,
  };
  // string username = 1 [json_name = "username", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_username() ;
  const std::string& username() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_username(Arg_&& arg, Args_... args);
  std::string* mutable_username();
  PROTOBUF_NODISCARD std::string* release_username();
  void set_allocated_username(std::string* value);

  private:
  const std::string& _internal_username() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_username(
      const std::string& value);
  std::string* _internal_mutable_username();

  public:
  // string authentication_protocol = 2 [json_name = "authenticationProtocol", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_authentication_protocol() ;
  const std::string& authentication_protocol() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_authentication_protocol(Arg_&& arg, Args_... args);
  std::string* mutable_authentication_protocol();
  PROTOBUF_NODISCARD std::string* release_authentication_protocol();
  void set_allocated_authentication_protocol(std::string* value);

  private:
  const std::string& _internal_authentication_protocol() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_authentication_protocol(
      const std::string& value);
  std::string* _internal_mutable_authentication_protocol();

  public:
  // string authentication_passphrase = 3 [json_name = "authenticationPassphrase", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_authentication_passphrase() ;
  const std::string& authentication_passphrase() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_authentication_passphrase(Arg_&& arg, Args_... args);
  std::string* mutable_authentication_passphrase();
  PROTOBUF_NODISCARD std::string* release_authentication_passphrase();
  void set_allocated_authentication_passphrase(std::string* value);

  private:
  const std::string& _internal_authentication_passphrase() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_authentication_passphrase(
      const std::string& value);
  std::string* _internal_mutable_authentication_passphrase();

  public:
  // string privacy_protocol = 4 [json_name = "privacyProtocol", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_privacy_protocol() ;
  const std::string& privacy_protocol() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_privacy_protocol(Arg_&& arg, Args_... args);
  std::string* mutable_privacy_protocol();
  PROTOBUF_NODISCARD std::string* release_privacy_protocol();
  void set_allocated_privacy_protocol(std::string* value);

  private:
  const std::string& _internal_privacy_protocol() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_privacy_protocol(
      const std::string& value);
  std::string* _internal_mutable_privacy_protocol();

  public:
  // string privacy_passphrase = 5 [json_name = "privacyPassphrase", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_privacy_passphrase() ;
  const std::string& privacy_passphrase() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_privacy_passphrase(Arg_&& arg, Args_... args);
  std::string* mutable_privacy_passphrase();
  PROTOBUF_NODISCARD std::string* release_privacy_passphrase();
  void set_allocated_privacy_passphrase(std::string* value);

  private:
  const std::string& _internal_privacy_passphrase() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_privacy_passphrase(
      const std::string& value);
  std::string* _internal_mutable_privacy_passphrase();

  public:
  // @@protoc_insertion_point(class_scope:kentik.device.v202504beta2.DeviceSnmpV3Conf)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      142, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DeviceSnmpV3Conf& from_msg);
    ::google::protobuf::internal::ArenaStringPtr username_;
    ::google::protobuf::internal::ArenaStringPtr authentication_protocol_;
    ::google::protobuf::internal::ArenaStringPtr authentication_passphrase_;
    ::google::protobuf::internal::ArenaStringPtr privacy_protocol_;
    ::google::protobuf::internal::ArenaStringPtr privacy_passphrase_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fdevice_2fv202504beta2_2fdevice_2eproto;
};
// -------------------------------------------------------------------

class DeviceQuery final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.device.v202504beta2.DeviceQuery) */ {
 public:
  inline DeviceQuery() : DeviceQuery(nullptr) {}
  ~DeviceQuery() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DeviceQuery* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DeviceQuery));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeviceQuery(
      ::google::protobuf::internal::ConstantInitialized);

  inline DeviceQuery(const DeviceQuery& from) : DeviceQuery(nullptr, from) {}
  inline DeviceQuery(DeviceQuery&& from) noexcept
      : DeviceQuery(nullptr, std::move(from)) {}
  inline DeviceQuery& operator=(const DeviceQuery& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeviceQuery& operator=(DeviceQuery&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeviceQuery& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeviceQuery* internal_default_instance() {
    return reinterpret_cast<const DeviceQuery*>(
        &_DeviceQuery_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 13;
  friend void swap(DeviceQuery& a, DeviceQuery& b) { a.Swap(&b); }
  inline void Swap(DeviceQuery* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeviceQuery* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeviceQuery* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DeviceQuery>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DeviceQuery& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DeviceQuery& from) { DeviceQuery::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DeviceQuery* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.device.v202504beta2.DeviceQuery"; }

 protected:
  explicit DeviceQuery(::google::protobuf::Arena* arena);
  DeviceQuery(::google::protobuf::Arena* arena, const DeviceQuery& from);
  DeviceQuery(::google::protobuf::Arena* arena, DeviceQuery&& from) noexcept
      : DeviceQuery(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNoCustomColumnsFieldNumber = 1,
  };
  // bool no_custom_columns = 1 [json_name = "noCustomColumns"];
  void clear_no_custom_columns() ;
  bool no_custom_columns() const;
  void set_no_custom_columns(bool value);

  private:
  bool _internal_no_custom_columns() const;
  void _internal_set_no_custom_columns(bool value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.device.v202504beta2.DeviceQuery)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DeviceQuery& from_msg);
    bool no_custom_columns_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fdevice_2fv202504beta2_2fdevice_2eproto;
};
// -------------------------------------------------------------------

class DeleteDevicesResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.device.v202504beta2.DeleteDevicesResponse) */ {
 public:
  inline DeleteDevicesResponse() : DeleteDevicesResponse(nullptr) {}
  ~DeleteDevicesResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DeleteDevicesResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DeleteDevicesResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeleteDevicesResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline DeleteDevicesResponse(const DeleteDevicesResponse& from) : DeleteDevicesResponse(nullptr, from) {}
  inline DeleteDevicesResponse(DeleteDevicesResponse&& from) noexcept
      : DeleteDevicesResponse(nullptr, std::move(from)) {}
  inline DeleteDevicesResponse& operator=(const DeleteDevicesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteDevicesResponse& operator=(DeleteDevicesResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeleteDevicesResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeleteDevicesResponse* internal_default_instance() {
    return reinterpret_cast<const DeleteDevicesResponse*>(
        &_DeleteDevicesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 32;
  friend void swap(DeleteDevicesResponse& a, DeleteDevicesResponse& b) { a.Swap(&b); }
  inline void Swap(DeleteDevicesResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteDevicesResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeleteDevicesResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DeleteDevicesResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DeleteDevicesResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DeleteDevicesResponse& from) { DeleteDevicesResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DeleteDevicesResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.device.v202504beta2.DeleteDevicesResponse"; }

 protected:
  explicit DeleteDevicesResponse(::google::protobuf::Arena* arena);
  DeleteDevicesResponse(::google::protobuf::Arena* arena, const DeleteDevicesResponse& from);
  DeleteDevicesResponse(::google::protobuf::Arena* arena, DeleteDevicesResponse&& from) noexcept
      : DeleteDevicesResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFailedDevicesFieldNumber = 1,
  };
  // repeated string failed_devices = 1 [json_name = "failedDevices", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int failed_devices_size() const;
  private:
  int _internal_failed_devices_size() const;

  public:
  void clear_failed_devices() ;
  const std::string& failed_devices(int index) const;
  std::string* mutable_failed_devices(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_failed_devices(int index, Arg_&& value, Args_... args);
  std::string* add_failed_devices();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_failed_devices(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& failed_devices() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_failed_devices();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_failed_devices() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_failed_devices();

  public:
  // @@protoc_insertion_point(class_scope:kentik.device.v202504beta2.DeleteDevicesResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      71, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DeleteDevicesResponse& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> failed_devices_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fdevice_2fv202504beta2_2fdevice_2eproto;
};
// -------------------------------------------------------------------

class DeleteDevicesRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.device.v202504beta2.DeleteDevicesRequest) */ {
 public:
  inline DeleteDevicesRequest() : DeleteDevicesRequest(nullptr) {}
  ~DeleteDevicesRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DeleteDevicesRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DeleteDevicesRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeleteDevicesRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline DeleteDevicesRequest(const DeleteDevicesRequest& from) : DeleteDevicesRequest(nullptr, from) {}
  inline DeleteDevicesRequest(DeleteDevicesRequest&& from) noexcept
      : DeleteDevicesRequest(nullptr, std::move(from)) {}
  inline DeleteDevicesRequest& operator=(const DeleteDevicesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteDevicesRequest& operator=(DeleteDevicesRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeleteDevicesRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeleteDevicesRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteDevicesRequest*>(
        &_DeleteDevicesRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 31;
  friend void swap(DeleteDevicesRequest& a, DeleteDevicesRequest& b) { a.Swap(&b); }
  inline void Swap(DeleteDevicesRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteDevicesRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeleteDevicesRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DeleteDevicesRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DeleteDevicesRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DeleteDevicesRequest& from) { DeleteDevicesRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DeleteDevicesRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.device.v202504beta2.DeleteDevicesRequest"; }

 protected:
  explicit DeleteDevicesRequest(::google::protobuf::Arena* arena);
  DeleteDevicesRequest(::google::protobuf::Arena* arena, const DeleteDevicesRequest& from);
  DeleteDevicesRequest(::google::protobuf::Arena* arena, DeleteDevicesRequest&& from) noexcept
      : DeleteDevicesRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdsFieldNumber = 1,
  };
  // repeated string ids = 1 [json_name = "ids", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int ids_size() const;
  private:
  int _internal_ids_size() const;

  public:
  void clear_ids() ;
  const std::string& ids(int index) const;
  std::string* mutable_ids(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_ids(int index, Arg_&& value, Args_... args);
  std::string* add_ids();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_ids(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& ids() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_ids();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_ids() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_ids();

  public:
  // @@protoc_insertion_point(class_scope:kentik.device.v202504beta2.DeleteDevicesRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      59, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DeleteDevicesRequest& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> ids_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fdevice_2fv202504beta2_2fdevice_2eproto;
};
// -------------------------------------------------------------------

class DeleteDeviceResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:kentik.device.v202504beta2.DeleteDeviceResponse) */ {
 public:
  inline DeleteDeviceResponse() : DeleteDeviceResponse(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DeleteDeviceResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DeleteDeviceResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeleteDeviceResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline DeleteDeviceResponse(const DeleteDeviceResponse& from) : DeleteDeviceResponse(nullptr, from) {}
  inline DeleteDeviceResponse(DeleteDeviceResponse&& from) noexcept
      : DeleteDeviceResponse(nullptr, std::move(from)) {}
  inline DeleteDeviceResponse& operator=(const DeleteDeviceResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteDeviceResponse& operator=(DeleteDeviceResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeleteDeviceResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeleteDeviceResponse* internal_default_instance() {
    return reinterpret_cast<const DeleteDeviceResponse*>(
        &_DeleteDeviceResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 30;
  friend void swap(DeleteDeviceResponse& a, DeleteDeviceResponse& b) { a.Swap(&b); }
  inline void Swap(DeleteDeviceResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteDeviceResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeleteDeviceResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<DeleteDeviceResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const DeleteDeviceResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const DeleteDeviceResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.device.v202504beta2.DeleteDeviceResponse"; }

 protected:
  explicit DeleteDeviceResponse(::google::protobuf::Arena* arena);
  DeleteDeviceResponse(::google::protobuf::Arena* arena, const DeleteDeviceResponse& from);
  DeleteDeviceResponse(::google::protobuf::Arena* arena, DeleteDeviceResponse&& from) noexcept
      : DeleteDeviceResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:kentik.device.v202504beta2.DeleteDeviceResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DeleteDeviceResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_kentik_2fdevice_2fv202504beta2_2fdevice_2eproto;
};
// -------------------------------------------------------------------

class DeleteDeviceRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.device.v202504beta2.DeleteDeviceRequest) */ {
 public:
  inline DeleteDeviceRequest() : DeleteDeviceRequest(nullptr) {}
  ~DeleteDeviceRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DeleteDeviceRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DeleteDeviceRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeleteDeviceRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline DeleteDeviceRequest(const DeleteDeviceRequest& from) : DeleteDeviceRequest(nullptr, from) {}
  inline DeleteDeviceRequest(DeleteDeviceRequest&& from) noexcept
      : DeleteDeviceRequest(nullptr, std::move(from)) {}
  inline DeleteDeviceRequest& operator=(const DeleteDeviceRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteDeviceRequest& operator=(DeleteDeviceRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeleteDeviceRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeleteDeviceRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteDeviceRequest*>(
        &_DeleteDeviceRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 29;
  friend void swap(DeleteDeviceRequest& a, DeleteDeviceRequest& b) { a.Swap(&b); }
  inline void Swap(DeleteDeviceRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteDeviceRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeleteDeviceRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DeleteDeviceRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DeleteDeviceRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DeleteDeviceRequest& from) { DeleteDeviceRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DeleteDeviceRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.device.v202504beta2.DeleteDeviceRequest"; }

 protected:
  explicit DeleteDeviceRequest(::google::protobuf::Arena* arena);
  DeleteDeviceRequest(::google::protobuf::Arena* arena, const DeleteDeviceRequest& from);
  DeleteDeviceRequest(::google::protobuf::Arena* arena, DeleteDeviceRequest&& from) noexcept
      : DeleteDeviceRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
  };
  // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // @@protoc_insertion_point(class_scope:kentik.device.v202504beta2.DeleteDeviceRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      57, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DeleteDeviceRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fdevice_2fv202504beta2_2fdevice_2eproto;
};
// -------------------------------------------------------------------

class CustomColumnData final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.device.v202504beta2.CustomColumnData) */ {
 public:
  inline CustomColumnData() : CustomColumnData(nullptr) {}
  ~CustomColumnData() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CustomColumnData* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CustomColumnData));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CustomColumnData(
      ::google::protobuf::internal::ConstantInitialized);

  inline CustomColumnData(const CustomColumnData& from) : CustomColumnData(nullptr, from) {}
  inline CustomColumnData(CustomColumnData&& from) noexcept
      : CustomColumnData(nullptr, std::move(from)) {}
  inline CustomColumnData& operator=(const CustomColumnData& from) {
    CopyFrom(from);
    return *this;
  }
  inline CustomColumnData& operator=(CustomColumnData&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CustomColumnData& default_instance() {
    return *internal_default_instance();
  }
  static inline const CustomColumnData* internal_default_instance() {
    return reinterpret_cast<const CustomColumnData*>(
        &_CustomColumnData_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(CustomColumnData& a, CustomColumnData& b) { a.Swap(&b); }
  inline void Swap(CustomColumnData* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CustomColumnData* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CustomColumnData* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CustomColumnData>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CustomColumnData& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CustomColumnData& from) { CustomColumnData::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CustomColumnData* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.device.v202504beta2.CustomColumnData"; }

 protected:
  explicit CustomColumnData(::google::protobuf::Arena* arena);
  CustomColumnData(::google::protobuf::Arena* arena, const CustomColumnData& from);
  CustomColumnData(::google::protobuf::Arena* arena, CustomColumnData&& from) noexcept
      : CustomColumnData(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDeviceIdFieldNumber = 1,
    kFieldIdFieldNumber = 2,
    kColNameFieldNumber = 3,
    kDescriptionFieldNumber = 4,
    kColTypeFieldNumber = 5,
    kDeviceTypeFieldNumber = 6,
  };
  // string device_id = 1 [json_name = "deviceId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_device_id() ;
  const std::string& device_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_device_id(Arg_&& arg, Args_... args);
  std::string* mutable_device_id();
  PROTOBUF_NODISCARD std::string* release_device_id();
  void set_allocated_device_id(std::string* value);

  private:
  const std::string& _internal_device_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_device_id(
      const std::string& value);
  std::string* _internal_mutable_device_id();

  public:
  // string field_id = 2 [json_name = "fieldId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_field_id() ;
  const std::string& field_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_field_id(Arg_&& arg, Args_... args);
  std::string* mutable_field_id();
  PROTOBUF_NODISCARD std::string* release_field_id();
  void set_allocated_field_id(std::string* value);

  private:
  const std::string& _internal_field_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_field_id(
      const std::string& value);
  std::string* _internal_mutable_field_id();

  public:
  // string col_name = 3 [json_name = "colName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_col_name() ;
  const std::string& col_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_col_name(Arg_&& arg, Args_... args);
  std::string* mutable_col_name();
  PROTOBUF_NODISCARD std::string* release_col_name();
  void set_allocated_col_name(std::string* value);

  private:
  const std::string& _internal_col_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_col_name(
      const std::string& value);
  std::string* _internal_mutable_col_name();

  public:
  // string description = 4 [json_name = "description", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_description() ;
  const std::string& description() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_description(Arg_&& arg, Args_... args);
  std::string* mutable_description();
  PROTOBUF_NODISCARD std::string* release_description();
  void set_allocated_description(std::string* value);

  private:
  const std::string& _internal_description() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_description(
      const std::string& value);
  std::string* _internal_mutable_description();

  public:
  // string col_type = 5 [json_name = "colType", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_col_type() ;
  const std::string& col_type() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_col_type(Arg_&& arg, Args_... args);
  std::string* mutable_col_type();
  PROTOBUF_NODISCARD std::string* release_col_type();
  void set_allocated_col_type(std::string* value);

  private:
  const std::string& _internal_col_type() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_col_type(
      const std::string& value);
  std::string* _internal_mutable_col_type();

  public:
  // string device_type = 6 [json_name = "deviceType", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_device_type() ;
  const std::string& device_type() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_device_type(Arg_&& arg, Args_... args);
  std::string* mutable_device_type();
  PROTOBUF_NODISCARD std::string* release_device_type();
  void set_allocated_device_type(std::string* value);

  private:
  const std::string& _internal_device_type() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_device_type(
      const std::string& value);
  std::string* _internal_mutable_device_type();

  public:
  // @@protoc_insertion_point(class_scope:kentik.device.v202504beta2.CustomColumnData)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 0,
      107, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CustomColumnData& from_msg);
    ::google::protobuf::internal::ArenaStringPtr device_id_;
    ::google::protobuf::internal::ArenaStringPtr field_id_;
    ::google::protobuf::internal::ArenaStringPtr col_name_;
    ::google::protobuf::internal::ArenaStringPtr description_;
    ::google::protobuf::internal::ArenaStringPtr col_type_;
    ::google::protobuf::internal::ArenaStringPtr device_type_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fdevice_2fv202504beta2_2fdevice_2eproto;
};
// -------------------------------------------------------------------

class UpdateDeviceLabelsRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.device.v202504beta2.UpdateDeviceLabelsRequest) */ {
 public:
  inline UpdateDeviceLabelsRequest() : UpdateDeviceLabelsRequest(nullptr) {}
  ~UpdateDeviceLabelsRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UpdateDeviceLabelsRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UpdateDeviceLabelsRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateDeviceLabelsRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdateDeviceLabelsRequest(const UpdateDeviceLabelsRequest& from) : UpdateDeviceLabelsRequest(nullptr, from) {}
  inline UpdateDeviceLabelsRequest(UpdateDeviceLabelsRequest&& from) noexcept
      : UpdateDeviceLabelsRequest(nullptr, std::move(from)) {}
  inline UpdateDeviceLabelsRequest& operator=(const UpdateDeviceLabelsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateDeviceLabelsRequest& operator=(UpdateDeviceLabelsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateDeviceLabelsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateDeviceLabelsRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateDeviceLabelsRequest*>(
        &_UpdateDeviceLabelsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 27;
  friend void swap(UpdateDeviceLabelsRequest& a, UpdateDeviceLabelsRequest& b) { a.Swap(&b); }
  inline void Swap(UpdateDeviceLabelsRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateDeviceLabelsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateDeviceLabelsRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<UpdateDeviceLabelsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateDeviceLabelsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateDeviceLabelsRequest& from) { UpdateDeviceLabelsRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(UpdateDeviceLabelsRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.device.v202504beta2.UpdateDeviceLabelsRequest"; }

 protected:
  explicit UpdateDeviceLabelsRequest(::google::protobuf::Arena* arena);
  UpdateDeviceLabelsRequest(::google::protobuf::Arena* arena, const UpdateDeviceLabelsRequest& from);
  UpdateDeviceLabelsRequest(::google::protobuf::Arena* arena, UpdateDeviceLabelsRequest&& from) noexcept
      : UpdateDeviceLabelsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLabelsFieldNumber = 2,
    kIdFieldNumber = 1,
  };
  // repeated .kentik.device.v202504beta2.LabelConcise labels = 2 [json_name = "labels", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int labels_size() const;
  private:
  int _internal_labels_size() const;

  public:
  void clear_labels() ;
  ::kentik::device::v202504beta2::LabelConcise* mutable_labels(int index);
  ::google::protobuf::RepeatedPtrField<::kentik::device::v202504beta2::LabelConcise>* mutable_labels();

  private:
  const ::google::protobuf::RepeatedPtrField<::kentik::device::v202504beta2::LabelConcise>& _internal_labels() const;
  ::google::protobuf::RepeatedPtrField<::kentik::device::v202504beta2::LabelConcise>* _internal_mutable_labels();
  public:
  const ::kentik::device::v202504beta2::LabelConcise& labels(int index) const;
  ::kentik::device::v202504beta2::LabelConcise* add_labels();
  const ::google::protobuf::RepeatedPtrField<::kentik::device::v202504beta2::LabelConcise>& labels() const;
  // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // @@protoc_insertion_point(class_scope:kentik.device.v202504beta2.UpdateDeviceLabelsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      63, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdateDeviceLabelsRequest& from_msg);
    ::google::protobuf::RepeatedPtrField< ::kentik::device::v202504beta2::LabelConcise > labels_;
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fdevice_2fv202504beta2_2fdevice_2eproto;
};
// -------------------------------------------------------------------

class Plan final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.device.v202504beta2.Plan) */ {
 public:
  inline Plan() : Plan(nullptr) {}
  ~Plan() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Plan* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Plan));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Plan(
      ::google::protobuf::internal::ConstantInitialized);

  inline Plan(const Plan& from) : Plan(nullptr, from) {}
  inline Plan(Plan&& from) noexcept
      : Plan(nullptr, std::move(from)) {}
  inline Plan& operator=(const Plan& from) {
    CopyFrom(from);
    return *this;
  }
  inline Plan& operator=(Plan&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Plan& default_instance() {
    return *internal_default_instance();
  }
  static inline const Plan* internal_default_instance() {
    return reinterpret_cast<const Plan*>(
        &_Plan_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(Plan& a, Plan& b) { a.Swap(&b); }
  inline void Swap(Plan* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Plan* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Plan* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Plan>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Plan& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Plan& from) { Plan::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Plan* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.device.v202504beta2.Plan"; }

 protected:
  explicit Plan(::google::protobuf::Arena* arena);
  Plan(::google::protobuf::Arena* arena, const Plan& from);
  Plan(::google::protobuf::Arena* arena, Plan&& from) noexcept
      : Plan(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDeviceTypesFieldNumber = 7,
    kDevicesFieldNumber = 8,
    kMetadataFieldNumber = 16,
    kIdFieldNumber = 1,
    kNameFieldNumber = 2,
    kCompanyIdFieldNumber = 5,
    kDescriptionFieldNumber = 6,
    kCdateFieldNumber = 14,
    kEdateFieldNumber = 15,
    kActiveFieldNumber = 3,
    kBgpFieldNumber = 4,
    kFastRetentionFieldNumber = 9,
    kFullRetentionFieldNumber = 10,
    kMaxBigdataFpsFieldNumber = 11,
    kMaxDevicesFieldNumber = 12,
    kMaxFpsFieldNumber = 13,
  };
  // repeated string device_types = 7 [json_name = "deviceTypes", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int device_types_size() const;
  private:
  int _internal_device_types_size() const;

  public:
  void clear_device_types() ;
  const std::string& device_types(int index) const;
  std::string* mutable_device_types(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_device_types(int index, Arg_&& value, Args_... args);
  std::string* add_device_types();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_device_types(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& device_types() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_device_types();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_device_types() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_device_types();

  public:
  // repeated string devices = 8 [json_name = "devices", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int devices_size() const;
  private:
  int _internal_devices_size() const;

  public:
  void clear_devices() ;
  const std::string& devices(int index) const;
  std::string* mutable_devices(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_devices(int index, Arg_&& value, Args_... args);
  std::string* add_devices();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_devices(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& devices() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_devices();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_devices() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_devices();

  public:
  // map<string, string> metadata = 16 [json_name = "metadata", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int metadata_size() const;
  private:
  int _internal_metadata_size() const;

  public:
  void clear_metadata() ;
  const ::google::protobuf::Map<std::string, std::string>& metadata() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_metadata();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_metadata();

  public:
  // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // string name = 2 [json_name = "name", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // string company_id = 5 [json_name = "companyId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_company_id() ;
  const std::string& company_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_company_id(Arg_&& arg, Args_... args);
  std::string* mutable_company_id();
  PROTOBUF_NODISCARD std::string* release_company_id();
  void set_allocated_company_id(std::string* value);

  private:
  const std::string& _internal_company_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_company_id(
      const std::string& value);
  std::string* _internal_mutable_company_id();

  public:
  // string description = 6 [json_name = "description", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_description() ;
  const std::string& description() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_description(Arg_&& arg, Args_... args);
  std::string* mutable_description();
  PROTOBUF_NODISCARD std::string* release_description();
  void set_allocated_description(std::string* value);

  private:
  const std::string& _internal_description() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_description(
      const std::string& value);
  std::string* _internal_mutable_description();

  public:
  // .google.protobuf.Timestamp cdate = 14 [json_name = "cdate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_cdate() const;
  void clear_cdate() ;
  const ::google::protobuf::Timestamp& cdate() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_cdate();
  ::google::protobuf::Timestamp* mutable_cdate();
  void set_allocated_cdate(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_cdate(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_cdate();

  private:
  const ::google::protobuf::Timestamp& _internal_cdate() const;
  ::google::protobuf::Timestamp* _internal_mutable_cdate();

  public:
  // .google.protobuf.Timestamp edate = 15 [json_name = "edate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_edate() const;
  void clear_edate() ;
  const ::google::protobuf::Timestamp& edate() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_edate();
  ::google::protobuf::Timestamp* mutable_edate();
  void set_allocated_edate(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_edate(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_edate();

  private:
  const ::google::protobuf::Timestamp& _internal_edate() const;
  ::google::protobuf::Timestamp* _internal_mutable_edate();

  public:
  // bool active = 3 [json_name = "active", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_active() ;
  bool active() const;
  void set_active(bool value);

  private:
  bool _internal_active() const;
  void _internal_set_active(bool value);

  public:
  // bool bgp = 4 [json_name = "bgp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_bgp() ;
  bool bgp() const;
  void set_bgp(bool value);

  private:
  bool _internal_bgp() const;
  void _internal_set_bgp(bool value);

  public:
  // uint32 fast_retention = 9 [json_name = "fastRetention", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_fast_retention() ;
  ::uint32_t fast_retention() const;
  void set_fast_retention(::uint32_t value);

  private:
  ::uint32_t _internal_fast_retention() const;
  void _internal_set_fast_retention(::uint32_t value);

  public:
  // uint32 full_retention = 10 [json_name = "fullRetention", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_full_retention() ;
  ::uint32_t full_retention() const;
  void set_full_retention(::uint32_t value);

  private:
  ::uint32_t _internal_full_retention() const;
  void _internal_set_full_retention(::uint32_t value);

  public:
  // uint32 max_bigdata_fps = 11 [json_name = "maxBigdataFps", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_max_bigdata_fps() ;
  ::uint32_t max_bigdata_fps() const;
  void set_max_bigdata_fps(::uint32_t value);

  private:
  ::uint32_t _internal_max_bigdata_fps() const;
  void _internal_set_max_bigdata_fps(::uint32_t value);

  public:
  // uint32 max_devices = 12 [json_name = "maxDevices", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_max_devices() ;
  ::uint32_t max_devices() const;
  void set_max_devices(::uint32_t value);

  private:
  ::uint32_t _internal_max_devices() const;
  void _internal_set_max_devices(::uint32_t value);

  public:
  // uint32 max_fps = 13 [json_name = "maxFps", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_max_fps() ;
  ::uint32_t max_fps() const;
  void set_max_fps(::uint32_t value);

  private:
  ::uint32_t _internal_max_fps() const;
  void _internal_set_max_fps(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.device.v202504beta2.Plan)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 16, 3,
      110, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Plan& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<std::string> device_types_;
    ::google::protobuf::RepeatedPtrField<std::string> devices_;
    ::google::protobuf::internal::MapField<Plan_MetadataEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        metadata_;
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr company_id_;
    ::google::protobuf::internal::ArenaStringPtr description_;
    ::google::protobuf::Timestamp* cdate_;
    ::google::protobuf::Timestamp* edate_;
    bool active_;
    bool bgp_;
    ::uint32_t fast_retention_;
    ::uint32_t full_retention_;
    ::uint32_t max_bigdata_fps_;
    ::uint32_t max_devices_;
    ::uint32_t max_fps_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fdevice_2fv202504beta2_2fdevice_2eproto;
};
// -------------------------------------------------------------------

class ListDevicesRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.device.v202504beta2.ListDevicesRequest) */ {
 public:
  inline ListDevicesRequest() : ListDevicesRequest(nullptr) {}
  ~ListDevicesRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ListDevicesRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ListDevicesRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListDevicesRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListDevicesRequest(const ListDevicesRequest& from) : ListDevicesRequest(nullptr, from) {}
  inline ListDevicesRequest(ListDevicesRequest&& from) noexcept
      : ListDevicesRequest(nullptr, std::move(from)) {}
  inline ListDevicesRequest& operator=(const ListDevicesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListDevicesRequest& operator=(ListDevicesRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListDevicesRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListDevicesRequest* internal_default_instance() {
    return reinterpret_cast<const ListDevicesRequest*>(
        &_ListDevicesRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 15;
  friend void swap(ListDevicesRequest& a, ListDevicesRequest& b) { a.Swap(&b); }
  inline void Swap(ListDevicesRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListDevicesRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListDevicesRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ListDevicesRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListDevicesRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListDevicesRequest& from) { ListDevicesRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ListDevicesRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.device.v202504beta2.ListDevicesRequest"; }

 protected:
  explicit ListDevicesRequest(::google::protobuf::Arena* arena);
  ListDevicesRequest(::google::protobuf::Arena* arena, const ListDevicesRequest& from);
  ListDevicesRequest(::google::protobuf::Arena* arena, ListDevicesRequest&& from) noexcept
      : ListDevicesRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kQueryFieldNumber = 1,
  };
  // .kentik.device.v202504beta2.DeviceQuery query = 1 [json_name = "query"];
  bool has_query() const;
  void clear_query() ;
  const ::kentik::device::v202504beta2::DeviceQuery& query() const;
  PROTOBUF_NODISCARD ::kentik::device::v202504beta2::DeviceQuery* release_query();
  ::kentik::device::v202504beta2::DeviceQuery* mutable_query();
  void set_allocated_query(::kentik::device::v202504beta2::DeviceQuery* value);
  void unsafe_arena_set_allocated_query(::kentik::device::v202504beta2::DeviceQuery* value);
  ::kentik::device::v202504beta2::DeviceQuery* unsafe_arena_release_query();

  private:
  const ::kentik::device::v202504beta2::DeviceQuery& _internal_query() const;
  ::kentik::device::v202504beta2::DeviceQuery* _internal_mutable_query();

  public:
  // @@protoc_insertion_point(class_scope:kentik.device.v202504beta2.ListDevicesRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListDevicesRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::kentik::device::v202504beta2::DeviceQuery* query_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fdevice_2fv202504beta2_2fdevice_2eproto;
};
// -------------------------------------------------------------------

class Label final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.device.v202504beta2.Label) */ {
 public:
  inline Label() : Label(nullptr) {}
  ~Label() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Label* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Label));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Label(
      ::google::protobuf::internal::ConstantInitialized);

  inline Label(const Label& from) : Label(nullptr, from) {}
  inline Label(Label&& from) noexcept
      : Label(nullptr, std::move(from)) {}
  inline Label& operator=(const Label& from) {
    CopyFrom(from);
    return *this;
  }
  inline Label& operator=(Label&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Label& default_instance() {
    return *internal_default_instance();
  }
  static inline const Label* internal_default_instance() {
    return reinterpret_cast<const Label*>(
        &_Label_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(Label& a, Label& b) { a.Swap(&b); }
  inline void Swap(Label* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Label* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Label* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Label>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Label& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Label& from) { Label::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Label* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.device.v202504beta2.Label"; }

 protected:
  explicit Label(::google::protobuf::Arena* arena);
  Label(::google::protobuf::Arena* arena, const Label& from);
  Label(::google::protobuf::Arena* arena, Label&& from) noexcept
      : Label(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
    kNameFieldNumber = 2,
    kDescriptionFieldNumber = 3,
    kUserIdFieldNumber = 6,
    kCompanyIdFieldNumber = 7,
    kColorFieldNumber = 8,
    kOrderFieldNumber = 9,
    kPivotDeviceIdFieldNumber = 10,
    kPivotLabelIdFieldNumber = 11,
    kEdateFieldNumber = 4,
    kCdateFieldNumber = 5,
  };
  // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // string name = 2 [json_name = "name", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // string description = 3 [json_name = "description", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_description() ;
  const std::string& description() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_description(Arg_&& arg, Args_... args);
  std::string* mutable_description();
  PROTOBUF_NODISCARD std::string* release_description();
  void set_allocated_description(std::string* value);

  private:
  const std::string& _internal_description() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_description(
      const std::string& value);
  std::string* _internal_mutable_description();

  public:
  // string user_id = 6 [json_name = "userId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_user_id() ;
  const std::string& user_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_user_id(Arg_&& arg, Args_... args);
  std::string* mutable_user_id();
  PROTOBUF_NODISCARD std::string* release_user_id();
  void set_allocated_user_id(std::string* value);

  private:
  const std::string& _internal_user_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_user_id(
      const std::string& value);
  std::string* _internal_mutable_user_id();

  public:
  // string company_id = 7 [json_name = "companyId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_company_id() ;
  const std::string& company_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_company_id(Arg_&& arg, Args_... args);
  std::string* mutable_company_id();
  PROTOBUF_NODISCARD std::string* release_company_id();
  void set_allocated_company_id(std::string* value);

  private:
  const std::string& _internal_company_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_company_id(
      const std::string& value);
  std::string* _internal_mutable_company_id();

  public:
  // string color = 8 [json_name = "color", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_color() ;
  const std::string& color() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_color(Arg_&& arg, Args_... args);
  std::string* mutable_color();
  PROTOBUF_NODISCARD std::string* release_color();
  void set_allocated_color(std::string* value);

  private:
  const std::string& _internal_color() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_color(
      const std::string& value);
  std::string* _internal_mutable_color();

  public:
  // string order = 9 [json_name = "order", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_order() ;
  const std::string& order() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_order(Arg_&& arg, Args_... args);
  std::string* mutable_order();
  PROTOBUF_NODISCARD std::string* release_order();
  void set_allocated_order(std::string* value);

  private:
  const std::string& _internal_order() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_order(
      const std::string& value);
  std::string* _internal_mutable_order();

  public:
  // string pivot_device_id = 10 [json_name = "pivotDeviceId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_pivot_device_id() ;
  const std::string& pivot_device_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_pivot_device_id(Arg_&& arg, Args_... args);
  std::string* mutable_pivot_device_id();
  PROTOBUF_NODISCARD std::string* release_pivot_device_id();
  void set_allocated_pivot_device_id(std::string* value);

  private:
  const std::string& _internal_pivot_device_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_pivot_device_id(
      const std::string& value);
  std::string* _internal_mutable_pivot_device_id();

  public:
  // string pivot_label_id = 11 [json_name = "pivotLabelId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_pivot_label_id() ;
  const std::string& pivot_label_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_pivot_label_id(Arg_&& arg, Args_... args);
  std::string* mutable_pivot_label_id();
  PROTOBUF_NODISCARD std::string* release_pivot_label_id();
  void set_allocated_pivot_label_id(std::string* value);

  private:
  const std::string& _internal_pivot_label_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_pivot_label_id(
      const std::string& value);
  std::string* _internal_mutable_pivot_label_id();

  public:
  // .google.protobuf.Timestamp edate = 4 [json_name = "edate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_edate() const;
  void clear_edate() ;
  const ::google::protobuf::Timestamp& edate() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_edate();
  ::google::protobuf::Timestamp* mutable_edate();
  void set_allocated_edate(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_edate(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_edate();

  private:
  const ::google::protobuf::Timestamp& _internal_edate() const;
  ::google::protobuf::Timestamp* _internal_mutable_edate();

  public:
  // .google.protobuf.Timestamp cdate = 5 [json_name = "cdate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_cdate() const;
  void clear_cdate() ;
  const ::google::protobuf::Timestamp& cdate() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_cdate();
  ::google::protobuf::Timestamp* mutable_cdate();
  void set_allocated_cdate(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_cdate(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_cdate();

  private:
  const ::google::protobuf::Timestamp& _internal_cdate() const;
  ::google::protobuf::Timestamp* _internal_mutable_cdate();

  public:
  // @@protoc_insertion_point(class_scope:kentik.device.v202504beta2.Label)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 11, 2,
      122, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Label& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr description_;
    ::google::protobuf::internal::ArenaStringPtr user_id_;
    ::google::protobuf::internal::ArenaStringPtr company_id_;
    ::google::protobuf::internal::ArenaStringPtr color_;
    ::google::protobuf::internal::ArenaStringPtr order_;
    ::google::protobuf::internal::ArenaStringPtr pivot_device_id_;
    ::google::protobuf::internal::ArenaStringPtr pivot_label_id_;
    ::google::protobuf::Timestamp* edate_;
    ::google::protobuf::Timestamp* cdate_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fdevice_2fv202504beta2_2fdevice_2eproto;
};
// -------------------------------------------------------------------

class GetDeviceRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.device.v202504beta2.GetDeviceRequest) */ {
 public:
  inline GetDeviceRequest() : GetDeviceRequest(nullptr) {}
  ~GetDeviceRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetDeviceRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetDeviceRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetDeviceRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetDeviceRequest(const GetDeviceRequest& from) : GetDeviceRequest(nullptr, from) {}
  inline GetDeviceRequest(GetDeviceRequest&& from) noexcept
      : GetDeviceRequest(nullptr, std::move(from)) {}
  inline GetDeviceRequest& operator=(const GetDeviceRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetDeviceRequest& operator=(GetDeviceRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetDeviceRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetDeviceRequest* internal_default_instance() {
    return reinterpret_cast<const GetDeviceRequest*>(
        &_GetDeviceRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 17;
  friend void swap(GetDeviceRequest& a, GetDeviceRequest& b) { a.Swap(&b); }
  inline void Swap(GetDeviceRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetDeviceRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetDeviceRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetDeviceRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetDeviceRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetDeviceRequest& from) { GetDeviceRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetDeviceRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.device.v202504beta2.GetDeviceRequest"; }

 protected:
  explicit GetDeviceRequest(::google::protobuf::Arena* arena);
  GetDeviceRequest(::google::protobuf::Arena* arena, const GetDeviceRequest& from);
  GetDeviceRequest(::google::protobuf::Arena* arena, GetDeviceRequest&& from) noexcept
      : GetDeviceRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
    kQueryFieldNumber = 2,
  };
  // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // .kentik.device.v202504beta2.DeviceQuery query = 2 [json_name = "query"];
  bool has_query() const;
  void clear_query() ;
  const ::kentik::device::v202504beta2::DeviceQuery& query() const;
  PROTOBUF_NODISCARD ::kentik::device::v202504beta2::DeviceQuery* release_query();
  ::kentik::device::v202504beta2::DeviceQuery* mutable_query();
  void set_allocated_query(::kentik::device::v202504beta2::DeviceQuery* value);
  void unsafe_arena_set_allocated_query(::kentik::device::v202504beta2::DeviceQuery* value);
  ::kentik::device::v202504beta2::DeviceQuery* unsafe_arena_release_query();

  private:
  const ::kentik::device::v202504beta2::DeviceQuery& _internal_query() const;
  ::kentik::device::v202504beta2::DeviceQuery* _internal_mutable_query();

  public:
  // @@protoc_insertion_point(class_scope:kentik.device.v202504beta2.GetDeviceRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      54, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetDeviceRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::kentik::device::v202504beta2::DeviceQuery* query_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fdevice_2fv202504beta2_2fdevice_2eproto;
};
// -------------------------------------------------------------------

class DeviceNmsStConfig final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.device.v202504beta2.DeviceNmsStConfig) */ {
 public:
  inline DeviceNmsStConfig() : DeviceNmsStConfig(nullptr) {}
  ~DeviceNmsStConfig() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DeviceNmsStConfig* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DeviceNmsStConfig));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeviceNmsStConfig(
      ::google::protobuf::internal::ConstantInitialized);

  inline DeviceNmsStConfig(const DeviceNmsStConfig& from) : DeviceNmsStConfig(nullptr, from) {}
  inline DeviceNmsStConfig(DeviceNmsStConfig&& from) noexcept
      : DeviceNmsStConfig(nullptr, std::move(from)) {}
  inline DeviceNmsStConfig& operator=(const DeviceNmsStConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeviceNmsStConfig& operator=(DeviceNmsStConfig&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeviceNmsStConfig& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeviceNmsStConfig* internal_default_instance() {
    return reinterpret_cast<const DeviceNmsStConfig*>(
        &_DeviceNmsStConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(DeviceNmsStConfig& a, DeviceNmsStConfig& b) { a.Swap(&b); }
  inline void Swap(DeviceNmsStConfig* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeviceNmsStConfig* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeviceNmsStConfig* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DeviceNmsStConfig>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DeviceNmsStConfig& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DeviceNmsStConfig& from) { DeviceNmsStConfig::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DeviceNmsStConfig* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.device.v202504beta2.DeviceNmsStConfig"; }

 protected:
  explicit DeviceNmsStConfig(::google::protobuf::Arena* arena);
  DeviceNmsStConfig(::google::protobuf::Arena* arena, const DeviceNmsStConfig& from);
  DeviceNmsStConfig(::google::protobuf::Arena* arena, DeviceNmsStConfig&& from) noexcept
      : DeviceNmsStConfig(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCredentialNameFieldNumber = 1,
    kTimeoutFieldNumber = 3,
    kPortFieldNumber = 2,
    kSecureFieldNumber = 4,
  };
  // string credential_name = 1 [json_name = "credentialName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_credential_name() ;
  const std::string& credential_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_credential_name(Arg_&& arg, Args_... args);
  std::string* mutable_credential_name();
  PROTOBUF_NODISCARD std::string* release_credential_name();
  void set_allocated_credential_name(std::string* value);

  private:
  const std::string& _internal_credential_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_credential_name(
      const std::string& value);
  std::string* _internal_mutable_credential_name();

  public:
  // .google.protobuf.Duration timeout = 3 [json_name = "timeout", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_timeout() const;
  void clear_timeout() ;
  const ::google::protobuf::Duration& timeout() const;
  PROTOBUF_NODISCARD ::google::protobuf::Duration* release_timeout();
  ::google::protobuf::Duration* mutable_timeout();
  void set_allocated_timeout(::google::protobuf::Duration* value);
  void unsafe_arena_set_allocated_timeout(::google::protobuf::Duration* value);
  ::google::protobuf::Duration* unsafe_arena_release_timeout();

  private:
  const ::google::protobuf::Duration& _internal_timeout() const;
  ::google::protobuf::Duration* _internal_mutable_timeout();

  public:
  // uint32 port = 2 [json_name = "port", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_port() ;
  ::uint32_t port() const;
  void set_port(::uint32_t value);

  private:
  ::uint32_t _internal_port() const;
  void _internal_set_port(::uint32_t value);

  public:
  // bool secure = 4 [json_name = "secure", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_secure() ;
  bool secure() const;
  void set_secure(bool value);

  private:
  bool _internal_secure() const;
  void _internal_set_secure(bool value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.device.v202504beta2.DeviceNmsStConfig)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 1,
      68, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DeviceNmsStConfig& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr credential_name_;
    ::google::protobuf::Duration* timeout_;
    ::uint32_t port_;
    bool secure_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fdevice_2fv202504beta2_2fdevice_2eproto;
};
// -------------------------------------------------------------------

class DeviceNmsSnmpConfig final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.device.v202504beta2.DeviceNmsSnmpConfig) */ {
 public:
  inline DeviceNmsSnmpConfig() : DeviceNmsSnmpConfig(nullptr) {}
  ~DeviceNmsSnmpConfig() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DeviceNmsSnmpConfig* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DeviceNmsSnmpConfig));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeviceNmsSnmpConfig(
      ::google::protobuf::internal::ConstantInitialized);

  inline DeviceNmsSnmpConfig(const DeviceNmsSnmpConfig& from) : DeviceNmsSnmpConfig(nullptr, from) {}
  inline DeviceNmsSnmpConfig(DeviceNmsSnmpConfig&& from) noexcept
      : DeviceNmsSnmpConfig(nullptr, std::move(from)) {}
  inline DeviceNmsSnmpConfig& operator=(const DeviceNmsSnmpConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeviceNmsSnmpConfig& operator=(DeviceNmsSnmpConfig&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeviceNmsSnmpConfig& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeviceNmsSnmpConfig* internal_default_instance() {
    return reinterpret_cast<const DeviceNmsSnmpConfig*>(
        &_DeviceNmsSnmpConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(DeviceNmsSnmpConfig& a, DeviceNmsSnmpConfig& b) { a.Swap(&b); }
  inline void Swap(DeviceNmsSnmpConfig* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeviceNmsSnmpConfig* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeviceNmsSnmpConfig* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DeviceNmsSnmpConfig>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DeviceNmsSnmpConfig& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DeviceNmsSnmpConfig& from) { DeviceNmsSnmpConfig::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DeviceNmsSnmpConfig* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.device.v202504beta2.DeviceNmsSnmpConfig"; }

 protected:
  explicit DeviceNmsSnmpConfig(::google::protobuf::Arena* arena);
  DeviceNmsSnmpConfig(::google::protobuf::Arena* arena, const DeviceNmsSnmpConfig& from);
  DeviceNmsSnmpConfig(::google::protobuf::Arena* arena, DeviceNmsSnmpConfig&& from) noexcept
      : DeviceNmsSnmpConfig(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCredentialNameFieldNumber = 1,
    kTimeoutFieldNumber = 3,
    kPortFieldNumber = 2,
  };
  // string credential_name = 1 [json_name = "credentialName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_credential_name() ;
  const std::string& credential_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_credential_name(Arg_&& arg, Args_... args);
  std::string* mutable_credential_name();
  PROTOBUF_NODISCARD std::string* release_credential_name();
  void set_allocated_credential_name(std::string* value);

  private:
  const std::string& _internal_credential_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_credential_name(
      const std::string& value);
  std::string* _internal_mutable_credential_name();

  public:
  // .google.protobuf.Duration timeout = 3 [json_name = "timeout", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_timeout() const;
  void clear_timeout() ;
  const ::google::protobuf::Duration& timeout() const;
  PROTOBUF_NODISCARD ::google::protobuf::Duration* release_timeout();
  ::google::protobuf::Duration* mutable_timeout();
  void set_allocated_timeout(::google::protobuf::Duration* value);
  void unsafe_arena_set_allocated_timeout(::google::protobuf::Duration* value);
  ::google::protobuf::Duration* unsafe_arena_release_timeout();

  private:
  const ::google::protobuf::Duration& _internal_timeout() const;
  ::google::protobuf::Duration* _internal_mutable_timeout();

  public:
  // uint32 port = 2 [json_name = "port", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_port() ;
  ::uint32_t port() const;
  void set_port(::uint32_t value);

  private:
  ::uint32_t _internal_port() const;
  void _internal_set_port(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.device.v202504beta2.DeviceNmsSnmpConfig)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      70, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DeviceNmsSnmpConfig& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr credential_name_;
    ::google::protobuf::Duration* timeout_;
    ::uint32_t port_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fdevice_2fv202504beta2_2fdevice_2eproto;
};
// -------------------------------------------------------------------

class DeviceNmsConfig final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.device.v202504beta2.DeviceNmsConfig) */ {
 public:
  inline DeviceNmsConfig() : DeviceNmsConfig(nullptr) {}
  ~DeviceNmsConfig() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DeviceNmsConfig* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DeviceNmsConfig));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeviceNmsConfig(
      ::google::protobuf::internal::ConstantInitialized);

  inline DeviceNmsConfig(const DeviceNmsConfig& from) : DeviceNmsConfig(nullptr, from) {}
  inline DeviceNmsConfig(DeviceNmsConfig&& from) noexcept
      : DeviceNmsConfig(nullptr, std::move(from)) {}
  inline DeviceNmsConfig& operator=(const DeviceNmsConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeviceNmsConfig& operator=(DeviceNmsConfig&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeviceNmsConfig& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeviceNmsConfig* internal_default_instance() {
    return reinterpret_cast<const DeviceNmsConfig*>(
        &_DeviceNmsConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(DeviceNmsConfig& a, DeviceNmsConfig& b) { a.Swap(&b); }
  inline void Swap(DeviceNmsConfig* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeviceNmsConfig* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeviceNmsConfig* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DeviceNmsConfig>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DeviceNmsConfig& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DeviceNmsConfig& from) { DeviceNmsConfig::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DeviceNmsConfig* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.device.v202504beta2.DeviceNmsConfig"; }

 protected:
  explicit DeviceNmsConfig(::google::protobuf::Arena* arena);
  DeviceNmsConfig(::google::protobuf::Arena* arena, const DeviceNmsConfig& from);
  DeviceNmsConfig(::google::protobuf::Arena* arena, DeviceNmsConfig&& from) noexcept
      : DeviceNmsConfig(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAgentIdFieldNumber = 2,
    kIpAddressFieldNumber = 3,
    kSnmpFieldNumber = 4,
    kStFieldNumber = 5,
  };
  // string agent_id = 2 [json_name = "agentId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_agent_id() ;
  const std::string& agent_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_agent_id(Arg_&& arg, Args_... args);
  std::string* mutable_agent_id();
  PROTOBUF_NODISCARD std::string* release_agent_id();
  void set_allocated_agent_id(std::string* value);

  private:
  const std::string& _internal_agent_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_agent_id(
      const std::string& value);
  std::string* _internal_mutable_agent_id();

  public:
  // string ip_address = 3 [json_name = "ipAddress", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_ip_address() ;
  const std::string& ip_address() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_ip_address(Arg_&& arg, Args_... args);
  std::string* mutable_ip_address();
  PROTOBUF_NODISCARD std::string* release_ip_address();
  void set_allocated_ip_address(std::string* value);

  private:
  const std::string& _internal_ip_address() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_ip_address(
      const std::string& value);
  std::string* _internal_mutable_ip_address();

  public:
  // .kentik.device.v202504beta2.DeviceNmsSnmpConfig snmp = 4 [json_name = "snmp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_snmp() const;
  void clear_snmp() ;
  const ::kentik::device::v202504beta2::DeviceNmsSnmpConfig& snmp() const;
  PROTOBUF_NODISCARD ::kentik::device::v202504beta2::DeviceNmsSnmpConfig* release_snmp();
  ::kentik::device::v202504beta2::DeviceNmsSnmpConfig* mutable_snmp();
  void set_allocated_snmp(::kentik::device::v202504beta2::DeviceNmsSnmpConfig* value);
  void unsafe_arena_set_allocated_snmp(::kentik::device::v202504beta2::DeviceNmsSnmpConfig* value);
  ::kentik::device::v202504beta2::DeviceNmsSnmpConfig* unsafe_arena_release_snmp();

  private:
  const ::kentik::device::v202504beta2::DeviceNmsSnmpConfig& _internal_snmp() const;
  ::kentik::device::v202504beta2::DeviceNmsSnmpConfig* _internal_mutable_snmp();

  public:
  // .kentik.device.v202504beta2.DeviceNmsStConfig st = 5 [json_name = "st", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_st() const;
  void clear_st() ;
  const ::kentik::device::v202504beta2::DeviceNmsStConfig& st() const;
  PROTOBUF_NODISCARD ::kentik::device::v202504beta2::DeviceNmsStConfig* release_st();
  ::kentik::device::v202504beta2::DeviceNmsStConfig* mutable_st();
  void set_allocated_st(::kentik::device::v202504beta2::DeviceNmsStConfig* value);
  void unsafe_arena_set_allocated_st(::kentik::device::v202504beta2::DeviceNmsStConfig* value);
  ::kentik::device::v202504beta2::DeviceNmsStConfig* unsafe_arena_release_st();

  private:
  const ::kentik::device::v202504beta2::DeviceNmsStConfig& _internal_st() const;
  ::kentik::device::v202504beta2::DeviceNmsStConfig* _internal_mutable_st();

  public:
  // @@protoc_insertion_point(class_scope:kentik.device.v202504beta2.DeviceNmsConfig)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 2,
      69, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DeviceNmsConfig& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr agent_id_;
    ::google::protobuf::internal::ArenaStringPtr ip_address_;
    ::kentik::device::v202504beta2::DeviceNmsSnmpConfig* snmp_;
    ::kentik::device::v202504beta2::DeviceNmsStConfig* st_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fdevice_2fv202504beta2_2fdevice_2eproto;
};
// -------------------------------------------------------------------

class DeviceDetailed final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.device.v202504beta2.DeviceDetailed) */ {
 public:
  inline DeviceDetailed() : DeviceDetailed(nullptr) {}
  ~DeviceDetailed() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DeviceDetailed* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DeviceDetailed));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeviceDetailed(
      ::google::protobuf::internal::ConstantInitialized);

  inline DeviceDetailed(const DeviceDetailed& from) : DeviceDetailed(nullptr, from) {}
  inline DeviceDetailed(DeviceDetailed&& from) noexcept
      : DeviceDetailed(nullptr, std::move(from)) {}
  inline DeviceDetailed& operator=(const DeviceDetailed& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeviceDetailed& operator=(DeviceDetailed&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeviceDetailed& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeviceDetailed* internal_default_instance() {
    return reinterpret_cast<const DeviceDetailed*>(
        &_DeviceDetailed_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(DeviceDetailed& a, DeviceDetailed& b) { a.Swap(&b); }
  inline void Swap(DeviceDetailed* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeviceDetailed* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeviceDetailed* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DeviceDetailed>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DeviceDetailed& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DeviceDetailed& from) { DeviceDetailed::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DeviceDetailed* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.device.v202504beta2.DeviceDetailed"; }

 protected:
  explicit DeviceDetailed(::google::protobuf::Arena* arena);
  DeviceDetailed(::google::protobuf::Arena* arena, const DeviceDetailed& from);
  DeviceDetailed(::google::protobuf::Arena* arena, DeviceDetailed&& from) noexcept
      : DeviceDetailed(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLabelsFieldNumber = 9,
    kAllInterfacesFieldNumber = 10,
    kSendingIpsFieldNumber = 13,
    kCustomColumnDataFieldNumber = 28,
    kIdFieldNumber = 1,
    kCompanyIdFieldNumber = 2,
    kDeviceNameFieldNumber = 3,
    kDeviceAliasFieldNumber = 4,
    kDeviceTypeFieldNumber = 5,
    kDeviceDescriptionFieldNumber = 6,
    kDeviceFlowTypeFieldNumber = 11,
    kDeviceSampleRateFieldNumber = 12,
    kDeviceSnmpIpFieldNumber = 14,
    kDeviceSnmpCommunityFieldNumber = 15,
    kDeviceBgpTypeFieldNumber = 17,
    kDeviceBgpNeighborIpFieldNumber = 18,
    kDeviceBgpNeighborIp6FieldNumber = 19,
    kDeviceBgpNeighborAsnFieldNumber = 20,
    kDeviceBgpPasswordFieldNumber = 22,
    kBgpLookupStrategyFieldNumber = 24,
    kDeviceStatusFieldNumber = 25,
    kUseBgpDeviceIdFieldNumber = 26,
    kCustomColumnsFieldNumber = 27,
    kDeviceChfClientPortFieldNumber = 29,
    kDeviceChfClientProtocolFieldNumber = 30,
    kDeviceChfInterfaceFieldNumber = 31,
    kDeviceAgentTypeFieldNumber = 32,
    kDeviceProxyBgpFieldNumber = 35,
    kDeviceProxyBgp6FieldNumber = 36,
    kCdnAttrFieldNumber = 41,
    kBgpPeerIp4FieldNumber = 42,
    kBgpPeerIp6FieldNumber = 43,
    kDeviceSubtypeFieldNumber = 44,
    kDeviceVendorTypeFieldNumber = 45,
    kDeviceModelTypeFieldNumber = 46,
    kCloudExportIdFieldNumber = 47,
    kDeviceKproxyFieldNumber = 48,
    kSnmpEnabledFieldNumber = 49,
    kSnmpDisabledReasonFieldNumber = 50,
    kSnmpDisabledReasonOtherFieldNumber = 51,
    kBgpDisabledReasonFieldNumber = 52,
    kBgpDisabledReasonOtherFieldNumber = 53,
    kDeviceManufacturerFieldNumber = 54,
    kDeviceAlertFieldNumber = 55,
    kRoleFieldNumber = 56,
    kDeviceBgpCredentialNameFieldNumber = 62,
    kFlowSnmpCredentialNameFieldNumber = 63,
    kSiteFieldNumber = 7,
    kPlanFieldNumber = 8,
    kCreatedDateFieldNumber = 37,
    kUpdatedDateFieldNumber = 38,
    kDeviceSnmpV3ConfFieldNumber = 40,
    kDeviceGnmiV1ConfFieldNumber = 57,
    kNmsFieldNumber = 61,
    kMinimizeSnmpFieldNumber = 16,
    kDeviceBgpFlowspecFieldNumber = 21,
    kDeviceBgpLabelUnicastFieldNumber = 23,
    kDeviceSnmpV3ConfEnabledFieldNumber = 39,
    kMaxFlowRateFieldNumber = 33,
    kMaxBigFlowRateFieldNumber = 34,
    kUseAsnFromFlowFieldNumber = 58,
    kMaxInterfaceFieldNumber = 59,
    kMaxInterfaceCheckFieldNumber = 60,
    kMonitoringTemplateIdFieldNumber = 64,
  };
  // repeated .kentik.device.v202504beta2.Label labels = 9 [json_name = "labels", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int labels_size() const;
  private:
  int _internal_labels_size() const;

  public:
  void clear_labels() ;
  ::kentik::device::v202504beta2::Label* mutable_labels(int index);
  ::google::protobuf::RepeatedPtrField<::kentik::device::v202504beta2::Label>* mutable_labels();

  private:
  const ::google::protobuf::RepeatedPtrField<::kentik::device::v202504beta2::Label>& _internal_labels() const;
  ::google::protobuf::RepeatedPtrField<::kentik::device::v202504beta2::Label>* _internal_mutable_labels();
  public:
  const ::kentik::device::v202504beta2::Label& labels(int index) const;
  ::kentik::device::v202504beta2::Label* add_labels();
  const ::google::protobuf::RepeatedPtrField<::kentik::device::v202504beta2::Label>& labels() const;
  // repeated .kentik.device.v202504beta2.Interface all_interfaces = 10 [json_name = "allInterfaces", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int all_interfaces_size() const;
  private:
  int _internal_all_interfaces_size() const;

  public:
  void clear_all_interfaces() ;
  ::kentik::device::v202504beta2::Interface* mutable_all_interfaces(int index);
  ::google::protobuf::RepeatedPtrField<::kentik::device::v202504beta2::Interface>* mutable_all_interfaces();

  private:
  const ::google::protobuf::RepeatedPtrField<::kentik::device::v202504beta2::Interface>& _internal_all_interfaces() const;
  ::google::protobuf::RepeatedPtrField<::kentik::device::v202504beta2::Interface>* _internal_mutable_all_interfaces();
  public:
  const ::kentik::device::v202504beta2::Interface& all_interfaces(int index) const;
  ::kentik::device::v202504beta2::Interface* add_all_interfaces();
  const ::google::protobuf::RepeatedPtrField<::kentik::device::v202504beta2::Interface>& all_interfaces() const;
  // repeated string sending_ips = 13 [json_name = "sendingIps", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int sending_ips_size() const;
  private:
  int _internal_sending_ips_size() const;

  public:
  void clear_sending_ips() ;
  const std::string& sending_ips(int index) const;
  std::string* mutable_sending_ips(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_sending_ips(int index, Arg_&& value, Args_... args);
  std::string* add_sending_ips();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_sending_ips(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& sending_ips() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_sending_ips();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_sending_ips() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_sending_ips();

  public:
  // repeated .kentik.device.v202504beta2.CustomColumnData custom_column_data = 28 [json_name = "customColumnData", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int custom_column_data_size() const;
  private:
  int _internal_custom_column_data_size() const;

  public:
  void clear_custom_column_data() ;
  ::kentik::device::v202504beta2::CustomColumnData* mutable_custom_column_data(int index);
  ::google::protobuf::RepeatedPtrField<::kentik::device::v202504beta2::CustomColumnData>* mutable_custom_column_data();

  private:
  const ::google::protobuf::RepeatedPtrField<::kentik::device::v202504beta2::CustomColumnData>& _internal_custom_column_data() const;
  ::google::protobuf::RepeatedPtrField<::kentik::device::v202504beta2::CustomColumnData>* _internal_mutable_custom_column_data();
  public:
  const ::kentik::device::v202504beta2::CustomColumnData& custom_column_data(int index) const;
  ::kentik::device::v202504beta2::CustomColumnData* add_custom_column_data();
  const ::google::protobuf::RepeatedPtrField<::kentik::device::v202504beta2::CustomColumnData>& custom_column_data() const;
  // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // string company_id = 2 [json_name = "companyId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_company_id() ;
  const std::string& company_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_company_id(Arg_&& arg, Args_... args);
  std::string* mutable_company_id();
  PROTOBUF_NODISCARD std::string* release_company_id();
  void set_allocated_company_id(std::string* value);

  private:
  const std::string& _internal_company_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_company_id(
      const std::string& value);
  std::string* _internal_mutable_company_id();

  public:
  // string device_name = 3 [json_name = "deviceName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_device_name() ;
  const std::string& device_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_device_name(Arg_&& arg, Args_... args);
  std::string* mutable_device_name();
  PROTOBUF_NODISCARD std::string* release_device_name();
  void set_allocated_device_name(std::string* value);

  private:
  const std::string& _internal_device_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_device_name(
      const std::string& value);
  std::string* _internal_mutable_device_name();

  public:
  // string device_alias = 4 [json_name = "deviceAlias", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_device_alias() ;
  const std::string& device_alias() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_device_alias(Arg_&& arg, Args_... args);
  std::string* mutable_device_alias();
  PROTOBUF_NODISCARD std::string* release_device_alias();
  void set_allocated_device_alias(std::string* value);

  private:
  const std::string& _internal_device_alias() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_device_alias(
      const std::string& value);
  std::string* _internal_mutable_device_alias();

  public:
  // string device_type = 5 [json_name = "deviceType", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_device_type() ;
  const std::string& device_type() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_device_type(Arg_&& arg, Args_... args);
  std::string* mutable_device_type();
  PROTOBUF_NODISCARD std::string* release_device_type();
  void set_allocated_device_type(std::string* value);

  private:
  const std::string& _internal_device_type() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_device_type(
      const std::string& value);
  std::string* _internal_mutable_device_type();

  public:
  // string device_description = 6 [json_name = "deviceDescription", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_device_description() ;
  const std::string& device_description() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_device_description(Arg_&& arg, Args_... args);
  std::string* mutable_device_description();
  PROTOBUF_NODISCARD std::string* release_device_description();
  void set_allocated_device_description(std::string* value);

  private:
  const std::string& _internal_device_description() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_device_description(
      const std::string& value);
  std::string* _internal_mutable_device_description();

  public:
  // string device_flow_type = 11 [json_name = "deviceFlowType", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_device_flow_type() ;
  const std::string& device_flow_type() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_device_flow_type(Arg_&& arg, Args_... args);
  std::string* mutable_device_flow_type();
  PROTOBUF_NODISCARD std::string* release_device_flow_type();
  void set_allocated_device_flow_type(std::string* value);

  private:
  const std::string& _internal_device_flow_type() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_device_flow_type(
      const std::string& value);
  std::string* _internal_mutable_device_flow_type();

  public:
  // string device_sample_rate = 12 [json_name = "deviceSampleRate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_device_sample_rate() ;
  const std::string& device_sample_rate() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_device_sample_rate(Arg_&& arg, Args_... args);
  std::string* mutable_device_sample_rate();
  PROTOBUF_NODISCARD std::string* release_device_sample_rate();
  void set_allocated_device_sample_rate(std::string* value);

  private:
  const std::string& _internal_device_sample_rate() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_device_sample_rate(
      const std::string& value);
  std::string* _internal_mutable_device_sample_rate();

  public:
  // string device_snmp_ip = 14 [json_name = "deviceSnmpIp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_device_snmp_ip() ;
  const std::string& device_snmp_ip() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_device_snmp_ip(Arg_&& arg, Args_... args);
  std::string* mutable_device_snmp_ip();
  PROTOBUF_NODISCARD std::string* release_device_snmp_ip();
  void set_allocated_device_snmp_ip(std::string* value);

  private:
  const std::string& _internal_device_snmp_ip() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_device_snmp_ip(
      const std::string& value);
  std::string* _internal_mutable_device_snmp_ip();

  public:
  // string device_snmp_community = 15 [json_name = "deviceSnmpCommunity", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_device_snmp_community() ;
  const std::string& device_snmp_community() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_device_snmp_community(Arg_&& arg, Args_... args);
  std::string* mutable_device_snmp_community();
  PROTOBUF_NODISCARD std::string* release_device_snmp_community();
  void set_allocated_device_snmp_community(std::string* value);

  private:
  const std::string& _internal_device_snmp_community() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_device_snmp_community(
      const std::string& value);
  std::string* _internal_mutable_device_snmp_community();

  public:
  // string device_bgp_type = 17 [json_name = "deviceBgpType", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_device_bgp_type() ;
  const std::string& device_bgp_type() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_device_bgp_type(Arg_&& arg, Args_... args);
  std::string* mutable_device_bgp_type();
  PROTOBUF_NODISCARD std::string* release_device_bgp_type();
  void set_allocated_device_bgp_type(std::string* value);

  private:
  const std::string& _internal_device_bgp_type() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_device_bgp_type(
      const std::string& value);
  std::string* _internal_mutable_device_bgp_type();

  public:
  // string device_bgp_neighbor_ip = 18 [json_name = "deviceBgpNeighborIp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_device_bgp_neighbor_ip() ;
  const std::string& device_bgp_neighbor_ip() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_device_bgp_neighbor_ip(Arg_&& arg, Args_... args);
  std::string* mutable_device_bgp_neighbor_ip();
  PROTOBUF_NODISCARD std::string* release_device_bgp_neighbor_ip();
  void set_allocated_device_bgp_neighbor_ip(std::string* value);

  private:
  const std::string& _internal_device_bgp_neighbor_ip() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_device_bgp_neighbor_ip(
      const std::string& value);
  std::string* _internal_mutable_device_bgp_neighbor_ip();

  public:
  // string device_bgp_neighbor_ip6 = 19 [json_name = "deviceBgpNeighborIp6", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_device_bgp_neighbor_ip6() ;
  const std::string& device_bgp_neighbor_ip6() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_device_bgp_neighbor_ip6(Arg_&& arg, Args_... args);
  std::string* mutable_device_bgp_neighbor_ip6();
  PROTOBUF_NODISCARD std::string* release_device_bgp_neighbor_ip6();
  void set_allocated_device_bgp_neighbor_ip6(std::string* value);

  private:
  const std::string& _internal_device_bgp_neighbor_ip6() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_device_bgp_neighbor_ip6(
      const std::string& value);
  std::string* _internal_mutable_device_bgp_neighbor_ip6();

  public:
  // string device_bgp_neighbor_asn = 20 [json_name = "deviceBgpNeighborAsn", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_device_bgp_neighbor_asn() ;
  const std::string& device_bgp_neighbor_asn() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_device_bgp_neighbor_asn(Arg_&& arg, Args_... args);
  std::string* mutable_device_bgp_neighbor_asn();
  PROTOBUF_NODISCARD std::string* release_device_bgp_neighbor_asn();
  void set_allocated_device_bgp_neighbor_asn(std::string* value);

  private:
  const std::string& _internal_device_bgp_neighbor_asn() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_device_bgp_neighbor_asn(
      const std::string& value);
  std::string* _internal_mutable_device_bgp_neighbor_asn();

  public:
  // string device_bgp_password = 22 [json_name = "deviceBgpPassword", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_device_bgp_password() ;
  const std::string& device_bgp_password() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_device_bgp_password(Arg_&& arg, Args_... args);
  std::string* mutable_device_bgp_password();
  PROTOBUF_NODISCARD std::string* release_device_bgp_password();
  void set_allocated_device_bgp_password(std::string* value);

  private:
  const std::string& _internal_device_bgp_password() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_device_bgp_password(
      const std::string& value);
  std::string* _internal_mutable_device_bgp_password();

  public:
  // string bgp_lookup_strategy = 24 [json_name = "bgpLookupStrategy", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_bgp_lookup_strategy() ;
  const std::string& bgp_lookup_strategy() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_bgp_lookup_strategy(Arg_&& arg, Args_... args);
  std::string* mutable_bgp_lookup_strategy();
  PROTOBUF_NODISCARD std::string* release_bgp_lookup_strategy();
  void set_allocated_bgp_lookup_strategy(std::string* value);

  private:
  const std::string& _internal_bgp_lookup_strategy() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_bgp_lookup_strategy(
      const std::string& value);
  std::string* _internal_mutable_bgp_lookup_strategy();

  public:
  // string device_status = 25 [json_name = "deviceStatus", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_device_status() ;
  const std::string& device_status() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_device_status(Arg_&& arg, Args_... args);
  std::string* mutable_device_status();
  PROTOBUF_NODISCARD std::string* release_device_status();
  void set_allocated_device_status(std::string* value);

  private:
  const std::string& _internal_device_status() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_device_status(
      const std::string& value);
  std::string* _internal_mutable_device_status();

  public:
  // string use_bgp_device_id = 26 [json_name = "useBgpDeviceId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_use_bgp_device_id() ;
  const std::string& use_bgp_device_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_use_bgp_device_id(Arg_&& arg, Args_... args);
  std::string* mutable_use_bgp_device_id();
  PROTOBUF_NODISCARD std::string* release_use_bgp_device_id();
  void set_allocated_use_bgp_device_id(std::string* value);

  private:
  const std::string& _internal_use_bgp_device_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_use_bgp_device_id(
      const std::string& value);
  std::string* _internal_mutable_use_bgp_device_id();

  public:
  // string custom_columns = 27 [json_name = "customColumns", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_custom_columns() ;
  const std::string& custom_columns() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_custom_columns(Arg_&& arg, Args_... args);
  std::string* mutable_custom_columns();
  PROTOBUF_NODISCARD std::string* release_custom_columns();
  void set_allocated_custom_columns(std::string* value);

  private:
  const std::string& _internal_custom_columns() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_custom_columns(
      const std::string& value);
  std::string* _internal_mutable_custom_columns();

  public:
  // string device_chf_client_port = 29 [json_name = "deviceChfClientPort", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_device_chf_client_port() ;
  const std::string& device_chf_client_port() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_device_chf_client_port(Arg_&& arg, Args_... args);
  std::string* mutable_device_chf_client_port();
  PROTOBUF_NODISCARD std::string* release_device_chf_client_port();
  void set_allocated_device_chf_client_port(std::string* value);

  private:
  const std::string& _internal_device_chf_client_port() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_device_chf_client_port(
      const std::string& value);
  std::string* _internal_mutable_device_chf_client_port();

  public:
  // string device_chf_client_protocol = 30 [json_name = "deviceChfClientProtocol", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_device_chf_client_protocol() ;
  const std::string& device_chf_client_protocol() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_device_chf_client_protocol(Arg_&& arg, Args_... args);
  std::string* mutable_device_chf_client_protocol();
  PROTOBUF_NODISCARD std::string* release_device_chf_client_protocol();
  void set_allocated_device_chf_client_protocol(std::string* value);

  private:
  const std::string& _internal_device_chf_client_protocol() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_device_chf_client_protocol(
      const std::string& value);
  std::string* _internal_mutable_device_chf_client_protocol();

  public:
  // string device_chf_interface = 31 [json_name = "deviceChfInterface", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_device_chf_interface() ;
  const std::string& device_chf_interface() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_device_chf_interface(Arg_&& arg, Args_... args);
  std::string* mutable_device_chf_interface();
  PROTOBUF_NODISCARD std::string* release_device_chf_interface();
  void set_allocated_device_chf_interface(std::string* value);

  private:
  const std::string& _internal_device_chf_interface() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_device_chf_interface(
      const std::string& value);
  std::string* _internal_mutable_device_chf_interface();

  public:
  // string device_agent_type = 32 [json_name = "deviceAgentType", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_device_agent_type() ;
  const std::string& device_agent_type() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_device_agent_type(Arg_&& arg, Args_... args);
  std::string* mutable_device_agent_type();
  PROTOBUF_NODISCARD std::string* release_device_agent_type();
  void set_allocated_device_agent_type(std::string* value);

  private:
  const std::string& _internal_device_agent_type() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_device_agent_type(
      const std::string& value);
  std::string* _internal_mutable_device_agent_type();

  public:
  // string device_proxy_bgp = 35 [json_name = "deviceProxyBgp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_device_proxy_bgp() ;
  const std::string& device_proxy_bgp() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_device_proxy_bgp(Arg_&& arg, Args_... args);
  std::string* mutable_device_proxy_bgp();
  PROTOBUF_NODISCARD std::string* release_device_proxy_bgp();
  void set_allocated_device_proxy_bgp(std::string* value);

  private:
  const std::string& _internal_device_proxy_bgp() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_device_proxy_bgp(
      const std::string& value);
  std::string* _internal_mutable_device_proxy_bgp();

  public:
  // string device_proxy_bgp6 = 36 [json_name = "deviceProxyBgp6", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_device_proxy_bgp6() ;
  const std::string& device_proxy_bgp6() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_device_proxy_bgp6(Arg_&& arg, Args_... args);
  std::string* mutable_device_proxy_bgp6();
  PROTOBUF_NODISCARD std::string* release_device_proxy_bgp6();
  void set_allocated_device_proxy_bgp6(std::string* value);

  private:
  const std::string& _internal_device_proxy_bgp6() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_device_proxy_bgp6(
      const std::string& value);
  std::string* _internal_mutable_device_proxy_bgp6();

  public:
  // string cdn_attr = 41 [json_name = "cdnAttr", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_cdn_attr() ;
  const std::string& cdn_attr() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_cdn_attr(Arg_&& arg, Args_... args);
  std::string* mutable_cdn_attr();
  PROTOBUF_NODISCARD std::string* release_cdn_attr();
  void set_allocated_cdn_attr(std::string* value);

  private:
  const std::string& _internal_cdn_attr() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_cdn_attr(
      const std::string& value);
  std::string* _internal_mutable_cdn_attr();

  public:
  // string bgp_peer_ip4 = 42 [json_name = "bgpPeerIp4", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_bgp_peer_ip4() ;
  const std::string& bgp_peer_ip4() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_bgp_peer_ip4(Arg_&& arg, Args_... args);
  std::string* mutable_bgp_peer_ip4();
  PROTOBUF_NODISCARD std::string* release_bgp_peer_ip4();
  void set_allocated_bgp_peer_ip4(std::string* value);

  private:
  const std::string& _internal_bgp_peer_ip4() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_bgp_peer_ip4(
      const std::string& value);
  std::string* _internal_mutable_bgp_peer_ip4();

  public:
  // string bgp_peer_ip6 = 43 [json_name = "bgpPeerIp6", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_bgp_peer_ip6() ;
  const std::string& bgp_peer_ip6() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_bgp_peer_ip6(Arg_&& arg, Args_... args);
  std::string* mutable_bgp_peer_ip6();
  PROTOBUF_NODISCARD std::string* release_bgp_peer_ip6();
  void set_allocated_bgp_peer_ip6(std::string* value);

  private:
  const std::string& _internal_bgp_peer_ip6() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_bgp_peer_ip6(
      const std::string& value);
  std::string* _internal_mutable_bgp_peer_ip6();

  public:
  // string device_subtype = 44 [json_name = "deviceSubtype", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_device_subtype() ;
  const std::string& device_subtype() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_device_subtype(Arg_&& arg, Args_... args);
  std::string* mutable_device_subtype();
  PROTOBUF_NODISCARD std::string* release_device_subtype();
  void set_allocated_device_subtype(std::string* value);

  private:
  const std::string& _internal_device_subtype() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_device_subtype(
      const std::string& value);
  std::string* _internal_mutable_device_subtype();

  public:
  // string device_vendor_type = 45 [json_name = "deviceVendorType", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_device_vendor_type() ;
  const std::string& device_vendor_type() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_device_vendor_type(Arg_&& arg, Args_... args);
  std::string* mutable_device_vendor_type();
  PROTOBUF_NODISCARD std::string* release_device_vendor_type();
  void set_allocated_device_vendor_type(std::string* value);

  private:
  const std::string& _internal_device_vendor_type() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_device_vendor_type(
      const std::string& value);
  std::string* _internal_mutable_device_vendor_type();

  public:
  // string device_model_type = 46 [json_name = "deviceModelType", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_device_model_type() ;
  const std::string& device_model_type() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_device_model_type(Arg_&& arg, Args_... args);
  std::string* mutable_device_model_type();
  PROTOBUF_NODISCARD std::string* release_device_model_type();
  void set_allocated_device_model_type(std::string* value);

  private:
  const std::string& _internal_device_model_type() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_device_model_type(
      const std::string& value);
  std::string* _internal_mutable_device_model_type();

  public:
  // string cloud_export_id = 47 [json_name = "cloudExportId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_cloud_export_id() ;
  const std::string& cloud_export_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_cloud_export_id(Arg_&& arg, Args_... args);
  std::string* mutable_cloud_export_id();
  PROTOBUF_NODISCARD std::string* release_cloud_export_id();
  void set_allocated_cloud_export_id(std::string* value);

  private:
  const std::string& _internal_cloud_export_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_cloud_export_id(
      const std::string& value);
  std::string* _internal_mutable_cloud_export_id();

  public:
  // string device_kproxy = 48 [json_name = "deviceKproxy", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_device_kproxy() ;
  const std::string& device_kproxy() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_device_kproxy(Arg_&& arg, Args_... args);
  std::string* mutable_device_kproxy();
  PROTOBUF_NODISCARD std::string* release_device_kproxy();
  void set_allocated_device_kproxy(std::string* value);

  private:
  const std::string& _internal_device_kproxy() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_device_kproxy(
      const std::string& value);
  std::string* _internal_mutable_device_kproxy();

  public:
  // string snmp_enabled = 49 [json_name = "snmpEnabled", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_snmp_enabled() ;
  const std::string& snmp_enabled() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_snmp_enabled(Arg_&& arg, Args_... args);
  std::string* mutable_snmp_enabled();
  PROTOBUF_NODISCARD std::string* release_snmp_enabled();
  void set_allocated_snmp_enabled(std::string* value);

  private:
  const std::string& _internal_snmp_enabled() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_snmp_enabled(
      const std::string& value);
  std::string* _internal_mutable_snmp_enabled();

  public:
  // string snmp_disabled_reason = 50 [json_name = "snmpDisabledReason", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_snmp_disabled_reason() ;
  const std::string& snmp_disabled_reason() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_snmp_disabled_reason(Arg_&& arg, Args_... args);
  std::string* mutable_snmp_disabled_reason();
  PROTOBUF_NODISCARD std::string* release_snmp_disabled_reason();
  void set_allocated_snmp_disabled_reason(std::string* value);

  private:
  const std::string& _internal_snmp_disabled_reason() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_snmp_disabled_reason(
      const std::string& value);
  std::string* _internal_mutable_snmp_disabled_reason();

  public:
  // string snmp_disabled_reason_other = 51 [json_name = "snmpDisabledReasonOther", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_snmp_disabled_reason_other() ;
  const std::string& snmp_disabled_reason_other() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_snmp_disabled_reason_other(Arg_&& arg, Args_... args);
  std::string* mutable_snmp_disabled_reason_other();
  PROTOBUF_NODISCARD std::string* release_snmp_disabled_reason_other();
  void set_allocated_snmp_disabled_reason_other(std::string* value);

  private:
  const std::string& _internal_snmp_disabled_reason_other() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_snmp_disabled_reason_other(
      const std::string& value);
  std::string* _internal_mutable_snmp_disabled_reason_other();

  public:
  // string bgp_disabled_reason = 52 [json_name = "bgpDisabledReason", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_bgp_disabled_reason() ;
  const std::string& bgp_disabled_reason() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_bgp_disabled_reason(Arg_&& arg, Args_... args);
  std::string* mutable_bgp_disabled_reason();
  PROTOBUF_NODISCARD std::string* release_bgp_disabled_reason();
  void set_allocated_bgp_disabled_reason(std::string* value);

  private:
  const std::string& _internal_bgp_disabled_reason() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_bgp_disabled_reason(
      const std::string& value);
  std::string* _internal_mutable_bgp_disabled_reason();

  public:
  // string bgp_disabled_reason_other = 53 [json_name = "bgpDisabledReasonOther", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_bgp_disabled_reason_other() ;
  const std::string& bgp_disabled_reason_other() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_bgp_disabled_reason_other(Arg_&& arg, Args_... args);
  std::string* mutable_bgp_disabled_reason_other();
  PROTOBUF_NODISCARD std::string* release_bgp_disabled_reason_other();
  void set_allocated_bgp_disabled_reason_other(std::string* value);

  private:
  const std::string& _internal_bgp_disabled_reason_other() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_bgp_disabled_reason_other(
      const std::string& value);
  std::string* _internal_mutable_bgp_disabled_reason_other();

  public:
  // string device_manufacturer = 54 [json_name = "deviceManufacturer", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_device_manufacturer() ;
  const std::string& device_manufacturer() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_device_manufacturer(Arg_&& arg, Args_... args);
  std::string* mutable_device_manufacturer();
  PROTOBUF_NODISCARD std::string* release_device_manufacturer();
  void set_allocated_device_manufacturer(std::string* value);

  private:
  const std::string& _internal_device_manufacturer() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_device_manufacturer(
      const std::string& value);
  std::string* _internal_mutable_device_manufacturer();

  public:
  // string device_alert = 55 [json_name = "deviceAlert", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_device_alert() ;
  const std::string& device_alert() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_device_alert(Arg_&& arg, Args_... args);
  std::string* mutable_device_alert();
  PROTOBUF_NODISCARD std::string* release_device_alert();
  void set_allocated_device_alert(std::string* value);

  private:
  const std::string& _internal_device_alert() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_device_alert(
      const std::string& value);
  std::string* _internal_mutable_device_alert();

  public:
  // string role = 56 [json_name = "role", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_role() ;
  const std::string& role() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_role(Arg_&& arg, Args_... args);
  std::string* mutable_role();
  PROTOBUF_NODISCARD std::string* release_role();
  void set_allocated_role(std::string* value);

  private:
  const std::string& _internal_role() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_role(
      const std::string& value);
  std::string* _internal_mutable_role();

  public:
  // string device_bgp_credential_name = 62 [json_name = "deviceBgpCredentialName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_device_bgp_credential_name() ;
  const std::string& device_bgp_credential_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_device_bgp_credential_name(Arg_&& arg, Args_... args);
  std::string* mutable_device_bgp_credential_name();
  PROTOBUF_NODISCARD std::string* release_device_bgp_credential_name();
  void set_allocated_device_bgp_credential_name(std::string* value);

  private:
  const std::string& _internal_device_bgp_credential_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_device_bgp_credential_name(
      const std::string& value);
  std::string* _internal_mutable_device_bgp_credential_name();

  public:
  // string flow_snmp_credential_name = 63 [json_name = "flowSnmpCredentialName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_flow_snmp_credential_name() ;
  const std::string& flow_snmp_credential_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_flow_snmp_credential_name(Arg_&& arg, Args_... args);
  std::string* mutable_flow_snmp_credential_name();
  PROTOBUF_NODISCARD std::string* release_flow_snmp_credential_name();
  void set_allocated_flow_snmp_credential_name(std::string* value);

  private:
  const std::string& _internal_flow_snmp_credential_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_flow_snmp_credential_name(
      const std::string& value);
  std::string* _internal_mutable_flow_snmp_credential_name();

  public:
  // .kentik.device.v202504beta2.Site site = 7 [json_name = "site", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_site() const;
  void clear_site() ;
  const ::kentik::device::v202504beta2::Site& site() const;
  PROTOBUF_NODISCARD ::kentik::device::v202504beta2::Site* release_site();
  ::kentik::device::v202504beta2::Site* mutable_site();
  void set_allocated_site(::kentik::device::v202504beta2::Site* value);
  void unsafe_arena_set_allocated_site(::kentik::device::v202504beta2::Site* value);
  ::kentik::device::v202504beta2::Site* unsafe_arena_release_site();

  private:
  const ::kentik::device::v202504beta2::Site& _internal_site() const;
  ::kentik::device::v202504beta2::Site* _internal_mutable_site();

  public:
  // .kentik.device.v202504beta2.Plan plan = 8 [json_name = "plan", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_plan() const;
  void clear_plan() ;
  const ::kentik::device::v202504beta2::Plan& plan() const;
  PROTOBUF_NODISCARD ::kentik::device::v202504beta2::Plan* release_plan();
  ::kentik::device::v202504beta2::Plan* mutable_plan();
  void set_allocated_plan(::kentik::device::v202504beta2::Plan* value);
  void unsafe_arena_set_allocated_plan(::kentik::device::v202504beta2::Plan* value);
  ::kentik::device::v202504beta2::Plan* unsafe_arena_release_plan();

  private:
  const ::kentik::device::v202504beta2::Plan& _internal_plan() const;
  ::kentik::device::v202504beta2::Plan* _internal_mutable_plan();

  public:
  // .google.protobuf.Timestamp created_date = 37 [json_name = "createdDate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_created_date() const;
  void clear_created_date() ;
  const ::google::protobuf::Timestamp& created_date() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_created_date();
  ::google::protobuf::Timestamp* mutable_created_date();
  void set_allocated_created_date(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_created_date(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_created_date();

  private:
  const ::google::protobuf::Timestamp& _internal_created_date() const;
  ::google::protobuf::Timestamp* _internal_mutable_created_date();

  public:
  // .google.protobuf.Timestamp updated_date = 38 [json_name = "updatedDate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_updated_date() const;
  void clear_updated_date() ;
  const ::google::protobuf::Timestamp& updated_date() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_updated_date();
  ::google::protobuf::Timestamp* mutable_updated_date();
  void set_allocated_updated_date(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_updated_date(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_updated_date();

  private:
  const ::google::protobuf::Timestamp& _internal_updated_date() const;
  ::google::protobuf::Timestamp* _internal_mutable_updated_date();

  public:
  // .kentik.device.v202504beta2.DeviceSnmpV3Conf device_snmp_v3_conf = 40 [json_name = "deviceSnmpV3Conf", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_device_snmp_v3_conf() const;
  void clear_device_snmp_v3_conf() ;
  const ::kentik::device::v202504beta2::DeviceSnmpV3Conf& device_snmp_v3_conf() const;
  PROTOBUF_NODISCARD ::kentik::device::v202504beta2::DeviceSnmpV3Conf* release_device_snmp_v3_conf();
  ::kentik::device::v202504beta2::DeviceSnmpV3Conf* mutable_device_snmp_v3_conf();
  void set_allocated_device_snmp_v3_conf(::kentik::device::v202504beta2::DeviceSnmpV3Conf* value);
  void unsafe_arena_set_allocated_device_snmp_v3_conf(::kentik::device::v202504beta2::DeviceSnmpV3Conf* value);
  ::kentik::device::v202504beta2::DeviceSnmpV3Conf* unsafe_arena_release_device_snmp_v3_conf();

  private:
  const ::kentik::device::v202504beta2::DeviceSnmpV3Conf& _internal_device_snmp_v3_conf() const;
  ::kentik::device::v202504beta2::DeviceSnmpV3Conf* _internal_mutable_device_snmp_v3_conf();

  public:
  // .kentik.device.v202504beta2.GnmiV1Conf device_gnmi_v1_conf = 57 [json_name = "deviceGnmiV1Conf", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_device_gnmi_v1_conf() const;
  void clear_device_gnmi_v1_conf() ;
  const ::kentik::device::v202504beta2::GnmiV1Conf& device_gnmi_v1_conf() const;
  PROTOBUF_NODISCARD ::kentik::device::v202504beta2::GnmiV1Conf* release_device_gnmi_v1_conf();
  ::kentik::device::v202504beta2::GnmiV1Conf* mutable_device_gnmi_v1_conf();
  void set_allocated_device_gnmi_v1_conf(::kentik::device::v202504beta2::GnmiV1Conf* value);
  void unsafe_arena_set_allocated_device_gnmi_v1_conf(::kentik::device::v202504beta2::GnmiV1Conf* value);
  ::kentik::device::v202504beta2::GnmiV1Conf* unsafe_arena_release_device_gnmi_v1_conf();

  private:
  const ::kentik::device::v202504beta2::GnmiV1Conf& _internal_device_gnmi_v1_conf() const;
  ::kentik::device::v202504beta2::GnmiV1Conf* _internal_mutable_device_gnmi_v1_conf();

  public:
  // .kentik.device.v202504beta2.DeviceNmsConfig nms = 61 [json_name = "nms", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_nms() const;
  void clear_nms() ;
  const ::kentik::device::v202504beta2::DeviceNmsConfig& nms() const;
  PROTOBUF_NODISCARD ::kentik::device::v202504beta2::DeviceNmsConfig* release_nms();
  ::kentik::device::v202504beta2::DeviceNmsConfig* mutable_nms();
  void set_allocated_nms(::kentik::device::v202504beta2::DeviceNmsConfig* value);
  void unsafe_arena_set_allocated_nms(::kentik::device::v202504beta2::DeviceNmsConfig* value);
  ::kentik::device::v202504beta2::DeviceNmsConfig* unsafe_arena_release_nms();

  private:
  const ::kentik::device::v202504beta2::DeviceNmsConfig& _internal_nms() const;
  ::kentik::device::v202504beta2::DeviceNmsConfig* _internal_mutable_nms();

  public:
  // optional bool minimize_snmp = 16 [json_name = "minimizeSnmp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_minimize_snmp() const;
  void clear_minimize_snmp() ;
  bool minimize_snmp() const;
  void set_minimize_snmp(bool value);

  private:
  bool _internal_minimize_snmp() const;
  void _internal_set_minimize_snmp(bool value);

  public:
  // bool device_bgp_flowspec = 21 [json_name = "deviceBgpFlowspec", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_device_bgp_flowspec() ;
  bool device_bgp_flowspec() const;
  void set_device_bgp_flowspec(bool value);

  private:
  bool _internal_device_bgp_flowspec() const;
  void _internal_set_device_bgp_flowspec(bool value);

  public:
  // bool device_bgp_label_unicast = 23 [json_name = "deviceBgpLabelUnicast", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_device_bgp_label_unicast() ;
  bool device_bgp_label_unicast() const;
  void set_device_bgp_label_unicast(bool value);

  private:
  bool _internal_device_bgp_label_unicast() const;
  void _internal_set_device_bgp_label_unicast(bool value);

  public:
  // bool device_snmp_v3_conf_enabled = 39 [json_name = "deviceSnmpV3ConfEnabled", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_device_snmp_v3_conf_enabled() ;
  bool device_snmp_v3_conf_enabled() const;
  void set_device_snmp_v3_conf_enabled(bool value);

  private:
  bool _internal_device_snmp_v3_conf_enabled() const;
  void _internal_set_device_snmp_v3_conf_enabled(bool value);

  public:
  // uint32 max_flow_rate = 33 [json_name = "maxFlowRate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_max_flow_rate() ;
  ::uint32_t max_flow_rate() const;
  void set_max_flow_rate(::uint32_t value);

  private:
  ::uint32_t _internal_max_flow_rate() const;
  void _internal_set_max_flow_rate(::uint32_t value);

  public:
  // uint32 max_big_flow_rate = 34 [json_name = "maxBigFlowRate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_max_big_flow_rate() ;
  ::uint32_t max_big_flow_rate() const;
  void set_max_big_flow_rate(::uint32_t value);

  private:
  ::uint32_t _internal_max_big_flow_rate() const;
  void _internal_set_max_big_flow_rate(::uint32_t value);

  public:
  // bool use_asn_from_flow = 58 [json_name = "useAsnFromFlow", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_use_asn_from_flow() ;
  bool use_asn_from_flow() const;
  void set_use_asn_from_flow(bool value);

  private:
  bool _internal_use_asn_from_flow() const;
  void _internal_set_use_asn_from_flow(bool value);

  public:
  // uint32 max_interface = 59 [json_name = "maxInterface", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_max_interface() ;
  ::uint32_t max_interface() const;
  void set_max_interface(::uint32_t value);

  private:
  ::uint32_t _internal_max_interface() const;
  void _internal_set_max_interface(::uint32_t value);

  public:
  // uint32 max_interface_check = 60 [json_name = "maxInterfaceCheck", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_max_interface_check() ;
  ::uint32_t max_interface_check() const;
  void set_max_interface_check(::uint32_t value);

  private:
  ::uint32_t _internal_max_interface_check() const;
  void _internal_set_max_interface_check(::uint32_t value);

  public:
  // uint32 monitoring_template_id = 64 [json_name = "monitoringTemplateId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_monitoring_template_id() ;
  ::uint32_t monitoring_template_id() const;
  void set_monitoring_template_id(::uint32_t value);

  private:
  ::uint32_t _internal_monitoring_template_id() const;
  void _internal_set_monitoring_template_id(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.device.v202504beta2.DeviceDetailed)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      5, 64, 10,
      838, 9>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DeviceDetailed& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::kentik::device::v202504beta2::Label > labels_;
    ::google::protobuf::RepeatedPtrField< ::kentik::device::v202504beta2::Interface > all_interfaces_;
    ::google::protobuf::RepeatedPtrField<std::string> sending_ips_;
    ::google::protobuf::RepeatedPtrField< ::kentik::device::v202504beta2::CustomColumnData > custom_column_data_;
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::ArenaStringPtr company_id_;
    ::google::protobuf::internal::ArenaStringPtr device_name_;
    ::google::protobuf::internal::ArenaStringPtr device_alias_;
    ::google::protobuf::internal::ArenaStringPtr device_type_;
    ::google::protobuf::internal::ArenaStringPtr device_description_;
    ::google::protobuf::internal::ArenaStringPtr device_flow_type_;
    ::google::protobuf::internal::ArenaStringPtr device_sample_rate_;
    ::google::protobuf::internal::ArenaStringPtr device_snmp_ip_;
    ::google::protobuf::internal::ArenaStringPtr device_snmp_community_;
    ::google::protobuf::internal::ArenaStringPtr device_bgp_type_;
    ::google::protobuf::internal::ArenaStringPtr device_bgp_neighbor_ip_;
    ::google::protobuf::internal::ArenaStringPtr device_bgp_neighbor_ip6_;
    ::google::protobuf::internal::ArenaStringPtr device_bgp_neighbor_asn_;
    ::google::protobuf::internal::ArenaStringPtr device_bgp_password_;
    ::google::protobuf::internal::ArenaStringPtr bgp_lookup_strategy_;
    ::google::protobuf::internal::ArenaStringPtr device_status_;
    ::google::protobuf::internal::ArenaStringPtr use_bgp_device_id_;
    ::google::protobuf::internal::ArenaStringPtr custom_columns_;
    ::google::protobuf::internal::ArenaStringPtr device_chf_client_port_;
    ::google::protobuf::internal::ArenaStringPtr device_chf_client_protocol_;
    ::google::protobuf::internal::ArenaStringPtr device_chf_interface_;
    ::google::protobuf::internal::ArenaStringPtr device_agent_type_;
    ::google::protobuf::internal::ArenaStringPtr device_proxy_bgp_;
    ::google::protobuf::internal::ArenaStringPtr device_proxy_bgp6_;
    ::google::protobuf::internal::ArenaStringPtr cdn_attr_;
    ::google::protobuf::internal::ArenaStringPtr bgp_peer_ip4_;
    ::google::protobuf::internal::ArenaStringPtr bgp_peer_ip6_;
    ::google::protobuf::internal::ArenaStringPtr device_subtype_;
    ::google::protobuf::internal::ArenaStringPtr device_vendor_type_;
    ::google::protobuf::internal::ArenaStringPtr device_model_type_;
    ::google::protobuf::internal::ArenaStringPtr cloud_export_id_;
    ::google::protobuf::internal::ArenaStringPtr device_kproxy_;
    ::google::protobuf::internal::ArenaStringPtr snmp_enabled_;
    ::google::protobuf::internal::ArenaStringPtr snmp_disabled_reason_;
    ::google::protobuf::internal::ArenaStringPtr snmp_disabled_reason_other_;
    ::google::protobuf::internal::ArenaStringPtr bgp_disabled_reason_;
    ::google::protobuf::internal::ArenaStringPtr bgp_disabled_reason_other_;
    ::google::protobuf::internal::ArenaStringPtr device_manufacturer_;
    ::google::protobuf::internal::ArenaStringPtr device_alert_;
    ::google::protobuf::internal::ArenaStringPtr role_;
    ::google::protobuf::internal::ArenaStringPtr device_bgp_credential_name_;
    ::google::protobuf::internal::ArenaStringPtr flow_snmp_credential_name_;
    ::kentik::device::v202504beta2::Site* site_;
    ::kentik::device::v202504beta2::Plan* plan_;
    ::google::protobuf::Timestamp* created_date_;
    ::google::protobuf::Timestamp* updated_date_;
    ::kentik::device::v202504beta2::DeviceSnmpV3Conf* device_snmp_v3_conf_;
    ::kentik::device::v202504beta2::GnmiV1Conf* device_gnmi_v1_conf_;
    ::kentik::device::v202504beta2::DeviceNmsConfig* nms_;
    bool minimize_snmp_;
    bool device_bgp_flowspec_;
    bool device_bgp_label_unicast_;
    bool device_snmp_v3_conf_enabled_;
    ::uint32_t max_flow_rate_;
    ::uint32_t max_big_flow_rate_;
    bool use_asn_from_flow_;
    ::uint32_t max_interface_;
    ::uint32_t max_interface_check_;
    ::uint32_t monitoring_template_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fdevice_2fv202504beta2_2fdevice_2eproto;
};
// -------------------------------------------------------------------

class DeviceConcise final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.device.v202504beta2.DeviceConcise) */ {
 public:
  inline DeviceConcise() : DeviceConcise(nullptr) {}
  ~DeviceConcise() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DeviceConcise* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DeviceConcise));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeviceConcise(
      ::google::protobuf::internal::ConstantInitialized);

  inline DeviceConcise(const DeviceConcise& from) : DeviceConcise(nullptr, from) {}
  inline DeviceConcise(DeviceConcise&& from) noexcept
      : DeviceConcise(nullptr, std::move(from)) {}
  inline DeviceConcise& operator=(const DeviceConcise& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeviceConcise& operator=(DeviceConcise&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeviceConcise& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeviceConcise* internal_default_instance() {
    return reinterpret_cast<const DeviceConcise*>(
        &_DeviceConcise_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(DeviceConcise& a, DeviceConcise& b) { a.Swap(&b); }
  inline void Swap(DeviceConcise* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeviceConcise* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeviceConcise* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DeviceConcise>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DeviceConcise& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DeviceConcise& from) { DeviceConcise::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DeviceConcise* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.device.v202504beta2.DeviceConcise"; }

 protected:
  explicit DeviceConcise(::google::protobuf::Arena* arena);
  DeviceConcise(::google::protobuf::Arena* arena, const DeviceConcise& from);
  DeviceConcise(::google::protobuf::Arena* arena, DeviceConcise&& from) noexcept
      : DeviceConcise(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSendingIpsFieldNumber = 6,
    kIdFieldNumber = 1,
    kDeviceNameFieldNumber = 2,
    kDeviceSubtypeFieldNumber = 3,
    kCdnAttrFieldNumber = 4,
    kDeviceDescriptionFieldNumber = 5,
    kDeviceSnmpIpFieldNumber = 11,
    kDeviceSnmpCommunityFieldNumber = 12,
    kDeviceBgpTypeFieldNumber = 14,
    kDeviceBgpNeighborIpFieldNumber = 15,
    kDeviceBgpNeighborIp6FieldNumber = 16,
    kDeviceBgpNeighborAsnFieldNumber = 17,
    kDeviceBgpPasswordFieldNumber = 18,
    kUseBgpDeviceIdFieldNumber = 19,
    kDeviceBgpCredentialNameFieldNumber = 22,
    kFlowSnmpCredentialNameFieldNumber = 23,
    kDeviceSnmpV3ConfFieldNumber = 13,
    kNmsFieldNumber = 21,
    kDeviceSampleRateFieldNumber = 7,
    kPlanIdFieldNumber = 8,
    kSiteIdFieldNumber = 9,
    kMinimizeSnmpFieldNumber = 10,
    kDeviceBgpFlowspecFieldNumber = 20,
    kMonitoringTemplateIdFieldNumber = 24,
  };
  // repeated string sending_ips = 6 [json_name = "sendingIps", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int sending_ips_size() const;
  private:
  int _internal_sending_ips_size() const;

  public:
  void clear_sending_ips() ;
  const std::string& sending_ips(int index) const;
  std::string* mutable_sending_ips(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_sending_ips(int index, Arg_&& value, Args_... args);
  std::string* add_sending_ips();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_sending_ips(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& sending_ips() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_sending_ips();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_sending_ips() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_sending_ips();

  public:
  // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // string device_name = 2 [json_name = "deviceName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_device_name() ;
  const std::string& device_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_device_name(Arg_&& arg, Args_... args);
  std::string* mutable_device_name();
  PROTOBUF_NODISCARD std::string* release_device_name();
  void set_allocated_device_name(std::string* value);

  private:
  const std::string& _internal_device_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_device_name(
      const std::string& value);
  std::string* _internal_mutable_device_name();

  public:
  // string device_subtype = 3 [json_name = "deviceSubtype", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_device_subtype() ;
  const std::string& device_subtype() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_device_subtype(Arg_&& arg, Args_... args);
  std::string* mutable_device_subtype();
  PROTOBUF_NODISCARD std::string* release_device_subtype();
  void set_allocated_device_subtype(std::string* value);

  private:
  const std::string& _internal_device_subtype() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_device_subtype(
      const std::string& value);
  std::string* _internal_mutable_device_subtype();

  public:
  // string cdn_attr = 4 [json_name = "cdnAttr", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_cdn_attr() ;
  const std::string& cdn_attr() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_cdn_attr(Arg_&& arg, Args_... args);
  std::string* mutable_cdn_attr();
  PROTOBUF_NODISCARD std::string* release_cdn_attr();
  void set_allocated_cdn_attr(std::string* value);

  private:
  const std::string& _internal_cdn_attr() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_cdn_attr(
      const std::string& value);
  std::string* _internal_mutable_cdn_attr();

  public:
  // string device_description = 5 [json_name = "deviceDescription", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_device_description() ;
  const std::string& device_description() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_device_description(Arg_&& arg, Args_... args);
  std::string* mutable_device_description();
  PROTOBUF_NODISCARD std::string* release_device_description();
  void set_allocated_device_description(std::string* value);

  private:
  const std::string& _internal_device_description() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_device_description(
      const std::string& value);
  std::string* _internal_mutable_device_description();

  public:
  // string device_snmp_ip = 11 [json_name = "deviceSnmpIp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_device_snmp_ip() ;
  const std::string& device_snmp_ip() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_device_snmp_ip(Arg_&& arg, Args_... args);
  std::string* mutable_device_snmp_ip();
  PROTOBUF_NODISCARD std::string* release_device_snmp_ip();
  void set_allocated_device_snmp_ip(std::string* value);

  private:
  const std::string& _internal_device_snmp_ip() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_device_snmp_ip(
      const std::string& value);
  std::string* _internal_mutable_device_snmp_ip();

  public:
  // string device_snmp_community = 12 [json_name = "deviceSnmpCommunity", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_device_snmp_community() ;
  const std::string& device_snmp_community() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_device_snmp_community(Arg_&& arg, Args_... args);
  std::string* mutable_device_snmp_community();
  PROTOBUF_NODISCARD std::string* release_device_snmp_community();
  void set_allocated_device_snmp_community(std::string* value);

  private:
  const std::string& _internal_device_snmp_community() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_device_snmp_community(
      const std::string& value);
  std::string* _internal_mutable_device_snmp_community();

  public:
  // string device_bgp_type = 14 [json_name = "deviceBgpType", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_device_bgp_type() ;
  const std::string& device_bgp_type() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_device_bgp_type(Arg_&& arg, Args_... args);
  std::string* mutable_device_bgp_type();
  PROTOBUF_NODISCARD std::string* release_device_bgp_type();
  void set_allocated_device_bgp_type(std::string* value);

  private:
  const std::string& _internal_device_bgp_type() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_device_bgp_type(
      const std::string& value);
  std::string* _internal_mutable_device_bgp_type();

  public:
  // string device_bgp_neighbor_ip = 15 [json_name = "deviceBgpNeighborIp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_device_bgp_neighbor_ip() ;
  const std::string& device_bgp_neighbor_ip() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_device_bgp_neighbor_ip(Arg_&& arg, Args_... args);
  std::string* mutable_device_bgp_neighbor_ip();
  PROTOBUF_NODISCARD std::string* release_device_bgp_neighbor_ip();
  void set_allocated_device_bgp_neighbor_ip(std::string* value);

  private:
  const std::string& _internal_device_bgp_neighbor_ip() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_device_bgp_neighbor_ip(
      const std::string& value);
  std::string* _internal_mutable_device_bgp_neighbor_ip();

  public:
  // string device_bgp_neighbor_ip6 = 16 [json_name = "deviceBgpNeighborIp6", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_device_bgp_neighbor_ip6() ;
  const std::string& device_bgp_neighbor_ip6() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_device_bgp_neighbor_ip6(Arg_&& arg, Args_... args);
  std::string* mutable_device_bgp_neighbor_ip6();
  PROTOBUF_NODISCARD std::string* release_device_bgp_neighbor_ip6();
  void set_allocated_device_bgp_neighbor_ip6(std::string* value);

  private:
  const std::string& _internal_device_bgp_neighbor_ip6() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_device_bgp_neighbor_ip6(
      const std::string& value);
  std::string* _internal_mutable_device_bgp_neighbor_ip6();

  public:
  // string device_bgp_neighbor_asn = 17 [json_name = "deviceBgpNeighborAsn", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_device_bgp_neighbor_asn() ;
  const std::string& device_bgp_neighbor_asn() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_device_bgp_neighbor_asn(Arg_&& arg, Args_... args);
  std::string* mutable_device_bgp_neighbor_asn();
  PROTOBUF_NODISCARD std::string* release_device_bgp_neighbor_asn();
  void set_allocated_device_bgp_neighbor_asn(std::string* value);

  private:
  const std::string& _internal_device_bgp_neighbor_asn() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_device_bgp_neighbor_asn(
      const std::string& value);
  std::string* _internal_mutable_device_bgp_neighbor_asn();

  public:
  // string device_bgp_password = 18 [json_name = "deviceBgpPassword", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_device_bgp_password() ;
  const std::string& device_bgp_password() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_device_bgp_password(Arg_&& arg, Args_... args);
  std::string* mutable_device_bgp_password();
  PROTOBUF_NODISCARD std::string* release_device_bgp_password();
  void set_allocated_device_bgp_password(std::string* value);

  private:
  const std::string& _internal_device_bgp_password() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_device_bgp_password(
      const std::string& value);
  std::string* _internal_mutable_device_bgp_password();

  public:
  // string use_bgp_device_id = 19 [json_name = "useBgpDeviceId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_use_bgp_device_id() ;
  const std::string& use_bgp_device_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_use_bgp_device_id(Arg_&& arg, Args_... args);
  std::string* mutable_use_bgp_device_id();
  PROTOBUF_NODISCARD std::string* release_use_bgp_device_id();
  void set_allocated_use_bgp_device_id(std::string* value);

  private:
  const std::string& _internal_use_bgp_device_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_use_bgp_device_id(
      const std::string& value);
  std::string* _internal_mutable_use_bgp_device_id();

  public:
  // string device_bgp_credential_name = 22 [json_name = "deviceBgpCredentialName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_device_bgp_credential_name() ;
  const std::string& device_bgp_credential_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_device_bgp_credential_name(Arg_&& arg, Args_... args);
  std::string* mutable_device_bgp_credential_name();
  PROTOBUF_NODISCARD std::string* release_device_bgp_credential_name();
  void set_allocated_device_bgp_credential_name(std::string* value);

  private:
  const std::string& _internal_device_bgp_credential_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_device_bgp_credential_name(
      const std::string& value);
  std::string* _internal_mutable_device_bgp_credential_name();

  public:
  // string flow_snmp_credential_name = 23 [json_name = "flowSnmpCredentialName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_flow_snmp_credential_name() ;
  const std::string& flow_snmp_credential_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_flow_snmp_credential_name(Arg_&& arg, Args_... args);
  std::string* mutable_flow_snmp_credential_name();
  PROTOBUF_NODISCARD std::string* release_flow_snmp_credential_name();
  void set_allocated_flow_snmp_credential_name(std::string* value);

  private:
  const std::string& _internal_flow_snmp_credential_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_flow_snmp_credential_name(
      const std::string& value);
  std::string* _internal_mutable_flow_snmp_credential_name();

  public:
  // .kentik.device.v202504beta2.DeviceSnmpV3Conf device_snmp_v3_conf = 13 [json_name = "deviceSnmpV3Conf", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_device_snmp_v3_conf() const;
  void clear_device_snmp_v3_conf() ;
  const ::kentik::device::v202504beta2::DeviceSnmpV3Conf& device_snmp_v3_conf() const;
  PROTOBUF_NODISCARD ::kentik::device::v202504beta2::DeviceSnmpV3Conf* release_device_snmp_v3_conf();
  ::kentik::device::v202504beta2::DeviceSnmpV3Conf* mutable_device_snmp_v3_conf();
  void set_allocated_device_snmp_v3_conf(::kentik::device::v202504beta2::DeviceSnmpV3Conf* value);
  void unsafe_arena_set_allocated_device_snmp_v3_conf(::kentik::device::v202504beta2::DeviceSnmpV3Conf* value);
  ::kentik::device::v202504beta2::DeviceSnmpV3Conf* unsafe_arena_release_device_snmp_v3_conf();

  private:
  const ::kentik::device::v202504beta2::DeviceSnmpV3Conf& _internal_device_snmp_v3_conf() const;
  ::kentik::device::v202504beta2::DeviceSnmpV3Conf* _internal_mutable_device_snmp_v3_conf();

  public:
  // .kentik.device.v202504beta2.DeviceNmsConfig nms = 21 [json_name = "nms", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_nms() const;
  void clear_nms() ;
  const ::kentik::device::v202504beta2::DeviceNmsConfig& nms() const;
  PROTOBUF_NODISCARD ::kentik::device::v202504beta2::DeviceNmsConfig* release_nms();
  ::kentik::device::v202504beta2::DeviceNmsConfig* mutable_nms();
  void set_allocated_nms(::kentik::device::v202504beta2::DeviceNmsConfig* value);
  void unsafe_arena_set_allocated_nms(::kentik::device::v202504beta2::DeviceNmsConfig* value);
  ::kentik::device::v202504beta2::DeviceNmsConfig* unsafe_arena_release_nms();

  private:
  const ::kentik::device::v202504beta2::DeviceNmsConfig& _internal_nms() const;
  ::kentik::device::v202504beta2::DeviceNmsConfig* _internal_mutable_nms();

  public:
  // double device_sample_rate = 7 [json_name = "deviceSampleRate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_device_sample_rate() ;
  double device_sample_rate() const;
  void set_device_sample_rate(double value);

  private:
  double _internal_device_sample_rate() const;
  void _internal_set_device_sample_rate(double value);

  public:
  // uint32 plan_id = 8 [json_name = "planId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_plan_id() ;
  ::uint32_t plan_id() const;
  void set_plan_id(::uint32_t value);

  private:
  ::uint32_t _internal_plan_id() const;
  void _internal_set_plan_id(::uint32_t value);

  public:
  // uint32 site_id = 9 [json_name = "siteId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_site_id() ;
  ::uint32_t site_id() const;
  void set_site_id(::uint32_t value);

  private:
  ::uint32_t _internal_site_id() const;
  void _internal_set_site_id(::uint32_t value);

  public:
  // optional bool minimize_snmp = 10 [json_name = "minimizeSnmp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_minimize_snmp() const;
  void clear_minimize_snmp() ;
  bool minimize_snmp() const;
  void set_minimize_snmp(bool value);

  private:
  bool _internal_minimize_snmp() const;
  void _internal_set_minimize_snmp(bool value);

  public:
  // bool device_bgp_flowspec = 20 [json_name = "deviceBgpFlowspec", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_device_bgp_flowspec() ;
  bool device_bgp_flowspec() const;
  void set_device_bgp_flowspec(bool value);

  private:
  bool _internal_device_bgp_flowspec() const;
  void _internal_set_device_bgp_flowspec(bool value);

  public:
  // uint32 monitoring_template_id = 24 [json_name = "monitoringTemplateId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_monitoring_template_id() ;
  ::uint32_t monitoring_template_id() const;
  void set_monitoring_template_id(::uint32_t value);

  private:
  ::uint32_t _internal_monitoring_template_id() const;
  void _internal_set_monitoring_template_id(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.device.v202504beta2.DeviceConcise)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      5, 24, 2,
      342, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DeviceConcise& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<std::string> sending_ips_;
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::ArenaStringPtr device_name_;
    ::google::protobuf::internal::ArenaStringPtr device_subtype_;
    ::google::protobuf::internal::ArenaStringPtr cdn_attr_;
    ::google::protobuf::internal::ArenaStringPtr device_description_;
    ::google::protobuf::internal::ArenaStringPtr device_snmp_ip_;
    ::google::protobuf::internal::ArenaStringPtr device_snmp_community_;
    ::google::protobuf::internal::ArenaStringPtr device_bgp_type_;
    ::google::protobuf::internal::ArenaStringPtr device_bgp_neighbor_ip_;
    ::google::protobuf::internal::ArenaStringPtr device_bgp_neighbor_ip6_;
    ::google::protobuf::internal::ArenaStringPtr device_bgp_neighbor_asn_;
    ::google::protobuf::internal::ArenaStringPtr device_bgp_password_;
    ::google::protobuf::internal::ArenaStringPtr use_bgp_device_id_;
    ::google::protobuf::internal::ArenaStringPtr device_bgp_credential_name_;
    ::google::protobuf::internal::ArenaStringPtr flow_snmp_credential_name_;
    ::kentik::device::v202504beta2::DeviceSnmpV3Conf* device_snmp_v3_conf_;
    ::kentik::device::v202504beta2::DeviceNmsConfig* nms_;
    double device_sample_rate_;
    ::uint32_t plan_id_;
    ::uint32_t site_id_;
    bool minimize_snmp_;
    bool device_bgp_flowspec_;
    ::uint32_t monitoring_template_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fdevice_2fv202504beta2_2fdevice_2eproto;
};
// -------------------------------------------------------------------

class UpdateDevicesResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.device.v202504beta2.UpdateDevicesResponse) */ {
 public:
  inline UpdateDevicesResponse() : UpdateDevicesResponse(nullptr) {}
  ~UpdateDevicesResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UpdateDevicesResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UpdateDevicesResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateDevicesResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdateDevicesResponse(const UpdateDevicesResponse& from) : UpdateDevicesResponse(nullptr, from) {}
  inline UpdateDevicesResponse(UpdateDevicesResponse&& from) noexcept
      : UpdateDevicesResponse(nullptr, std::move(from)) {}
  inline UpdateDevicesResponse& operator=(const UpdateDevicesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateDevicesResponse& operator=(UpdateDevicesResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateDevicesResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateDevicesResponse* internal_default_instance() {
    return reinterpret_cast<const UpdateDevicesResponse*>(
        &_UpdateDevicesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 26;
  friend void swap(UpdateDevicesResponse& a, UpdateDevicesResponse& b) { a.Swap(&b); }
  inline void Swap(UpdateDevicesResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateDevicesResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateDevicesResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<UpdateDevicesResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateDevicesResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateDevicesResponse& from) { UpdateDevicesResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(UpdateDevicesResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.device.v202504beta2.UpdateDevicesResponse"; }

 protected:
  explicit UpdateDevicesResponse(::google::protobuf::Arena* arena);
  UpdateDevicesResponse(::google::protobuf::Arena* arena, const UpdateDevicesResponse& from);
  UpdateDevicesResponse(::google::protobuf::Arena* arena, UpdateDevicesResponse&& from) noexcept
      : UpdateDevicesResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDevicesFieldNumber = 1,
    kFailedDevicesFieldNumber = 2,
  };
  // repeated .kentik.device.v202504beta2.DeviceDetailed devices = 1 [json_name = "devices", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int devices_size() const;
  private:
  int _internal_devices_size() const;

  public:
  void clear_devices() ;
  ::kentik::device::v202504beta2::DeviceDetailed* mutable_devices(int index);
  ::google::protobuf::RepeatedPtrField<::kentik::device::v202504beta2::DeviceDetailed>* mutable_devices();

  private:
  const ::google::protobuf::RepeatedPtrField<::kentik::device::v202504beta2::DeviceDetailed>& _internal_devices() const;
  ::google::protobuf::RepeatedPtrField<::kentik::device::v202504beta2::DeviceDetailed>* _internal_mutable_devices();
  public:
  const ::kentik::device::v202504beta2::DeviceDetailed& devices(int index) const;
  ::kentik::device::v202504beta2::DeviceDetailed* add_devices();
  const ::google::protobuf::RepeatedPtrField<::kentik::device::v202504beta2::DeviceDetailed>& devices() const;
  // repeated string failed_devices = 2 [json_name = "failedDevices", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int failed_devices_size() const;
  private:
  int _internal_failed_devices_size() const;

  public:
  void clear_failed_devices() ;
  const std::string& failed_devices(int index) const;
  std::string* mutable_failed_devices(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_failed_devices(int index, Arg_&& value, Args_... args);
  std::string* add_failed_devices();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_failed_devices(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& failed_devices() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_failed_devices();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_failed_devices() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_failed_devices();

  public:
  // @@protoc_insertion_point(class_scope:kentik.device.v202504beta2.UpdateDevicesResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      71, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdateDevicesResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::kentik::device::v202504beta2::DeviceDetailed > devices_;
    ::google::protobuf::RepeatedPtrField<std::string> failed_devices_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fdevice_2fv202504beta2_2fdevice_2eproto;
};
// -------------------------------------------------------------------

class UpdateDevicesRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.device.v202504beta2.UpdateDevicesRequest) */ {
 public:
  inline UpdateDevicesRequest() : UpdateDevicesRequest(nullptr) {}
  ~UpdateDevicesRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UpdateDevicesRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UpdateDevicesRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateDevicesRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdateDevicesRequest(const UpdateDevicesRequest& from) : UpdateDevicesRequest(nullptr, from) {}
  inline UpdateDevicesRequest(UpdateDevicesRequest&& from) noexcept
      : UpdateDevicesRequest(nullptr, std::move(from)) {}
  inline UpdateDevicesRequest& operator=(const UpdateDevicesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateDevicesRequest& operator=(UpdateDevicesRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateDevicesRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateDevicesRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateDevicesRequest*>(
        &_UpdateDevicesRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 25;
  friend void swap(UpdateDevicesRequest& a, UpdateDevicesRequest& b) { a.Swap(&b); }
  inline void Swap(UpdateDevicesRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateDevicesRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateDevicesRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<UpdateDevicesRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateDevicesRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateDevicesRequest& from) { UpdateDevicesRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(UpdateDevicesRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.device.v202504beta2.UpdateDevicesRequest"; }

 protected:
  explicit UpdateDevicesRequest(::google::protobuf::Arena* arena);
  UpdateDevicesRequest(::google::protobuf::Arena* arena, const UpdateDevicesRequest& from);
  UpdateDevicesRequest(::google::protobuf::Arena* arena, UpdateDevicesRequest&& from) noexcept
      : UpdateDevicesRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDevicesFieldNumber = 1,
  };
  // repeated .kentik.device.v202504beta2.DeviceConcise devices = 1 [json_name = "devices", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int devices_size() const;
  private:
  int _internal_devices_size() const;

  public:
  void clear_devices() ;
  ::kentik::device::v202504beta2::DeviceConcise* mutable_devices(int index);
  ::google::protobuf::RepeatedPtrField<::kentik::device::v202504beta2::DeviceConcise>* mutable_devices();

  private:
  const ::google::protobuf::RepeatedPtrField<::kentik::device::v202504beta2::DeviceConcise>& _internal_devices() const;
  ::google::protobuf::RepeatedPtrField<::kentik::device::v202504beta2::DeviceConcise>* _internal_mutable_devices();
  public:
  const ::kentik::device::v202504beta2::DeviceConcise& devices(int index) const;
  ::kentik::device::v202504beta2::DeviceConcise* add_devices();
  const ::google::protobuf::RepeatedPtrField<::kentik::device::v202504beta2::DeviceConcise>& devices() const;
  // @@protoc_insertion_point(class_scope:kentik.device.v202504beta2.UpdateDevicesRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdateDevicesRequest& from_msg);
    ::google::protobuf::RepeatedPtrField< ::kentik::device::v202504beta2::DeviceConcise > devices_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fdevice_2fv202504beta2_2fdevice_2eproto;
};
// -------------------------------------------------------------------

class UpdateDeviceResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.device.v202504beta2.UpdateDeviceResponse) */ {
 public:
  inline UpdateDeviceResponse() : UpdateDeviceResponse(nullptr) {}
  ~UpdateDeviceResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UpdateDeviceResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UpdateDeviceResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateDeviceResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdateDeviceResponse(const UpdateDeviceResponse& from) : UpdateDeviceResponse(nullptr, from) {}
  inline UpdateDeviceResponse(UpdateDeviceResponse&& from) noexcept
      : UpdateDeviceResponse(nullptr, std::move(from)) {}
  inline UpdateDeviceResponse& operator=(const UpdateDeviceResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateDeviceResponse& operator=(UpdateDeviceResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateDeviceResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateDeviceResponse* internal_default_instance() {
    return reinterpret_cast<const UpdateDeviceResponse*>(
        &_UpdateDeviceResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 24;
  friend void swap(UpdateDeviceResponse& a, UpdateDeviceResponse& b) { a.Swap(&b); }
  inline void Swap(UpdateDeviceResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateDeviceResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateDeviceResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<UpdateDeviceResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateDeviceResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateDeviceResponse& from) { UpdateDeviceResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(UpdateDeviceResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.device.v202504beta2.UpdateDeviceResponse"; }

 protected:
  explicit UpdateDeviceResponse(::google::protobuf::Arena* arena);
  UpdateDeviceResponse(::google::protobuf::Arena* arena, const UpdateDeviceResponse& from);
  UpdateDeviceResponse(::google::protobuf::Arena* arena, UpdateDeviceResponse&& from) noexcept
      : UpdateDeviceResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDeviceFieldNumber = 1,
  };
  // .kentik.device.v202504beta2.DeviceDetailed device = 1 [json_name = "device", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_device() const;
  void clear_device() ;
  const ::kentik::device::v202504beta2::DeviceDetailed& device() const;
  PROTOBUF_NODISCARD ::kentik::device::v202504beta2::DeviceDetailed* release_device();
  ::kentik::device::v202504beta2::DeviceDetailed* mutable_device();
  void set_allocated_device(::kentik::device::v202504beta2::DeviceDetailed* value);
  void unsafe_arena_set_allocated_device(::kentik::device::v202504beta2::DeviceDetailed* value);
  ::kentik::device::v202504beta2::DeviceDetailed* unsafe_arena_release_device();

  private:
  const ::kentik::device::v202504beta2::DeviceDetailed& _internal_device() const;
  ::kentik::device::v202504beta2::DeviceDetailed* _internal_mutable_device();

  public:
  // @@protoc_insertion_point(class_scope:kentik.device.v202504beta2.UpdateDeviceResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdateDeviceResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::kentik::device::v202504beta2::DeviceDetailed* device_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fdevice_2fv202504beta2_2fdevice_2eproto;
};
// -------------------------------------------------------------------

class UpdateDeviceRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.device.v202504beta2.UpdateDeviceRequest) */ {
 public:
  inline UpdateDeviceRequest() : UpdateDeviceRequest(nullptr) {}
  ~UpdateDeviceRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UpdateDeviceRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UpdateDeviceRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateDeviceRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdateDeviceRequest(const UpdateDeviceRequest& from) : UpdateDeviceRequest(nullptr, from) {}
  inline UpdateDeviceRequest(UpdateDeviceRequest&& from) noexcept
      : UpdateDeviceRequest(nullptr, std::move(from)) {}
  inline UpdateDeviceRequest& operator=(const UpdateDeviceRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateDeviceRequest& operator=(UpdateDeviceRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateDeviceRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateDeviceRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateDeviceRequest*>(
        &_UpdateDeviceRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 23;
  friend void swap(UpdateDeviceRequest& a, UpdateDeviceRequest& b) { a.Swap(&b); }
  inline void Swap(UpdateDeviceRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateDeviceRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateDeviceRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<UpdateDeviceRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateDeviceRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateDeviceRequest& from) { UpdateDeviceRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(UpdateDeviceRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.device.v202504beta2.UpdateDeviceRequest"; }

 protected:
  explicit UpdateDeviceRequest(::google::protobuf::Arena* arena);
  UpdateDeviceRequest(::google::protobuf::Arena* arena, const UpdateDeviceRequest& from);
  UpdateDeviceRequest(::google::protobuf::Arena* arena, UpdateDeviceRequest&& from) noexcept
      : UpdateDeviceRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDeviceFieldNumber = 1,
  };
  // .kentik.device.v202504beta2.DeviceConcise device = 1 [json_name = "device", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_device() const;
  void clear_device() ;
  const ::kentik::device::v202504beta2::DeviceConcise& device() const;
  PROTOBUF_NODISCARD ::kentik::device::v202504beta2::DeviceConcise* release_device();
  ::kentik::device::v202504beta2::DeviceConcise* mutable_device();
  void set_allocated_device(::kentik::device::v202504beta2::DeviceConcise* value);
  void unsafe_arena_set_allocated_device(::kentik::device::v202504beta2::DeviceConcise* value);
  ::kentik::device::v202504beta2::DeviceConcise* unsafe_arena_release_device();

  private:
  const ::kentik::device::v202504beta2::DeviceConcise& _internal_device() const;
  ::kentik::device::v202504beta2::DeviceConcise* _internal_mutable_device();

  public:
  // @@protoc_insertion_point(class_scope:kentik.device.v202504beta2.UpdateDeviceRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdateDeviceRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::kentik::device::v202504beta2::DeviceConcise* device_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fdevice_2fv202504beta2_2fdevice_2eproto;
};
// -------------------------------------------------------------------

class UpdateDeviceLabelsResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.device.v202504beta2.UpdateDeviceLabelsResponse) */ {
 public:
  inline UpdateDeviceLabelsResponse() : UpdateDeviceLabelsResponse(nullptr) {}
  ~UpdateDeviceLabelsResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UpdateDeviceLabelsResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UpdateDeviceLabelsResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateDeviceLabelsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdateDeviceLabelsResponse(const UpdateDeviceLabelsResponse& from) : UpdateDeviceLabelsResponse(nullptr, from) {}
  inline UpdateDeviceLabelsResponse(UpdateDeviceLabelsResponse&& from) noexcept
      : UpdateDeviceLabelsResponse(nullptr, std::move(from)) {}
  inline UpdateDeviceLabelsResponse& operator=(const UpdateDeviceLabelsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateDeviceLabelsResponse& operator=(UpdateDeviceLabelsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateDeviceLabelsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateDeviceLabelsResponse* internal_default_instance() {
    return reinterpret_cast<const UpdateDeviceLabelsResponse*>(
        &_UpdateDeviceLabelsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 28;
  friend void swap(UpdateDeviceLabelsResponse& a, UpdateDeviceLabelsResponse& b) { a.Swap(&b); }
  inline void Swap(UpdateDeviceLabelsResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateDeviceLabelsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateDeviceLabelsResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<UpdateDeviceLabelsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateDeviceLabelsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateDeviceLabelsResponse& from) { UpdateDeviceLabelsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(UpdateDeviceLabelsResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.device.v202504beta2.UpdateDeviceLabelsResponse"; }

 protected:
  explicit UpdateDeviceLabelsResponse(::google::protobuf::Arena* arena);
  UpdateDeviceLabelsResponse(::google::protobuf::Arena* arena, const UpdateDeviceLabelsResponse& from);
  UpdateDeviceLabelsResponse(::google::protobuf::Arena* arena, UpdateDeviceLabelsResponse&& from) noexcept
      : UpdateDeviceLabelsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDeviceFieldNumber = 1,
  };
  // .kentik.device.v202504beta2.DeviceDetailed device = 1 [json_name = "device", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_device() const;
  void clear_device() ;
  const ::kentik::device::v202504beta2::DeviceDetailed& device() const;
  PROTOBUF_NODISCARD ::kentik::device::v202504beta2::DeviceDetailed* release_device();
  ::kentik::device::v202504beta2::DeviceDetailed* mutable_device();
  void set_allocated_device(::kentik::device::v202504beta2::DeviceDetailed* value);
  void unsafe_arena_set_allocated_device(::kentik::device::v202504beta2::DeviceDetailed* value);
  ::kentik::device::v202504beta2::DeviceDetailed* unsafe_arena_release_device();

  private:
  const ::kentik::device::v202504beta2::DeviceDetailed& _internal_device() const;
  ::kentik::device::v202504beta2::DeviceDetailed* _internal_mutable_device();

  public:
  // @@protoc_insertion_point(class_scope:kentik.device.v202504beta2.UpdateDeviceLabelsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdateDeviceLabelsResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::kentik::device::v202504beta2::DeviceDetailed* device_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fdevice_2fv202504beta2_2fdevice_2eproto;
};
// -------------------------------------------------------------------

class ListDevicesResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.device.v202504beta2.ListDevicesResponse) */ {
 public:
  inline ListDevicesResponse() : ListDevicesResponse(nullptr) {}
  ~ListDevicesResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ListDevicesResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ListDevicesResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListDevicesResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListDevicesResponse(const ListDevicesResponse& from) : ListDevicesResponse(nullptr, from) {}
  inline ListDevicesResponse(ListDevicesResponse&& from) noexcept
      : ListDevicesResponse(nullptr, std::move(from)) {}
  inline ListDevicesResponse& operator=(const ListDevicesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListDevicesResponse& operator=(ListDevicesResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListDevicesResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListDevicesResponse* internal_default_instance() {
    return reinterpret_cast<const ListDevicesResponse*>(
        &_ListDevicesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 16;
  friend void swap(ListDevicesResponse& a, ListDevicesResponse& b) { a.Swap(&b); }
  inline void Swap(ListDevicesResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListDevicesResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListDevicesResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ListDevicesResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListDevicesResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListDevicesResponse& from) { ListDevicesResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ListDevicesResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.device.v202504beta2.ListDevicesResponse"; }

 protected:
  explicit ListDevicesResponse(::google::protobuf::Arena* arena);
  ListDevicesResponse(::google::protobuf::Arena* arena, const ListDevicesResponse& from);
  ListDevicesResponse(::google::protobuf::Arena* arena, ListDevicesResponse&& from) noexcept
      : ListDevicesResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDevicesFieldNumber = 1,
    kInvalidCountFieldNumber = 2,
  };
  // repeated .kentik.device.v202504beta2.DeviceDetailed devices = 1 [json_name = "devices", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int devices_size() const;
  private:
  int _internal_devices_size() const;

  public:
  void clear_devices() ;
  ::kentik::device::v202504beta2::DeviceDetailed* mutable_devices(int index);
  ::google::protobuf::RepeatedPtrField<::kentik::device::v202504beta2::DeviceDetailed>* mutable_devices();

  private:
  const ::google::protobuf::RepeatedPtrField<::kentik::device::v202504beta2::DeviceDetailed>& _internal_devices() const;
  ::google::protobuf::RepeatedPtrField<::kentik::device::v202504beta2::DeviceDetailed>* _internal_mutable_devices();
  public:
  const ::kentik::device::v202504beta2::DeviceDetailed& devices(int index) const;
  ::kentik::device::v202504beta2::DeviceDetailed* add_devices();
  const ::google::protobuf::RepeatedPtrField<::kentik::device::v202504beta2::DeviceDetailed>& devices() const;
  // uint32 invalid_count = 2 [json_name = "invalidCount", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_invalid_count() ;
  ::uint32_t invalid_count() const;
  void set_invalid_count(::uint32_t value);

  private:
  ::uint32_t _internal_invalid_count() const;
  void _internal_set_invalid_count(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.device.v202504beta2.ListDevicesResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListDevicesResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::kentik::device::v202504beta2::DeviceDetailed > devices_;
    ::uint32_t invalid_count_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fdevice_2fv202504beta2_2fdevice_2eproto;
};
// -------------------------------------------------------------------

class GetDeviceResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.device.v202504beta2.GetDeviceResponse) */ {
 public:
  inline GetDeviceResponse() : GetDeviceResponse(nullptr) {}
  ~GetDeviceResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetDeviceResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetDeviceResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetDeviceResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetDeviceResponse(const GetDeviceResponse& from) : GetDeviceResponse(nullptr, from) {}
  inline GetDeviceResponse(GetDeviceResponse&& from) noexcept
      : GetDeviceResponse(nullptr, std::move(from)) {}
  inline GetDeviceResponse& operator=(const GetDeviceResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetDeviceResponse& operator=(GetDeviceResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetDeviceResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetDeviceResponse* internal_default_instance() {
    return reinterpret_cast<const GetDeviceResponse*>(
        &_GetDeviceResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 18;
  friend void swap(GetDeviceResponse& a, GetDeviceResponse& b) { a.Swap(&b); }
  inline void Swap(GetDeviceResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetDeviceResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetDeviceResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetDeviceResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetDeviceResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetDeviceResponse& from) { GetDeviceResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetDeviceResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.device.v202504beta2.GetDeviceResponse"; }

 protected:
  explicit GetDeviceResponse(::google::protobuf::Arena* arena);
  GetDeviceResponse(::google::protobuf::Arena* arena, const GetDeviceResponse& from);
  GetDeviceResponse(::google::protobuf::Arena* arena, GetDeviceResponse&& from) noexcept
      : GetDeviceResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDeviceFieldNumber = 1,
  };
  // .kentik.device.v202504beta2.DeviceDetailed device = 1 [json_name = "device", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_device() const;
  void clear_device() ;
  const ::kentik::device::v202504beta2::DeviceDetailed& device() const;
  PROTOBUF_NODISCARD ::kentik::device::v202504beta2::DeviceDetailed* release_device();
  ::kentik::device::v202504beta2::DeviceDetailed* mutable_device();
  void set_allocated_device(::kentik::device::v202504beta2::DeviceDetailed* value);
  void unsafe_arena_set_allocated_device(::kentik::device::v202504beta2::DeviceDetailed* value);
  ::kentik::device::v202504beta2::DeviceDetailed* unsafe_arena_release_device();

  private:
  const ::kentik::device::v202504beta2::DeviceDetailed& _internal_device() const;
  ::kentik::device::v202504beta2::DeviceDetailed* _internal_mutable_device();

  public:
  // @@protoc_insertion_point(class_scope:kentik.device.v202504beta2.GetDeviceResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetDeviceResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::kentik::device::v202504beta2::DeviceDetailed* device_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fdevice_2fv202504beta2_2fdevice_2eproto;
};
// -------------------------------------------------------------------

class CreateDevicesResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.device.v202504beta2.CreateDevicesResponse) */ {
 public:
  inline CreateDevicesResponse() : CreateDevicesResponse(nullptr) {}
  ~CreateDevicesResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CreateDevicesResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CreateDevicesResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateDevicesResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateDevicesResponse(const CreateDevicesResponse& from) : CreateDevicesResponse(nullptr, from) {}
  inline CreateDevicesResponse(CreateDevicesResponse&& from) noexcept
      : CreateDevicesResponse(nullptr, std::move(from)) {}
  inline CreateDevicesResponse& operator=(const CreateDevicesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateDevicesResponse& operator=(CreateDevicesResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateDevicesResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateDevicesResponse* internal_default_instance() {
    return reinterpret_cast<const CreateDevicesResponse*>(
        &_CreateDevicesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 22;
  friend void swap(CreateDevicesResponse& a, CreateDevicesResponse& b) { a.Swap(&b); }
  inline void Swap(CreateDevicesResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateDevicesResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateDevicesResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CreateDevicesResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateDevicesResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateDevicesResponse& from) { CreateDevicesResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CreateDevicesResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.device.v202504beta2.CreateDevicesResponse"; }

 protected:
  explicit CreateDevicesResponse(::google::protobuf::Arena* arena);
  CreateDevicesResponse(::google::protobuf::Arena* arena, const CreateDevicesResponse& from);
  CreateDevicesResponse(::google::protobuf::Arena* arena, CreateDevicesResponse&& from) noexcept
      : CreateDevicesResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDevicesFieldNumber = 1,
    kFailedDevicesFieldNumber = 2,
  };
  // repeated .kentik.device.v202504beta2.DeviceDetailed devices = 1 [json_name = "devices", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int devices_size() const;
  private:
  int _internal_devices_size() const;

  public:
  void clear_devices() ;
  ::kentik::device::v202504beta2::DeviceDetailed* mutable_devices(int index);
  ::google::protobuf::RepeatedPtrField<::kentik::device::v202504beta2::DeviceDetailed>* mutable_devices();

  private:
  const ::google::protobuf::RepeatedPtrField<::kentik::device::v202504beta2::DeviceDetailed>& _internal_devices() const;
  ::google::protobuf::RepeatedPtrField<::kentik::device::v202504beta2::DeviceDetailed>* _internal_mutable_devices();
  public:
  const ::kentik::device::v202504beta2::DeviceDetailed& devices(int index) const;
  ::kentik::device::v202504beta2::DeviceDetailed* add_devices();
  const ::google::protobuf::RepeatedPtrField<::kentik::device::v202504beta2::DeviceDetailed>& devices() const;
  // repeated string failed_devices = 2 [json_name = "failedDevices", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int failed_devices_size() const;
  private:
  int _internal_failed_devices_size() const;

  public:
  void clear_failed_devices() ;
  const std::string& failed_devices(int index) const;
  std::string* mutable_failed_devices(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_failed_devices(int index, Arg_&& value, Args_... args);
  std::string* add_failed_devices();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_failed_devices(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& failed_devices() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_failed_devices();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_failed_devices() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_failed_devices();

  public:
  // @@protoc_insertion_point(class_scope:kentik.device.v202504beta2.CreateDevicesResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      71, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateDevicesResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::kentik::device::v202504beta2::DeviceDetailed > devices_;
    ::google::protobuf::RepeatedPtrField<std::string> failed_devices_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fdevice_2fv202504beta2_2fdevice_2eproto;
};
// -------------------------------------------------------------------

class CreateDevicesRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.device.v202504beta2.CreateDevicesRequest) */ {
 public:
  inline CreateDevicesRequest() : CreateDevicesRequest(nullptr) {}
  ~CreateDevicesRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CreateDevicesRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CreateDevicesRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateDevicesRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateDevicesRequest(const CreateDevicesRequest& from) : CreateDevicesRequest(nullptr, from) {}
  inline CreateDevicesRequest(CreateDevicesRequest&& from) noexcept
      : CreateDevicesRequest(nullptr, std::move(from)) {}
  inline CreateDevicesRequest& operator=(const CreateDevicesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateDevicesRequest& operator=(CreateDevicesRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateDevicesRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateDevicesRequest* internal_default_instance() {
    return reinterpret_cast<const CreateDevicesRequest*>(
        &_CreateDevicesRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 21;
  friend void swap(CreateDevicesRequest& a, CreateDevicesRequest& b) { a.Swap(&b); }
  inline void Swap(CreateDevicesRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateDevicesRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateDevicesRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CreateDevicesRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateDevicesRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateDevicesRequest& from) { CreateDevicesRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CreateDevicesRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.device.v202504beta2.CreateDevicesRequest"; }

 protected:
  explicit CreateDevicesRequest(::google::protobuf::Arena* arena);
  CreateDevicesRequest(::google::protobuf::Arena* arena, const CreateDevicesRequest& from);
  CreateDevicesRequest(::google::protobuf::Arena* arena, CreateDevicesRequest&& from) noexcept
      : CreateDevicesRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDevicesFieldNumber = 1,
  };
  // repeated .kentik.device.v202504beta2.DeviceConcise devices = 1 [json_name = "devices", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int devices_size() const;
  private:
  int _internal_devices_size() const;

  public:
  void clear_devices() ;
  ::kentik::device::v202504beta2::DeviceConcise* mutable_devices(int index);
  ::google::protobuf::RepeatedPtrField<::kentik::device::v202504beta2::DeviceConcise>* mutable_devices();

  private:
  const ::google::protobuf::RepeatedPtrField<::kentik::device::v202504beta2::DeviceConcise>& _internal_devices() const;
  ::google::protobuf::RepeatedPtrField<::kentik::device::v202504beta2::DeviceConcise>* _internal_mutable_devices();
  public:
  const ::kentik::device::v202504beta2::DeviceConcise& devices(int index) const;
  ::kentik::device::v202504beta2::DeviceConcise* add_devices();
  const ::google::protobuf::RepeatedPtrField<::kentik::device::v202504beta2::DeviceConcise>& devices() const;
  // @@protoc_insertion_point(class_scope:kentik.device.v202504beta2.CreateDevicesRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateDevicesRequest& from_msg);
    ::google::protobuf::RepeatedPtrField< ::kentik::device::v202504beta2::DeviceConcise > devices_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fdevice_2fv202504beta2_2fdevice_2eproto;
};
// -------------------------------------------------------------------

class CreateDeviceResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.device.v202504beta2.CreateDeviceResponse) */ {
 public:
  inline CreateDeviceResponse() : CreateDeviceResponse(nullptr) {}
  ~CreateDeviceResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CreateDeviceResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CreateDeviceResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateDeviceResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateDeviceResponse(const CreateDeviceResponse& from) : CreateDeviceResponse(nullptr, from) {}
  inline CreateDeviceResponse(CreateDeviceResponse&& from) noexcept
      : CreateDeviceResponse(nullptr, std::move(from)) {}
  inline CreateDeviceResponse& operator=(const CreateDeviceResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateDeviceResponse& operator=(CreateDeviceResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateDeviceResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateDeviceResponse* internal_default_instance() {
    return reinterpret_cast<const CreateDeviceResponse*>(
        &_CreateDeviceResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 20;
  friend void swap(CreateDeviceResponse& a, CreateDeviceResponse& b) { a.Swap(&b); }
  inline void Swap(CreateDeviceResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateDeviceResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateDeviceResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CreateDeviceResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateDeviceResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateDeviceResponse& from) { CreateDeviceResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CreateDeviceResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.device.v202504beta2.CreateDeviceResponse"; }

 protected:
  explicit CreateDeviceResponse(::google::protobuf::Arena* arena);
  CreateDeviceResponse(::google::protobuf::Arena* arena, const CreateDeviceResponse& from);
  CreateDeviceResponse(::google::protobuf::Arena* arena, CreateDeviceResponse&& from) noexcept
      : CreateDeviceResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDeviceFieldNumber = 1,
  };
  // .kentik.device.v202504beta2.DeviceDetailed device = 1 [json_name = "device", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_device() const;
  void clear_device() ;
  const ::kentik::device::v202504beta2::DeviceDetailed& device() const;
  PROTOBUF_NODISCARD ::kentik::device::v202504beta2::DeviceDetailed* release_device();
  ::kentik::device::v202504beta2::DeviceDetailed* mutable_device();
  void set_allocated_device(::kentik::device::v202504beta2::DeviceDetailed* value);
  void unsafe_arena_set_allocated_device(::kentik::device::v202504beta2::DeviceDetailed* value);
  ::kentik::device::v202504beta2::DeviceDetailed* unsafe_arena_release_device();

  private:
  const ::kentik::device::v202504beta2::DeviceDetailed& _internal_device() const;
  ::kentik::device::v202504beta2::DeviceDetailed* _internal_mutable_device();

  public:
  // @@protoc_insertion_point(class_scope:kentik.device.v202504beta2.CreateDeviceResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateDeviceResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::kentik::device::v202504beta2::DeviceDetailed* device_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fdevice_2fv202504beta2_2fdevice_2eproto;
};
// -------------------------------------------------------------------

class CreateDeviceRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.device.v202504beta2.CreateDeviceRequest) */ {
 public:
  inline CreateDeviceRequest() : CreateDeviceRequest(nullptr) {}
  ~CreateDeviceRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CreateDeviceRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CreateDeviceRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateDeviceRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateDeviceRequest(const CreateDeviceRequest& from) : CreateDeviceRequest(nullptr, from) {}
  inline CreateDeviceRequest(CreateDeviceRequest&& from) noexcept
      : CreateDeviceRequest(nullptr, std::move(from)) {}
  inline CreateDeviceRequest& operator=(const CreateDeviceRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateDeviceRequest& operator=(CreateDeviceRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateDeviceRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateDeviceRequest* internal_default_instance() {
    return reinterpret_cast<const CreateDeviceRequest*>(
        &_CreateDeviceRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 19;
  friend void swap(CreateDeviceRequest& a, CreateDeviceRequest& b) { a.Swap(&b); }
  inline void Swap(CreateDeviceRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateDeviceRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateDeviceRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CreateDeviceRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateDeviceRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateDeviceRequest& from) { CreateDeviceRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CreateDeviceRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.device.v202504beta2.CreateDeviceRequest"; }

 protected:
  explicit CreateDeviceRequest(::google::protobuf::Arena* arena);
  CreateDeviceRequest(::google::protobuf::Arena* arena, const CreateDeviceRequest& from);
  CreateDeviceRequest(::google::protobuf::Arena* arena, CreateDeviceRequest&& from) noexcept
      : CreateDeviceRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDeviceFieldNumber = 1,
  };
  // .kentik.device.v202504beta2.DeviceConcise device = 1 [json_name = "device", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_device() const;
  void clear_device() ;
  const ::kentik::device::v202504beta2::DeviceConcise& device() const;
  PROTOBUF_NODISCARD ::kentik::device::v202504beta2::DeviceConcise* release_device();
  ::kentik::device::v202504beta2::DeviceConcise* mutable_device();
  void set_allocated_device(::kentik::device::v202504beta2::DeviceConcise* value);
  void unsafe_arena_set_allocated_device(::kentik::device::v202504beta2::DeviceConcise* value);
  ::kentik::device::v202504beta2::DeviceConcise* unsafe_arena_release_device();

  private:
  const ::kentik::device::v202504beta2::DeviceConcise& _internal_device() const;
  ::kentik::device::v202504beta2::DeviceConcise* _internal_mutable_device();

  public:
  // @@protoc_insertion_point(class_scope:kentik.device.v202504beta2.CreateDeviceRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateDeviceRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::kentik::device::v202504beta2::DeviceConcise* device_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fdevice_2fv202504beta2_2fdevice_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// DeviceSnmpV3Conf

// string username = 1 [json_name = "username", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void DeviceSnmpV3Conf::clear_username() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.username_.ClearToEmpty();
}
inline const std::string& DeviceSnmpV3Conf::username() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeviceSnmpV3Conf.username)
  return _internal_username();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeviceSnmpV3Conf::set_username(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.username_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.DeviceSnmpV3Conf.username)
}
inline std::string* DeviceSnmpV3Conf::mutable_username() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_username();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.DeviceSnmpV3Conf.username)
  return _s;
}
inline const std::string& DeviceSnmpV3Conf::_internal_username() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.username_.Get();
}
inline void DeviceSnmpV3Conf::_internal_set_username(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.username_.Set(value, GetArena());
}
inline std::string* DeviceSnmpV3Conf::_internal_mutable_username() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.username_.Mutable( GetArena());
}
inline std::string* DeviceSnmpV3Conf::release_username() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.DeviceSnmpV3Conf.username)
  return _impl_.username_.Release();
}
inline void DeviceSnmpV3Conf::set_allocated_username(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.username_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.username_.IsDefault()) {
    _impl_.username_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.DeviceSnmpV3Conf.username)
}

// string authentication_protocol = 2 [json_name = "authenticationProtocol", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void DeviceSnmpV3Conf::clear_authentication_protocol() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.authentication_protocol_.ClearToEmpty();
}
inline const std::string& DeviceSnmpV3Conf::authentication_protocol() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeviceSnmpV3Conf.authentication_protocol)
  return _internal_authentication_protocol();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeviceSnmpV3Conf::set_authentication_protocol(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.authentication_protocol_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.DeviceSnmpV3Conf.authentication_protocol)
}
inline std::string* DeviceSnmpV3Conf::mutable_authentication_protocol() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_authentication_protocol();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.DeviceSnmpV3Conf.authentication_protocol)
  return _s;
}
inline const std::string& DeviceSnmpV3Conf::_internal_authentication_protocol() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.authentication_protocol_.Get();
}
inline void DeviceSnmpV3Conf::_internal_set_authentication_protocol(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.authentication_protocol_.Set(value, GetArena());
}
inline std::string* DeviceSnmpV3Conf::_internal_mutable_authentication_protocol() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.authentication_protocol_.Mutable( GetArena());
}
inline std::string* DeviceSnmpV3Conf::release_authentication_protocol() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.DeviceSnmpV3Conf.authentication_protocol)
  return _impl_.authentication_protocol_.Release();
}
inline void DeviceSnmpV3Conf::set_allocated_authentication_protocol(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.authentication_protocol_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.authentication_protocol_.IsDefault()) {
    _impl_.authentication_protocol_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.DeviceSnmpV3Conf.authentication_protocol)
}

// string authentication_passphrase = 3 [json_name = "authenticationPassphrase", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void DeviceSnmpV3Conf::clear_authentication_passphrase() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.authentication_passphrase_.ClearToEmpty();
}
inline const std::string& DeviceSnmpV3Conf::authentication_passphrase() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeviceSnmpV3Conf.authentication_passphrase)
  return _internal_authentication_passphrase();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeviceSnmpV3Conf::set_authentication_passphrase(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.authentication_passphrase_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.DeviceSnmpV3Conf.authentication_passphrase)
}
inline std::string* DeviceSnmpV3Conf::mutable_authentication_passphrase() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_authentication_passphrase();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.DeviceSnmpV3Conf.authentication_passphrase)
  return _s;
}
inline const std::string& DeviceSnmpV3Conf::_internal_authentication_passphrase() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.authentication_passphrase_.Get();
}
inline void DeviceSnmpV3Conf::_internal_set_authentication_passphrase(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.authentication_passphrase_.Set(value, GetArena());
}
inline std::string* DeviceSnmpV3Conf::_internal_mutable_authentication_passphrase() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.authentication_passphrase_.Mutable( GetArena());
}
inline std::string* DeviceSnmpV3Conf::release_authentication_passphrase() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.DeviceSnmpV3Conf.authentication_passphrase)
  return _impl_.authentication_passphrase_.Release();
}
inline void DeviceSnmpV3Conf::set_allocated_authentication_passphrase(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.authentication_passphrase_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.authentication_passphrase_.IsDefault()) {
    _impl_.authentication_passphrase_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.DeviceSnmpV3Conf.authentication_passphrase)
}

// string privacy_protocol = 4 [json_name = "privacyProtocol", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void DeviceSnmpV3Conf::clear_privacy_protocol() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.privacy_protocol_.ClearToEmpty();
}
inline const std::string& DeviceSnmpV3Conf::privacy_protocol() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeviceSnmpV3Conf.privacy_protocol)
  return _internal_privacy_protocol();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeviceSnmpV3Conf::set_privacy_protocol(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.privacy_protocol_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.DeviceSnmpV3Conf.privacy_protocol)
}
inline std::string* DeviceSnmpV3Conf::mutable_privacy_protocol() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_privacy_protocol();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.DeviceSnmpV3Conf.privacy_protocol)
  return _s;
}
inline const std::string& DeviceSnmpV3Conf::_internal_privacy_protocol() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.privacy_protocol_.Get();
}
inline void DeviceSnmpV3Conf::_internal_set_privacy_protocol(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.privacy_protocol_.Set(value, GetArena());
}
inline std::string* DeviceSnmpV3Conf::_internal_mutable_privacy_protocol() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.privacy_protocol_.Mutable( GetArena());
}
inline std::string* DeviceSnmpV3Conf::release_privacy_protocol() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.DeviceSnmpV3Conf.privacy_protocol)
  return _impl_.privacy_protocol_.Release();
}
inline void DeviceSnmpV3Conf::set_allocated_privacy_protocol(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.privacy_protocol_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.privacy_protocol_.IsDefault()) {
    _impl_.privacy_protocol_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.DeviceSnmpV3Conf.privacy_protocol)
}

// string privacy_passphrase = 5 [json_name = "privacyPassphrase", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void DeviceSnmpV3Conf::clear_privacy_passphrase() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.privacy_passphrase_.ClearToEmpty();
}
inline const std::string& DeviceSnmpV3Conf::privacy_passphrase() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeviceSnmpV3Conf.privacy_passphrase)
  return _internal_privacy_passphrase();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeviceSnmpV3Conf::set_privacy_passphrase(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.privacy_passphrase_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.DeviceSnmpV3Conf.privacy_passphrase)
}
inline std::string* DeviceSnmpV3Conf::mutable_privacy_passphrase() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_privacy_passphrase();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.DeviceSnmpV3Conf.privacy_passphrase)
  return _s;
}
inline const std::string& DeviceSnmpV3Conf::_internal_privacy_passphrase() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.privacy_passphrase_.Get();
}
inline void DeviceSnmpV3Conf::_internal_set_privacy_passphrase(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.privacy_passphrase_.Set(value, GetArena());
}
inline std::string* DeviceSnmpV3Conf::_internal_mutable_privacy_passphrase() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.privacy_passphrase_.Mutable( GetArena());
}
inline std::string* DeviceSnmpV3Conf::release_privacy_passphrase() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.DeviceSnmpV3Conf.privacy_passphrase)
  return _impl_.privacy_passphrase_.Release();
}
inline void DeviceSnmpV3Conf::set_allocated_privacy_passphrase(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.privacy_passphrase_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.privacy_passphrase_.IsDefault()) {
    _impl_.privacy_passphrase_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.DeviceSnmpV3Conf.privacy_passphrase)
}

// -------------------------------------------------------------------

// DeviceNmsConfig

// string agent_id = 2 [json_name = "agentId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void DeviceNmsConfig::clear_agent_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.agent_id_.ClearToEmpty();
}
inline const std::string& DeviceNmsConfig::agent_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeviceNmsConfig.agent_id)
  return _internal_agent_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeviceNmsConfig::set_agent_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.agent_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.DeviceNmsConfig.agent_id)
}
inline std::string* DeviceNmsConfig::mutable_agent_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_agent_id();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.DeviceNmsConfig.agent_id)
  return _s;
}
inline const std::string& DeviceNmsConfig::_internal_agent_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.agent_id_.Get();
}
inline void DeviceNmsConfig::_internal_set_agent_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.agent_id_.Set(value, GetArena());
}
inline std::string* DeviceNmsConfig::_internal_mutable_agent_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.agent_id_.Mutable( GetArena());
}
inline std::string* DeviceNmsConfig::release_agent_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.DeviceNmsConfig.agent_id)
  return _impl_.agent_id_.Release();
}
inline void DeviceNmsConfig::set_allocated_agent_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.agent_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.agent_id_.IsDefault()) {
    _impl_.agent_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.DeviceNmsConfig.agent_id)
}

// string ip_address = 3 [json_name = "ipAddress", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void DeviceNmsConfig::clear_ip_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ip_address_.ClearToEmpty();
}
inline const std::string& DeviceNmsConfig::ip_address() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeviceNmsConfig.ip_address)
  return _internal_ip_address();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeviceNmsConfig::set_ip_address(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ip_address_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.DeviceNmsConfig.ip_address)
}
inline std::string* DeviceNmsConfig::mutable_ip_address() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_ip_address();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.DeviceNmsConfig.ip_address)
  return _s;
}
inline const std::string& DeviceNmsConfig::_internal_ip_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ip_address_.Get();
}
inline void DeviceNmsConfig::_internal_set_ip_address(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ip_address_.Set(value, GetArena());
}
inline std::string* DeviceNmsConfig::_internal_mutable_ip_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.ip_address_.Mutable( GetArena());
}
inline std::string* DeviceNmsConfig::release_ip_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.DeviceNmsConfig.ip_address)
  return _impl_.ip_address_.Release();
}
inline void DeviceNmsConfig::set_allocated_ip_address(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ip_address_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.ip_address_.IsDefault()) {
    _impl_.ip_address_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.DeviceNmsConfig.ip_address)
}

// .kentik.device.v202504beta2.DeviceNmsSnmpConfig snmp = 4 [json_name = "snmp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool DeviceNmsConfig::has_snmp() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.snmp_ != nullptr);
  return value;
}
inline void DeviceNmsConfig::clear_snmp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.snmp_ != nullptr) _impl_.snmp_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::kentik::device::v202504beta2::DeviceNmsSnmpConfig& DeviceNmsConfig::_internal_snmp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::device::v202504beta2::DeviceNmsSnmpConfig* p = _impl_.snmp_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::device::v202504beta2::DeviceNmsSnmpConfig&>(::kentik::device::v202504beta2::_DeviceNmsSnmpConfig_default_instance_);
}
inline const ::kentik::device::v202504beta2::DeviceNmsSnmpConfig& DeviceNmsConfig::snmp() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeviceNmsConfig.snmp)
  return _internal_snmp();
}
inline void DeviceNmsConfig::unsafe_arena_set_allocated_snmp(::kentik::device::v202504beta2::DeviceNmsSnmpConfig* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.snmp_);
  }
  _impl_.snmp_ = reinterpret_cast<::kentik::device::v202504beta2::DeviceNmsSnmpConfig*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.device.v202504beta2.DeviceNmsConfig.snmp)
}
inline ::kentik::device::v202504beta2::DeviceNmsSnmpConfig* DeviceNmsConfig::release_snmp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::device::v202504beta2::DeviceNmsSnmpConfig* released = _impl_.snmp_;
  _impl_.snmp_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::device::v202504beta2::DeviceNmsSnmpConfig* DeviceNmsConfig::unsafe_arena_release_snmp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.DeviceNmsConfig.snmp)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::device::v202504beta2::DeviceNmsSnmpConfig* temp = _impl_.snmp_;
  _impl_.snmp_ = nullptr;
  return temp;
}
inline ::kentik::device::v202504beta2::DeviceNmsSnmpConfig* DeviceNmsConfig::_internal_mutable_snmp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.snmp_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::device::v202504beta2::DeviceNmsSnmpConfig>(GetArena());
    _impl_.snmp_ = reinterpret_cast<::kentik::device::v202504beta2::DeviceNmsSnmpConfig*>(p);
  }
  return _impl_.snmp_;
}
inline ::kentik::device::v202504beta2::DeviceNmsSnmpConfig* DeviceNmsConfig::mutable_snmp() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::kentik::device::v202504beta2::DeviceNmsSnmpConfig* _msg = _internal_mutable_snmp();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.DeviceNmsConfig.snmp)
  return _msg;
}
inline void DeviceNmsConfig::set_allocated_snmp(::kentik::device::v202504beta2::DeviceNmsSnmpConfig* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.snmp_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.snmp_ = reinterpret_cast<::kentik::device::v202504beta2::DeviceNmsSnmpConfig*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.DeviceNmsConfig.snmp)
}

// .kentik.device.v202504beta2.DeviceNmsStConfig st = 5 [json_name = "st", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool DeviceNmsConfig::has_st() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.st_ != nullptr);
  return value;
}
inline void DeviceNmsConfig::clear_st() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.st_ != nullptr) _impl_.st_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::kentik::device::v202504beta2::DeviceNmsStConfig& DeviceNmsConfig::_internal_st() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::device::v202504beta2::DeviceNmsStConfig* p = _impl_.st_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::device::v202504beta2::DeviceNmsStConfig&>(::kentik::device::v202504beta2::_DeviceNmsStConfig_default_instance_);
}
inline const ::kentik::device::v202504beta2::DeviceNmsStConfig& DeviceNmsConfig::st() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeviceNmsConfig.st)
  return _internal_st();
}
inline void DeviceNmsConfig::unsafe_arena_set_allocated_st(::kentik::device::v202504beta2::DeviceNmsStConfig* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.st_);
  }
  _impl_.st_ = reinterpret_cast<::kentik::device::v202504beta2::DeviceNmsStConfig*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.device.v202504beta2.DeviceNmsConfig.st)
}
inline ::kentik::device::v202504beta2::DeviceNmsStConfig* DeviceNmsConfig::release_st() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::kentik::device::v202504beta2::DeviceNmsStConfig* released = _impl_.st_;
  _impl_.st_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::device::v202504beta2::DeviceNmsStConfig* DeviceNmsConfig::unsafe_arena_release_st() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.DeviceNmsConfig.st)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::kentik::device::v202504beta2::DeviceNmsStConfig* temp = _impl_.st_;
  _impl_.st_ = nullptr;
  return temp;
}
inline ::kentik::device::v202504beta2::DeviceNmsStConfig* DeviceNmsConfig::_internal_mutable_st() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.st_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::device::v202504beta2::DeviceNmsStConfig>(GetArena());
    _impl_.st_ = reinterpret_cast<::kentik::device::v202504beta2::DeviceNmsStConfig*>(p);
  }
  return _impl_.st_;
}
inline ::kentik::device::v202504beta2::DeviceNmsStConfig* DeviceNmsConfig::mutable_st() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::kentik::device::v202504beta2::DeviceNmsStConfig* _msg = _internal_mutable_st();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.DeviceNmsConfig.st)
  return _msg;
}
inline void DeviceNmsConfig::set_allocated_st(::kentik::device::v202504beta2::DeviceNmsStConfig* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.st_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.st_ = reinterpret_cast<::kentik::device::v202504beta2::DeviceNmsStConfig*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.DeviceNmsConfig.st)
}

// -------------------------------------------------------------------

// DeviceNmsSnmpConfig

// string credential_name = 1 [json_name = "credentialName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void DeviceNmsSnmpConfig::clear_credential_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.credential_name_.ClearToEmpty();
}
inline const std::string& DeviceNmsSnmpConfig::credential_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeviceNmsSnmpConfig.credential_name)
  return _internal_credential_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeviceNmsSnmpConfig::set_credential_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.credential_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.DeviceNmsSnmpConfig.credential_name)
}
inline std::string* DeviceNmsSnmpConfig::mutable_credential_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_credential_name();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.DeviceNmsSnmpConfig.credential_name)
  return _s;
}
inline const std::string& DeviceNmsSnmpConfig::_internal_credential_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.credential_name_.Get();
}
inline void DeviceNmsSnmpConfig::_internal_set_credential_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.credential_name_.Set(value, GetArena());
}
inline std::string* DeviceNmsSnmpConfig::_internal_mutable_credential_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.credential_name_.Mutable( GetArena());
}
inline std::string* DeviceNmsSnmpConfig::release_credential_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.DeviceNmsSnmpConfig.credential_name)
  return _impl_.credential_name_.Release();
}
inline void DeviceNmsSnmpConfig::set_allocated_credential_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.credential_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.credential_name_.IsDefault()) {
    _impl_.credential_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.DeviceNmsSnmpConfig.credential_name)
}

// uint32 port = 2 [json_name = "port", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void DeviceNmsSnmpConfig::clear_port() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.port_ = 0u;
}
inline ::uint32_t DeviceNmsSnmpConfig::port() const {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeviceNmsSnmpConfig.port)
  return _internal_port();
}
inline void DeviceNmsSnmpConfig::set_port(::uint32_t value) {
  _internal_set_port(value);
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.DeviceNmsSnmpConfig.port)
}
inline ::uint32_t DeviceNmsSnmpConfig::_internal_port() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.port_;
}
inline void DeviceNmsSnmpConfig::_internal_set_port(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.port_ = value;
}

// .google.protobuf.Duration timeout = 3 [json_name = "timeout", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool DeviceNmsSnmpConfig::has_timeout() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.timeout_ != nullptr);
  return value;
}
inline const ::google::protobuf::Duration& DeviceNmsSnmpConfig::_internal_timeout() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Duration* p = _impl_.timeout_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Duration&>(::google::protobuf::_Duration_default_instance_);
}
inline const ::google::protobuf::Duration& DeviceNmsSnmpConfig::timeout() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeviceNmsSnmpConfig.timeout)
  return _internal_timeout();
}
inline void DeviceNmsSnmpConfig::unsafe_arena_set_allocated_timeout(::google::protobuf::Duration* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.timeout_);
  }
  _impl_.timeout_ = reinterpret_cast<::google::protobuf::Duration*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.device.v202504beta2.DeviceNmsSnmpConfig.timeout)
}
inline ::google::protobuf::Duration* DeviceNmsSnmpConfig::release_timeout() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Duration* released = _impl_.timeout_;
  _impl_.timeout_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Duration* DeviceNmsSnmpConfig::unsafe_arena_release_timeout() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.DeviceNmsSnmpConfig.timeout)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Duration* temp = _impl_.timeout_;
  _impl_.timeout_ = nullptr;
  return temp;
}
inline ::google::protobuf::Duration* DeviceNmsSnmpConfig::_internal_mutable_timeout() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.timeout_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Duration>(GetArena());
    _impl_.timeout_ = reinterpret_cast<::google::protobuf::Duration*>(p);
  }
  return _impl_.timeout_;
}
inline ::google::protobuf::Duration* DeviceNmsSnmpConfig::mutable_timeout() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::google::protobuf::Duration* _msg = _internal_mutable_timeout();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.DeviceNmsSnmpConfig.timeout)
  return _msg;
}
inline void DeviceNmsSnmpConfig::set_allocated_timeout(::google::protobuf::Duration* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.timeout_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.timeout_ = reinterpret_cast<::google::protobuf::Duration*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.DeviceNmsSnmpConfig.timeout)
}

// -------------------------------------------------------------------

// DeviceNmsStConfig

// string credential_name = 1 [json_name = "credentialName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void DeviceNmsStConfig::clear_credential_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.credential_name_.ClearToEmpty();
}
inline const std::string& DeviceNmsStConfig::credential_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeviceNmsStConfig.credential_name)
  return _internal_credential_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeviceNmsStConfig::set_credential_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.credential_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.DeviceNmsStConfig.credential_name)
}
inline std::string* DeviceNmsStConfig::mutable_credential_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_credential_name();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.DeviceNmsStConfig.credential_name)
  return _s;
}
inline const std::string& DeviceNmsStConfig::_internal_credential_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.credential_name_.Get();
}
inline void DeviceNmsStConfig::_internal_set_credential_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.credential_name_.Set(value, GetArena());
}
inline std::string* DeviceNmsStConfig::_internal_mutable_credential_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.credential_name_.Mutable( GetArena());
}
inline std::string* DeviceNmsStConfig::release_credential_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.DeviceNmsStConfig.credential_name)
  return _impl_.credential_name_.Release();
}
inline void DeviceNmsStConfig::set_allocated_credential_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.credential_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.credential_name_.IsDefault()) {
    _impl_.credential_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.DeviceNmsStConfig.credential_name)
}

// uint32 port = 2 [json_name = "port", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void DeviceNmsStConfig::clear_port() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.port_ = 0u;
}
inline ::uint32_t DeviceNmsStConfig::port() const {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeviceNmsStConfig.port)
  return _internal_port();
}
inline void DeviceNmsStConfig::set_port(::uint32_t value) {
  _internal_set_port(value);
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.DeviceNmsStConfig.port)
}
inline ::uint32_t DeviceNmsStConfig::_internal_port() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.port_;
}
inline void DeviceNmsStConfig::_internal_set_port(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.port_ = value;
}

// .google.protobuf.Duration timeout = 3 [json_name = "timeout", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool DeviceNmsStConfig::has_timeout() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.timeout_ != nullptr);
  return value;
}
inline const ::google::protobuf::Duration& DeviceNmsStConfig::_internal_timeout() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Duration* p = _impl_.timeout_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Duration&>(::google::protobuf::_Duration_default_instance_);
}
inline const ::google::protobuf::Duration& DeviceNmsStConfig::timeout() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeviceNmsStConfig.timeout)
  return _internal_timeout();
}
inline void DeviceNmsStConfig::unsafe_arena_set_allocated_timeout(::google::protobuf::Duration* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.timeout_);
  }
  _impl_.timeout_ = reinterpret_cast<::google::protobuf::Duration*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.device.v202504beta2.DeviceNmsStConfig.timeout)
}
inline ::google::protobuf::Duration* DeviceNmsStConfig::release_timeout() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Duration* released = _impl_.timeout_;
  _impl_.timeout_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Duration* DeviceNmsStConfig::unsafe_arena_release_timeout() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.DeviceNmsStConfig.timeout)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Duration* temp = _impl_.timeout_;
  _impl_.timeout_ = nullptr;
  return temp;
}
inline ::google::protobuf::Duration* DeviceNmsStConfig::_internal_mutable_timeout() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.timeout_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Duration>(GetArena());
    _impl_.timeout_ = reinterpret_cast<::google::protobuf::Duration*>(p);
  }
  return _impl_.timeout_;
}
inline ::google::protobuf::Duration* DeviceNmsStConfig::mutable_timeout() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::google::protobuf::Duration* _msg = _internal_mutable_timeout();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.DeviceNmsStConfig.timeout)
  return _msg;
}
inline void DeviceNmsStConfig::set_allocated_timeout(::google::protobuf::Duration* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.timeout_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.timeout_ = reinterpret_cast<::google::protobuf::Duration*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.DeviceNmsStConfig.timeout)
}

// bool secure = 4 [json_name = "secure", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void DeviceNmsStConfig::clear_secure() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.secure_ = false;
}
inline bool DeviceNmsStConfig::secure() const {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeviceNmsStConfig.secure)
  return _internal_secure();
}
inline void DeviceNmsStConfig::set_secure(bool value) {
  _internal_set_secure(value);
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.DeviceNmsStConfig.secure)
}
inline bool DeviceNmsStConfig::_internal_secure() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.secure_;
}
inline void DeviceNmsStConfig::_internal_set_secure(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.secure_ = value;
}

// -------------------------------------------------------------------

// DeviceConcise

// string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void DeviceConcise::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& DeviceConcise::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeviceConcise.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeviceConcise::set_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.DeviceConcise.id)
}
inline std::string* DeviceConcise::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.DeviceConcise.id)
  return _s;
}
inline const std::string& DeviceConcise::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void DeviceConcise::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(value, GetArena());
}
inline std::string* DeviceConcise::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* DeviceConcise::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.DeviceConcise.id)
  return _impl_.id_.Release();
}
inline void DeviceConcise::set_allocated_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.id_.IsDefault()) {
    _impl_.id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.DeviceConcise.id)
}

// string device_name = 2 [json_name = "deviceName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void DeviceConcise::clear_device_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_name_.ClearToEmpty();
}
inline const std::string& DeviceConcise::device_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeviceConcise.device_name)
  return _internal_device_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeviceConcise::set_device_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.DeviceConcise.device_name)
}
inline std::string* DeviceConcise::mutable_device_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_device_name();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.DeviceConcise.device_name)
  return _s;
}
inline const std::string& DeviceConcise::_internal_device_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.device_name_.Get();
}
inline void DeviceConcise::_internal_set_device_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_name_.Set(value, GetArena());
}
inline std::string* DeviceConcise::_internal_mutable_device_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.device_name_.Mutable( GetArena());
}
inline std::string* DeviceConcise::release_device_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.DeviceConcise.device_name)
  return _impl_.device_name_.Release();
}
inline void DeviceConcise::set_allocated_device_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.device_name_.IsDefault()) {
    _impl_.device_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.DeviceConcise.device_name)
}

// string device_subtype = 3 [json_name = "deviceSubtype", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void DeviceConcise::clear_device_subtype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_subtype_.ClearToEmpty();
}
inline const std::string& DeviceConcise::device_subtype() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeviceConcise.device_subtype)
  return _internal_device_subtype();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeviceConcise::set_device_subtype(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_subtype_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.DeviceConcise.device_subtype)
}
inline std::string* DeviceConcise::mutable_device_subtype() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_device_subtype();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.DeviceConcise.device_subtype)
  return _s;
}
inline const std::string& DeviceConcise::_internal_device_subtype() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.device_subtype_.Get();
}
inline void DeviceConcise::_internal_set_device_subtype(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_subtype_.Set(value, GetArena());
}
inline std::string* DeviceConcise::_internal_mutable_device_subtype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.device_subtype_.Mutable( GetArena());
}
inline std::string* DeviceConcise::release_device_subtype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.DeviceConcise.device_subtype)
  return _impl_.device_subtype_.Release();
}
inline void DeviceConcise::set_allocated_device_subtype(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_subtype_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.device_subtype_.IsDefault()) {
    _impl_.device_subtype_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.DeviceConcise.device_subtype)
}

// string cdn_attr = 4 [json_name = "cdnAttr", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void DeviceConcise::clear_cdn_attr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cdn_attr_.ClearToEmpty();
}
inline const std::string& DeviceConcise::cdn_attr() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeviceConcise.cdn_attr)
  return _internal_cdn_attr();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeviceConcise::set_cdn_attr(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cdn_attr_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.DeviceConcise.cdn_attr)
}
inline std::string* DeviceConcise::mutable_cdn_attr() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_cdn_attr();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.DeviceConcise.cdn_attr)
  return _s;
}
inline const std::string& DeviceConcise::_internal_cdn_attr() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.cdn_attr_.Get();
}
inline void DeviceConcise::_internal_set_cdn_attr(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cdn_attr_.Set(value, GetArena());
}
inline std::string* DeviceConcise::_internal_mutable_cdn_attr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.cdn_attr_.Mutable( GetArena());
}
inline std::string* DeviceConcise::release_cdn_attr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.DeviceConcise.cdn_attr)
  return _impl_.cdn_attr_.Release();
}
inline void DeviceConcise::set_allocated_cdn_attr(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cdn_attr_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.cdn_attr_.IsDefault()) {
    _impl_.cdn_attr_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.DeviceConcise.cdn_attr)
}

// string device_description = 5 [json_name = "deviceDescription", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void DeviceConcise::clear_device_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_description_.ClearToEmpty();
}
inline const std::string& DeviceConcise::device_description() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeviceConcise.device_description)
  return _internal_device_description();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeviceConcise::set_device_description(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_description_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.DeviceConcise.device_description)
}
inline std::string* DeviceConcise::mutable_device_description() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_device_description();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.DeviceConcise.device_description)
  return _s;
}
inline const std::string& DeviceConcise::_internal_device_description() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.device_description_.Get();
}
inline void DeviceConcise::_internal_set_device_description(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_description_.Set(value, GetArena());
}
inline std::string* DeviceConcise::_internal_mutable_device_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.device_description_.Mutable( GetArena());
}
inline std::string* DeviceConcise::release_device_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.DeviceConcise.device_description)
  return _impl_.device_description_.Release();
}
inline void DeviceConcise::set_allocated_device_description(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_description_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.device_description_.IsDefault()) {
    _impl_.device_description_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.DeviceConcise.device_description)
}

// repeated string sending_ips = 6 [json_name = "sendingIps", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int DeviceConcise::_internal_sending_ips_size() const {
  return _internal_sending_ips().size();
}
inline int DeviceConcise::sending_ips_size() const {
  return _internal_sending_ips_size();
}
inline void DeviceConcise::clear_sending_ips() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sending_ips_.Clear();
}
inline std::string* DeviceConcise::add_sending_ips() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_sending_ips()->Add();
  // @@protoc_insertion_point(field_add_mutable:kentik.device.v202504beta2.DeviceConcise.sending_ips)
  return _s;
}
inline const std::string& DeviceConcise::sending_ips(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeviceConcise.sending_ips)
  return _internal_sending_ips().Get(index);
}
inline std::string* DeviceConcise::mutable_sending_ips(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.DeviceConcise.sending_ips)
  return _internal_mutable_sending_ips()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void DeviceConcise::set_sending_ips(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_sending_ips()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.DeviceConcise.sending_ips)
}
template <typename Arg_, typename... Args_>
inline void DeviceConcise::add_sending_ips(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_sending_ips(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:kentik.device.v202504beta2.DeviceConcise.sending_ips)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
DeviceConcise::sending_ips() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.device.v202504beta2.DeviceConcise.sending_ips)
  return _internal_sending_ips();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
DeviceConcise::mutable_sending_ips() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.device.v202504beta2.DeviceConcise.sending_ips)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_sending_ips();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
DeviceConcise::_internal_sending_ips() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sending_ips_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
DeviceConcise::_internal_mutable_sending_ips() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.sending_ips_;
}

// double device_sample_rate = 7 [json_name = "deviceSampleRate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void DeviceConcise::clear_device_sample_rate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_sample_rate_ = 0;
}
inline double DeviceConcise::device_sample_rate() const {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeviceConcise.device_sample_rate)
  return _internal_device_sample_rate();
}
inline void DeviceConcise::set_device_sample_rate(double value) {
  _internal_set_device_sample_rate(value);
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.DeviceConcise.device_sample_rate)
}
inline double DeviceConcise::_internal_device_sample_rate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.device_sample_rate_;
}
inline void DeviceConcise::_internal_set_device_sample_rate(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_sample_rate_ = value;
}

// uint32 plan_id = 8 [json_name = "planId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void DeviceConcise::clear_plan_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.plan_id_ = 0u;
}
inline ::uint32_t DeviceConcise::plan_id() const {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeviceConcise.plan_id)
  return _internal_plan_id();
}
inline void DeviceConcise::set_plan_id(::uint32_t value) {
  _internal_set_plan_id(value);
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.DeviceConcise.plan_id)
}
inline ::uint32_t DeviceConcise::_internal_plan_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.plan_id_;
}
inline void DeviceConcise::_internal_set_plan_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.plan_id_ = value;
}

// uint32 site_id = 9 [json_name = "siteId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void DeviceConcise::clear_site_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.site_id_ = 0u;
}
inline ::uint32_t DeviceConcise::site_id() const {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeviceConcise.site_id)
  return _internal_site_id();
}
inline void DeviceConcise::set_site_id(::uint32_t value) {
  _internal_set_site_id(value);
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.DeviceConcise.site_id)
}
inline ::uint32_t DeviceConcise::_internal_site_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.site_id_;
}
inline void DeviceConcise::_internal_set_site_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.site_id_ = value;
}

// optional bool minimize_snmp = 10 [json_name = "minimizeSnmp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool DeviceConcise::has_minimize_snmp() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void DeviceConcise::clear_minimize_snmp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.minimize_snmp_ = false;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline bool DeviceConcise::minimize_snmp() const {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeviceConcise.minimize_snmp)
  return _internal_minimize_snmp();
}
inline void DeviceConcise::set_minimize_snmp(bool value) {
  _internal_set_minimize_snmp(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.DeviceConcise.minimize_snmp)
}
inline bool DeviceConcise::_internal_minimize_snmp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.minimize_snmp_;
}
inline void DeviceConcise::_internal_set_minimize_snmp(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.minimize_snmp_ = value;
}

// string device_snmp_ip = 11 [json_name = "deviceSnmpIp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void DeviceConcise::clear_device_snmp_ip() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_snmp_ip_.ClearToEmpty();
}
inline const std::string& DeviceConcise::device_snmp_ip() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeviceConcise.device_snmp_ip)
  return _internal_device_snmp_ip();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeviceConcise::set_device_snmp_ip(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_snmp_ip_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.DeviceConcise.device_snmp_ip)
}
inline std::string* DeviceConcise::mutable_device_snmp_ip() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_device_snmp_ip();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.DeviceConcise.device_snmp_ip)
  return _s;
}
inline const std::string& DeviceConcise::_internal_device_snmp_ip() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.device_snmp_ip_.Get();
}
inline void DeviceConcise::_internal_set_device_snmp_ip(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_snmp_ip_.Set(value, GetArena());
}
inline std::string* DeviceConcise::_internal_mutable_device_snmp_ip() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.device_snmp_ip_.Mutable( GetArena());
}
inline std::string* DeviceConcise::release_device_snmp_ip() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.DeviceConcise.device_snmp_ip)
  return _impl_.device_snmp_ip_.Release();
}
inline void DeviceConcise::set_allocated_device_snmp_ip(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_snmp_ip_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.device_snmp_ip_.IsDefault()) {
    _impl_.device_snmp_ip_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.DeviceConcise.device_snmp_ip)
}

// string device_snmp_community = 12 [json_name = "deviceSnmpCommunity", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void DeviceConcise::clear_device_snmp_community() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_snmp_community_.ClearToEmpty();
}
inline const std::string& DeviceConcise::device_snmp_community() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeviceConcise.device_snmp_community)
  return _internal_device_snmp_community();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeviceConcise::set_device_snmp_community(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_snmp_community_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.DeviceConcise.device_snmp_community)
}
inline std::string* DeviceConcise::mutable_device_snmp_community() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_device_snmp_community();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.DeviceConcise.device_snmp_community)
  return _s;
}
inline const std::string& DeviceConcise::_internal_device_snmp_community() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.device_snmp_community_.Get();
}
inline void DeviceConcise::_internal_set_device_snmp_community(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_snmp_community_.Set(value, GetArena());
}
inline std::string* DeviceConcise::_internal_mutable_device_snmp_community() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.device_snmp_community_.Mutable( GetArena());
}
inline std::string* DeviceConcise::release_device_snmp_community() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.DeviceConcise.device_snmp_community)
  return _impl_.device_snmp_community_.Release();
}
inline void DeviceConcise::set_allocated_device_snmp_community(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_snmp_community_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.device_snmp_community_.IsDefault()) {
    _impl_.device_snmp_community_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.DeviceConcise.device_snmp_community)
}

// .kentik.device.v202504beta2.DeviceSnmpV3Conf device_snmp_v3_conf = 13 [json_name = "deviceSnmpV3Conf", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool DeviceConcise::has_device_snmp_v3_conf() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.device_snmp_v3_conf_ != nullptr);
  return value;
}
inline void DeviceConcise::clear_device_snmp_v3_conf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.device_snmp_v3_conf_ != nullptr) _impl_.device_snmp_v3_conf_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::kentik::device::v202504beta2::DeviceSnmpV3Conf& DeviceConcise::_internal_device_snmp_v3_conf() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::device::v202504beta2::DeviceSnmpV3Conf* p = _impl_.device_snmp_v3_conf_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::device::v202504beta2::DeviceSnmpV3Conf&>(::kentik::device::v202504beta2::_DeviceSnmpV3Conf_default_instance_);
}
inline const ::kentik::device::v202504beta2::DeviceSnmpV3Conf& DeviceConcise::device_snmp_v3_conf() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeviceConcise.device_snmp_v3_conf)
  return _internal_device_snmp_v3_conf();
}
inline void DeviceConcise::unsafe_arena_set_allocated_device_snmp_v3_conf(::kentik::device::v202504beta2::DeviceSnmpV3Conf* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.device_snmp_v3_conf_);
  }
  _impl_.device_snmp_v3_conf_ = reinterpret_cast<::kentik::device::v202504beta2::DeviceSnmpV3Conf*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.device.v202504beta2.DeviceConcise.device_snmp_v3_conf)
}
inline ::kentik::device::v202504beta2::DeviceSnmpV3Conf* DeviceConcise::release_device_snmp_v3_conf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::device::v202504beta2::DeviceSnmpV3Conf* released = _impl_.device_snmp_v3_conf_;
  _impl_.device_snmp_v3_conf_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::device::v202504beta2::DeviceSnmpV3Conf* DeviceConcise::unsafe_arena_release_device_snmp_v3_conf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.DeviceConcise.device_snmp_v3_conf)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::device::v202504beta2::DeviceSnmpV3Conf* temp = _impl_.device_snmp_v3_conf_;
  _impl_.device_snmp_v3_conf_ = nullptr;
  return temp;
}
inline ::kentik::device::v202504beta2::DeviceSnmpV3Conf* DeviceConcise::_internal_mutable_device_snmp_v3_conf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.device_snmp_v3_conf_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::device::v202504beta2::DeviceSnmpV3Conf>(GetArena());
    _impl_.device_snmp_v3_conf_ = reinterpret_cast<::kentik::device::v202504beta2::DeviceSnmpV3Conf*>(p);
  }
  return _impl_.device_snmp_v3_conf_;
}
inline ::kentik::device::v202504beta2::DeviceSnmpV3Conf* DeviceConcise::mutable_device_snmp_v3_conf() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::kentik::device::v202504beta2::DeviceSnmpV3Conf* _msg = _internal_mutable_device_snmp_v3_conf();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.DeviceConcise.device_snmp_v3_conf)
  return _msg;
}
inline void DeviceConcise::set_allocated_device_snmp_v3_conf(::kentik::device::v202504beta2::DeviceSnmpV3Conf* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.device_snmp_v3_conf_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.device_snmp_v3_conf_ = reinterpret_cast<::kentik::device::v202504beta2::DeviceSnmpV3Conf*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.DeviceConcise.device_snmp_v3_conf)
}

// string device_bgp_type = 14 [json_name = "deviceBgpType", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void DeviceConcise::clear_device_bgp_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_bgp_type_.ClearToEmpty();
}
inline const std::string& DeviceConcise::device_bgp_type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeviceConcise.device_bgp_type)
  return _internal_device_bgp_type();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeviceConcise::set_device_bgp_type(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_bgp_type_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.DeviceConcise.device_bgp_type)
}
inline std::string* DeviceConcise::mutable_device_bgp_type() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_device_bgp_type();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.DeviceConcise.device_bgp_type)
  return _s;
}
inline const std::string& DeviceConcise::_internal_device_bgp_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.device_bgp_type_.Get();
}
inline void DeviceConcise::_internal_set_device_bgp_type(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_bgp_type_.Set(value, GetArena());
}
inline std::string* DeviceConcise::_internal_mutable_device_bgp_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.device_bgp_type_.Mutable( GetArena());
}
inline std::string* DeviceConcise::release_device_bgp_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.DeviceConcise.device_bgp_type)
  return _impl_.device_bgp_type_.Release();
}
inline void DeviceConcise::set_allocated_device_bgp_type(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_bgp_type_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.device_bgp_type_.IsDefault()) {
    _impl_.device_bgp_type_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.DeviceConcise.device_bgp_type)
}

// string device_bgp_neighbor_ip = 15 [json_name = "deviceBgpNeighborIp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void DeviceConcise::clear_device_bgp_neighbor_ip() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_bgp_neighbor_ip_.ClearToEmpty();
}
inline const std::string& DeviceConcise::device_bgp_neighbor_ip() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeviceConcise.device_bgp_neighbor_ip)
  return _internal_device_bgp_neighbor_ip();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeviceConcise::set_device_bgp_neighbor_ip(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_bgp_neighbor_ip_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.DeviceConcise.device_bgp_neighbor_ip)
}
inline std::string* DeviceConcise::mutable_device_bgp_neighbor_ip() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_device_bgp_neighbor_ip();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.DeviceConcise.device_bgp_neighbor_ip)
  return _s;
}
inline const std::string& DeviceConcise::_internal_device_bgp_neighbor_ip() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.device_bgp_neighbor_ip_.Get();
}
inline void DeviceConcise::_internal_set_device_bgp_neighbor_ip(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_bgp_neighbor_ip_.Set(value, GetArena());
}
inline std::string* DeviceConcise::_internal_mutable_device_bgp_neighbor_ip() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.device_bgp_neighbor_ip_.Mutable( GetArena());
}
inline std::string* DeviceConcise::release_device_bgp_neighbor_ip() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.DeviceConcise.device_bgp_neighbor_ip)
  return _impl_.device_bgp_neighbor_ip_.Release();
}
inline void DeviceConcise::set_allocated_device_bgp_neighbor_ip(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_bgp_neighbor_ip_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.device_bgp_neighbor_ip_.IsDefault()) {
    _impl_.device_bgp_neighbor_ip_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.DeviceConcise.device_bgp_neighbor_ip)
}

// string device_bgp_neighbor_ip6 = 16 [json_name = "deviceBgpNeighborIp6", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void DeviceConcise::clear_device_bgp_neighbor_ip6() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_bgp_neighbor_ip6_.ClearToEmpty();
}
inline const std::string& DeviceConcise::device_bgp_neighbor_ip6() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeviceConcise.device_bgp_neighbor_ip6)
  return _internal_device_bgp_neighbor_ip6();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeviceConcise::set_device_bgp_neighbor_ip6(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_bgp_neighbor_ip6_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.DeviceConcise.device_bgp_neighbor_ip6)
}
inline std::string* DeviceConcise::mutable_device_bgp_neighbor_ip6() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_device_bgp_neighbor_ip6();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.DeviceConcise.device_bgp_neighbor_ip6)
  return _s;
}
inline const std::string& DeviceConcise::_internal_device_bgp_neighbor_ip6() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.device_bgp_neighbor_ip6_.Get();
}
inline void DeviceConcise::_internal_set_device_bgp_neighbor_ip6(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_bgp_neighbor_ip6_.Set(value, GetArena());
}
inline std::string* DeviceConcise::_internal_mutable_device_bgp_neighbor_ip6() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.device_bgp_neighbor_ip6_.Mutable( GetArena());
}
inline std::string* DeviceConcise::release_device_bgp_neighbor_ip6() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.DeviceConcise.device_bgp_neighbor_ip6)
  return _impl_.device_bgp_neighbor_ip6_.Release();
}
inline void DeviceConcise::set_allocated_device_bgp_neighbor_ip6(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_bgp_neighbor_ip6_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.device_bgp_neighbor_ip6_.IsDefault()) {
    _impl_.device_bgp_neighbor_ip6_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.DeviceConcise.device_bgp_neighbor_ip6)
}

// string device_bgp_neighbor_asn = 17 [json_name = "deviceBgpNeighborAsn", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void DeviceConcise::clear_device_bgp_neighbor_asn() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_bgp_neighbor_asn_.ClearToEmpty();
}
inline const std::string& DeviceConcise::device_bgp_neighbor_asn() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeviceConcise.device_bgp_neighbor_asn)
  return _internal_device_bgp_neighbor_asn();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeviceConcise::set_device_bgp_neighbor_asn(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_bgp_neighbor_asn_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.DeviceConcise.device_bgp_neighbor_asn)
}
inline std::string* DeviceConcise::mutable_device_bgp_neighbor_asn() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_device_bgp_neighbor_asn();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.DeviceConcise.device_bgp_neighbor_asn)
  return _s;
}
inline const std::string& DeviceConcise::_internal_device_bgp_neighbor_asn() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.device_bgp_neighbor_asn_.Get();
}
inline void DeviceConcise::_internal_set_device_bgp_neighbor_asn(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_bgp_neighbor_asn_.Set(value, GetArena());
}
inline std::string* DeviceConcise::_internal_mutable_device_bgp_neighbor_asn() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.device_bgp_neighbor_asn_.Mutable( GetArena());
}
inline std::string* DeviceConcise::release_device_bgp_neighbor_asn() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.DeviceConcise.device_bgp_neighbor_asn)
  return _impl_.device_bgp_neighbor_asn_.Release();
}
inline void DeviceConcise::set_allocated_device_bgp_neighbor_asn(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_bgp_neighbor_asn_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.device_bgp_neighbor_asn_.IsDefault()) {
    _impl_.device_bgp_neighbor_asn_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.DeviceConcise.device_bgp_neighbor_asn)
}

// string device_bgp_password = 18 [json_name = "deviceBgpPassword", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void DeviceConcise::clear_device_bgp_password() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_bgp_password_.ClearToEmpty();
}
inline const std::string& DeviceConcise::device_bgp_password() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeviceConcise.device_bgp_password)
  return _internal_device_bgp_password();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeviceConcise::set_device_bgp_password(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_bgp_password_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.DeviceConcise.device_bgp_password)
}
inline std::string* DeviceConcise::mutable_device_bgp_password() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_device_bgp_password();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.DeviceConcise.device_bgp_password)
  return _s;
}
inline const std::string& DeviceConcise::_internal_device_bgp_password() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.device_bgp_password_.Get();
}
inline void DeviceConcise::_internal_set_device_bgp_password(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_bgp_password_.Set(value, GetArena());
}
inline std::string* DeviceConcise::_internal_mutable_device_bgp_password() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.device_bgp_password_.Mutable( GetArena());
}
inline std::string* DeviceConcise::release_device_bgp_password() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.DeviceConcise.device_bgp_password)
  return _impl_.device_bgp_password_.Release();
}
inline void DeviceConcise::set_allocated_device_bgp_password(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_bgp_password_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.device_bgp_password_.IsDefault()) {
    _impl_.device_bgp_password_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.DeviceConcise.device_bgp_password)
}

// string use_bgp_device_id = 19 [json_name = "useBgpDeviceId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void DeviceConcise::clear_use_bgp_device_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.use_bgp_device_id_.ClearToEmpty();
}
inline const std::string& DeviceConcise::use_bgp_device_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeviceConcise.use_bgp_device_id)
  return _internal_use_bgp_device_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeviceConcise::set_use_bgp_device_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.use_bgp_device_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.DeviceConcise.use_bgp_device_id)
}
inline std::string* DeviceConcise::mutable_use_bgp_device_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_use_bgp_device_id();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.DeviceConcise.use_bgp_device_id)
  return _s;
}
inline const std::string& DeviceConcise::_internal_use_bgp_device_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.use_bgp_device_id_.Get();
}
inline void DeviceConcise::_internal_set_use_bgp_device_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.use_bgp_device_id_.Set(value, GetArena());
}
inline std::string* DeviceConcise::_internal_mutable_use_bgp_device_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.use_bgp_device_id_.Mutable( GetArena());
}
inline std::string* DeviceConcise::release_use_bgp_device_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.DeviceConcise.use_bgp_device_id)
  return _impl_.use_bgp_device_id_.Release();
}
inline void DeviceConcise::set_allocated_use_bgp_device_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.use_bgp_device_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.use_bgp_device_id_.IsDefault()) {
    _impl_.use_bgp_device_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.DeviceConcise.use_bgp_device_id)
}

// bool device_bgp_flowspec = 20 [json_name = "deviceBgpFlowspec", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void DeviceConcise::clear_device_bgp_flowspec() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_bgp_flowspec_ = false;
}
inline bool DeviceConcise::device_bgp_flowspec() const {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeviceConcise.device_bgp_flowspec)
  return _internal_device_bgp_flowspec();
}
inline void DeviceConcise::set_device_bgp_flowspec(bool value) {
  _internal_set_device_bgp_flowspec(value);
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.DeviceConcise.device_bgp_flowspec)
}
inline bool DeviceConcise::_internal_device_bgp_flowspec() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.device_bgp_flowspec_;
}
inline void DeviceConcise::_internal_set_device_bgp_flowspec(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_bgp_flowspec_ = value;
}

// .kentik.device.v202504beta2.DeviceNmsConfig nms = 21 [json_name = "nms", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool DeviceConcise::has_nms() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.nms_ != nullptr);
  return value;
}
inline void DeviceConcise::clear_nms() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.nms_ != nullptr) _impl_.nms_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::kentik::device::v202504beta2::DeviceNmsConfig& DeviceConcise::_internal_nms() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::device::v202504beta2::DeviceNmsConfig* p = _impl_.nms_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::device::v202504beta2::DeviceNmsConfig&>(::kentik::device::v202504beta2::_DeviceNmsConfig_default_instance_);
}
inline const ::kentik::device::v202504beta2::DeviceNmsConfig& DeviceConcise::nms() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeviceConcise.nms)
  return _internal_nms();
}
inline void DeviceConcise::unsafe_arena_set_allocated_nms(::kentik::device::v202504beta2::DeviceNmsConfig* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.nms_);
  }
  _impl_.nms_ = reinterpret_cast<::kentik::device::v202504beta2::DeviceNmsConfig*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.device.v202504beta2.DeviceConcise.nms)
}
inline ::kentik::device::v202504beta2::DeviceNmsConfig* DeviceConcise::release_nms() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::kentik::device::v202504beta2::DeviceNmsConfig* released = _impl_.nms_;
  _impl_.nms_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::device::v202504beta2::DeviceNmsConfig* DeviceConcise::unsafe_arena_release_nms() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.DeviceConcise.nms)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::kentik::device::v202504beta2::DeviceNmsConfig* temp = _impl_.nms_;
  _impl_.nms_ = nullptr;
  return temp;
}
inline ::kentik::device::v202504beta2::DeviceNmsConfig* DeviceConcise::_internal_mutable_nms() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.nms_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::device::v202504beta2::DeviceNmsConfig>(GetArena());
    _impl_.nms_ = reinterpret_cast<::kentik::device::v202504beta2::DeviceNmsConfig*>(p);
  }
  return _impl_.nms_;
}
inline ::kentik::device::v202504beta2::DeviceNmsConfig* DeviceConcise::mutable_nms() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::kentik::device::v202504beta2::DeviceNmsConfig* _msg = _internal_mutable_nms();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.DeviceConcise.nms)
  return _msg;
}
inline void DeviceConcise::set_allocated_nms(::kentik::device::v202504beta2::DeviceNmsConfig* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.nms_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.nms_ = reinterpret_cast<::kentik::device::v202504beta2::DeviceNmsConfig*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.DeviceConcise.nms)
}

// string device_bgp_credential_name = 22 [json_name = "deviceBgpCredentialName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void DeviceConcise::clear_device_bgp_credential_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_bgp_credential_name_.ClearToEmpty();
}
inline const std::string& DeviceConcise::device_bgp_credential_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeviceConcise.device_bgp_credential_name)
  return _internal_device_bgp_credential_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeviceConcise::set_device_bgp_credential_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_bgp_credential_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.DeviceConcise.device_bgp_credential_name)
}
inline std::string* DeviceConcise::mutable_device_bgp_credential_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_device_bgp_credential_name();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.DeviceConcise.device_bgp_credential_name)
  return _s;
}
inline const std::string& DeviceConcise::_internal_device_bgp_credential_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.device_bgp_credential_name_.Get();
}
inline void DeviceConcise::_internal_set_device_bgp_credential_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_bgp_credential_name_.Set(value, GetArena());
}
inline std::string* DeviceConcise::_internal_mutable_device_bgp_credential_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.device_bgp_credential_name_.Mutable( GetArena());
}
inline std::string* DeviceConcise::release_device_bgp_credential_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.DeviceConcise.device_bgp_credential_name)
  return _impl_.device_bgp_credential_name_.Release();
}
inline void DeviceConcise::set_allocated_device_bgp_credential_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_bgp_credential_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.device_bgp_credential_name_.IsDefault()) {
    _impl_.device_bgp_credential_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.DeviceConcise.device_bgp_credential_name)
}

// string flow_snmp_credential_name = 23 [json_name = "flowSnmpCredentialName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void DeviceConcise::clear_flow_snmp_credential_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.flow_snmp_credential_name_.ClearToEmpty();
}
inline const std::string& DeviceConcise::flow_snmp_credential_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeviceConcise.flow_snmp_credential_name)
  return _internal_flow_snmp_credential_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeviceConcise::set_flow_snmp_credential_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.flow_snmp_credential_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.DeviceConcise.flow_snmp_credential_name)
}
inline std::string* DeviceConcise::mutable_flow_snmp_credential_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_flow_snmp_credential_name();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.DeviceConcise.flow_snmp_credential_name)
  return _s;
}
inline const std::string& DeviceConcise::_internal_flow_snmp_credential_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.flow_snmp_credential_name_.Get();
}
inline void DeviceConcise::_internal_set_flow_snmp_credential_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.flow_snmp_credential_name_.Set(value, GetArena());
}
inline std::string* DeviceConcise::_internal_mutable_flow_snmp_credential_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.flow_snmp_credential_name_.Mutable( GetArena());
}
inline std::string* DeviceConcise::release_flow_snmp_credential_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.DeviceConcise.flow_snmp_credential_name)
  return _impl_.flow_snmp_credential_name_.Release();
}
inline void DeviceConcise::set_allocated_flow_snmp_credential_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.flow_snmp_credential_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.flow_snmp_credential_name_.IsDefault()) {
    _impl_.flow_snmp_credential_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.DeviceConcise.flow_snmp_credential_name)
}

// uint32 monitoring_template_id = 24 [json_name = "monitoringTemplateId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void DeviceConcise::clear_monitoring_template_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.monitoring_template_id_ = 0u;
}
inline ::uint32_t DeviceConcise::monitoring_template_id() const {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeviceConcise.monitoring_template_id)
  return _internal_monitoring_template_id();
}
inline void DeviceConcise::set_monitoring_template_id(::uint32_t value) {
  _internal_set_monitoring_template_id(value);
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.DeviceConcise.monitoring_template_id)
}
inline ::uint32_t DeviceConcise::_internal_monitoring_template_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.monitoring_template_id_;
}
inline void DeviceConcise::_internal_set_monitoring_template_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.monitoring_template_id_ = value;
}

// -------------------------------------------------------------------

// Site

// string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Site::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& Site::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.Site.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Site::set_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.Site.id)
}
inline std::string* Site::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.Site.id)
  return _s;
}
inline const std::string& Site::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void Site::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(value, GetArena());
}
inline std::string* Site::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* Site::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.Site.id)
  return _impl_.id_.Release();
}
inline void Site::set_allocated_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.id_.IsDefault()) {
    _impl_.id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.Site.id)
}

// string site_name = 2 [json_name = "siteName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Site::clear_site_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.site_name_.ClearToEmpty();
}
inline const std::string& Site::site_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.Site.site_name)
  return _internal_site_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Site::set_site_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.site_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.Site.site_name)
}
inline std::string* Site::mutable_site_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_site_name();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.Site.site_name)
  return _s;
}
inline const std::string& Site::_internal_site_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.site_name_.Get();
}
inline void Site::_internal_set_site_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.site_name_.Set(value, GetArena());
}
inline std::string* Site::_internal_mutable_site_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.site_name_.Mutable( GetArena());
}
inline std::string* Site::release_site_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.Site.site_name)
  return _impl_.site_name_.Release();
}
inline void Site::set_allocated_site_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.site_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.site_name_.IsDefault()) {
    _impl_.site_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.Site.site_name)
}

// double lat = 3 [json_name = "lat", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Site::clear_lat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lat_ = 0;
}
inline double Site::lat() const {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.Site.lat)
  return _internal_lat();
}
inline void Site::set_lat(double value) {
  _internal_set_lat(value);
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.Site.lat)
}
inline double Site::_internal_lat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.lat_;
}
inline void Site::_internal_set_lat(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lat_ = value;
}

// double lon = 4 [json_name = "lon", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Site::clear_lon() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lon_ = 0;
}
inline double Site::lon() const {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.Site.lon)
  return _internal_lon();
}
inline void Site::set_lon(double value) {
  _internal_set_lon(value);
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.Site.lon)
}
inline double Site::_internal_lon() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.lon_;
}
inline void Site::_internal_set_lon(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lon_ = value;
}

// string company_id = 5 [json_name = "companyId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Site::clear_company_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.company_id_.ClearToEmpty();
}
inline const std::string& Site::company_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.Site.company_id)
  return _internal_company_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Site::set_company_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.company_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.Site.company_id)
}
inline std::string* Site::mutable_company_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_company_id();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.Site.company_id)
  return _s;
}
inline const std::string& Site::_internal_company_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.company_id_.Get();
}
inline void Site::_internal_set_company_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.company_id_.Set(value, GetArena());
}
inline std::string* Site::_internal_mutable_company_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.company_id_.Mutable( GetArena());
}
inline std::string* Site::release_company_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.Site.company_id)
  return _impl_.company_id_.Release();
}
inline void Site::set_allocated_company_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.company_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.company_id_.IsDefault()) {
    _impl_.company_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.Site.company_id)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// Plan

// string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Plan::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& Plan::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.Plan.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Plan::set_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.Plan.id)
}
inline std::string* Plan::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.Plan.id)
  return _s;
}
inline const std::string& Plan::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void Plan::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(value, GetArena());
}
inline std::string* Plan::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* Plan::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.Plan.id)
  return _impl_.id_.Release();
}
inline void Plan::set_allocated_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.id_.IsDefault()) {
    _impl_.id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.Plan.id)
}

// string name = 2 [json_name = "name", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Plan::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& Plan::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.Plan.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Plan::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.Plan.name)
}
inline std::string* Plan::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.Plan.name)
  return _s;
}
inline const std::string& Plan::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void Plan::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* Plan::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* Plan::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.Plan.name)
  return _impl_.name_.Release();
}
inline void Plan::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.Plan.name)
}

// bool active = 3 [json_name = "active", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Plan::clear_active() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.active_ = false;
}
inline bool Plan::active() const {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.Plan.active)
  return _internal_active();
}
inline void Plan::set_active(bool value) {
  _internal_set_active(value);
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.Plan.active)
}
inline bool Plan::_internal_active() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.active_;
}
inline void Plan::_internal_set_active(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.active_ = value;
}

// bool bgp = 4 [json_name = "bgp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Plan::clear_bgp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bgp_ = false;
}
inline bool Plan::bgp() const {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.Plan.bgp)
  return _internal_bgp();
}
inline void Plan::set_bgp(bool value) {
  _internal_set_bgp(value);
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.Plan.bgp)
}
inline bool Plan::_internal_bgp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bgp_;
}
inline void Plan::_internal_set_bgp(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bgp_ = value;
}

// string company_id = 5 [json_name = "companyId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Plan::clear_company_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.company_id_.ClearToEmpty();
}
inline const std::string& Plan::company_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.Plan.company_id)
  return _internal_company_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Plan::set_company_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.company_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.Plan.company_id)
}
inline std::string* Plan::mutable_company_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_company_id();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.Plan.company_id)
  return _s;
}
inline const std::string& Plan::_internal_company_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.company_id_.Get();
}
inline void Plan::_internal_set_company_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.company_id_.Set(value, GetArena());
}
inline std::string* Plan::_internal_mutable_company_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.company_id_.Mutable( GetArena());
}
inline std::string* Plan::release_company_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.Plan.company_id)
  return _impl_.company_id_.Release();
}
inline void Plan::set_allocated_company_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.company_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.company_id_.IsDefault()) {
    _impl_.company_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.Plan.company_id)
}

// string description = 6 [json_name = "description", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Plan::clear_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.ClearToEmpty();
}
inline const std::string& Plan::description() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.Plan.description)
  return _internal_description();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Plan::set_description(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.Plan.description)
}
inline std::string* Plan::mutable_description() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_description();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.Plan.description)
  return _s;
}
inline const std::string& Plan::_internal_description() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.description_.Get();
}
inline void Plan::_internal_set_description(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.Set(value, GetArena());
}
inline std::string* Plan::_internal_mutable_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.description_.Mutable( GetArena());
}
inline std::string* Plan::release_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.Plan.description)
  return _impl_.description_.Release();
}
inline void Plan::set_allocated_description(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.description_.IsDefault()) {
    _impl_.description_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.Plan.description)
}

// repeated string device_types = 7 [json_name = "deviceTypes", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int Plan::_internal_device_types_size() const {
  return _internal_device_types().size();
}
inline int Plan::device_types_size() const {
  return _internal_device_types_size();
}
inline void Plan::clear_device_types() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_types_.Clear();
}
inline std::string* Plan::add_device_types() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_device_types()->Add();
  // @@protoc_insertion_point(field_add_mutable:kentik.device.v202504beta2.Plan.device_types)
  return _s;
}
inline const std::string& Plan::device_types(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.Plan.device_types)
  return _internal_device_types().Get(index);
}
inline std::string* Plan::mutable_device_types(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.Plan.device_types)
  return _internal_mutable_device_types()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void Plan::set_device_types(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_device_types()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.Plan.device_types)
}
template <typename Arg_, typename... Args_>
inline void Plan::add_device_types(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_device_types(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:kentik.device.v202504beta2.Plan.device_types)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Plan::device_types() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.device.v202504beta2.Plan.device_types)
  return _internal_device_types();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
Plan::mutable_device_types() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.device.v202504beta2.Plan.device_types)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_device_types();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Plan::_internal_device_types() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.device_types_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
Plan::_internal_mutable_device_types() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.device_types_;
}

// repeated string devices = 8 [json_name = "devices", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int Plan::_internal_devices_size() const {
  return _internal_devices().size();
}
inline int Plan::devices_size() const {
  return _internal_devices_size();
}
inline void Plan::clear_devices() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.devices_.Clear();
}
inline std::string* Plan::add_devices() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_devices()->Add();
  // @@protoc_insertion_point(field_add_mutable:kentik.device.v202504beta2.Plan.devices)
  return _s;
}
inline const std::string& Plan::devices(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.Plan.devices)
  return _internal_devices().Get(index);
}
inline std::string* Plan::mutable_devices(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.Plan.devices)
  return _internal_mutable_devices()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void Plan::set_devices(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_devices()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.Plan.devices)
}
template <typename Arg_, typename... Args_>
inline void Plan::add_devices(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_devices(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:kentik.device.v202504beta2.Plan.devices)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Plan::devices() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.device.v202504beta2.Plan.devices)
  return _internal_devices();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
Plan::mutable_devices() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.device.v202504beta2.Plan.devices)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_devices();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Plan::_internal_devices() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.devices_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
Plan::_internal_mutable_devices() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.devices_;
}

// uint32 fast_retention = 9 [json_name = "fastRetention", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Plan::clear_fast_retention() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fast_retention_ = 0u;
}
inline ::uint32_t Plan::fast_retention() const {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.Plan.fast_retention)
  return _internal_fast_retention();
}
inline void Plan::set_fast_retention(::uint32_t value) {
  _internal_set_fast_retention(value);
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.Plan.fast_retention)
}
inline ::uint32_t Plan::_internal_fast_retention() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.fast_retention_;
}
inline void Plan::_internal_set_fast_retention(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fast_retention_ = value;
}

// uint32 full_retention = 10 [json_name = "fullRetention", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Plan::clear_full_retention() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.full_retention_ = 0u;
}
inline ::uint32_t Plan::full_retention() const {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.Plan.full_retention)
  return _internal_full_retention();
}
inline void Plan::set_full_retention(::uint32_t value) {
  _internal_set_full_retention(value);
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.Plan.full_retention)
}
inline ::uint32_t Plan::_internal_full_retention() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.full_retention_;
}
inline void Plan::_internal_set_full_retention(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.full_retention_ = value;
}

// uint32 max_bigdata_fps = 11 [json_name = "maxBigdataFps", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Plan::clear_max_bigdata_fps() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_bigdata_fps_ = 0u;
}
inline ::uint32_t Plan::max_bigdata_fps() const {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.Plan.max_bigdata_fps)
  return _internal_max_bigdata_fps();
}
inline void Plan::set_max_bigdata_fps(::uint32_t value) {
  _internal_set_max_bigdata_fps(value);
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.Plan.max_bigdata_fps)
}
inline ::uint32_t Plan::_internal_max_bigdata_fps() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.max_bigdata_fps_;
}
inline void Plan::_internal_set_max_bigdata_fps(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_bigdata_fps_ = value;
}

// uint32 max_devices = 12 [json_name = "maxDevices", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Plan::clear_max_devices() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_devices_ = 0u;
}
inline ::uint32_t Plan::max_devices() const {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.Plan.max_devices)
  return _internal_max_devices();
}
inline void Plan::set_max_devices(::uint32_t value) {
  _internal_set_max_devices(value);
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.Plan.max_devices)
}
inline ::uint32_t Plan::_internal_max_devices() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.max_devices_;
}
inline void Plan::_internal_set_max_devices(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_devices_ = value;
}

// uint32 max_fps = 13 [json_name = "maxFps", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Plan::clear_max_fps() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_fps_ = 0u;
}
inline ::uint32_t Plan::max_fps() const {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.Plan.max_fps)
  return _internal_max_fps();
}
inline void Plan::set_max_fps(::uint32_t value) {
  _internal_set_max_fps(value);
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.Plan.max_fps)
}
inline ::uint32_t Plan::_internal_max_fps() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.max_fps_;
}
inline void Plan::_internal_set_max_fps(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_fps_ = value;
}

// .google.protobuf.Timestamp cdate = 14 [json_name = "cdate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool Plan::has_cdate() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.cdate_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& Plan::_internal_cdate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.cdate_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& Plan::cdate() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.Plan.cdate)
  return _internal_cdate();
}
inline void Plan::unsafe_arena_set_allocated_cdate(::google::protobuf::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.cdate_);
  }
  _impl_.cdate_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.device.v202504beta2.Plan.cdate)
}
inline ::google::protobuf::Timestamp* Plan::release_cdate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* released = _impl_.cdate_;
  _impl_.cdate_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* Plan::unsafe_arena_release_cdate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.Plan.cdate)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* temp = _impl_.cdate_;
  _impl_.cdate_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* Plan::_internal_mutable_cdate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.cdate_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.cdate_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.cdate_;
}
inline ::google::protobuf::Timestamp* Plan::mutable_cdate() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_cdate();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.Plan.cdate)
  return _msg;
}
inline void Plan::set_allocated_cdate(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.cdate_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.cdate_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.Plan.cdate)
}

// .google.protobuf.Timestamp edate = 15 [json_name = "edate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool Plan::has_edate() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.edate_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& Plan::_internal_edate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.edate_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& Plan::edate() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.Plan.edate)
  return _internal_edate();
}
inline void Plan::unsafe_arena_set_allocated_edate(::google::protobuf::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.edate_);
  }
  _impl_.edate_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.device.v202504beta2.Plan.edate)
}
inline ::google::protobuf::Timestamp* Plan::release_edate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* released = _impl_.edate_;
  _impl_.edate_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* Plan::unsafe_arena_release_edate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.Plan.edate)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* temp = _impl_.edate_;
  _impl_.edate_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* Plan::_internal_mutable_edate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.edate_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.edate_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.edate_;
}
inline ::google::protobuf::Timestamp* Plan::mutable_edate() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_edate();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.Plan.edate)
  return _msg;
}
inline void Plan::set_allocated_edate(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.edate_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.edate_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.Plan.edate)
}

// map<string, string> metadata = 16 [json_name = "metadata", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int Plan::_internal_metadata_size() const {
  return _internal_metadata().size();
}
inline int Plan::metadata_size() const {
  return _internal_metadata_size();
}
inline void Plan::clear_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.metadata_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& Plan::_internal_metadata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.metadata_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& Plan::metadata() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:kentik.device.v202504beta2.Plan.metadata)
  return _internal_metadata();
}
inline ::google::protobuf::Map<std::string, std::string>* Plan::_internal_mutable_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.metadata_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* Plan::mutable_metadata() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:kentik.device.v202504beta2.Plan.metadata)
  return _internal_mutable_metadata();
}

// -------------------------------------------------------------------

// Label

// string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Label::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& Label::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.Label.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Label::set_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.Label.id)
}
inline std::string* Label::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.Label.id)
  return _s;
}
inline const std::string& Label::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void Label::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(value, GetArena());
}
inline std::string* Label::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* Label::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.Label.id)
  return _impl_.id_.Release();
}
inline void Label::set_allocated_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.id_.IsDefault()) {
    _impl_.id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.Label.id)
}

// string name = 2 [json_name = "name", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Label::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& Label::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.Label.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Label::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.Label.name)
}
inline std::string* Label::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.Label.name)
  return _s;
}
inline const std::string& Label::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void Label::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* Label::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* Label::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.Label.name)
  return _impl_.name_.Release();
}
inline void Label::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.Label.name)
}

// string description = 3 [json_name = "description", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Label::clear_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.ClearToEmpty();
}
inline const std::string& Label::description() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.Label.description)
  return _internal_description();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Label::set_description(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.Label.description)
}
inline std::string* Label::mutable_description() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_description();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.Label.description)
  return _s;
}
inline const std::string& Label::_internal_description() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.description_.Get();
}
inline void Label::_internal_set_description(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.Set(value, GetArena());
}
inline std::string* Label::_internal_mutable_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.description_.Mutable( GetArena());
}
inline std::string* Label::release_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.Label.description)
  return _impl_.description_.Release();
}
inline void Label::set_allocated_description(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.description_.IsDefault()) {
    _impl_.description_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.Label.description)
}

// .google.protobuf.Timestamp edate = 4 [json_name = "edate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool Label::has_edate() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.edate_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& Label::_internal_edate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.edate_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& Label::edate() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.Label.edate)
  return _internal_edate();
}
inline void Label::unsafe_arena_set_allocated_edate(::google::protobuf::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.edate_);
  }
  _impl_.edate_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.device.v202504beta2.Label.edate)
}
inline ::google::protobuf::Timestamp* Label::release_edate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* released = _impl_.edate_;
  _impl_.edate_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* Label::unsafe_arena_release_edate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.Label.edate)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* temp = _impl_.edate_;
  _impl_.edate_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* Label::_internal_mutable_edate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.edate_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.edate_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.edate_;
}
inline ::google::protobuf::Timestamp* Label::mutable_edate() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_edate();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.Label.edate)
  return _msg;
}
inline void Label::set_allocated_edate(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.edate_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.edate_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.Label.edate)
}

// .google.protobuf.Timestamp cdate = 5 [json_name = "cdate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool Label::has_cdate() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.cdate_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& Label::_internal_cdate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.cdate_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& Label::cdate() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.Label.cdate)
  return _internal_cdate();
}
inline void Label::unsafe_arena_set_allocated_cdate(::google::protobuf::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.cdate_);
  }
  _impl_.cdate_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.device.v202504beta2.Label.cdate)
}
inline ::google::protobuf::Timestamp* Label::release_cdate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* released = _impl_.cdate_;
  _impl_.cdate_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* Label::unsafe_arena_release_cdate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.Label.cdate)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* temp = _impl_.cdate_;
  _impl_.cdate_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* Label::_internal_mutable_cdate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.cdate_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.cdate_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.cdate_;
}
inline ::google::protobuf::Timestamp* Label::mutable_cdate() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_cdate();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.Label.cdate)
  return _msg;
}
inline void Label::set_allocated_cdate(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.cdate_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.cdate_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.Label.cdate)
}

// string user_id = 6 [json_name = "userId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Label::clear_user_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.user_id_.ClearToEmpty();
}
inline const std::string& Label::user_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.Label.user_id)
  return _internal_user_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Label::set_user_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.user_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.Label.user_id)
}
inline std::string* Label::mutable_user_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_user_id();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.Label.user_id)
  return _s;
}
inline const std::string& Label::_internal_user_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.user_id_.Get();
}
inline void Label::_internal_set_user_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.user_id_.Set(value, GetArena());
}
inline std::string* Label::_internal_mutable_user_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.user_id_.Mutable( GetArena());
}
inline std::string* Label::release_user_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.Label.user_id)
  return _impl_.user_id_.Release();
}
inline void Label::set_allocated_user_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.user_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.user_id_.IsDefault()) {
    _impl_.user_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.Label.user_id)
}

// string company_id = 7 [json_name = "companyId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Label::clear_company_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.company_id_.ClearToEmpty();
}
inline const std::string& Label::company_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.Label.company_id)
  return _internal_company_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Label::set_company_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.company_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.Label.company_id)
}
inline std::string* Label::mutable_company_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_company_id();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.Label.company_id)
  return _s;
}
inline const std::string& Label::_internal_company_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.company_id_.Get();
}
inline void Label::_internal_set_company_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.company_id_.Set(value, GetArena());
}
inline std::string* Label::_internal_mutable_company_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.company_id_.Mutable( GetArena());
}
inline std::string* Label::release_company_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.Label.company_id)
  return _impl_.company_id_.Release();
}
inline void Label::set_allocated_company_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.company_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.company_id_.IsDefault()) {
    _impl_.company_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.Label.company_id)
}

// string color = 8 [json_name = "color", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Label::clear_color() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.color_.ClearToEmpty();
}
inline const std::string& Label::color() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.Label.color)
  return _internal_color();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Label::set_color(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.color_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.Label.color)
}
inline std::string* Label::mutable_color() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_color();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.Label.color)
  return _s;
}
inline const std::string& Label::_internal_color() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.color_.Get();
}
inline void Label::_internal_set_color(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.color_.Set(value, GetArena());
}
inline std::string* Label::_internal_mutable_color() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.color_.Mutable( GetArena());
}
inline std::string* Label::release_color() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.Label.color)
  return _impl_.color_.Release();
}
inline void Label::set_allocated_color(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.color_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.color_.IsDefault()) {
    _impl_.color_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.Label.color)
}

// string order = 9 [json_name = "order", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Label::clear_order() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_.ClearToEmpty();
}
inline const std::string& Label::order() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.Label.order)
  return _internal_order();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Label::set_order(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.Label.order)
}
inline std::string* Label::mutable_order() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_order();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.Label.order)
  return _s;
}
inline const std::string& Label::_internal_order() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.order_.Get();
}
inline void Label::_internal_set_order(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_.Set(value, GetArena());
}
inline std::string* Label::_internal_mutable_order() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.order_.Mutable( GetArena());
}
inline std::string* Label::release_order() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.Label.order)
  return _impl_.order_.Release();
}
inline void Label::set_allocated_order(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.order_.IsDefault()) {
    _impl_.order_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.Label.order)
}

// string pivot_device_id = 10 [json_name = "pivotDeviceId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Label::clear_pivot_device_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pivot_device_id_.ClearToEmpty();
}
inline const std::string& Label::pivot_device_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.Label.pivot_device_id)
  return _internal_pivot_device_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Label::set_pivot_device_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pivot_device_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.Label.pivot_device_id)
}
inline std::string* Label::mutable_pivot_device_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_pivot_device_id();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.Label.pivot_device_id)
  return _s;
}
inline const std::string& Label::_internal_pivot_device_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pivot_device_id_.Get();
}
inline void Label::_internal_set_pivot_device_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pivot_device_id_.Set(value, GetArena());
}
inline std::string* Label::_internal_mutable_pivot_device_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.pivot_device_id_.Mutable( GetArena());
}
inline std::string* Label::release_pivot_device_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.Label.pivot_device_id)
  return _impl_.pivot_device_id_.Release();
}
inline void Label::set_allocated_pivot_device_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pivot_device_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.pivot_device_id_.IsDefault()) {
    _impl_.pivot_device_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.Label.pivot_device_id)
}

// string pivot_label_id = 11 [json_name = "pivotLabelId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Label::clear_pivot_label_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pivot_label_id_.ClearToEmpty();
}
inline const std::string& Label::pivot_label_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.Label.pivot_label_id)
  return _internal_pivot_label_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Label::set_pivot_label_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pivot_label_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.Label.pivot_label_id)
}
inline std::string* Label::mutable_pivot_label_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_pivot_label_id();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.Label.pivot_label_id)
  return _s;
}
inline const std::string& Label::_internal_pivot_label_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pivot_label_id_.Get();
}
inline void Label::_internal_set_pivot_label_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pivot_label_id_.Set(value, GetArena());
}
inline std::string* Label::_internal_mutable_pivot_label_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.pivot_label_id_.Mutable( GetArena());
}
inline std::string* Label::release_pivot_label_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.Label.pivot_label_id)
  return _impl_.pivot_label_id_.Release();
}
inline void Label::set_allocated_pivot_label_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pivot_label_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.pivot_label_id_.IsDefault()) {
    _impl_.pivot_label_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.Label.pivot_label_id)
}

// -------------------------------------------------------------------

// Interface

// string interface_description = 1 [json_name = "interfaceDescription", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Interface::clear_interface_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.interface_description_.ClearToEmpty();
}
inline const std::string& Interface::interface_description() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.Interface.interface_description)
  return _internal_interface_description();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Interface::set_interface_description(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.interface_description_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.Interface.interface_description)
}
inline std::string* Interface::mutable_interface_description() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_interface_description();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.Interface.interface_description)
  return _s;
}
inline const std::string& Interface::_internal_interface_description() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.interface_description_.Get();
}
inline void Interface::_internal_set_interface_description(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.interface_description_.Set(value, GetArena());
}
inline std::string* Interface::_internal_mutable_interface_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.interface_description_.Mutable( GetArena());
}
inline std::string* Interface::release_interface_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.Interface.interface_description)
  return _impl_.interface_description_.Release();
}
inline void Interface::set_allocated_interface_description(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.interface_description_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.interface_description_.IsDefault()) {
    _impl_.interface_description_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.Interface.interface_description)
}

// string initial_snmp_speed = 2 [json_name = "initialSnmpSpeed", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Interface::clear_initial_snmp_speed() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.initial_snmp_speed_.ClearToEmpty();
}
inline const std::string& Interface::initial_snmp_speed() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.Interface.initial_snmp_speed)
  return _internal_initial_snmp_speed();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Interface::set_initial_snmp_speed(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.initial_snmp_speed_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.Interface.initial_snmp_speed)
}
inline std::string* Interface::mutable_initial_snmp_speed() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_initial_snmp_speed();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.Interface.initial_snmp_speed)
  return _s;
}
inline const std::string& Interface::_internal_initial_snmp_speed() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.initial_snmp_speed_.Get();
}
inline void Interface::_internal_set_initial_snmp_speed(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.initial_snmp_speed_.Set(value, GetArena());
}
inline std::string* Interface::_internal_mutable_initial_snmp_speed() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.initial_snmp_speed_.Mutable( GetArena());
}
inline std::string* Interface::release_initial_snmp_speed() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.Interface.initial_snmp_speed)
  return _impl_.initial_snmp_speed_.Release();
}
inline void Interface::set_allocated_initial_snmp_speed(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.initial_snmp_speed_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.initial_snmp_speed_.IsDefault()) {
    _impl_.initial_snmp_speed_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.Interface.initial_snmp_speed)
}

// string device_id = 3 [json_name = "deviceId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Interface::clear_device_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_id_.ClearToEmpty();
}
inline const std::string& Interface::device_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.Interface.device_id)
  return _internal_device_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Interface::set_device_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.Interface.device_id)
}
inline std::string* Interface::mutable_device_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_device_id();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.Interface.device_id)
  return _s;
}
inline const std::string& Interface::_internal_device_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.device_id_.Get();
}
inline void Interface::_internal_set_device_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_id_.Set(value, GetArena());
}
inline std::string* Interface::_internal_mutable_device_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.device_id_.Mutable( GetArena());
}
inline std::string* Interface::release_device_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.Interface.device_id)
  return _impl_.device_id_.Release();
}
inline void Interface::set_allocated_device_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.device_id_.IsDefault()) {
    _impl_.device_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.Interface.device_id)
}

// string snmp_speed = 4 [json_name = "snmpSpeed", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Interface::clear_snmp_speed() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.snmp_speed_.ClearToEmpty();
}
inline const std::string& Interface::snmp_speed() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.Interface.snmp_speed)
  return _internal_snmp_speed();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Interface::set_snmp_speed(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.snmp_speed_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.Interface.snmp_speed)
}
inline std::string* Interface::mutable_snmp_speed() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_snmp_speed();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.Interface.snmp_speed)
  return _s;
}
inline const std::string& Interface::_internal_snmp_speed() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.snmp_speed_.Get();
}
inline void Interface::_internal_set_snmp_speed(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.snmp_speed_.Set(value, GetArena());
}
inline std::string* Interface::_internal_mutable_snmp_speed() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.snmp_speed_.Mutable( GetArena());
}
inline std::string* Interface::release_snmp_speed() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.Interface.snmp_speed)
  return _impl_.snmp_speed_.Release();
}
inline void Interface::set_allocated_snmp_speed(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.snmp_speed_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.snmp_speed_.IsDefault()) {
    _impl_.snmp_speed_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.Interface.snmp_speed)
}

// string snmp_alias = 5 [json_name = "snmpAlias", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Interface::clear_snmp_alias() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.snmp_alias_.ClearToEmpty();
}
inline const std::string& Interface::snmp_alias() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.Interface.snmp_alias)
  return _internal_snmp_alias();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Interface::set_snmp_alias(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.snmp_alias_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.Interface.snmp_alias)
}
inline std::string* Interface::mutable_snmp_alias() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_snmp_alias();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.Interface.snmp_alias)
  return _s;
}
inline const std::string& Interface::_internal_snmp_alias() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.snmp_alias_.Get();
}
inline void Interface::_internal_set_snmp_alias(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.snmp_alias_.Set(value, GetArena());
}
inline std::string* Interface::_internal_mutable_snmp_alias() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.snmp_alias_.Mutable( GetArena());
}
inline std::string* Interface::release_snmp_alias() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.Interface.snmp_alias)
  return _impl_.snmp_alias_.Release();
}
inline void Interface::set_allocated_snmp_alias(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.snmp_alias_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.snmp_alias_.IsDefault()) {
    _impl_.snmp_alias_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.Interface.snmp_alias)
}

// string snmp_id = 6 [json_name = "snmpId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Interface::clear_snmp_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.snmp_id_.ClearToEmpty();
}
inline const std::string& Interface::snmp_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.Interface.snmp_id)
  return _internal_snmp_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Interface::set_snmp_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.snmp_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.Interface.snmp_id)
}
inline std::string* Interface::mutable_snmp_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_snmp_id();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.Interface.snmp_id)
  return _s;
}
inline const std::string& Interface::_internal_snmp_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.snmp_id_.Get();
}
inline void Interface::_internal_set_snmp_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.snmp_id_.Set(value, GetArena());
}
inline std::string* Interface::_internal_mutable_snmp_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.snmp_id_.Mutable( GetArena());
}
inline std::string* Interface::release_snmp_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.Interface.snmp_id)
  return _impl_.snmp_id_.Release();
}
inline void Interface::set_allocated_snmp_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.snmp_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.snmp_id_.IsDefault()) {
    _impl_.snmp_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.Interface.snmp_id)
}

// string connectivity_type = 7 [json_name = "connectivityType", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Interface::clear_connectivity_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.connectivity_type_.ClearToEmpty();
}
inline const std::string& Interface::connectivity_type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.Interface.connectivity_type)
  return _internal_connectivity_type();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Interface::set_connectivity_type(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.connectivity_type_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.Interface.connectivity_type)
}
inline std::string* Interface::mutable_connectivity_type() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_connectivity_type();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.Interface.connectivity_type)
  return _s;
}
inline const std::string& Interface::_internal_connectivity_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.connectivity_type_.Get();
}
inline void Interface::_internal_set_connectivity_type(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.connectivity_type_.Set(value, GetArena());
}
inline std::string* Interface::_internal_mutable_connectivity_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.connectivity_type_.Mutable( GetArena());
}
inline std::string* Interface::release_connectivity_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.Interface.connectivity_type)
  return _impl_.connectivity_type_.Release();
}
inline void Interface::set_allocated_connectivity_type(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.connectivity_type_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.connectivity_type_.IsDefault()) {
    _impl_.connectivity_type_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.Interface.connectivity_type)
}

// string network_boundary = 8 [json_name = "networkBoundary", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Interface::clear_network_boundary() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.network_boundary_.ClearToEmpty();
}
inline const std::string& Interface::network_boundary() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.Interface.network_boundary)
  return _internal_network_boundary();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Interface::set_network_boundary(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.network_boundary_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.Interface.network_boundary)
}
inline std::string* Interface::mutable_network_boundary() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_network_boundary();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.Interface.network_boundary)
  return _s;
}
inline const std::string& Interface::_internal_network_boundary() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.network_boundary_.Get();
}
inline void Interface::_internal_set_network_boundary(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.network_boundary_.Set(value, GetArena());
}
inline std::string* Interface::_internal_mutable_network_boundary() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.network_boundary_.Mutable( GetArena());
}
inline std::string* Interface::release_network_boundary() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.Interface.network_boundary)
  return _impl_.network_boundary_.Release();
}
inline void Interface::set_allocated_network_boundary(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.network_boundary_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.network_boundary_.IsDefault()) {
    _impl_.network_boundary_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.Interface.network_boundary)
}

// string provider = 9 [json_name = "provider", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Interface::clear_provider() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.provider_.ClearToEmpty();
}
inline const std::string& Interface::provider() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.Interface.provider)
  return _internal_provider();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Interface::set_provider(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.provider_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.Interface.provider)
}
inline std::string* Interface::mutable_provider() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_provider();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.Interface.provider)
  return _s;
}
inline const std::string& Interface::_internal_provider() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.provider_.Get();
}
inline void Interface::_internal_set_provider(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.provider_.Set(value, GetArena());
}
inline std::string* Interface::_internal_mutable_provider() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.provider_.Mutable( GetArena());
}
inline std::string* Interface::release_provider() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.Interface.provider)
  return _impl_.provider_.Release();
}
inline void Interface::set_allocated_provider(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.provider_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.provider_.IsDefault()) {
    _impl_.provider_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.Interface.provider)
}

// -------------------------------------------------------------------

// CustomColumnData

// string device_id = 1 [json_name = "deviceId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void CustomColumnData::clear_device_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_id_.ClearToEmpty();
}
inline const std::string& CustomColumnData::device_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.CustomColumnData.device_id)
  return _internal_device_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CustomColumnData::set_device_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.CustomColumnData.device_id)
}
inline std::string* CustomColumnData::mutable_device_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_device_id();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.CustomColumnData.device_id)
  return _s;
}
inline const std::string& CustomColumnData::_internal_device_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.device_id_.Get();
}
inline void CustomColumnData::_internal_set_device_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_id_.Set(value, GetArena());
}
inline std::string* CustomColumnData::_internal_mutable_device_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.device_id_.Mutable( GetArena());
}
inline std::string* CustomColumnData::release_device_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.CustomColumnData.device_id)
  return _impl_.device_id_.Release();
}
inline void CustomColumnData::set_allocated_device_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.device_id_.IsDefault()) {
    _impl_.device_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.CustomColumnData.device_id)
}

// string field_id = 2 [json_name = "fieldId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void CustomColumnData::clear_field_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.field_id_.ClearToEmpty();
}
inline const std::string& CustomColumnData::field_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.CustomColumnData.field_id)
  return _internal_field_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CustomColumnData::set_field_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.field_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.CustomColumnData.field_id)
}
inline std::string* CustomColumnData::mutable_field_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_field_id();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.CustomColumnData.field_id)
  return _s;
}
inline const std::string& CustomColumnData::_internal_field_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.field_id_.Get();
}
inline void CustomColumnData::_internal_set_field_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.field_id_.Set(value, GetArena());
}
inline std::string* CustomColumnData::_internal_mutable_field_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.field_id_.Mutable( GetArena());
}
inline std::string* CustomColumnData::release_field_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.CustomColumnData.field_id)
  return _impl_.field_id_.Release();
}
inline void CustomColumnData::set_allocated_field_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.field_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.field_id_.IsDefault()) {
    _impl_.field_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.CustomColumnData.field_id)
}

// string col_name = 3 [json_name = "colName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void CustomColumnData::clear_col_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.col_name_.ClearToEmpty();
}
inline const std::string& CustomColumnData::col_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.CustomColumnData.col_name)
  return _internal_col_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CustomColumnData::set_col_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.col_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.CustomColumnData.col_name)
}
inline std::string* CustomColumnData::mutable_col_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_col_name();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.CustomColumnData.col_name)
  return _s;
}
inline const std::string& CustomColumnData::_internal_col_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.col_name_.Get();
}
inline void CustomColumnData::_internal_set_col_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.col_name_.Set(value, GetArena());
}
inline std::string* CustomColumnData::_internal_mutable_col_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.col_name_.Mutable( GetArena());
}
inline std::string* CustomColumnData::release_col_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.CustomColumnData.col_name)
  return _impl_.col_name_.Release();
}
inline void CustomColumnData::set_allocated_col_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.col_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.col_name_.IsDefault()) {
    _impl_.col_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.CustomColumnData.col_name)
}

// string description = 4 [json_name = "description", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void CustomColumnData::clear_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.ClearToEmpty();
}
inline const std::string& CustomColumnData::description() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.CustomColumnData.description)
  return _internal_description();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CustomColumnData::set_description(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.CustomColumnData.description)
}
inline std::string* CustomColumnData::mutable_description() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_description();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.CustomColumnData.description)
  return _s;
}
inline const std::string& CustomColumnData::_internal_description() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.description_.Get();
}
inline void CustomColumnData::_internal_set_description(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.Set(value, GetArena());
}
inline std::string* CustomColumnData::_internal_mutable_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.description_.Mutable( GetArena());
}
inline std::string* CustomColumnData::release_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.CustomColumnData.description)
  return _impl_.description_.Release();
}
inline void CustomColumnData::set_allocated_description(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.description_.IsDefault()) {
    _impl_.description_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.CustomColumnData.description)
}

// string col_type = 5 [json_name = "colType", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void CustomColumnData::clear_col_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.col_type_.ClearToEmpty();
}
inline const std::string& CustomColumnData::col_type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.CustomColumnData.col_type)
  return _internal_col_type();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CustomColumnData::set_col_type(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.col_type_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.CustomColumnData.col_type)
}
inline std::string* CustomColumnData::mutable_col_type() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_col_type();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.CustomColumnData.col_type)
  return _s;
}
inline const std::string& CustomColumnData::_internal_col_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.col_type_.Get();
}
inline void CustomColumnData::_internal_set_col_type(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.col_type_.Set(value, GetArena());
}
inline std::string* CustomColumnData::_internal_mutable_col_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.col_type_.Mutable( GetArena());
}
inline std::string* CustomColumnData::release_col_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.CustomColumnData.col_type)
  return _impl_.col_type_.Release();
}
inline void CustomColumnData::set_allocated_col_type(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.col_type_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.col_type_.IsDefault()) {
    _impl_.col_type_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.CustomColumnData.col_type)
}

// string device_type = 6 [json_name = "deviceType", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void CustomColumnData::clear_device_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_type_.ClearToEmpty();
}
inline const std::string& CustomColumnData::device_type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.CustomColumnData.device_type)
  return _internal_device_type();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CustomColumnData::set_device_type(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_type_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.CustomColumnData.device_type)
}
inline std::string* CustomColumnData::mutable_device_type() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_device_type();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.CustomColumnData.device_type)
  return _s;
}
inline const std::string& CustomColumnData::_internal_device_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.device_type_.Get();
}
inline void CustomColumnData::_internal_set_device_type(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_type_.Set(value, GetArena());
}
inline std::string* CustomColumnData::_internal_mutable_device_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.device_type_.Mutable( GetArena());
}
inline std::string* CustomColumnData::release_device_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.CustomColumnData.device_type)
  return _impl_.device_type_.Release();
}
inline void CustomColumnData::set_allocated_device_type(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_type_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.device_type_.IsDefault()) {
    _impl_.device_type_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.CustomColumnData.device_type)
}

// -------------------------------------------------------------------

// GnmiV1Conf

// string dialout_server = 1 [json_name = "dialoutServer", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void GnmiV1Conf::clear_dialout_server() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dialout_server_.ClearToEmpty();
}
inline const std::string& GnmiV1Conf::dialout_server() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.GnmiV1Conf.dialout_server)
  return _internal_dialout_server();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GnmiV1Conf::set_dialout_server(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dialout_server_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.GnmiV1Conf.dialout_server)
}
inline std::string* GnmiV1Conf::mutable_dialout_server() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_dialout_server();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.GnmiV1Conf.dialout_server)
  return _s;
}
inline const std::string& GnmiV1Conf::_internal_dialout_server() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dialout_server_.Get();
}
inline void GnmiV1Conf::_internal_set_dialout_server(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dialout_server_.Set(value, GetArena());
}
inline std::string* GnmiV1Conf::_internal_mutable_dialout_server() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.dialout_server_.Mutable( GetArena());
}
inline std::string* GnmiV1Conf::release_dialout_server() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.GnmiV1Conf.dialout_server)
  return _impl_.dialout_server_.Release();
}
inline void GnmiV1Conf::set_allocated_dialout_server(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dialout_server_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.dialout_server_.IsDefault()) {
    _impl_.dialout_server_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.GnmiV1Conf.dialout_server)
}

// -------------------------------------------------------------------

// DeviceDetailed

// string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void DeviceDetailed::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& DeviceDetailed::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeviceDetailed.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeviceDetailed::set_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.DeviceDetailed.id)
}
inline std::string* DeviceDetailed::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.DeviceDetailed.id)
  return _s;
}
inline const std::string& DeviceDetailed::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void DeviceDetailed::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(value, GetArena());
}
inline std::string* DeviceDetailed::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* DeviceDetailed::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.DeviceDetailed.id)
  return _impl_.id_.Release();
}
inline void DeviceDetailed::set_allocated_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.id_.IsDefault()) {
    _impl_.id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.DeviceDetailed.id)
}

// string company_id = 2 [json_name = "companyId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void DeviceDetailed::clear_company_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.company_id_.ClearToEmpty();
}
inline const std::string& DeviceDetailed::company_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeviceDetailed.company_id)
  return _internal_company_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeviceDetailed::set_company_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.company_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.DeviceDetailed.company_id)
}
inline std::string* DeviceDetailed::mutable_company_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_company_id();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.DeviceDetailed.company_id)
  return _s;
}
inline const std::string& DeviceDetailed::_internal_company_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.company_id_.Get();
}
inline void DeviceDetailed::_internal_set_company_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.company_id_.Set(value, GetArena());
}
inline std::string* DeviceDetailed::_internal_mutable_company_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.company_id_.Mutable( GetArena());
}
inline std::string* DeviceDetailed::release_company_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.DeviceDetailed.company_id)
  return _impl_.company_id_.Release();
}
inline void DeviceDetailed::set_allocated_company_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.company_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.company_id_.IsDefault()) {
    _impl_.company_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.DeviceDetailed.company_id)
}

// string device_name = 3 [json_name = "deviceName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void DeviceDetailed::clear_device_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_name_.ClearToEmpty();
}
inline const std::string& DeviceDetailed::device_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeviceDetailed.device_name)
  return _internal_device_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeviceDetailed::set_device_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.DeviceDetailed.device_name)
}
inline std::string* DeviceDetailed::mutable_device_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_device_name();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.DeviceDetailed.device_name)
  return _s;
}
inline const std::string& DeviceDetailed::_internal_device_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.device_name_.Get();
}
inline void DeviceDetailed::_internal_set_device_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_name_.Set(value, GetArena());
}
inline std::string* DeviceDetailed::_internal_mutable_device_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.device_name_.Mutable( GetArena());
}
inline std::string* DeviceDetailed::release_device_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.DeviceDetailed.device_name)
  return _impl_.device_name_.Release();
}
inline void DeviceDetailed::set_allocated_device_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.device_name_.IsDefault()) {
    _impl_.device_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.DeviceDetailed.device_name)
}

// string device_alias = 4 [json_name = "deviceAlias", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void DeviceDetailed::clear_device_alias() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_alias_.ClearToEmpty();
}
inline const std::string& DeviceDetailed::device_alias() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeviceDetailed.device_alias)
  return _internal_device_alias();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeviceDetailed::set_device_alias(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_alias_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.DeviceDetailed.device_alias)
}
inline std::string* DeviceDetailed::mutable_device_alias() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_device_alias();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.DeviceDetailed.device_alias)
  return _s;
}
inline const std::string& DeviceDetailed::_internal_device_alias() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.device_alias_.Get();
}
inline void DeviceDetailed::_internal_set_device_alias(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_alias_.Set(value, GetArena());
}
inline std::string* DeviceDetailed::_internal_mutable_device_alias() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.device_alias_.Mutable( GetArena());
}
inline std::string* DeviceDetailed::release_device_alias() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.DeviceDetailed.device_alias)
  return _impl_.device_alias_.Release();
}
inline void DeviceDetailed::set_allocated_device_alias(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_alias_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.device_alias_.IsDefault()) {
    _impl_.device_alias_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.DeviceDetailed.device_alias)
}

// string device_type = 5 [json_name = "deviceType", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void DeviceDetailed::clear_device_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_type_.ClearToEmpty();
}
inline const std::string& DeviceDetailed::device_type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeviceDetailed.device_type)
  return _internal_device_type();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeviceDetailed::set_device_type(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_type_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.DeviceDetailed.device_type)
}
inline std::string* DeviceDetailed::mutable_device_type() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_device_type();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.DeviceDetailed.device_type)
  return _s;
}
inline const std::string& DeviceDetailed::_internal_device_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.device_type_.Get();
}
inline void DeviceDetailed::_internal_set_device_type(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_type_.Set(value, GetArena());
}
inline std::string* DeviceDetailed::_internal_mutable_device_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.device_type_.Mutable( GetArena());
}
inline std::string* DeviceDetailed::release_device_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.DeviceDetailed.device_type)
  return _impl_.device_type_.Release();
}
inline void DeviceDetailed::set_allocated_device_type(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_type_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.device_type_.IsDefault()) {
    _impl_.device_type_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.DeviceDetailed.device_type)
}

// string device_description = 6 [json_name = "deviceDescription", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void DeviceDetailed::clear_device_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_description_.ClearToEmpty();
}
inline const std::string& DeviceDetailed::device_description() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeviceDetailed.device_description)
  return _internal_device_description();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeviceDetailed::set_device_description(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_description_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.DeviceDetailed.device_description)
}
inline std::string* DeviceDetailed::mutable_device_description() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_device_description();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.DeviceDetailed.device_description)
  return _s;
}
inline const std::string& DeviceDetailed::_internal_device_description() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.device_description_.Get();
}
inline void DeviceDetailed::_internal_set_device_description(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_description_.Set(value, GetArena());
}
inline std::string* DeviceDetailed::_internal_mutable_device_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.device_description_.Mutable( GetArena());
}
inline std::string* DeviceDetailed::release_device_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.DeviceDetailed.device_description)
  return _impl_.device_description_.Release();
}
inline void DeviceDetailed::set_allocated_device_description(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_description_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.device_description_.IsDefault()) {
    _impl_.device_description_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.DeviceDetailed.device_description)
}

// .kentik.device.v202504beta2.Site site = 7 [json_name = "site", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool DeviceDetailed::has_site() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.site_ != nullptr);
  return value;
}
inline void DeviceDetailed::clear_site() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.site_ != nullptr) _impl_.site_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::kentik::device::v202504beta2::Site& DeviceDetailed::_internal_site() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::device::v202504beta2::Site* p = _impl_.site_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::device::v202504beta2::Site&>(::kentik::device::v202504beta2::_Site_default_instance_);
}
inline const ::kentik::device::v202504beta2::Site& DeviceDetailed::site() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeviceDetailed.site)
  return _internal_site();
}
inline void DeviceDetailed::unsafe_arena_set_allocated_site(::kentik::device::v202504beta2::Site* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.site_);
  }
  _impl_.site_ = reinterpret_cast<::kentik::device::v202504beta2::Site*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.device.v202504beta2.DeviceDetailed.site)
}
inline ::kentik::device::v202504beta2::Site* DeviceDetailed::release_site() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::device::v202504beta2::Site* released = _impl_.site_;
  _impl_.site_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::device::v202504beta2::Site* DeviceDetailed::unsafe_arena_release_site() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.DeviceDetailed.site)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::device::v202504beta2::Site* temp = _impl_.site_;
  _impl_.site_ = nullptr;
  return temp;
}
inline ::kentik::device::v202504beta2::Site* DeviceDetailed::_internal_mutable_site() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.site_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::device::v202504beta2::Site>(GetArena());
    _impl_.site_ = reinterpret_cast<::kentik::device::v202504beta2::Site*>(p);
  }
  return _impl_.site_;
}
inline ::kentik::device::v202504beta2::Site* DeviceDetailed::mutable_site() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::kentik::device::v202504beta2::Site* _msg = _internal_mutable_site();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.DeviceDetailed.site)
  return _msg;
}
inline void DeviceDetailed::set_allocated_site(::kentik::device::v202504beta2::Site* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.site_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.site_ = reinterpret_cast<::kentik::device::v202504beta2::Site*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.DeviceDetailed.site)
}

// .kentik.device.v202504beta2.Plan plan = 8 [json_name = "plan", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool DeviceDetailed::has_plan() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.plan_ != nullptr);
  return value;
}
inline void DeviceDetailed::clear_plan() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.plan_ != nullptr) _impl_.plan_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::kentik::device::v202504beta2::Plan& DeviceDetailed::_internal_plan() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::device::v202504beta2::Plan* p = _impl_.plan_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::device::v202504beta2::Plan&>(::kentik::device::v202504beta2::_Plan_default_instance_);
}
inline const ::kentik::device::v202504beta2::Plan& DeviceDetailed::plan() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeviceDetailed.plan)
  return _internal_plan();
}
inline void DeviceDetailed::unsafe_arena_set_allocated_plan(::kentik::device::v202504beta2::Plan* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.plan_);
  }
  _impl_.plan_ = reinterpret_cast<::kentik::device::v202504beta2::Plan*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.device.v202504beta2.DeviceDetailed.plan)
}
inline ::kentik::device::v202504beta2::Plan* DeviceDetailed::release_plan() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::kentik::device::v202504beta2::Plan* released = _impl_.plan_;
  _impl_.plan_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::device::v202504beta2::Plan* DeviceDetailed::unsafe_arena_release_plan() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.DeviceDetailed.plan)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::kentik::device::v202504beta2::Plan* temp = _impl_.plan_;
  _impl_.plan_ = nullptr;
  return temp;
}
inline ::kentik::device::v202504beta2::Plan* DeviceDetailed::_internal_mutable_plan() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.plan_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::device::v202504beta2::Plan>(GetArena());
    _impl_.plan_ = reinterpret_cast<::kentik::device::v202504beta2::Plan*>(p);
  }
  return _impl_.plan_;
}
inline ::kentik::device::v202504beta2::Plan* DeviceDetailed::mutable_plan() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::kentik::device::v202504beta2::Plan* _msg = _internal_mutable_plan();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.DeviceDetailed.plan)
  return _msg;
}
inline void DeviceDetailed::set_allocated_plan(::kentik::device::v202504beta2::Plan* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.plan_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.plan_ = reinterpret_cast<::kentik::device::v202504beta2::Plan*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.DeviceDetailed.plan)
}

// repeated .kentik.device.v202504beta2.Label labels = 9 [json_name = "labels", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int DeviceDetailed::_internal_labels_size() const {
  return _internal_labels().size();
}
inline int DeviceDetailed::labels_size() const {
  return _internal_labels_size();
}
inline void DeviceDetailed::clear_labels() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.labels_.Clear();
}
inline ::kentik::device::v202504beta2::Label* DeviceDetailed::mutable_labels(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.DeviceDetailed.labels)
  return _internal_mutable_labels()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::kentik::device::v202504beta2::Label>* DeviceDetailed::mutable_labels()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.device.v202504beta2.DeviceDetailed.labels)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_labels();
}
inline const ::kentik::device::v202504beta2::Label& DeviceDetailed::labels(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeviceDetailed.labels)
  return _internal_labels().Get(index);
}
inline ::kentik::device::v202504beta2::Label* DeviceDetailed::add_labels() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::kentik::device::v202504beta2::Label* _add = _internal_mutable_labels()->Add();
  // @@protoc_insertion_point(field_add:kentik.device.v202504beta2.DeviceDetailed.labels)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::device::v202504beta2::Label>& DeviceDetailed::labels() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.device.v202504beta2.DeviceDetailed.labels)
  return _internal_labels();
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::device::v202504beta2::Label>&
DeviceDetailed::_internal_labels() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.labels_;
}
inline ::google::protobuf::RepeatedPtrField<::kentik::device::v202504beta2::Label>*
DeviceDetailed::_internal_mutable_labels() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.labels_;
}

// repeated .kentik.device.v202504beta2.Interface all_interfaces = 10 [json_name = "allInterfaces", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int DeviceDetailed::_internal_all_interfaces_size() const {
  return _internal_all_interfaces().size();
}
inline int DeviceDetailed::all_interfaces_size() const {
  return _internal_all_interfaces_size();
}
inline void DeviceDetailed::clear_all_interfaces() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.all_interfaces_.Clear();
}
inline ::kentik::device::v202504beta2::Interface* DeviceDetailed::mutable_all_interfaces(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.DeviceDetailed.all_interfaces)
  return _internal_mutable_all_interfaces()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::kentik::device::v202504beta2::Interface>* DeviceDetailed::mutable_all_interfaces()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.device.v202504beta2.DeviceDetailed.all_interfaces)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_all_interfaces();
}
inline const ::kentik::device::v202504beta2::Interface& DeviceDetailed::all_interfaces(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeviceDetailed.all_interfaces)
  return _internal_all_interfaces().Get(index);
}
inline ::kentik::device::v202504beta2::Interface* DeviceDetailed::add_all_interfaces() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::kentik::device::v202504beta2::Interface* _add = _internal_mutable_all_interfaces()->Add();
  // @@protoc_insertion_point(field_add:kentik.device.v202504beta2.DeviceDetailed.all_interfaces)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::device::v202504beta2::Interface>& DeviceDetailed::all_interfaces() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.device.v202504beta2.DeviceDetailed.all_interfaces)
  return _internal_all_interfaces();
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::device::v202504beta2::Interface>&
DeviceDetailed::_internal_all_interfaces() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.all_interfaces_;
}
inline ::google::protobuf::RepeatedPtrField<::kentik::device::v202504beta2::Interface>*
DeviceDetailed::_internal_mutable_all_interfaces() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.all_interfaces_;
}

// string device_flow_type = 11 [json_name = "deviceFlowType", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void DeviceDetailed::clear_device_flow_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_flow_type_.ClearToEmpty();
}
inline const std::string& DeviceDetailed::device_flow_type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeviceDetailed.device_flow_type)
  return _internal_device_flow_type();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeviceDetailed::set_device_flow_type(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_flow_type_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.DeviceDetailed.device_flow_type)
}
inline std::string* DeviceDetailed::mutable_device_flow_type() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_device_flow_type();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.DeviceDetailed.device_flow_type)
  return _s;
}
inline const std::string& DeviceDetailed::_internal_device_flow_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.device_flow_type_.Get();
}
inline void DeviceDetailed::_internal_set_device_flow_type(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_flow_type_.Set(value, GetArena());
}
inline std::string* DeviceDetailed::_internal_mutable_device_flow_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.device_flow_type_.Mutable( GetArena());
}
inline std::string* DeviceDetailed::release_device_flow_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.DeviceDetailed.device_flow_type)
  return _impl_.device_flow_type_.Release();
}
inline void DeviceDetailed::set_allocated_device_flow_type(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_flow_type_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.device_flow_type_.IsDefault()) {
    _impl_.device_flow_type_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.DeviceDetailed.device_flow_type)
}

// string device_sample_rate = 12 [json_name = "deviceSampleRate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void DeviceDetailed::clear_device_sample_rate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_sample_rate_.ClearToEmpty();
}
inline const std::string& DeviceDetailed::device_sample_rate() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeviceDetailed.device_sample_rate)
  return _internal_device_sample_rate();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeviceDetailed::set_device_sample_rate(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_sample_rate_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.DeviceDetailed.device_sample_rate)
}
inline std::string* DeviceDetailed::mutable_device_sample_rate() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_device_sample_rate();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.DeviceDetailed.device_sample_rate)
  return _s;
}
inline const std::string& DeviceDetailed::_internal_device_sample_rate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.device_sample_rate_.Get();
}
inline void DeviceDetailed::_internal_set_device_sample_rate(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_sample_rate_.Set(value, GetArena());
}
inline std::string* DeviceDetailed::_internal_mutable_device_sample_rate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.device_sample_rate_.Mutable( GetArena());
}
inline std::string* DeviceDetailed::release_device_sample_rate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.DeviceDetailed.device_sample_rate)
  return _impl_.device_sample_rate_.Release();
}
inline void DeviceDetailed::set_allocated_device_sample_rate(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_sample_rate_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.device_sample_rate_.IsDefault()) {
    _impl_.device_sample_rate_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.DeviceDetailed.device_sample_rate)
}

// repeated string sending_ips = 13 [json_name = "sendingIps", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int DeviceDetailed::_internal_sending_ips_size() const {
  return _internal_sending_ips().size();
}
inline int DeviceDetailed::sending_ips_size() const {
  return _internal_sending_ips_size();
}
inline void DeviceDetailed::clear_sending_ips() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sending_ips_.Clear();
}
inline std::string* DeviceDetailed::add_sending_ips() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_sending_ips()->Add();
  // @@protoc_insertion_point(field_add_mutable:kentik.device.v202504beta2.DeviceDetailed.sending_ips)
  return _s;
}
inline const std::string& DeviceDetailed::sending_ips(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeviceDetailed.sending_ips)
  return _internal_sending_ips().Get(index);
}
inline std::string* DeviceDetailed::mutable_sending_ips(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.DeviceDetailed.sending_ips)
  return _internal_mutable_sending_ips()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void DeviceDetailed::set_sending_ips(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_sending_ips()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.DeviceDetailed.sending_ips)
}
template <typename Arg_, typename... Args_>
inline void DeviceDetailed::add_sending_ips(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_sending_ips(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:kentik.device.v202504beta2.DeviceDetailed.sending_ips)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
DeviceDetailed::sending_ips() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.device.v202504beta2.DeviceDetailed.sending_ips)
  return _internal_sending_ips();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
DeviceDetailed::mutable_sending_ips() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.device.v202504beta2.DeviceDetailed.sending_ips)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_sending_ips();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
DeviceDetailed::_internal_sending_ips() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sending_ips_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
DeviceDetailed::_internal_mutable_sending_ips() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.sending_ips_;
}

// string device_snmp_ip = 14 [json_name = "deviceSnmpIp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void DeviceDetailed::clear_device_snmp_ip() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_snmp_ip_.ClearToEmpty();
}
inline const std::string& DeviceDetailed::device_snmp_ip() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeviceDetailed.device_snmp_ip)
  return _internal_device_snmp_ip();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeviceDetailed::set_device_snmp_ip(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_snmp_ip_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.DeviceDetailed.device_snmp_ip)
}
inline std::string* DeviceDetailed::mutable_device_snmp_ip() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_device_snmp_ip();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.DeviceDetailed.device_snmp_ip)
  return _s;
}
inline const std::string& DeviceDetailed::_internal_device_snmp_ip() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.device_snmp_ip_.Get();
}
inline void DeviceDetailed::_internal_set_device_snmp_ip(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_snmp_ip_.Set(value, GetArena());
}
inline std::string* DeviceDetailed::_internal_mutable_device_snmp_ip() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.device_snmp_ip_.Mutable( GetArena());
}
inline std::string* DeviceDetailed::release_device_snmp_ip() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.DeviceDetailed.device_snmp_ip)
  return _impl_.device_snmp_ip_.Release();
}
inline void DeviceDetailed::set_allocated_device_snmp_ip(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_snmp_ip_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.device_snmp_ip_.IsDefault()) {
    _impl_.device_snmp_ip_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.DeviceDetailed.device_snmp_ip)
}

// string device_snmp_community = 15 [json_name = "deviceSnmpCommunity", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void DeviceDetailed::clear_device_snmp_community() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_snmp_community_.ClearToEmpty();
}
inline const std::string& DeviceDetailed::device_snmp_community() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeviceDetailed.device_snmp_community)
  return _internal_device_snmp_community();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeviceDetailed::set_device_snmp_community(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_snmp_community_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.DeviceDetailed.device_snmp_community)
}
inline std::string* DeviceDetailed::mutable_device_snmp_community() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_device_snmp_community();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.DeviceDetailed.device_snmp_community)
  return _s;
}
inline const std::string& DeviceDetailed::_internal_device_snmp_community() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.device_snmp_community_.Get();
}
inline void DeviceDetailed::_internal_set_device_snmp_community(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_snmp_community_.Set(value, GetArena());
}
inline std::string* DeviceDetailed::_internal_mutable_device_snmp_community() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.device_snmp_community_.Mutable( GetArena());
}
inline std::string* DeviceDetailed::release_device_snmp_community() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.DeviceDetailed.device_snmp_community)
  return _impl_.device_snmp_community_.Release();
}
inline void DeviceDetailed::set_allocated_device_snmp_community(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_snmp_community_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.device_snmp_community_.IsDefault()) {
    _impl_.device_snmp_community_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.DeviceDetailed.device_snmp_community)
}

// optional bool minimize_snmp = 16 [json_name = "minimizeSnmp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool DeviceDetailed::has_minimize_snmp() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline void DeviceDetailed::clear_minimize_snmp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.minimize_snmp_ = false;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline bool DeviceDetailed::minimize_snmp() const {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeviceDetailed.minimize_snmp)
  return _internal_minimize_snmp();
}
inline void DeviceDetailed::set_minimize_snmp(bool value) {
  _internal_set_minimize_snmp(value);
  _impl_._has_bits_[0] |= 0x00000080u;
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.DeviceDetailed.minimize_snmp)
}
inline bool DeviceDetailed::_internal_minimize_snmp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.minimize_snmp_;
}
inline void DeviceDetailed::_internal_set_minimize_snmp(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.minimize_snmp_ = value;
}

// string device_bgp_type = 17 [json_name = "deviceBgpType", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void DeviceDetailed::clear_device_bgp_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_bgp_type_.ClearToEmpty();
}
inline const std::string& DeviceDetailed::device_bgp_type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeviceDetailed.device_bgp_type)
  return _internal_device_bgp_type();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeviceDetailed::set_device_bgp_type(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_bgp_type_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.DeviceDetailed.device_bgp_type)
}
inline std::string* DeviceDetailed::mutable_device_bgp_type() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_device_bgp_type();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.DeviceDetailed.device_bgp_type)
  return _s;
}
inline const std::string& DeviceDetailed::_internal_device_bgp_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.device_bgp_type_.Get();
}
inline void DeviceDetailed::_internal_set_device_bgp_type(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_bgp_type_.Set(value, GetArena());
}
inline std::string* DeviceDetailed::_internal_mutable_device_bgp_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.device_bgp_type_.Mutable( GetArena());
}
inline std::string* DeviceDetailed::release_device_bgp_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.DeviceDetailed.device_bgp_type)
  return _impl_.device_bgp_type_.Release();
}
inline void DeviceDetailed::set_allocated_device_bgp_type(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_bgp_type_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.device_bgp_type_.IsDefault()) {
    _impl_.device_bgp_type_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.DeviceDetailed.device_bgp_type)
}

// string device_bgp_neighbor_ip = 18 [json_name = "deviceBgpNeighborIp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void DeviceDetailed::clear_device_bgp_neighbor_ip() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_bgp_neighbor_ip_.ClearToEmpty();
}
inline const std::string& DeviceDetailed::device_bgp_neighbor_ip() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeviceDetailed.device_bgp_neighbor_ip)
  return _internal_device_bgp_neighbor_ip();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeviceDetailed::set_device_bgp_neighbor_ip(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_bgp_neighbor_ip_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.DeviceDetailed.device_bgp_neighbor_ip)
}
inline std::string* DeviceDetailed::mutable_device_bgp_neighbor_ip() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_device_bgp_neighbor_ip();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.DeviceDetailed.device_bgp_neighbor_ip)
  return _s;
}
inline const std::string& DeviceDetailed::_internal_device_bgp_neighbor_ip() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.device_bgp_neighbor_ip_.Get();
}
inline void DeviceDetailed::_internal_set_device_bgp_neighbor_ip(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_bgp_neighbor_ip_.Set(value, GetArena());
}
inline std::string* DeviceDetailed::_internal_mutable_device_bgp_neighbor_ip() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.device_bgp_neighbor_ip_.Mutable( GetArena());
}
inline std::string* DeviceDetailed::release_device_bgp_neighbor_ip() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.DeviceDetailed.device_bgp_neighbor_ip)
  return _impl_.device_bgp_neighbor_ip_.Release();
}
inline void DeviceDetailed::set_allocated_device_bgp_neighbor_ip(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_bgp_neighbor_ip_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.device_bgp_neighbor_ip_.IsDefault()) {
    _impl_.device_bgp_neighbor_ip_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.DeviceDetailed.device_bgp_neighbor_ip)
}

// string device_bgp_neighbor_ip6 = 19 [json_name = "deviceBgpNeighborIp6", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void DeviceDetailed::clear_device_bgp_neighbor_ip6() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_bgp_neighbor_ip6_.ClearToEmpty();
}
inline const std::string& DeviceDetailed::device_bgp_neighbor_ip6() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeviceDetailed.device_bgp_neighbor_ip6)
  return _internal_device_bgp_neighbor_ip6();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeviceDetailed::set_device_bgp_neighbor_ip6(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_bgp_neighbor_ip6_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.DeviceDetailed.device_bgp_neighbor_ip6)
}
inline std::string* DeviceDetailed::mutable_device_bgp_neighbor_ip6() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_device_bgp_neighbor_ip6();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.DeviceDetailed.device_bgp_neighbor_ip6)
  return _s;
}
inline const std::string& DeviceDetailed::_internal_device_bgp_neighbor_ip6() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.device_bgp_neighbor_ip6_.Get();
}
inline void DeviceDetailed::_internal_set_device_bgp_neighbor_ip6(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_bgp_neighbor_ip6_.Set(value, GetArena());
}
inline std::string* DeviceDetailed::_internal_mutable_device_bgp_neighbor_ip6() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.device_bgp_neighbor_ip6_.Mutable( GetArena());
}
inline std::string* DeviceDetailed::release_device_bgp_neighbor_ip6() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.DeviceDetailed.device_bgp_neighbor_ip6)
  return _impl_.device_bgp_neighbor_ip6_.Release();
}
inline void DeviceDetailed::set_allocated_device_bgp_neighbor_ip6(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_bgp_neighbor_ip6_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.device_bgp_neighbor_ip6_.IsDefault()) {
    _impl_.device_bgp_neighbor_ip6_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.DeviceDetailed.device_bgp_neighbor_ip6)
}

// string device_bgp_neighbor_asn = 20 [json_name = "deviceBgpNeighborAsn", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void DeviceDetailed::clear_device_bgp_neighbor_asn() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_bgp_neighbor_asn_.ClearToEmpty();
}
inline const std::string& DeviceDetailed::device_bgp_neighbor_asn() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeviceDetailed.device_bgp_neighbor_asn)
  return _internal_device_bgp_neighbor_asn();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeviceDetailed::set_device_bgp_neighbor_asn(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_bgp_neighbor_asn_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.DeviceDetailed.device_bgp_neighbor_asn)
}
inline std::string* DeviceDetailed::mutable_device_bgp_neighbor_asn() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_device_bgp_neighbor_asn();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.DeviceDetailed.device_bgp_neighbor_asn)
  return _s;
}
inline const std::string& DeviceDetailed::_internal_device_bgp_neighbor_asn() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.device_bgp_neighbor_asn_.Get();
}
inline void DeviceDetailed::_internal_set_device_bgp_neighbor_asn(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_bgp_neighbor_asn_.Set(value, GetArena());
}
inline std::string* DeviceDetailed::_internal_mutable_device_bgp_neighbor_asn() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.device_bgp_neighbor_asn_.Mutable( GetArena());
}
inline std::string* DeviceDetailed::release_device_bgp_neighbor_asn() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.DeviceDetailed.device_bgp_neighbor_asn)
  return _impl_.device_bgp_neighbor_asn_.Release();
}
inline void DeviceDetailed::set_allocated_device_bgp_neighbor_asn(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_bgp_neighbor_asn_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.device_bgp_neighbor_asn_.IsDefault()) {
    _impl_.device_bgp_neighbor_asn_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.DeviceDetailed.device_bgp_neighbor_asn)
}

// bool device_bgp_flowspec = 21 [json_name = "deviceBgpFlowspec", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void DeviceDetailed::clear_device_bgp_flowspec() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_bgp_flowspec_ = false;
}
inline bool DeviceDetailed::device_bgp_flowspec() const {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeviceDetailed.device_bgp_flowspec)
  return _internal_device_bgp_flowspec();
}
inline void DeviceDetailed::set_device_bgp_flowspec(bool value) {
  _internal_set_device_bgp_flowspec(value);
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.DeviceDetailed.device_bgp_flowspec)
}
inline bool DeviceDetailed::_internal_device_bgp_flowspec() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.device_bgp_flowspec_;
}
inline void DeviceDetailed::_internal_set_device_bgp_flowspec(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_bgp_flowspec_ = value;
}

// string device_bgp_password = 22 [json_name = "deviceBgpPassword", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void DeviceDetailed::clear_device_bgp_password() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_bgp_password_.ClearToEmpty();
}
inline const std::string& DeviceDetailed::device_bgp_password() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeviceDetailed.device_bgp_password)
  return _internal_device_bgp_password();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeviceDetailed::set_device_bgp_password(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_bgp_password_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.DeviceDetailed.device_bgp_password)
}
inline std::string* DeviceDetailed::mutable_device_bgp_password() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_device_bgp_password();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.DeviceDetailed.device_bgp_password)
  return _s;
}
inline const std::string& DeviceDetailed::_internal_device_bgp_password() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.device_bgp_password_.Get();
}
inline void DeviceDetailed::_internal_set_device_bgp_password(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_bgp_password_.Set(value, GetArena());
}
inline std::string* DeviceDetailed::_internal_mutable_device_bgp_password() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.device_bgp_password_.Mutable( GetArena());
}
inline std::string* DeviceDetailed::release_device_bgp_password() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.DeviceDetailed.device_bgp_password)
  return _impl_.device_bgp_password_.Release();
}
inline void DeviceDetailed::set_allocated_device_bgp_password(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_bgp_password_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.device_bgp_password_.IsDefault()) {
    _impl_.device_bgp_password_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.DeviceDetailed.device_bgp_password)
}

// bool device_bgp_label_unicast = 23 [json_name = "deviceBgpLabelUnicast", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void DeviceDetailed::clear_device_bgp_label_unicast() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_bgp_label_unicast_ = false;
}
inline bool DeviceDetailed::device_bgp_label_unicast() const {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeviceDetailed.device_bgp_label_unicast)
  return _internal_device_bgp_label_unicast();
}
inline void DeviceDetailed::set_device_bgp_label_unicast(bool value) {
  _internal_set_device_bgp_label_unicast(value);
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.DeviceDetailed.device_bgp_label_unicast)
}
inline bool DeviceDetailed::_internal_device_bgp_label_unicast() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.device_bgp_label_unicast_;
}
inline void DeviceDetailed::_internal_set_device_bgp_label_unicast(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_bgp_label_unicast_ = value;
}

// string bgp_lookup_strategy = 24 [json_name = "bgpLookupStrategy", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void DeviceDetailed::clear_bgp_lookup_strategy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bgp_lookup_strategy_.ClearToEmpty();
}
inline const std::string& DeviceDetailed::bgp_lookup_strategy() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeviceDetailed.bgp_lookup_strategy)
  return _internal_bgp_lookup_strategy();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeviceDetailed::set_bgp_lookup_strategy(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bgp_lookup_strategy_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.DeviceDetailed.bgp_lookup_strategy)
}
inline std::string* DeviceDetailed::mutable_bgp_lookup_strategy() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_bgp_lookup_strategy();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.DeviceDetailed.bgp_lookup_strategy)
  return _s;
}
inline const std::string& DeviceDetailed::_internal_bgp_lookup_strategy() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bgp_lookup_strategy_.Get();
}
inline void DeviceDetailed::_internal_set_bgp_lookup_strategy(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bgp_lookup_strategy_.Set(value, GetArena());
}
inline std::string* DeviceDetailed::_internal_mutable_bgp_lookup_strategy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.bgp_lookup_strategy_.Mutable( GetArena());
}
inline std::string* DeviceDetailed::release_bgp_lookup_strategy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.DeviceDetailed.bgp_lookup_strategy)
  return _impl_.bgp_lookup_strategy_.Release();
}
inline void DeviceDetailed::set_allocated_bgp_lookup_strategy(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bgp_lookup_strategy_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.bgp_lookup_strategy_.IsDefault()) {
    _impl_.bgp_lookup_strategy_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.DeviceDetailed.bgp_lookup_strategy)
}

// string device_status = 25 [json_name = "deviceStatus", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void DeviceDetailed::clear_device_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_status_.ClearToEmpty();
}
inline const std::string& DeviceDetailed::device_status() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeviceDetailed.device_status)
  return _internal_device_status();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeviceDetailed::set_device_status(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_status_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.DeviceDetailed.device_status)
}
inline std::string* DeviceDetailed::mutable_device_status() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_device_status();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.DeviceDetailed.device_status)
  return _s;
}
inline const std::string& DeviceDetailed::_internal_device_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.device_status_.Get();
}
inline void DeviceDetailed::_internal_set_device_status(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_status_.Set(value, GetArena());
}
inline std::string* DeviceDetailed::_internal_mutable_device_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.device_status_.Mutable( GetArena());
}
inline std::string* DeviceDetailed::release_device_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.DeviceDetailed.device_status)
  return _impl_.device_status_.Release();
}
inline void DeviceDetailed::set_allocated_device_status(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_status_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.device_status_.IsDefault()) {
    _impl_.device_status_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.DeviceDetailed.device_status)
}

// string use_bgp_device_id = 26 [json_name = "useBgpDeviceId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void DeviceDetailed::clear_use_bgp_device_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.use_bgp_device_id_.ClearToEmpty();
}
inline const std::string& DeviceDetailed::use_bgp_device_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeviceDetailed.use_bgp_device_id)
  return _internal_use_bgp_device_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeviceDetailed::set_use_bgp_device_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.use_bgp_device_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.DeviceDetailed.use_bgp_device_id)
}
inline std::string* DeviceDetailed::mutable_use_bgp_device_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_use_bgp_device_id();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.DeviceDetailed.use_bgp_device_id)
  return _s;
}
inline const std::string& DeviceDetailed::_internal_use_bgp_device_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.use_bgp_device_id_.Get();
}
inline void DeviceDetailed::_internal_set_use_bgp_device_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.use_bgp_device_id_.Set(value, GetArena());
}
inline std::string* DeviceDetailed::_internal_mutable_use_bgp_device_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.use_bgp_device_id_.Mutable( GetArena());
}
inline std::string* DeviceDetailed::release_use_bgp_device_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.DeviceDetailed.use_bgp_device_id)
  return _impl_.use_bgp_device_id_.Release();
}
inline void DeviceDetailed::set_allocated_use_bgp_device_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.use_bgp_device_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.use_bgp_device_id_.IsDefault()) {
    _impl_.use_bgp_device_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.DeviceDetailed.use_bgp_device_id)
}

// string custom_columns = 27 [json_name = "customColumns", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void DeviceDetailed::clear_custom_columns() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.custom_columns_.ClearToEmpty();
}
inline const std::string& DeviceDetailed::custom_columns() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeviceDetailed.custom_columns)
  return _internal_custom_columns();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeviceDetailed::set_custom_columns(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.custom_columns_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.DeviceDetailed.custom_columns)
}
inline std::string* DeviceDetailed::mutable_custom_columns() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_custom_columns();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.DeviceDetailed.custom_columns)
  return _s;
}
inline const std::string& DeviceDetailed::_internal_custom_columns() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.custom_columns_.Get();
}
inline void DeviceDetailed::_internal_set_custom_columns(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.custom_columns_.Set(value, GetArena());
}
inline std::string* DeviceDetailed::_internal_mutable_custom_columns() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.custom_columns_.Mutable( GetArena());
}
inline std::string* DeviceDetailed::release_custom_columns() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.DeviceDetailed.custom_columns)
  return _impl_.custom_columns_.Release();
}
inline void DeviceDetailed::set_allocated_custom_columns(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.custom_columns_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.custom_columns_.IsDefault()) {
    _impl_.custom_columns_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.DeviceDetailed.custom_columns)
}

// repeated .kentik.device.v202504beta2.CustomColumnData custom_column_data = 28 [json_name = "customColumnData", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int DeviceDetailed::_internal_custom_column_data_size() const {
  return _internal_custom_column_data().size();
}
inline int DeviceDetailed::custom_column_data_size() const {
  return _internal_custom_column_data_size();
}
inline void DeviceDetailed::clear_custom_column_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.custom_column_data_.Clear();
}
inline ::kentik::device::v202504beta2::CustomColumnData* DeviceDetailed::mutable_custom_column_data(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.DeviceDetailed.custom_column_data)
  return _internal_mutable_custom_column_data()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::kentik::device::v202504beta2::CustomColumnData>* DeviceDetailed::mutable_custom_column_data()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.device.v202504beta2.DeviceDetailed.custom_column_data)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_custom_column_data();
}
inline const ::kentik::device::v202504beta2::CustomColumnData& DeviceDetailed::custom_column_data(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeviceDetailed.custom_column_data)
  return _internal_custom_column_data().Get(index);
}
inline ::kentik::device::v202504beta2::CustomColumnData* DeviceDetailed::add_custom_column_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::kentik::device::v202504beta2::CustomColumnData* _add = _internal_mutable_custom_column_data()->Add();
  // @@protoc_insertion_point(field_add:kentik.device.v202504beta2.DeviceDetailed.custom_column_data)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::device::v202504beta2::CustomColumnData>& DeviceDetailed::custom_column_data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.device.v202504beta2.DeviceDetailed.custom_column_data)
  return _internal_custom_column_data();
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::device::v202504beta2::CustomColumnData>&
DeviceDetailed::_internal_custom_column_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.custom_column_data_;
}
inline ::google::protobuf::RepeatedPtrField<::kentik::device::v202504beta2::CustomColumnData>*
DeviceDetailed::_internal_mutable_custom_column_data() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.custom_column_data_;
}

// string device_chf_client_port = 29 [json_name = "deviceChfClientPort", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void DeviceDetailed::clear_device_chf_client_port() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_chf_client_port_.ClearToEmpty();
}
inline const std::string& DeviceDetailed::device_chf_client_port() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeviceDetailed.device_chf_client_port)
  return _internal_device_chf_client_port();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeviceDetailed::set_device_chf_client_port(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_chf_client_port_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.DeviceDetailed.device_chf_client_port)
}
inline std::string* DeviceDetailed::mutable_device_chf_client_port() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_device_chf_client_port();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.DeviceDetailed.device_chf_client_port)
  return _s;
}
inline const std::string& DeviceDetailed::_internal_device_chf_client_port() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.device_chf_client_port_.Get();
}
inline void DeviceDetailed::_internal_set_device_chf_client_port(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_chf_client_port_.Set(value, GetArena());
}
inline std::string* DeviceDetailed::_internal_mutable_device_chf_client_port() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.device_chf_client_port_.Mutable( GetArena());
}
inline std::string* DeviceDetailed::release_device_chf_client_port() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.DeviceDetailed.device_chf_client_port)
  return _impl_.device_chf_client_port_.Release();
}
inline void DeviceDetailed::set_allocated_device_chf_client_port(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_chf_client_port_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.device_chf_client_port_.IsDefault()) {
    _impl_.device_chf_client_port_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.DeviceDetailed.device_chf_client_port)
}

// string device_chf_client_protocol = 30 [json_name = "deviceChfClientProtocol", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void DeviceDetailed::clear_device_chf_client_protocol() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_chf_client_protocol_.ClearToEmpty();
}
inline const std::string& DeviceDetailed::device_chf_client_protocol() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeviceDetailed.device_chf_client_protocol)
  return _internal_device_chf_client_protocol();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeviceDetailed::set_device_chf_client_protocol(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_chf_client_protocol_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.DeviceDetailed.device_chf_client_protocol)
}
inline std::string* DeviceDetailed::mutable_device_chf_client_protocol() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_device_chf_client_protocol();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.DeviceDetailed.device_chf_client_protocol)
  return _s;
}
inline const std::string& DeviceDetailed::_internal_device_chf_client_protocol() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.device_chf_client_protocol_.Get();
}
inline void DeviceDetailed::_internal_set_device_chf_client_protocol(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_chf_client_protocol_.Set(value, GetArena());
}
inline std::string* DeviceDetailed::_internal_mutable_device_chf_client_protocol() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.device_chf_client_protocol_.Mutable( GetArena());
}
inline std::string* DeviceDetailed::release_device_chf_client_protocol() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.DeviceDetailed.device_chf_client_protocol)
  return _impl_.device_chf_client_protocol_.Release();
}
inline void DeviceDetailed::set_allocated_device_chf_client_protocol(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_chf_client_protocol_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.device_chf_client_protocol_.IsDefault()) {
    _impl_.device_chf_client_protocol_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.DeviceDetailed.device_chf_client_protocol)
}

// string device_chf_interface = 31 [json_name = "deviceChfInterface", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void DeviceDetailed::clear_device_chf_interface() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_chf_interface_.ClearToEmpty();
}
inline const std::string& DeviceDetailed::device_chf_interface() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeviceDetailed.device_chf_interface)
  return _internal_device_chf_interface();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeviceDetailed::set_device_chf_interface(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_chf_interface_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.DeviceDetailed.device_chf_interface)
}
inline std::string* DeviceDetailed::mutable_device_chf_interface() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_device_chf_interface();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.DeviceDetailed.device_chf_interface)
  return _s;
}
inline const std::string& DeviceDetailed::_internal_device_chf_interface() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.device_chf_interface_.Get();
}
inline void DeviceDetailed::_internal_set_device_chf_interface(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_chf_interface_.Set(value, GetArena());
}
inline std::string* DeviceDetailed::_internal_mutable_device_chf_interface() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.device_chf_interface_.Mutable( GetArena());
}
inline std::string* DeviceDetailed::release_device_chf_interface() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.DeviceDetailed.device_chf_interface)
  return _impl_.device_chf_interface_.Release();
}
inline void DeviceDetailed::set_allocated_device_chf_interface(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_chf_interface_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.device_chf_interface_.IsDefault()) {
    _impl_.device_chf_interface_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.DeviceDetailed.device_chf_interface)
}

// string device_agent_type = 32 [json_name = "deviceAgentType", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void DeviceDetailed::clear_device_agent_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_agent_type_.ClearToEmpty();
}
inline const std::string& DeviceDetailed::device_agent_type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeviceDetailed.device_agent_type)
  return _internal_device_agent_type();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeviceDetailed::set_device_agent_type(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_agent_type_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.DeviceDetailed.device_agent_type)
}
inline std::string* DeviceDetailed::mutable_device_agent_type() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_device_agent_type();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.DeviceDetailed.device_agent_type)
  return _s;
}
inline const std::string& DeviceDetailed::_internal_device_agent_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.device_agent_type_.Get();
}
inline void DeviceDetailed::_internal_set_device_agent_type(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_agent_type_.Set(value, GetArena());
}
inline std::string* DeviceDetailed::_internal_mutable_device_agent_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.device_agent_type_.Mutable( GetArena());
}
inline std::string* DeviceDetailed::release_device_agent_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.DeviceDetailed.device_agent_type)
  return _impl_.device_agent_type_.Release();
}
inline void DeviceDetailed::set_allocated_device_agent_type(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_agent_type_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.device_agent_type_.IsDefault()) {
    _impl_.device_agent_type_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.DeviceDetailed.device_agent_type)
}

// uint32 max_flow_rate = 33 [json_name = "maxFlowRate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void DeviceDetailed::clear_max_flow_rate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_flow_rate_ = 0u;
}
inline ::uint32_t DeviceDetailed::max_flow_rate() const {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeviceDetailed.max_flow_rate)
  return _internal_max_flow_rate();
}
inline void DeviceDetailed::set_max_flow_rate(::uint32_t value) {
  _internal_set_max_flow_rate(value);
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.DeviceDetailed.max_flow_rate)
}
inline ::uint32_t DeviceDetailed::_internal_max_flow_rate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.max_flow_rate_;
}
inline void DeviceDetailed::_internal_set_max_flow_rate(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_flow_rate_ = value;
}

// uint32 max_big_flow_rate = 34 [json_name = "maxBigFlowRate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void DeviceDetailed::clear_max_big_flow_rate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_big_flow_rate_ = 0u;
}
inline ::uint32_t DeviceDetailed::max_big_flow_rate() const {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeviceDetailed.max_big_flow_rate)
  return _internal_max_big_flow_rate();
}
inline void DeviceDetailed::set_max_big_flow_rate(::uint32_t value) {
  _internal_set_max_big_flow_rate(value);
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.DeviceDetailed.max_big_flow_rate)
}
inline ::uint32_t DeviceDetailed::_internal_max_big_flow_rate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.max_big_flow_rate_;
}
inline void DeviceDetailed::_internal_set_max_big_flow_rate(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_big_flow_rate_ = value;
}

// string device_proxy_bgp = 35 [json_name = "deviceProxyBgp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void DeviceDetailed::clear_device_proxy_bgp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_proxy_bgp_.ClearToEmpty();
}
inline const std::string& DeviceDetailed::device_proxy_bgp() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeviceDetailed.device_proxy_bgp)
  return _internal_device_proxy_bgp();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeviceDetailed::set_device_proxy_bgp(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_proxy_bgp_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.DeviceDetailed.device_proxy_bgp)
}
inline std::string* DeviceDetailed::mutable_device_proxy_bgp() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_device_proxy_bgp();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.DeviceDetailed.device_proxy_bgp)
  return _s;
}
inline const std::string& DeviceDetailed::_internal_device_proxy_bgp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.device_proxy_bgp_.Get();
}
inline void DeviceDetailed::_internal_set_device_proxy_bgp(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_proxy_bgp_.Set(value, GetArena());
}
inline std::string* DeviceDetailed::_internal_mutable_device_proxy_bgp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.device_proxy_bgp_.Mutable( GetArena());
}
inline std::string* DeviceDetailed::release_device_proxy_bgp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.DeviceDetailed.device_proxy_bgp)
  return _impl_.device_proxy_bgp_.Release();
}
inline void DeviceDetailed::set_allocated_device_proxy_bgp(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_proxy_bgp_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.device_proxy_bgp_.IsDefault()) {
    _impl_.device_proxy_bgp_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.DeviceDetailed.device_proxy_bgp)
}

// string device_proxy_bgp6 = 36 [json_name = "deviceProxyBgp6", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void DeviceDetailed::clear_device_proxy_bgp6() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_proxy_bgp6_.ClearToEmpty();
}
inline const std::string& DeviceDetailed::device_proxy_bgp6() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeviceDetailed.device_proxy_bgp6)
  return _internal_device_proxy_bgp6();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeviceDetailed::set_device_proxy_bgp6(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_proxy_bgp6_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.DeviceDetailed.device_proxy_bgp6)
}
inline std::string* DeviceDetailed::mutable_device_proxy_bgp6() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_device_proxy_bgp6();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.DeviceDetailed.device_proxy_bgp6)
  return _s;
}
inline const std::string& DeviceDetailed::_internal_device_proxy_bgp6() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.device_proxy_bgp6_.Get();
}
inline void DeviceDetailed::_internal_set_device_proxy_bgp6(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_proxy_bgp6_.Set(value, GetArena());
}
inline std::string* DeviceDetailed::_internal_mutable_device_proxy_bgp6() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.device_proxy_bgp6_.Mutable( GetArena());
}
inline std::string* DeviceDetailed::release_device_proxy_bgp6() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.DeviceDetailed.device_proxy_bgp6)
  return _impl_.device_proxy_bgp6_.Release();
}
inline void DeviceDetailed::set_allocated_device_proxy_bgp6(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_proxy_bgp6_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.device_proxy_bgp6_.IsDefault()) {
    _impl_.device_proxy_bgp6_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.DeviceDetailed.device_proxy_bgp6)
}

// .google.protobuf.Timestamp created_date = 37 [json_name = "createdDate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool DeviceDetailed::has_created_date() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.created_date_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& DeviceDetailed::_internal_created_date() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.created_date_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& DeviceDetailed::created_date() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeviceDetailed.created_date)
  return _internal_created_date();
}
inline void DeviceDetailed::unsafe_arena_set_allocated_created_date(::google::protobuf::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.created_date_);
  }
  _impl_.created_date_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.device.v202504beta2.DeviceDetailed.created_date)
}
inline ::google::protobuf::Timestamp* DeviceDetailed::release_created_date() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::google::protobuf::Timestamp* released = _impl_.created_date_;
  _impl_.created_date_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* DeviceDetailed::unsafe_arena_release_created_date() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.DeviceDetailed.created_date)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::google::protobuf::Timestamp* temp = _impl_.created_date_;
  _impl_.created_date_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* DeviceDetailed::_internal_mutable_created_date() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.created_date_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.created_date_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.created_date_;
}
inline ::google::protobuf::Timestamp* DeviceDetailed::mutable_created_date() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_created_date();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.DeviceDetailed.created_date)
  return _msg;
}
inline void DeviceDetailed::set_allocated_created_date(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.created_date_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.created_date_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.DeviceDetailed.created_date)
}

// .google.protobuf.Timestamp updated_date = 38 [json_name = "updatedDate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool DeviceDetailed::has_updated_date() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.updated_date_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& DeviceDetailed::_internal_updated_date() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.updated_date_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& DeviceDetailed::updated_date() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeviceDetailed.updated_date)
  return _internal_updated_date();
}
inline void DeviceDetailed::unsafe_arena_set_allocated_updated_date(::google::protobuf::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.updated_date_);
  }
  _impl_.updated_date_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.device.v202504beta2.DeviceDetailed.updated_date)
}
inline ::google::protobuf::Timestamp* DeviceDetailed::release_updated_date() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::google::protobuf::Timestamp* released = _impl_.updated_date_;
  _impl_.updated_date_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* DeviceDetailed::unsafe_arena_release_updated_date() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.DeviceDetailed.updated_date)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::google::protobuf::Timestamp* temp = _impl_.updated_date_;
  _impl_.updated_date_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* DeviceDetailed::_internal_mutable_updated_date() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.updated_date_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.updated_date_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.updated_date_;
}
inline ::google::protobuf::Timestamp* DeviceDetailed::mutable_updated_date() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_updated_date();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.DeviceDetailed.updated_date)
  return _msg;
}
inline void DeviceDetailed::set_allocated_updated_date(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.updated_date_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.updated_date_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.DeviceDetailed.updated_date)
}

// bool device_snmp_v3_conf_enabled = 39 [json_name = "deviceSnmpV3ConfEnabled", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void DeviceDetailed::clear_device_snmp_v3_conf_enabled() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_snmp_v3_conf_enabled_ = false;
}
inline bool DeviceDetailed::device_snmp_v3_conf_enabled() const {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeviceDetailed.device_snmp_v3_conf_enabled)
  return _internal_device_snmp_v3_conf_enabled();
}
inline void DeviceDetailed::set_device_snmp_v3_conf_enabled(bool value) {
  _internal_set_device_snmp_v3_conf_enabled(value);
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.DeviceDetailed.device_snmp_v3_conf_enabled)
}
inline bool DeviceDetailed::_internal_device_snmp_v3_conf_enabled() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.device_snmp_v3_conf_enabled_;
}
inline void DeviceDetailed::_internal_set_device_snmp_v3_conf_enabled(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_snmp_v3_conf_enabled_ = value;
}

// .kentik.device.v202504beta2.DeviceSnmpV3Conf device_snmp_v3_conf = 40 [json_name = "deviceSnmpV3Conf", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool DeviceDetailed::has_device_snmp_v3_conf() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.device_snmp_v3_conf_ != nullptr);
  return value;
}
inline void DeviceDetailed::clear_device_snmp_v3_conf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.device_snmp_v3_conf_ != nullptr) _impl_.device_snmp_v3_conf_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline const ::kentik::device::v202504beta2::DeviceSnmpV3Conf& DeviceDetailed::_internal_device_snmp_v3_conf() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::device::v202504beta2::DeviceSnmpV3Conf* p = _impl_.device_snmp_v3_conf_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::device::v202504beta2::DeviceSnmpV3Conf&>(::kentik::device::v202504beta2::_DeviceSnmpV3Conf_default_instance_);
}
inline const ::kentik::device::v202504beta2::DeviceSnmpV3Conf& DeviceDetailed::device_snmp_v3_conf() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeviceDetailed.device_snmp_v3_conf)
  return _internal_device_snmp_v3_conf();
}
inline void DeviceDetailed::unsafe_arena_set_allocated_device_snmp_v3_conf(::kentik::device::v202504beta2::DeviceSnmpV3Conf* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.device_snmp_v3_conf_);
  }
  _impl_.device_snmp_v3_conf_ = reinterpret_cast<::kentik::device::v202504beta2::DeviceSnmpV3Conf*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.device.v202504beta2.DeviceDetailed.device_snmp_v3_conf)
}
inline ::kentik::device::v202504beta2::DeviceSnmpV3Conf* DeviceDetailed::release_device_snmp_v3_conf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::kentik::device::v202504beta2::DeviceSnmpV3Conf* released = _impl_.device_snmp_v3_conf_;
  _impl_.device_snmp_v3_conf_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::device::v202504beta2::DeviceSnmpV3Conf* DeviceDetailed::unsafe_arena_release_device_snmp_v3_conf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.DeviceDetailed.device_snmp_v3_conf)

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::kentik::device::v202504beta2::DeviceSnmpV3Conf* temp = _impl_.device_snmp_v3_conf_;
  _impl_.device_snmp_v3_conf_ = nullptr;
  return temp;
}
inline ::kentik::device::v202504beta2::DeviceSnmpV3Conf* DeviceDetailed::_internal_mutable_device_snmp_v3_conf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.device_snmp_v3_conf_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::device::v202504beta2::DeviceSnmpV3Conf>(GetArena());
    _impl_.device_snmp_v3_conf_ = reinterpret_cast<::kentik::device::v202504beta2::DeviceSnmpV3Conf*>(p);
  }
  return _impl_.device_snmp_v3_conf_;
}
inline ::kentik::device::v202504beta2::DeviceSnmpV3Conf* DeviceDetailed::mutable_device_snmp_v3_conf() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000010u;
  ::kentik::device::v202504beta2::DeviceSnmpV3Conf* _msg = _internal_mutable_device_snmp_v3_conf();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.DeviceDetailed.device_snmp_v3_conf)
  return _msg;
}
inline void DeviceDetailed::set_allocated_device_snmp_v3_conf(::kentik::device::v202504beta2::DeviceSnmpV3Conf* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.device_snmp_v3_conf_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }

  _impl_.device_snmp_v3_conf_ = reinterpret_cast<::kentik::device::v202504beta2::DeviceSnmpV3Conf*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.DeviceDetailed.device_snmp_v3_conf)
}

// string cdn_attr = 41 [json_name = "cdnAttr", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void DeviceDetailed::clear_cdn_attr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cdn_attr_.ClearToEmpty();
}
inline const std::string& DeviceDetailed::cdn_attr() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeviceDetailed.cdn_attr)
  return _internal_cdn_attr();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeviceDetailed::set_cdn_attr(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cdn_attr_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.DeviceDetailed.cdn_attr)
}
inline std::string* DeviceDetailed::mutable_cdn_attr() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_cdn_attr();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.DeviceDetailed.cdn_attr)
  return _s;
}
inline const std::string& DeviceDetailed::_internal_cdn_attr() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.cdn_attr_.Get();
}
inline void DeviceDetailed::_internal_set_cdn_attr(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cdn_attr_.Set(value, GetArena());
}
inline std::string* DeviceDetailed::_internal_mutable_cdn_attr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.cdn_attr_.Mutable( GetArena());
}
inline std::string* DeviceDetailed::release_cdn_attr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.DeviceDetailed.cdn_attr)
  return _impl_.cdn_attr_.Release();
}
inline void DeviceDetailed::set_allocated_cdn_attr(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cdn_attr_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.cdn_attr_.IsDefault()) {
    _impl_.cdn_attr_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.DeviceDetailed.cdn_attr)
}

// string bgp_peer_ip4 = 42 [json_name = "bgpPeerIp4", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void DeviceDetailed::clear_bgp_peer_ip4() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bgp_peer_ip4_.ClearToEmpty();
}
inline const std::string& DeviceDetailed::bgp_peer_ip4() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeviceDetailed.bgp_peer_ip4)
  return _internal_bgp_peer_ip4();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeviceDetailed::set_bgp_peer_ip4(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bgp_peer_ip4_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.DeviceDetailed.bgp_peer_ip4)
}
inline std::string* DeviceDetailed::mutable_bgp_peer_ip4() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_bgp_peer_ip4();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.DeviceDetailed.bgp_peer_ip4)
  return _s;
}
inline const std::string& DeviceDetailed::_internal_bgp_peer_ip4() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bgp_peer_ip4_.Get();
}
inline void DeviceDetailed::_internal_set_bgp_peer_ip4(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bgp_peer_ip4_.Set(value, GetArena());
}
inline std::string* DeviceDetailed::_internal_mutable_bgp_peer_ip4() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.bgp_peer_ip4_.Mutable( GetArena());
}
inline std::string* DeviceDetailed::release_bgp_peer_ip4() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.DeviceDetailed.bgp_peer_ip4)
  return _impl_.bgp_peer_ip4_.Release();
}
inline void DeviceDetailed::set_allocated_bgp_peer_ip4(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bgp_peer_ip4_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.bgp_peer_ip4_.IsDefault()) {
    _impl_.bgp_peer_ip4_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.DeviceDetailed.bgp_peer_ip4)
}

// string bgp_peer_ip6 = 43 [json_name = "bgpPeerIp6", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void DeviceDetailed::clear_bgp_peer_ip6() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bgp_peer_ip6_.ClearToEmpty();
}
inline const std::string& DeviceDetailed::bgp_peer_ip6() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeviceDetailed.bgp_peer_ip6)
  return _internal_bgp_peer_ip6();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeviceDetailed::set_bgp_peer_ip6(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bgp_peer_ip6_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.DeviceDetailed.bgp_peer_ip6)
}
inline std::string* DeviceDetailed::mutable_bgp_peer_ip6() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_bgp_peer_ip6();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.DeviceDetailed.bgp_peer_ip6)
  return _s;
}
inline const std::string& DeviceDetailed::_internal_bgp_peer_ip6() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bgp_peer_ip6_.Get();
}
inline void DeviceDetailed::_internal_set_bgp_peer_ip6(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bgp_peer_ip6_.Set(value, GetArena());
}
inline std::string* DeviceDetailed::_internal_mutable_bgp_peer_ip6() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.bgp_peer_ip6_.Mutable( GetArena());
}
inline std::string* DeviceDetailed::release_bgp_peer_ip6() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.DeviceDetailed.bgp_peer_ip6)
  return _impl_.bgp_peer_ip6_.Release();
}
inline void DeviceDetailed::set_allocated_bgp_peer_ip6(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bgp_peer_ip6_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.bgp_peer_ip6_.IsDefault()) {
    _impl_.bgp_peer_ip6_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.DeviceDetailed.bgp_peer_ip6)
}

// string device_subtype = 44 [json_name = "deviceSubtype", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void DeviceDetailed::clear_device_subtype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_subtype_.ClearToEmpty();
}
inline const std::string& DeviceDetailed::device_subtype() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeviceDetailed.device_subtype)
  return _internal_device_subtype();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeviceDetailed::set_device_subtype(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_subtype_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.DeviceDetailed.device_subtype)
}
inline std::string* DeviceDetailed::mutable_device_subtype() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_device_subtype();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.DeviceDetailed.device_subtype)
  return _s;
}
inline const std::string& DeviceDetailed::_internal_device_subtype() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.device_subtype_.Get();
}
inline void DeviceDetailed::_internal_set_device_subtype(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_subtype_.Set(value, GetArena());
}
inline std::string* DeviceDetailed::_internal_mutable_device_subtype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.device_subtype_.Mutable( GetArena());
}
inline std::string* DeviceDetailed::release_device_subtype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.DeviceDetailed.device_subtype)
  return _impl_.device_subtype_.Release();
}
inline void DeviceDetailed::set_allocated_device_subtype(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_subtype_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.device_subtype_.IsDefault()) {
    _impl_.device_subtype_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.DeviceDetailed.device_subtype)
}

// string device_vendor_type = 45 [json_name = "deviceVendorType", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void DeviceDetailed::clear_device_vendor_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_vendor_type_.ClearToEmpty();
}
inline const std::string& DeviceDetailed::device_vendor_type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeviceDetailed.device_vendor_type)
  return _internal_device_vendor_type();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeviceDetailed::set_device_vendor_type(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_vendor_type_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.DeviceDetailed.device_vendor_type)
}
inline std::string* DeviceDetailed::mutable_device_vendor_type() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_device_vendor_type();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.DeviceDetailed.device_vendor_type)
  return _s;
}
inline const std::string& DeviceDetailed::_internal_device_vendor_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.device_vendor_type_.Get();
}
inline void DeviceDetailed::_internal_set_device_vendor_type(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_vendor_type_.Set(value, GetArena());
}
inline std::string* DeviceDetailed::_internal_mutable_device_vendor_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.device_vendor_type_.Mutable( GetArena());
}
inline std::string* DeviceDetailed::release_device_vendor_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.DeviceDetailed.device_vendor_type)
  return _impl_.device_vendor_type_.Release();
}
inline void DeviceDetailed::set_allocated_device_vendor_type(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_vendor_type_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.device_vendor_type_.IsDefault()) {
    _impl_.device_vendor_type_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.DeviceDetailed.device_vendor_type)
}

// string device_model_type = 46 [json_name = "deviceModelType", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void DeviceDetailed::clear_device_model_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_model_type_.ClearToEmpty();
}
inline const std::string& DeviceDetailed::device_model_type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeviceDetailed.device_model_type)
  return _internal_device_model_type();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeviceDetailed::set_device_model_type(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_model_type_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.DeviceDetailed.device_model_type)
}
inline std::string* DeviceDetailed::mutable_device_model_type() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_device_model_type();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.DeviceDetailed.device_model_type)
  return _s;
}
inline const std::string& DeviceDetailed::_internal_device_model_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.device_model_type_.Get();
}
inline void DeviceDetailed::_internal_set_device_model_type(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_model_type_.Set(value, GetArena());
}
inline std::string* DeviceDetailed::_internal_mutable_device_model_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.device_model_type_.Mutable( GetArena());
}
inline std::string* DeviceDetailed::release_device_model_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.DeviceDetailed.device_model_type)
  return _impl_.device_model_type_.Release();
}
inline void DeviceDetailed::set_allocated_device_model_type(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_model_type_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.device_model_type_.IsDefault()) {
    _impl_.device_model_type_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.DeviceDetailed.device_model_type)
}

// string cloud_export_id = 47 [json_name = "cloudExportId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void DeviceDetailed::clear_cloud_export_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cloud_export_id_.ClearToEmpty();
}
inline const std::string& DeviceDetailed::cloud_export_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeviceDetailed.cloud_export_id)
  return _internal_cloud_export_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeviceDetailed::set_cloud_export_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cloud_export_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.DeviceDetailed.cloud_export_id)
}
inline std::string* DeviceDetailed::mutable_cloud_export_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_cloud_export_id();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.DeviceDetailed.cloud_export_id)
  return _s;
}
inline const std::string& DeviceDetailed::_internal_cloud_export_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.cloud_export_id_.Get();
}
inline void DeviceDetailed::_internal_set_cloud_export_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cloud_export_id_.Set(value, GetArena());
}
inline std::string* DeviceDetailed::_internal_mutable_cloud_export_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.cloud_export_id_.Mutable( GetArena());
}
inline std::string* DeviceDetailed::release_cloud_export_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.DeviceDetailed.cloud_export_id)
  return _impl_.cloud_export_id_.Release();
}
inline void DeviceDetailed::set_allocated_cloud_export_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cloud_export_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.cloud_export_id_.IsDefault()) {
    _impl_.cloud_export_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.DeviceDetailed.cloud_export_id)
}

// string device_kproxy = 48 [json_name = "deviceKproxy", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void DeviceDetailed::clear_device_kproxy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_kproxy_.ClearToEmpty();
}
inline const std::string& DeviceDetailed::device_kproxy() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeviceDetailed.device_kproxy)
  return _internal_device_kproxy();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeviceDetailed::set_device_kproxy(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_kproxy_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.DeviceDetailed.device_kproxy)
}
inline std::string* DeviceDetailed::mutable_device_kproxy() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_device_kproxy();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.DeviceDetailed.device_kproxy)
  return _s;
}
inline const std::string& DeviceDetailed::_internal_device_kproxy() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.device_kproxy_.Get();
}
inline void DeviceDetailed::_internal_set_device_kproxy(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_kproxy_.Set(value, GetArena());
}
inline std::string* DeviceDetailed::_internal_mutable_device_kproxy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.device_kproxy_.Mutable( GetArena());
}
inline std::string* DeviceDetailed::release_device_kproxy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.DeviceDetailed.device_kproxy)
  return _impl_.device_kproxy_.Release();
}
inline void DeviceDetailed::set_allocated_device_kproxy(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_kproxy_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.device_kproxy_.IsDefault()) {
    _impl_.device_kproxy_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.DeviceDetailed.device_kproxy)
}

// string snmp_enabled = 49 [json_name = "snmpEnabled", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void DeviceDetailed::clear_snmp_enabled() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.snmp_enabled_.ClearToEmpty();
}
inline const std::string& DeviceDetailed::snmp_enabled() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeviceDetailed.snmp_enabled)
  return _internal_snmp_enabled();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeviceDetailed::set_snmp_enabled(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.snmp_enabled_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.DeviceDetailed.snmp_enabled)
}
inline std::string* DeviceDetailed::mutable_snmp_enabled() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_snmp_enabled();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.DeviceDetailed.snmp_enabled)
  return _s;
}
inline const std::string& DeviceDetailed::_internal_snmp_enabled() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.snmp_enabled_.Get();
}
inline void DeviceDetailed::_internal_set_snmp_enabled(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.snmp_enabled_.Set(value, GetArena());
}
inline std::string* DeviceDetailed::_internal_mutable_snmp_enabled() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.snmp_enabled_.Mutable( GetArena());
}
inline std::string* DeviceDetailed::release_snmp_enabled() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.DeviceDetailed.snmp_enabled)
  return _impl_.snmp_enabled_.Release();
}
inline void DeviceDetailed::set_allocated_snmp_enabled(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.snmp_enabled_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.snmp_enabled_.IsDefault()) {
    _impl_.snmp_enabled_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.DeviceDetailed.snmp_enabled)
}

// string snmp_disabled_reason = 50 [json_name = "snmpDisabledReason", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void DeviceDetailed::clear_snmp_disabled_reason() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.snmp_disabled_reason_.ClearToEmpty();
}
inline const std::string& DeviceDetailed::snmp_disabled_reason() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeviceDetailed.snmp_disabled_reason)
  return _internal_snmp_disabled_reason();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeviceDetailed::set_snmp_disabled_reason(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.snmp_disabled_reason_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.DeviceDetailed.snmp_disabled_reason)
}
inline std::string* DeviceDetailed::mutable_snmp_disabled_reason() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_snmp_disabled_reason();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.DeviceDetailed.snmp_disabled_reason)
  return _s;
}
inline const std::string& DeviceDetailed::_internal_snmp_disabled_reason() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.snmp_disabled_reason_.Get();
}
inline void DeviceDetailed::_internal_set_snmp_disabled_reason(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.snmp_disabled_reason_.Set(value, GetArena());
}
inline std::string* DeviceDetailed::_internal_mutable_snmp_disabled_reason() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.snmp_disabled_reason_.Mutable( GetArena());
}
inline std::string* DeviceDetailed::release_snmp_disabled_reason() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.DeviceDetailed.snmp_disabled_reason)
  return _impl_.snmp_disabled_reason_.Release();
}
inline void DeviceDetailed::set_allocated_snmp_disabled_reason(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.snmp_disabled_reason_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.snmp_disabled_reason_.IsDefault()) {
    _impl_.snmp_disabled_reason_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.DeviceDetailed.snmp_disabled_reason)
}

// string snmp_disabled_reason_other = 51 [json_name = "snmpDisabledReasonOther", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void DeviceDetailed::clear_snmp_disabled_reason_other() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.snmp_disabled_reason_other_.ClearToEmpty();
}
inline const std::string& DeviceDetailed::snmp_disabled_reason_other() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeviceDetailed.snmp_disabled_reason_other)
  return _internal_snmp_disabled_reason_other();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeviceDetailed::set_snmp_disabled_reason_other(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.snmp_disabled_reason_other_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.DeviceDetailed.snmp_disabled_reason_other)
}
inline std::string* DeviceDetailed::mutable_snmp_disabled_reason_other() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_snmp_disabled_reason_other();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.DeviceDetailed.snmp_disabled_reason_other)
  return _s;
}
inline const std::string& DeviceDetailed::_internal_snmp_disabled_reason_other() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.snmp_disabled_reason_other_.Get();
}
inline void DeviceDetailed::_internal_set_snmp_disabled_reason_other(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.snmp_disabled_reason_other_.Set(value, GetArena());
}
inline std::string* DeviceDetailed::_internal_mutable_snmp_disabled_reason_other() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.snmp_disabled_reason_other_.Mutable( GetArena());
}
inline std::string* DeviceDetailed::release_snmp_disabled_reason_other() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.DeviceDetailed.snmp_disabled_reason_other)
  return _impl_.snmp_disabled_reason_other_.Release();
}
inline void DeviceDetailed::set_allocated_snmp_disabled_reason_other(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.snmp_disabled_reason_other_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.snmp_disabled_reason_other_.IsDefault()) {
    _impl_.snmp_disabled_reason_other_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.DeviceDetailed.snmp_disabled_reason_other)
}

// string bgp_disabled_reason = 52 [json_name = "bgpDisabledReason", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void DeviceDetailed::clear_bgp_disabled_reason() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bgp_disabled_reason_.ClearToEmpty();
}
inline const std::string& DeviceDetailed::bgp_disabled_reason() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeviceDetailed.bgp_disabled_reason)
  return _internal_bgp_disabled_reason();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeviceDetailed::set_bgp_disabled_reason(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bgp_disabled_reason_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.DeviceDetailed.bgp_disabled_reason)
}
inline std::string* DeviceDetailed::mutable_bgp_disabled_reason() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_bgp_disabled_reason();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.DeviceDetailed.bgp_disabled_reason)
  return _s;
}
inline const std::string& DeviceDetailed::_internal_bgp_disabled_reason() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bgp_disabled_reason_.Get();
}
inline void DeviceDetailed::_internal_set_bgp_disabled_reason(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bgp_disabled_reason_.Set(value, GetArena());
}
inline std::string* DeviceDetailed::_internal_mutable_bgp_disabled_reason() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.bgp_disabled_reason_.Mutable( GetArena());
}
inline std::string* DeviceDetailed::release_bgp_disabled_reason() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.DeviceDetailed.bgp_disabled_reason)
  return _impl_.bgp_disabled_reason_.Release();
}
inline void DeviceDetailed::set_allocated_bgp_disabled_reason(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bgp_disabled_reason_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.bgp_disabled_reason_.IsDefault()) {
    _impl_.bgp_disabled_reason_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.DeviceDetailed.bgp_disabled_reason)
}

// string bgp_disabled_reason_other = 53 [json_name = "bgpDisabledReasonOther", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void DeviceDetailed::clear_bgp_disabled_reason_other() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bgp_disabled_reason_other_.ClearToEmpty();
}
inline const std::string& DeviceDetailed::bgp_disabled_reason_other() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeviceDetailed.bgp_disabled_reason_other)
  return _internal_bgp_disabled_reason_other();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeviceDetailed::set_bgp_disabled_reason_other(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bgp_disabled_reason_other_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.DeviceDetailed.bgp_disabled_reason_other)
}
inline std::string* DeviceDetailed::mutable_bgp_disabled_reason_other() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_bgp_disabled_reason_other();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.DeviceDetailed.bgp_disabled_reason_other)
  return _s;
}
inline const std::string& DeviceDetailed::_internal_bgp_disabled_reason_other() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bgp_disabled_reason_other_.Get();
}
inline void DeviceDetailed::_internal_set_bgp_disabled_reason_other(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bgp_disabled_reason_other_.Set(value, GetArena());
}
inline std::string* DeviceDetailed::_internal_mutable_bgp_disabled_reason_other() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.bgp_disabled_reason_other_.Mutable( GetArena());
}
inline std::string* DeviceDetailed::release_bgp_disabled_reason_other() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.DeviceDetailed.bgp_disabled_reason_other)
  return _impl_.bgp_disabled_reason_other_.Release();
}
inline void DeviceDetailed::set_allocated_bgp_disabled_reason_other(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bgp_disabled_reason_other_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.bgp_disabled_reason_other_.IsDefault()) {
    _impl_.bgp_disabled_reason_other_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.DeviceDetailed.bgp_disabled_reason_other)
}

// string device_manufacturer = 54 [json_name = "deviceManufacturer", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void DeviceDetailed::clear_device_manufacturer() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_manufacturer_.ClearToEmpty();
}
inline const std::string& DeviceDetailed::device_manufacturer() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeviceDetailed.device_manufacturer)
  return _internal_device_manufacturer();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeviceDetailed::set_device_manufacturer(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_manufacturer_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.DeviceDetailed.device_manufacturer)
}
inline std::string* DeviceDetailed::mutable_device_manufacturer() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_device_manufacturer();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.DeviceDetailed.device_manufacturer)
  return _s;
}
inline const std::string& DeviceDetailed::_internal_device_manufacturer() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.device_manufacturer_.Get();
}
inline void DeviceDetailed::_internal_set_device_manufacturer(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_manufacturer_.Set(value, GetArena());
}
inline std::string* DeviceDetailed::_internal_mutable_device_manufacturer() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.device_manufacturer_.Mutable( GetArena());
}
inline std::string* DeviceDetailed::release_device_manufacturer() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.DeviceDetailed.device_manufacturer)
  return _impl_.device_manufacturer_.Release();
}
inline void DeviceDetailed::set_allocated_device_manufacturer(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_manufacturer_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.device_manufacturer_.IsDefault()) {
    _impl_.device_manufacturer_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.DeviceDetailed.device_manufacturer)
}

// string device_alert = 55 [json_name = "deviceAlert", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void DeviceDetailed::clear_device_alert() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_alert_.ClearToEmpty();
}
inline const std::string& DeviceDetailed::device_alert() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeviceDetailed.device_alert)
  return _internal_device_alert();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeviceDetailed::set_device_alert(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_alert_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.DeviceDetailed.device_alert)
}
inline std::string* DeviceDetailed::mutable_device_alert() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_device_alert();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.DeviceDetailed.device_alert)
  return _s;
}
inline const std::string& DeviceDetailed::_internal_device_alert() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.device_alert_.Get();
}
inline void DeviceDetailed::_internal_set_device_alert(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_alert_.Set(value, GetArena());
}
inline std::string* DeviceDetailed::_internal_mutable_device_alert() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.device_alert_.Mutable( GetArena());
}
inline std::string* DeviceDetailed::release_device_alert() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.DeviceDetailed.device_alert)
  return _impl_.device_alert_.Release();
}
inline void DeviceDetailed::set_allocated_device_alert(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_alert_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.device_alert_.IsDefault()) {
    _impl_.device_alert_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.DeviceDetailed.device_alert)
}

// string role = 56 [json_name = "role", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void DeviceDetailed::clear_role() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.role_.ClearToEmpty();
}
inline const std::string& DeviceDetailed::role() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeviceDetailed.role)
  return _internal_role();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeviceDetailed::set_role(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.role_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.DeviceDetailed.role)
}
inline std::string* DeviceDetailed::mutable_role() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_role();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.DeviceDetailed.role)
  return _s;
}
inline const std::string& DeviceDetailed::_internal_role() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.role_.Get();
}
inline void DeviceDetailed::_internal_set_role(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.role_.Set(value, GetArena());
}
inline std::string* DeviceDetailed::_internal_mutable_role() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.role_.Mutable( GetArena());
}
inline std::string* DeviceDetailed::release_role() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.DeviceDetailed.role)
  return _impl_.role_.Release();
}
inline void DeviceDetailed::set_allocated_role(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.role_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.role_.IsDefault()) {
    _impl_.role_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.DeviceDetailed.role)
}

// .kentik.device.v202504beta2.GnmiV1Conf device_gnmi_v1_conf = 57 [json_name = "deviceGnmiV1Conf", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool DeviceDetailed::has_device_gnmi_v1_conf() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.device_gnmi_v1_conf_ != nullptr);
  return value;
}
inline void DeviceDetailed::clear_device_gnmi_v1_conf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.device_gnmi_v1_conf_ != nullptr) _impl_.device_gnmi_v1_conf_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline const ::kentik::device::v202504beta2::GnmiV1Conf& DeviceDetailed::_internal_device_gnmi_v1_conf() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::device::v202504beta2::GnmiV1Conf* p = _impl_.device_gnmi_v1_conf_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::device::v202504beta2::GnmiV1Conf&>(::kentik::device::v202504beta2::_GnmiV1Conf_default_instance_);
}
inline const ::kentik::device::v202504beta2::GnmiV1Conf& DeviceDetailed::device_gnmi_v1_conf() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeviceDetailed.device_gnmi_v1_conf)
  return _internal_device_gnmi_v1_conf();
}
inline void DeviceDetailed::unsafe_arena_set_allocated_device_gnmi_v1_conf(::kentik::device::v202504beta2::GnmiV1Conf* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.device_gnmi_v1_conf_);
  }
  _impl_.device_gnmi_v1_conf_ = reinterpret_cast<::kentik::device::v202504beta2::GnmiV1Conf*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.device.v202504beta2.DeviceDetailed.device_gnmi_v1_conf)
}
inline ::kentik::device::v202504beta2::GnmiV1Conf* DeviceDetailed::release_device_gnmi_v1_conf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::kentik::device::v202504beta2::GnmiV1Conf* released = _impl_.device_gnmi_v1_conf_;
  _impl_.device_gnmi_v1_conf_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::device::v202504beta2::GnmiV1Conf* DeviceDetailed::unsafe_arena_release_device_gnmi_v1_conf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.DeviceDetailed.device_gnmi_v1_conf)

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::kentik::device::v202504beta2::GnmiV1Conf* temp = _impl_.device_gnmi_v1_conf_;
  _impl_.device_gnmi_v1_conf_ = nullptr;
  return temp;
}
inline ::kentik::device::v202504beta2::GnmiV1Conf* DeviceDetailed::_internal_mutable_device_gnmi_v1_conf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.device_gnmi_v1_conf_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::device::v202504beta2::GnmiV1Conf>(GetArena());
    _impl_.device_gnmi_v1_conf_ = reinterpret_cast<::kentik::device::v202504beta2::GnmiV1Conf*>(p);
  }
  return _impl_.device_gnmi_v1_conf_;
}
inline ::kentik::device::v202504beta2::GnmiV1Conf* DeviceDetailed::mutable_device_gnmi_v1_conf() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000020u;
  ::kentik::device::v202504beta2::GnmiV1Conf* _msg = _internal_mutable_device_gnmi_v1_conf();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.DeviceDetailed.device_gnmi_v1_conf)
  return _msg;
}
inline void DeviceDetailed::set_allocated_device_gnmi_v1_conf(::kentik::device::v202504beta2::GnmiV1Conf* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.device_gnmi_v1_conf_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }

  _impl_.device_gnmi_v1_conf_ = reinterpret_cast<::kentik::device::v202504beta2::GnmiV1Conf*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.DeviceDetailed.device_gnmi_v1_conf)
}

// bool use_asn_from_flow = 58 [json_name = "useAsnFromFlow", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void DeviceDetailed::clear_use_asn_from_flow() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.use_asn_from_flow_ = false;
}
inline bool DeviceDetailed::use_asn_from_flow() const {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeviceDetailed.use_asn_from_flow)
  return _internal_use_asn_from_flow();
}
inline void DeviceDetailed::set_use_asn_from_flow(bool value) {
  _internal_set_use_asn_from_flow(value);
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.DeviceDetailed.use_asn_from_flow)
}
inline bool DeviceDetailed::_internal_use_asn_from_flow() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.use_asn_from_flow_;
}
inline void DeviceDetailed::_internal_set_use_asn_from_flow(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.use_asn_from_flow_ = value;
}

// uint32 max_interface = 59 [json_name = "maxInterface", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void DeviceDetailed::clear_max_interface() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_interface_ = 0u;
}
inline ::uint32_t DeviceDetailed::max_interface() const {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeviceDetailed.max_interface)
  return _internal_max_interface();
}
inline void DeviceDetailed::set_max_interface(::uint32_t value) {
  _internal_set_max_interface(value);
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.DeviceDetailed.max_interface)
}
inline ::uint32_t DeviceDetailed::_internal_max_interface() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.max_interface_;
}
inline void DeviceDetailed::_internal_set_max_interface(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_interface_ = value;
}

// uint32 max_interface_check = 60 [json_name = "maxInterfaceCheck", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void DeviceDetailed::clear_max_interface_check() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_interface_check_ = 0u;
}
inline ::uint32_t DeviceDetailed::max_interface_check() const {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeviceDetailed.max_interface_check)
  return _internal_max_interface_check();
}
inline void DeviceDetailed::set_max_interface_check(::uint32_t value) {
  _internal_set_max_interface_check(value);
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.DeviceDetailed.max_interface_check)
}
inline ::uint32_t DeviceDetailed::_internal_max_interface_check() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.max_interface_check_;
}
inline void DeviceDetailed::_internal_set_max_interface_check(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_interface_check_ = value;
}

// .kentik.device.v202504beta2.DeviceNmsConfig nms = 61 [json_name = "nms", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool DeviceDetailed::has_nms() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.nms_ != nullptr);
  return value;
}
inline void DeviceDetailed::clear_nms() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.nms_ != nullptr) _impl_.nms_->Clear();
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline const ::kentik::device::v202504beta2::DeviceNmsConfig& DeviceDetailed::_internal_nms() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::device::v202504beta2::DeviceNmsConfig* p = _impl_.nms_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::device::v202504beta2::DeviceNmsConfig&>(::kentik::device::v202504beta2::_DeviceNmsConfig_default_instance_);
}
inline const ::kentik::device::v202504beta2::DeviceNmsConfig& DeviceDetailed::nms() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeviceDetailed.nms)
  return _internal_nms();
}
inline void DeviceDetailed::unsafe_arena_set_allocated_nms(::kentik::device::v202504beta2::DeviceNmsConfig* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.nms_);
  }
  _impl_.nms_ = reinterpret_cast<::kentik::device::v202504beta2::DeviceNmsConfig*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000040u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.device.v202504beta2.DeviceDetailed.nms)
}
inline ::kentik::device::v202504beta2::DeviceNmsConfig* DeviceDetailed::release_nms() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000040u;
  ::kentik::device::v202504beta2::DeviceNmsConfig* released = _impl_.nms_;
  _impl_.nms_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::device::v202504beta2::DeviceNmsConfig* DeviceDetailed::unsafe_arena_release_nms() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.DeviceDetailed.nms)

  _impl_._has_bits_[0] &= ~0x00000040u;
  ::kentik::device::v202504beta2::DeviceNmsConfig* temp = _impl_.nms_;
  _impl_.nms_ = nullptr;
  return temp;
}
inline ::kentik::device::v202504beta2::DeviceNmsConfig* DeviceDetailed::_internal_mutable_nms() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.nms_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::device::v202504beta2::DeviceNmsConfig>(GetArena());
    _impl_.nms_ = reinterpret_cast<::kentik::device::v202504beta2::DeviceNmsConfig*>(p);
  }
  return _impl_.nms_;
}
inline ::kentik::device::v202504beta2::DeviceNmsConfig* DeviceDetailed::mutable_nms() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000040u;
  ::kentik::device::v202504beta2::DeviceNmsConfig* _msg = _internal_mutable_nms();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.DeviceDetailed.nms)
  return _msg;
}
inline void DeviceDetailed::set_allocated_nms(::kentik::device::v202504beta2::DeviceNmsConfig* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.nms_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000040u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040u;
  }

  _impl_.nms_ = reinterpret_cast<::kentik::device::v202504beta2::DeviceNmsConfig*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.DeviceDetailed.nms)
}

// string device_bgp_credential_name = 62 [json_name = "deviceBgpCredentialName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void DeviceDetailed::clear_device_bgp_credential_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_bgp_credential_name_.ClearToEmpty();
}
inline const std::string& DeviceDetailed::device_bgp_credential_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeviceDetailed.device_bgp_credential_name)
  return _internal_device_bgp_credential_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeviceDetailed::set_device_bgp_credential_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_bgp_credential_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.DeviceDetailed.device_bgp_credential_name)
}
inline std::string* DeviceDetailed::mutable_device_bgp_credential_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_device_bgp_credential_name();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.DeviceDetailed.device_bgp_credential_name)
  return _s;
}
inline const std::string& DeviceDetailed::_internal_device_bgp_credential_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.device_bgp_credential_name_.Get();
}
inline void DeviceDetailed::_internal_set_device_bgp_credential_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_bgp_credential_name_.Set(value, GetArena());
}
inline std::string* DeviceDetailed::_internal_mutable_device_bgp_credential_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.device_bgp_credential_name_.Mutable( GetArena());
}
inline std::string* DeviceDetailed::release_device_bgp_credential_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.DeviceDetailed.device_bgp_credential_name)
  return _impl_.device_bgp_credential_name_.Release();
}
inline void DeviceDetailed::set_allocated_device_bgp_credential_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_bgp_credential_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.device_bgp_credential_name_.IsDefault()) {
    _impl_.device_bgp_credential_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.DeviceDetailed.device_bgp_credential_name)
}

// string flow_snmp_credential_name = 63 [json_name = "flowSnmpCredentialName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void DeviceDetailed::clear_flow_snmp_credential_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.flow_snmp_credential_name_.ClearToEmpty();
}
inline const std::string& DeviceDetailed::flow_snmp_credential_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeviceDetailed.flow_snmp_credential_name)
  return _internal_flow_snmp_credential_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeviceDetailed::set_flow_snmp_credential_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.flow_snmp_credential_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.DeviceDetailed.flow_snmp_credential_name)
}
inline std::string* DeviceDetailed::mutable_flow_snmp_credential_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_flow_snmp_credential_name();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.DeviceDetailed.flow_snmp_credential_name)
  return _s;
}
inline const std::string& DeviceDetailed::_internal_flow_snmp_credential_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.flow_snmp_credential_name_.Get();
}
inline void DeviceDetailed::_internal_set_flow_snmp_credential_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.flow_snmp_credential_name_.Set(value, GetArena());
}
inline std::string* DeviceDetailed::_internal_mutable_flow_snmp_credential_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.flow_snmp_credential_name_.Mutable( GetArena());
}
inline std::string* DeviceDetailed::release_flow_snmp_credential_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.DeviceDetailed.flow_snmp_credential_name)
  return _impl_.flow_snmp_credential_name_.Release();
}
inline void DeviceDetailed::set_allocated_flow_snmp_credential_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.flow_snmp_credential_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.flow_snmp_credential_name_.IsDefault()) {
    _impl_.flow_snmp_credential_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.DeviceDetailed.flow_snmp_credential_name)
}

// uint32 monitoring_template_id = 64 [json_name = "monitoringTemplateId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void DeviceDetailed::clear_monitoring_template_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.monitoring_template_id_ = 0u;
}
inline ::uint32_t DeviceDetailed::monitoring_template_id() const {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeviceDetailed.monitoring_template_id)
  return _internal_monitoring_template_id();
}
inline void DeviceDetailed::set_monitoring_template_id(::uint32_t value) {
  _internal_set_monitoring_template_id(value);
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.DeviceDetailed.monitoring_template_id)
}
inline ::uint32_t DeviceDetailed::_internal_monitoring_template_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.monitoring_template_id_;
}
inline void DeviceDetailed::_internal_set_monitoring_template_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.monitoring_template_id_ = value;
}

// -------------------------------------------------------------------

// DeviceQuery

// bool no_custom_columns = 1 [json_name = "noCustomColumns"];
inline void DeviceQuery::clear_no_custom_columns() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.no_custom_columns_ = false;
}
inline bool DeviceQuery::no_custom_columns() const {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeviceQuery.no_custom_columns)
  return _internal_no_custom_columns();
}
inline void DeviceQuery::set_no_custom_columns(bool value) {
  _internal_set_no_custom_columns(value);
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.DeviceQuery.no_custom_columns)
}
inline bool DeviceQuery::_internal_no_custom_columns() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.no_custom_columns_;
}
inline void DeviceQuery::_internal_set_no_custom_columns(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.no_custom_columns_ = value;
}

// -------------------------------------------------------------------

// LabelConcise

// uint32 id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void LabelConcise::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = 0u;
}
inline ::uint32_t LabelConcise::id() const {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.LabelConcise.id)
  return _internal_id();
}
inline void LabelConcise::set_id(::uint32_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.LabelConcise.id)
}
inline ::uint32_t LabelConcise::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void LabelConcise::_internal_set_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// -------------------------------------------------------------------

// ListDevicesRequest

// .kentik.device.v202504beta2.DeviceQuery query = 1 [json_name = "query"];
inline bool ListDevicesRequest::has_query() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.query_ != nullptr);
  return value;
}
inline void ListDevicesRequest::clear_query() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.query_ != nullptr) _impl_.query_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::kentik::device::v202504beta2::DeviceQuery& ListDevicesRequest::_internal_query() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::device::v202504beta2::DeviceQuery* p = _impl_.query_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::device::v202504beta2::DeviceQuery&>(::kentik::device::v202504beta2::_DeviceQuery_default_instance_);
}
inline const ::kentik::device::v202504beta2::DeviceQuery& ListDevicesRequest::query() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.ListDevicesRequest.query)
  return _internal_query();
}
inline void ListDevicesRequest::unsafe_arena_set_allocated_query(::kentik::device::v202504beta2::DeviceQuery* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.query_);
  }
  _impl_.query_ = reinterpret_cast<::kentik::device::v202504beta2::DeviceQuery*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.device.v202504beta2.ListDevicesRequest.query)
}
inline ::kentik::device::v202504beta2::DeviceQuery* ListDevicesRequest::release_query() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::device::v202504beta2::DeviceQuery* released = _impl_.query_;
  _impl_.query_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::device::v202504beta2::DeviceQuery* ListDevicesRequest::unsafe_arena_release_query() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.ListDevicesRequest.query)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::device::v202504beta2::DeviceQuery* temp = _impl_.query_;
  _impl_.query_ = nullptr;
  return temp;
}
inline ::kentik::device::v202504beta2::DeviceQuery* ListDevicesRequest::_internal_mutable_query() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.query_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::device::v202504beta2::DeviceQuery>(GetArena());
    _impl_.query_ = reinterpret_cast<::kentik::device::v202504beta2::DeviceQuery*>(p);
  }
  return _impl_.query_;
}
inline ::kentik::device::v202504beta2::DeviceQuery* ListDevicesRequest::mutable_query() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::kentik::device::v202504beta2::DeviceQuery* _msg = _internal_mutable_query();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.ListDevicesRequest.query)
  return _msg;
}
inline void ListDevicesRequest::set_allocated_query(::kentik::device::v202504beta2::DeviceQuery* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.query_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.query_ = reinterpret_cast<::kentik::device::v202504beta2::DeviceQuery*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.ListDevicesRequest.query)
}

// -------------------------------------------------------------------

// ListDevicesResponse

// repeated .kentik.device.v202504beta2.DeviceDetailed devices = 1 [json_name = "devices", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int ListDevicesResponse::_internal_devices_size() const {
  return _internal_devices().size();
}
inline int ListDevicesResponse::devices_size() const {
  return _internal_devices_size();
}
inline void ListDevicesResponse::clear_devices() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.devices_.Clear();
}
inline ::kentik::device::v202504beta2::DeviceDetailed* ListDevicesResponse::mutable_devices(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.ListDevicesResponse.devices)
  return _internal_mutable_devices()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::kentik::device::v202504beta2::DeviceDetailed>* ListDevicesResponse::mutable_devices()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.device.v202504beta2.ListDevicesResponse.devices)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_devices();
}
inline const ::kentik::device::v202504beta2::DeviceDetailed& ListDevicesResponse::devices(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.ListDevicesResponse.devices)
  return _internal_devices().Get(index);
}
inline ::kentik::device::v202504beta2::DeviceDetailed* ListDevicesResponse::add_devices() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::kentik::device::v202504beta2::DeviceDetailed* _add = _internal_mutable_devices()->Add();
  // @@protoc_insertion_point(field_add:kentik.device.v202504beta2.ListDevicesResponse.devices)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::device::v202504beta2::DeviceDetailed>& ListDevicesResponse::devices() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.device.v202504beta2.ListDevicesResponse.devices)
  return _internal_devices();
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::device::v202504beta2::DeviceDetailed>&
ListDevicesResponse::_internal_devices() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.devices_;
}
inline ::google::protobuf::RepeatedPtrField<::kentik::device::v202504beta2::DeviceDetailed>*
ListDevicesResponse::_internal_mutable_devices() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.devices_;
}

// uint32 invalid_count = 2 [json_name = "invalidCount", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void ListDevicesResponse::clear_invalid_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.invalid_count_ = 0u;
}
inline ::uint32_t ListDevicesResponse::invalid_count() const {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.ListDevicesResponse.invalid_count)
  return _internal_invalid_count();
}
inline void ListDevicesResponse::set_invalid_count(::uint32_t value) {
  _internal_set_invalid_count(value);
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.ListDevicesResponse.invalid_count)
}
inline ::uint32_t ListDevicesResponse::_internal_invalid_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.invalid_count_;
}
inline void ListDevicesResponse::_internal_set_invalid_count(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.invalid_count_ = value;
}

// -------------------------------------------------------------------

// GetDeviceRequest

// string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void GetDeviceRequest::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& GetDeviceRequest::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.GetDeviceRequest.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetDeviceRequest::set_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.GetDeviceRequest.id)
}
inline std::string* GetDeviceRequest::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.GetDeviceRequest.id)
  return _s;
}
inline const std::string& GetDeviceRequest::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void GetDeviceRequest::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(value, GetArena());
}
inline std::string* GetDeviceRequest::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* GetDeviceRequest::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.GetDeviceRequest.id)
  return _impl_.id_.Release();
}
inline void GetDeviceRequest::set_allocated_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.id_.IsDefault()) {
    _impl_.id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.GetDeviceRequest.id)
}

// .kentik.device.v202504beta2.DeviceQuery query = 2 [json_name = "query"];
inline bool GetDeviceRequest::has_query() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.query_ != nullptr);
  return value;
}
inline void GetDeviceRequest::clear_query() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.query_ != nullptr) _impl_.query_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::kentik::device::v202504beta2::DeviceQuery& GetDeviceRequest::_internal_query() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::device::v202504beta2::DeviceQuery* p = _impl_.query_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::device::v202504beta2::DeviceQuery&>(::kentik::device::v202504beta2::_DeviceQuery_default_instance_);
}
inline const ::kentik::device::v202504beta2::DeviceQuery& GetDeviceRequest::query() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.GetDeviceRequest.query)
  return _internal_query();
}
inline void GetDeviceRequest::unsafe_arena_set_allocated_query(::kentik::device::v202504beta2::DeviceQuery* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.query_);
  }
  _impl_.query_ = reinterpret_cast<::kentik::device::v202504beta2::DeviceQuery*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.device.v202504beta2.GetDeviceRequest.query)
}
inline ::kentik::device::v202504beta2::DeviceQuery* GetDeviceRequest::release_query() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::device::v202504beta2::DeviceQuery* released = _impl_.query_;
  _impl_.query_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::device::v202504beta2::DeviceQuery* GetDeviceRequest::unsafe_arena_release_query() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.GetDeviceRequest.query)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::device::v202504beta2::DeviceQuery* temp = _impl_.query_;
  _impl_.query_ = nullptr;
  return temp;
}
inline ::kentik::device::v202504beta2::DeviceQuery* GetDeviceRequest::_internal_mutable_query() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.query_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::device::v202504beta2::DeviceQuery>(GetArena());
    _impl_.query_ = reinterpret_cast<::kentik::device::v202504beta2::DeviceQuery*>(p);
  }
  return _impl_.query_;
}
inline ::kentik::device::v202504beta2::DeviceQuery* GetDeviceRequest::mutable_query() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::kentik::device::v202504beta2::DeviceQuery* _msg = _internal_mutable_query();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.GetDeviceRequest.query)
  return _msg;
}
inline void GetDeviceRequest::set_allocated_query(::kentik::device::v202504beta2::DeviceQuery* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.query_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.query_ = reinterpret_cast<::kentik::device::v202504beta2::DeviceQuery*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.GetDeviceRequest.query)
}

// -------------------------------------------------------------------

// GetDeviceResponse

// .kentik.device.v202504beta2.DeviceDetailed device = 1 [json_name = "device", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool GetDeviceResponse::has_device() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.device_ != nullptr);
  return value;
}
inline void GetDeviceResponse::clear_device() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.device_ != nullptr) _impl_.device_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::kentik::device::v202504beta2::DeviceDetailed& GetDeviceResponse::_internal_device() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::device::v202504beta2::DeviceDetailed* p = _impl_.device_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::device::v202504beta2::DeviceDetailed&>(::kentik::device::v202504beta2::_DeviceDetailed_default_instance_);
}
inline const ::kentik::device::v202504beta2::DeviceDetailed& GetDeviceResponse::device() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.GetDeviceResponse.device)
  return _internal_device();
}
inline void GetDeviceResponse::unsafe_arena_set_allocated_device(::kentik::device::v202504beta2::DeviceDetailed* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.device_);
  }
  _impl_.device_ = reinterpret_cast<::kentik::device::v202504beta2::DeviceDetailed*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.device.v202504beta2.GetDeviceResponse.device)
}
inline ::kentik::device::v202504beta2::DeviceDetailed* GetDeviceResponse::release_device() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::device::v202504beta2::DeviceDetailed* released = _impl_.device_;
  _impl_.device_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::device::v202504beta2::DeviceDetailed* GetDeviceResponse::unsafe_arena_release_device() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.GetDeviceResponse.device)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::device::v202504beta2::DeviceDetailed* temp = _impl_.device_;
  _impl_.device_ = nullptr;
  return temp;
}
inline ::kentik::device::v202504beta2::DeviceDetailed* GetDeviceResponse::_internal_mutable_device() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.device_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::device::v202504beta2::DeviceDetailed>(GetArena());
    _impl_.device_ = reinterpret_cast<::kentik::device::v202504beta2::DeviceDetailed*>(p);
  }
  return _impl_.device_;
}
inline ::kentik::device::v202504beta2::DeviceDetailed* GetDeviceResponse::mutable_device() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::kentik::device::v202504beta2::DeviceDetailed* _msg = _internal_mutable_device();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.GetDeviceResponse.device)
  return _msg;
}
inline void GetDeviceResponse::set_allocated_device(::kentik::device::v202504beta2::DeviceDetailed* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.device_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.device_ = reinterpret_cast<::kentik::device::v202504beta2::DeviceDetailed*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.GetDeviceResponse.device)
}

// -------------------------------------------------------------------

// CreateDeviceRequest

// .kentik.device.v202504beta2.DeviceConcise device = 1 [json_name = "device", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool CreateDeviceRequest::has_device() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.device_ != nullptr);
  return value;
}
inline void CreateDeviceRequest::clear_device() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.device_ != nullptr) _impl_.device_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::kentik::device::v202504beta2::DeviceConcise& CreateDeviceRequest::_internal_device() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::device::v202504beta2::DeviceConcise* p = _impl_.device_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::device::v202504beta2::DeviceConcise&>(::kentik::device::v202504beta2::_DeviceConcise_default_instance_);
}
inline const ::kentik::device::v202504beta2::DeviceConcise& CreateDeviceRequest::device() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.CreateDeviceRequest.device)
  return _internal_device();
}
inline void CreateDeviceRequest::unsafe_arena_set_allocated_device(::kentik::device::v202504beta2::DeviceConcise* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.device_);
  }
  _impl_.device_ = reinterpret_cast<::kentik::device::v202504beta2::DeviceConcise*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.device.v202504beta2.CreateDeviceRequest.device)
}
inline ::kentik::device::v202504beta2::DeviceConcise* CreateDeviceRequest::release_device() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::device::v202504beta2::DeviceConcise* released = _impl_.device_;
  _impl_.device_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::device::v202504beta2::DeviceConcise* CreateDeviceRequest::unsafe_arena_release_device() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.CreateDeviceRequest.device)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::device::v202504beta2::DeviceConcise* temp = _impl_.device_;
  _impl_.device_ = nullptr;
  return temp;
}
inline ::kentik::device::v202504beta2::DeviceConcise* CreateDeviceRequest::_internal_mutable_device() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.device_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::device::v202504beta2::DeviceConcise>(GetArena());
    _impl_.device_ = reinterpret_cast<::kentik::device::v202504beta2::DeviceConcise*>(p);
  }
  return _impl_.device_;
}
inline ::kentik::device::v202504beta2::DeviceConcise* CreateDeviceRequest::mutable_device() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::kentik::device::v202504beta2::DeviceConcise* _msg = _internal_mutable_device();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.CreateDeviceRequest.device)
  return _msg;
}
inline void CreateDeviceRequest::set_allocated_device(::kentik::device::v202504beta2::DeviceConcise* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.device_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.device_ = reinterpret_cast<::kentik::device::v202504beta2::DeviceConcise*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.CreateDeviceRequest.device)
}

// -------------------------------------------------------------------

// CreateDeviceResponse

// .kentik.device.v202504beta2.DeviceDetailed device = 1 [json_name = "device", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool CreateDeviceResponse::has_device() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.device_ != nullptr);
  return value;
}
inline void CreateDeviceResponse::clear_device() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.device_ != nullptr) _impl_.device_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::kentik::device::v202504beta2::DeviceDetailed& CreateDeviceResponse::_internal_device() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::device::v202504beta2::DeviceDetailed* p = _impl_.device_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::device::v202504beta2::DeviceDetailed&>(::kentik::device::v202504beta2::_DeviceDetailed_default_instance_);
}
inline const ::kentik::device::v202504beta2::DeviceDetailed& CreateDeviceResponse::device() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.CreateDeviceResponse.device)
  return _internal_device();
}
inline void CreateDeviceResponse::unsafe_arena_set_allocated_device(::kentik::device::v202504beta2::DeviceDetailed* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.device_);
  }
  _impl_.device_ = reinterpret_cast<::kentik::device::v202504beta2::DeviceDetailed*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.device.v202504beta2.CreateDeviceResponse.device)
}
inline ::kentik::device::v202504beta2::DeviceDetailed* CreateDeviceResponse::release_device() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::device::v202504beta2::DeviceDetailed* released = _impl_.device_;
  _impl_.device_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::device::v202504beta2::DeviceDetailed* CreateDeviceResponse::unsafe_arena_release_device() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.CreateDeviceResponse.device)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::device::v202504beta2::DeviceDetailed* temp = _impl_.device_;
  _impl_.device_ = nullptr;
  return temp;
}
inline ::kentik::device::v202504beta2::DeviceDetailed* CreateDeviceResponse::_internal_mutable_device() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.device_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::device::v202504beta2::DeviceDetailed>(GetArena());
    _impl_.device_ = reinterpret_cast<::kentik::device::v202504beta2::DeviceDetailed*>(p);
  }
  return _impl_.device_;
}
inline ::kentik::device::v202504beta2::DeviceDetailed* CreateDeviceResponse::mutable_device() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::kentik::device::v202504beta2::DeviceDetailed* _msg = _internal_mutable_device();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.CreateDeviceResponse.device)
  return _msg;
}
inline void CreateDeviceResponse::set_allocated_device(::kentik::device::v202504beta2::DeviceDetailed* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.device_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.device_ = reinterpret_cast<::kentik::device::v202504beta2::DeviceDetailed*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.CreateDeviceResponse.device)
}

// -------------------------------------------------------------------

// CreateDevicesRequest

// repeated .kentik.device.v202504beta2.DeviceConcise devices = 1 [json_name = "devices", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int CreateDevicesRequest::_internal_devices_size() const {
  return _internal_devices().size();
}
inline int CreateDevicesRequest::devices_size() const {
  return _internal_devices_size();
}
inline void CreateDevicesRequest::clear_devices() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.devices_.Clear();
}
inline ::kentik::device::v202504beta2::DeviceConcise* CreateDevicesRequest::mutable_devices(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.CreateDevicesRequest.devices)
  return _internal_mutable_devices()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::kentik::device::v202504beta2::DeviceConcise>* CreateDevicesRequest::mutable_devices()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.device.v202504beta2.CreateDevicesRequest.devices)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_devices();
}
inline const ::kentik::device::v202504beta2::DeviceConcise& CreateDevicesRequest::devices(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.CreateDevicesRequest.devices)
  return _internal_devices().Get(index);
}
inline ::kentik::device::v202504beta2::DeviceConcise* CreateDevicesRequest::add_devices() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::kentik::device::v202504beta2::DeviceConcise* _add = _internal_mutable_devices()->Add();
  // @@protoc_insertion_point(field_add:kentik.device.v202504beta2.CreateDevicesRequest.devices)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::device::v202504beta2::DeviceConcise>& CreateDevicesRequest::devices() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.device.v202504beta2.CreateDevicesRequest.devices)
  return _internal_devices();
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::device::v202504beta2::DeviceConcise>&
CreateDevicesRequest::_internal_devices() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.devices_;
}
inline ::google::protobuf::RepeatedPtrField<::kentik::device::v202504beta2::DeviceConcise>*
CreateDevicesRequest::_internal_mutable_devices() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.devices_;
}

// -------------------------------------------------------------------

// CreateDevicesResponse

// repeated .kentik.device.v202504beta2.DeviceDetailed devices = 1 [json_name = "devices", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int CreateDevicesResponse::_internal_devices_size() const {
  return _internal_devices().size();
}
inline int CreateDevicesResponse::devices_size() const {
  return _internal_devices_size();
}
inline void CreateDevicesResponse::clear_devices() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.devices_.Clear();
}
inline ::kentik::device::v202504beta2::DeviceDetailed* CreateDevicesResponse::mutable_devices(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.CreateDevicesResponse.devices)
  return _internal_mutable_devices()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::kentik::device::v202504beta2::DeviceDetailed>* CreateDevicesResponse::mutable_devices()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.device.v202504beta2.CreateDevicesResponse.devices)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_devices();
}
inline const ::kentik::device::v202504beta2::DeviceDetailed& CreateDevicesResponse::devices(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.CreateDevicesResponse.devices)
  return _internal_devices().Get(index);
}
inline ::kentik::device::v202504beta2::DeviceDetailed* CreateDevicesResponse::add_devices() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::kentik::device::v202504beta2::DeviceDetailed* _add = _internal_mutable_devices()->Add();
  // @@protoc_insertion_point(field_add:kentik.device.v202504beta2.CreateDevicesResponse.devices)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::device::v202504beta2::DeviceDetailed>& CreateDevicesResponse::devices() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.device.v202504beta2.CreateDevicesResponse.devices)
  return _internal_devices();
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::device::v202504beta2::DeviceDetailed>&
CreateDevicesResponse::_internal_devices() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.devices_;
}
inline ::google::protobuf::RepeatedPtrField<::kentik::device::v202504beta2::DeviceDetailed>*
CreateDevicesResponse::_internal_mutable_devices() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.devices_;
}

// repeated string failed_devices = 2 [json_name = "failedDevices", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int CreateDevicesResponse::_internal_failed_devices_size() const {
  return _internal_failed_devices().size();
}
inline int CreateDevicesResponse::failed_devices_size() const {
  return _internal_failed_devices_size();
}
inline void CreateDevicesResponse::clear_failed_devices() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.failed_devices_.Clear();
}
inline std::string* CreateDevicesResponse::add_failed_devices() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_failed_devices()->Add();
  // @@protoc_insertion_point(field_add_mutable:kentik.device.v202504beta2.CreateDevicesResponse.failed_devices)
  return _s;
}
inline const std::string& CreateDevicesResponse::failed_devices(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.CreateDevicesResponse.failed_devices)
  return _internal_failed_devices().Get(index);
}
inline std::string* CreateDevicesResponse::mutable_failed_devices(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.CreateDevicesResponse.failed_devices)
  return _internal_mutable_failed_devices()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void CreateDevicesResponse::set_failed_devices(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_failed_devices()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.CreateDevicesResponse.failed_devices)
}
template <typename Arg_, typename... Args_>
inline void CreateDevicesResponse::add_failed_devices(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_failed_devices(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:kentik.device.v202504beta2.CreateDevicesResponse.failed_devices)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
CreateDevicesResponse::failed_devices() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.device.v202504beta2.CreateDevicesResponse.failed_devices)
  return _internal_failed_devices();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
CreateDevicesResponse::mutable_failed_devices() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.device.v202504beta2.CreateDevicesResponse.failed_devices)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_failed_devices();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
CreateDevicesResponse::_internal_failed_devices() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.failed_devices_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
CreateDevicesResponse::_internal_mutable_failed_devices() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.failed_devices_;
}

// -------------------------------------------------------------------

// UpdateDeviceRequest

// .kentik.device.v202504beta2.DeviceConcise device = 1 [json_name = "device", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool UpdateDeviceRequest::has_device() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.device_ != nullptr);
  return value;
}
inline void UpdateDeviceRequest::clear_device() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.device_ != nullptr) _impl_.device_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::kentik::device::v202504beta2::DeviceConcise& UpdateDeviceRequest::_internal_device() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::device::v202504beta2::DeviceConcise* p = _impl_.device_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::device::v202504beta2::DeviceConcise&>(::kentik::device::v202504beta2::_DeviceConcise_default_instance_);
}
inline const ::kentik::device::v202504beta2::DeviceConcise& UpdateDeviceRequest::device() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.UpdateDeviceRequest.device)
  return _internal_device();
}
inline void UpdateDeviceRequest::unsafe_arena_set_allocated_device(::kentik::device::v202504beta2::DeviceConcise* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.device_);
  }
  _impl_.device_ = reinterpret_cast<::kentik::device::v202504beta2::DeviceConcise*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.device.v202504beta2.UpdateDeviceRequest.device)
}
inline ::kentik::device::v202504beta2::DeviceConcise* UpdateDeviceRequest::release_device() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::device::v202504beta2::DeviceConcise* released = _impl_.device_;
  _impl_.device_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::device::v202504beta2::DeviceConcise* UpdateDeviceRequest::unsafe_arena_release_device() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.UpdateDeviceRequest.device)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::device::v202504beta2::DeviceConcise* temp = _impl_.device_;
  _impl_.device_ = nullptr;
  return temp;
}
inline ::kentik::device::v202504beta2::DeviceConcise* UpdateDeviceRequest::_internal_mutable_device() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.device_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::device::v202504beta2::DeviceConcise>(GetArena());
    _impl_.device_ = reinterpret_cast<::kentik::device::v202504beta2::DeviceConcise*>(p);
  }
  return _impl_.device_;
}
inline ::kentik::device::v202504beta2::DeviceConcise* UpdateDeviceRequest::mutable_device() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::kentik::device::v202504beta2::DeviceConcise* _msg = _internal_mutable_device();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.UpdateDeviceRequest.device)
  return _msg;
}
inline void UpdateDeviceRequest::set_allocated_device(::kentik::device::v202504beta2::DeviceConcise* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.device_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.device_ = reinterpret_cast<::kentik::device::v202504beta2::DeviceConcise*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.UpdateDeviceRequest.device)
}

// -------------------------------------------------------------------

// UpdateDeviceResponse

// .kentik.device.v202504beta2.DeviceDetailed device = 1 [json_name = "device", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool UpdateDeviceResponse::has_device() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.device_ != nullptr);
  return value;
}
inline void UpdateDeviceResponse::clear_device() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.device_ != nullptr) _impl_.device_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::kentik::device::v202504beta2::DeviceDetailed& UpdateDeviceResponse::_internal_device() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::device::v202504beta2::DeviceDetailed* p = _impl_.device_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::device::v202504beta2::DeviceDetailed&>(::kentik::device::v202504beta2::_DeviceDetailed_default_instance_);
}
inline const ::kentik::device::v202504beta2::DeviceDetailed& UpdateDeviceResponse::device() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.UpdateDeviceResponse.device)
  return _internal_device();
}
inline void UpdateDeviceResponse::unsafe_arena_set_allocated_device(::kentik::device::v202504beta2::DeviceDetailed* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.device_);
  }
  _impl_.device_ = reinterpret_cast<::kentik::device::v202504beta2::DeviceDetailed*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.device.v202504beta2.UpdateDeviceResponse.device)
}
inline ::kentik::device::v202504beta2::DeviceDetailed* UpdateDeviceResponse::release_device() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::device::v202504beta2::DeviceDetailed* released = _impl_.device_;
  _impl_.device_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::device::v202504beta2::DeviceDetailed* UpdateDeviceResponse::unsafe_arena_release_device() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.UpdateDeviceResponse.device)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::device::v202504beta2::DeviceDetailed* temp = _impl_.device_;
  _impl_.device_ = nullptr;
  return temp;
}
inline ::kentik::device::v202504beta2::DeviceDetailed* UpdateDeviceResponse::_internal_mutable_device() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.device_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::device::v202504beta2::DeviceDetailed>(GetArena());
    _impl_.device_ = reinterpret_cast<::kentik::device::v202504beta2::DeviceDetailed*>(p);
  }
  return _impl_.device_;
}
inline ::kentik::device::v202504beta2::DeviceDetailed* UpdateDeviceResponse::mutable_device() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::kentik::device::v202504beta2::DeviceDetailed* _msg = _internal_mutable_device();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.UpdateDeviceResponse.device)
  return _msg;
}
inline void UpdateDeviceResponse::set_allocated_device(::kentik::device::v202504beta2::DeviceDetailed* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.device_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.device_ = reinterpret_cast<::kentik::device::v202504beta2::DeviceDetailed*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.UpdateDeviceResponse.device)
}

// -------------------------------------------------------------------

// UpdateDevicesRequest

// repeated .kentik.device.v202504beta2.DeviceConcise devices = 1 [json_name = "devices", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int UpdateDevicesRequest::_internal_devices_size() const {
  return _internal_devices().size();
}
inline int UpdateDevicesRequest::devices_size() const {
  return _internal_devices_size();
}
inline void UpdateDevicesRequest::clear_devices() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.devices_.Clear();
}
inline ::kentik::device::v202504beta2::DeviceConcise* UpdateDevicesRequest::mutable_devices(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.UpdateDevicesRequest.devices)
  return _internal_mutable_devices()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::kentik::device::v202504beta2::DeviceConcise>* UpdateDevicesRequest::mutable_devices()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.device.v202504beta2.UpdateDevicesRequest.devices)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_devices();
}
inline const ::kentik::device::v202504beta2::DeviceConcise& UpdateDevicesRequest::devices(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.UpdateDevicesRequest.devices)
  return _internal_devices().Get(index);
}
inline ::kentik::device::v202504beta2::DeviceConcise* UpdateDevicesRequest::add_devices() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::kentik::device::v202504beta2::DeviceConcise* _add = _internal_mutable_devices()->Add();
  // @@protoc_insertion_point(field_add:kentik.device.v202504beta2.UpdateDevicesRequest.devices)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::device::v202504beta2::DeviceConcise>& UpdateDevicesRequest::devices() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.device.v202504beta2.UpdateDevicesRequest.devices)
  return _internal_devices();
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::device::v202504beta2::DeviceConcise>&
UpdateDevicesRequest::_internal_devices() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.devices_;
}
inline ::google::protobuf::RepeatedPtrField<::kentik::device::v202504beta2::DeviceConcise>*
UpdateDevicesRequest::_internal_mutable_devices() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.devices_;
}

// -------------------------------------------------------------------

// UpdateDevicesResponse

// repeated .kentik.device.v202504beta2.DeviceDetailed devices = 1 [json_name = "devices", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int UpdateDevicesResponse::_internal_devices_size() const {
  return _internal_devices().size();
}
inline int UpdateDevicesResponse::devices_size() const {
  return _internal_devices_size();
}
inline void UpdateDevicesResponse::clear_devices() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.devices_.Clear();
}
inline ::kentik::device::v202504beta2::DeviceDetailed* UpdateDevicesResponse::mutable_devices(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.UpdateDevicesResponse.devices)
  return _internal_mutable_devices()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::kentik::device::v202504beta2::DeviceDetailed>* UpdateDevicesResponse::mutable_devices()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.device.v202504beta2.UpdateDevicesResponse.devices)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_devices();
}
inline const ::kentik::device::v202504beta2::DeviceDetailed& UpdateDevicesResponse::devices(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.UpdateDevicesResponse.devices)
  return _internal_devices().Get(index);
}
inline ::kentik::device::v202504beta2::DeviceDetailed* UpdateDevicesResponse::add_devices() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::kentik::device::v202504beta2::DeviceDetailed* _add = _internal_mutable_devices()->Add();
  // @@protoc_insertion_point(field_add:kentik.device.v202504beta2.UpdateDevicesResponse.devices)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::device::v202504beta2::DeviceDetailed>& UpdateDevicesResponse::devices() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.device.v202504beta2.UpdateDevicesResponse.devices)
  return _internal_devices();
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::device::v202504beta2::DeviceDetailed>&
UpdateDevicesResponse::_internal_devices() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.devices_;
}
inline ::google::protobuf::RepeatedPtrField<::kentik::device::v202504beta2::DeviceDetailed>*
UpdateDevicesResponse::_internal_mutable_devices() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.devices_;
}

// repeated string failed_devices = 2 [json_name = "failedDevices", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int UpdateDevicesResponse::_internal_failed_devices_size() const {
  return _internal_failed_devices().size();
}
inline int UpdateDevicesResponse::failed_devices_size() const {
  return _internal_failed_devices_size();
}
inline void UpdateDevicesResponse::clear_failed_devices() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.failed_devices_.Clear();
}
inline std::string* UpdateDevicesResponse::add_failed_devices() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_failed_devices()->Add();
  // @@protoc_insertion_point(field_add_mutable:kentik.device.v202504beta2.UpdateDevicesResponse.failed_devices)
  return _s;
}
inline const std::string& UpdateDevicesResponse::failed_devices(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.UpdateDevicesResponse.failed_devices)
  return _internal_failed_devices().Get(index);
}
inline std::string* UpdateDevicesResponse::mutable_failed_devices(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.UpdateDevicesResponse.failed_devices)
  return _internal_mutable_failed_devices()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void UpdateDevicesResponse::set_failed_devices(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_failed_devices()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.UpdateDevicesResponse.failed_devices)
}
template <typename Arg_, typename... Args_>
inline void UpdateDevicesResponse::add_failed_devices(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_failed_devices(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:kentik.device.v202504beta2.UpdateDevicesResponse.failed_devices)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
UpdateDevicesResponse::failed_devices() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.device.v202504beta2.UpdateDevicesResponse.failed_devices)
  return _internal_failed_devices();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
UpdateDevicesResponse::mutable_failed_devices() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.device.v202504beta2.UpdateDevicesResponse.failed_devices)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_failed_devices();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
UpdateDevicesResponse::_internal_failed_devices() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.failed_devices_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
UpdateDevicesResponse::_internal_mutable_failed_devices() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.failed_devices_;
}

// -------------------------------------------------------------------

// UpdateDeviceLabelsRequest

// string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void UpdateDeviceLabelsRequest::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& UpdateDeviceLabelsRequest::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.UpdateDeviceLabelsRequest.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UpdateDeviceLabelsRequest::set_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.UpdateDeviceLabelsRequest.id)
}
inline std::string* UpdateDeviceLabelsRequest::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.UpdateDeviceLabelsRequest.id)
  return _s;
}
inline const std::string& UpdateDeviceLabelsRequest::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void UpdateDeviceLabelsRequest::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(value, GetArena());
}
inline std::string* UpdateDeviceLabelsRequest::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* UpdateDeviceLabelsRequest::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.UpdateDeviceLabelsRequest.id)
  return _impl_.id_.Release();
}
inline void UpdateDeviceLabelsRequest::set_allocated_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.id_.IsDefault()) {
    _impl_.id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.UpdateDeviceLabelsRequest.id)
}

// repeated .kentik.device.v202504beta2.LabelConcise labels = 2 [json_name = "labels", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int UpdateDeviceLabelsRequest::_internal_labels_size() const {
  return _internal_labels().size();
}
inline int UpdateDeviceLabelsRequest::labels_size() const {
  return _internal_labels_size();
}
inline void UpdateDeviceLabelsRequest::clear_labels() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.labels_.Clear();
}
inline ::kentik::device::v202504beta2::LabelConcise* UpdateDeviceLabelsRequest::mutable_labels(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.UpdateDeviceLabelsRequest.labels)
  return _internal_mutable_labels()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::kentik::device::v202504beta2::LabelConcise>* UpdateDeviceLabelsRequest::mutable_labels()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.device.v202504beta2.UpdateDeviceLabelsRequest.labels)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_labels();
}
inline const ::kentik::device::v202504beta2::LabelConcise& UpdateDeviceLabelsRequest::labels(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.UpdateDeviceLabelsRequest.labels)
  return _internal_labels().Get(index);
}
inline ::kentik::device::v202504beta2::LabelConcise* UpdateDeviceLabelsRequest::add_labels() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::kentik::device::v202504beta2::LabelConcise* _add = _internal_mutable_labels()->Add();
  // @@protoc_insertion_point(field_add:kentik.device.v202504beta2.UpdateDeviceLabelsRequest.labels)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::device::v202504beta2::LabelConcise>& UpdateDeviceLabelsRequest::labels() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.device.v202504beta2.UpdateDeviceLabelsRequest.labels)
  return _internal_labels();
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::device::v202504beta2::LabelConcise>&
UpdateDeviceLabelsRequest::_internal_labels() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.labels_;
}
inline ::google::protobuf::RepeatedPtrField<::kentik::device::v202504beta2::LabelConcise>*
UpdateDeviceLabelsRequest::_internal_mutable_labels() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.labels_;
}

// -------------------------------------------------------------------

// UpdateDeviceLabelsResponse

// .kentik.device.v202504beta2.DeviceDetailed device = 1 [json_name = "device", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool UpdateDeviceLabelsResponse::has_device() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.device_ != nullptr);
  return value;
}
inline void UpdateDeviceLabelsResponse::clear_device() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.device_ != nullptr) _impl_.device_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::kentik::device::v202504beta2::DeviceDetailed& UpdateDeviceLabelsResponse::_internal_device() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::device::v202504beta2::DeviceDetailed* p = _impl_.device_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::device::v202504beta2::DeviceDetailed&>(::kentik::device::v202504beta2::_DeviceDetailed_default_instance_);
}
inline const ::kentik::device::v202504beta2::DeviceDetailed& UpdateDeviceLabelsResponse::device() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.UpdateDeviceLabelsResponse.device)
  return _internal_device();
}
inline void UpdateDeviceLabelsResponse::unsafe_arena_set_allocated_device(::kentik::device::v202504beta2::DeviceDetailed* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.device_);
  }
  _impl_.device_ = reinterpret_cast<::kentik::device::v202504beta2::DeviceDetailed*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.device.v202504beta2.UpdateDeviceLabelsResponse.device)
}
inline ::kentik::device::v202504beta2::DeviceDetailed* UpdateDeviceLabelsResponse::release_device() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::device::v202504beta2::DeviceDetailed* released = _impl_.device_;
  _impl_.device_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::device::v202504beta2::DeviceDetailed* UpdateDeviceLabelsResponse::unsafe_arena_release_device() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.UpdateDeviceLabelsResponse.device)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::device::v202504beta2::DeviceDetailed* temp = _impl_.device_;
  _impl_.device_ = nullptr;
  return temp;
}
inline ::kentik::device::v202504beta2::DeviceDetailed* UpdateDeviceLabelsResponse::_internal_mutable_device() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.device_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::device::v202504beta2::DeviceDetailed>(GetArena());
    _impl_.device_ = reinterpret_cast<::kentik::device::v202504beta2::DeviceDetailed*>(p);
  }
  return _impl_.device_;
}
inline ::kentik::device::v202504beta2::DeviceDetailed* UpdateDeviceLabelsResponse::mutable_device() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::kentik::device::v202504beta2::DeviceDetailed* _msg = _internal_mutable_device();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.UpdateDeviceLabelsResponse.device)
  return _msg;
}
inline void UpdateDeviceLabelsResponse::set_allocated_device(::kentik::device::v202504beta2::DeviceDetailed* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.device_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.device_ = reinterpret_cast<::kentik::device::v202504beta2::DeviceDetailed*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.UpdateDeviceLabelsResponse.device)
}

// -------------------------------------------------------------------

// DeleteDeviceRequest

// string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void DeleteDeviceRequest::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& DeleteDeviceRequest::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeleteDeviceRequest.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeleteDeviceRequest::set_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.DeleteDeviceRequest.id)
}
inline std::string* DeleteDeviceRequest::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.DeleteDeviceRequest.id)
  return _s;
}
inline const std::string& DeleteDeviceRequest::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void DeleteDeviceRequest::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(value, GetArena());
}
inline std::string* DeleteDeviceRequest::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* DeleteDeviceRequest::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.device.v202504beta2.DeleteDeviceRequest.id)
  return _impl_.id_.Release();
}
inline void DeleteDeviceRequest::set_allocated_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.id_.IsDefault()) {
    _impl_.id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.device.v202504beta2.DeleteDeviceRequest.id)
}

// -------------------------------------------------------------------

// DeleteDeviceResponse

// -------------------------------------------------------------------

// DeleteDevicesRequest

// repeated string ids = 1 [json_name = "ids", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int DeleteDevicesRequest::_internal_ids_size() const {
  return _internal_ids().size();
}
inline int DeleteDevicesRequest::ids_size() const {
  return _internal_ids_size();
}
inline void DeleteDevicesRequest::clear_ids() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ids_.Clear();
}
inline std::string* DeleteDevicesRequest::add_ids() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_ids()->Add();
  // @@protoc_insertion_point(field_add_mutable:kentik.device.v202504beta2.DeleteDevicesRequest.ids)
  return _s;
}
inline const std::string& DeleteDevicesRequest::ids(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeleteDevicesRequest.ids)
  return _internal_ids().Get(index);
}
inline std::string* DeleteDevicesRequest::mutable_ids(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.DeleteDevicesRequest.ids)
  return _internal_mutable_ids()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void DeleteDevicesRequest::set_ids(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_ids()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.DeleteDevicesRequest.ids)
}
template <typename Arg_, typename... Args_>
inline void DeleteDevicesRequest::add_ids(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_ids(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:kentik.device.v202504beta2.DeleteDevicesRequest.ids)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
DeleteDevicesRequest::ids() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.device.v202504beta2.DeleteDevicesRequest.ids)
  return _internal_ids();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
DeleteDevicesRequest::mutable_ids() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.device.v202504beta2.DeleteDevicesRequest.ids)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_ids();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
DeleteDevicesRequest::_internal_ids() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ids_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
DeleteDevicesRequest::_internal_mutable_ids() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.ids_;
}

// -------------------------------------------------------------------

// DeleteDevicesResponse

// repeated string failed_devices = 1 [json_name = "failedDevices", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int DeleteDevicesResponse::_internal_failed_devices_size() const {
  return _internal_failed_devices().size();
}
inline int DeleteDevicesResponse::failed_devices_size() const {
  return _internal_failed_devices_size();
}
inline void DeleteDevicesResponse::clear_failed_devices() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.failed_devices_.Clear();
}
inline std::string* DeleteDevicesResponse::add_failed_devices() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_failed_devices()->Add();
  // @@protoc_insertion_point(field_add_mutable:kentik.device.v202504beta2.DeleteDevicesResponse.failed_devices)
  return _s;
}
inline const std::string& DeleteDevicesResponse::failed_devices(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.device.v202504beta2.DeleteDevicesResponse.failed_devices)
  return _internal_failed_devices().Get(index);
}
inline std::string* DeleteDevicesResponse::mutable_failed_devices(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.device.v202504beta2.DeleteDevicesResponse.failed_devices)
  return _internal_mutable_failed_devices()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void DeleteDevicesResponse::set_failed_devices(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_failed_devices()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:kentik.device.v202504beta2.DeleteDevicesResponse.failed_devices)
}
template <typename Arg_, typename... Args_>
inline void DeleteDevicesResponse::add_failed_devices(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_failed_devices(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:kentik.device.v202504beta2.DeleteDevicesResponse.failed_devices)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
DeleteDevicesResponse::failed_devices() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.device.v202504beta2.DeleteDevicesResponse.failed_devices)
  return _internal_failed_devices();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
DeleteDevicesResponse::mutable_failed_devices() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.device.v202504beta2.DeleteDevicesResponse.failed_devices)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_failed_devices();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
DeleteDevicesResponse::_internal_failed_devices() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.failed_devices_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
DeleteDevicesResponse::_internal_mutable_failed_devices() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.failed_devices_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v202504beta2
}  // namespace device
}  // namespace kentik


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // kentik_2fdevice_2fv202504beta2_2fdevice_2eproto_2epb_2eh
