// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: kentik/custom_dimension/v202411alpha1/custom_dimension.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3012000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3012004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
#include "google/api/annotations.pb.h"
#include "google/api/client.pb.h"
#include "google/api/field_behavior.pb.h"
#include <google/protobuf/timestamp.pb.h>
#include "protoc-gen-openapiv2/options/annotations.pb.h"
#include "kentik/core/v202303/annotations.pb.h"
#include "kentik/user/v202211/user.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[20]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto;
namespace kentik {
namespace custom_dimension {
namespace v202411alpha1 {
class CreateCustomDimensionRequest;
class CreateCustomDimensionRequestDefaultTypeInternal;
extern CreateCustomDimensionRequestDefaultTypeInternal _CreateCustomDimensionRequest_default_instance_;
class CreateCustomDimensionResponse;
class CreateCustomDimensionResponseDefaultTypeInternal;
extern CreateCustomDimensionResponseDefaultTypeInternal _CreateCustomDimensionResponse_default_instance_;
class CreatePopulatorRequest;
class CreatePopulatorRequestDefaultTypeInternal;
extern CreatePopulatorRequestDefaultTypeInternal _CreatePopulatorRequest_default_instance_;
class CreatePopulatorResponse;
class CreatePopulatorResponseDefaultTypeInternal;
extern CreatePopulatorResponseDefaultTypeInternal _CreatePopulatorResponse_default_instance_;
class CustomDimension;
class CustomDimensionDefaultTypeInternal;
extern CustomDimensionDefaultTypeInternal _CustomDimension_default_instance_;
class DeleteCustomDimensionRequest;
class DeleteCustomDimensionRequestDefaultTypeInternal;
extern DeleteCustomDimensionRequestDefaultTypeInternal _DeleteCustomDimensionRequest_default_instance_;
class DeleteCustomDimensionResponse;
class DeleteCustomDimensionResponseDefaultTypeInternal;
extern DeleteCustomDimensionResponseDefaultTypeInternal _DeleteCustomDimensionResponse_default_instance_;
class DeletePopulatorRequest;
class DeletePopulatorRequestDefaultTypeInternal;
extern DeletePopulatorRequestDefaultTypeInternal _DeletePopulatorRequest_default_instance_;
class DeletePopulatorResponse;
class DeletePopulatorResponseDefaultTypeInternal;
extern DeletePopulatorResponseDefaultTypeInternal _DeletePopulatorResponse_default_instance_;
class ExtendedField;
class ExtendedFieldDefaultTypeInternal;
extern ExtendedFieldDefaultTypeInternal _ExtendedField_default_instance_;
class GetCustomDimensionInfoRequest;
class GetCustomDimensionInfoRequestDefaultTypeInternal;
extern GetCustomDimensionInfoRequestDefaultTypeInternal _GetCustomDimensionInfoRequest_default_instance_;
class GetCustomDimensionInfoResponse;
class GetCustomDimensionInfoResponseDefaultTypeInternal;
extern GetCustomDimensionInfoResponseDefaultTypeInternal _GetCustomDimensionInfoResponse_default_instance_;
class ListCustomDimensionsRequest;
class ListCustomDimensionsRequestDefaultTypeInternal;
extern ListCustomDimensionsRequestDefaultTypeInternal _ListCustomDimensionsRequest_default_instance_;
class ListCustomDimensionsResponse;
class ListCustomDimensionsResponseDefaultTypeInternal;
extern ListCustomDimensionsResponseDefaultTypeInternal _ListCustomDimensionsResponse_default_instance_;
class Populator;
class PopulatorDefaultTypeInternal;
extern PopulatorDefaultTypeInternal _Populator_default_instance_;
class Populator_ExtendedFieldsEntry_DoNotUse;
class Populator_ExtendedFieldsEntry_DoNotUseDefaultTypeInternal;
extern Populator_ExtendedFieldsEntry_DoNotUseDefaultTypeInternal _Populator_ExtendedFieldsEntry_DoNotUse_default_instance_;
class UpdateCustomDimensionRequest;
class UpdateCustomDimensionRequestDefaultTypeInternal;
extern UpdateCustomDimensionRequestDefaultTypeInternal _UpdateCustomDimensionRequest_default_instance_;
class UpdateCustomDimensionResponse;
class UpdateCustomDimensionResponseDefaultTypeInternal;
extern UpdateCustomDimensionResponseDefaultTypeInternal _UpdateCustomDimensionResponse_default_instance_;
class UpdatePopulatorRequest;
class UpdatePopulatorRequestDefaultTypeInternal;
extern UpdatePopulatorRequestDefaultTypeInternal _UpdatePopulatorRequest_default_instance_;
class UpdatePopulatorResponse;
class UpdatePopulatorResponseDefaultTypeInternal;
extern UpdatePopulatorResponseDefaultTypeInternal _UpdatePopulatorResponse_default_instance_;
}  // namespace v202411alpha1
}  // namespace custom_dimension
}  // namespace kentik
PROTOBUF_NAMESPACE_OPEN
template<> ::kentik::custom_dimension::v202411alpha1::CreateCustomDimensionRequest* Arena::CreateMaybeMessage<::kentik::custom_dimension::v202411alpha1::CreateCustomDimensionRequest>(Arena*);
template<> ::kentik::custom_dimension::v202411alpha1::CreateCustomDimensionResponse* Arena::CreateMaybeMessage<::kentik::custom_dimension::v202411alpha1::CreateCustomDimensionResponse>(Arena*);
template<> ::kentik::custom_dimension::v202411alpha1::CreatePopulatorRequest* Arena::CreateMaybeMessage<::kentik::custom_dimension::v202411alpha1::CreatePopulatorRequest>(Arena*);
template<> ::kentik::custom_dimension::v202411alpha1::CreatePopulatorResponse* Arena::CreateMaybeMessage<::kentik::custom_dimension::v202411alpha1::CreatePopulatorResponse>(Arena*);
template<> ::kentik::custom_dimension::v202411alpha1::CustomDimension* Arena::CreateMaybeMessage<::kentik::custom_dimension::v202411alpha1::CustomDimension>(Arena*);
template<> ::kentik::custom_dimension::v202411alpha1::DeleteCustomDimensionRequest* Arena::CreateMaybeMessage<::kentik::custom_dimension::v202411alpha1::DeleteCustomDimensionRequest>(Arena*);
template<> ::kentik::custom_dimension::v202411alpha1::DeleteCustomDimensionResponse* Arena::CreateMaybeMessage<::kentik::custom_dimension::v202411alpha1::DeleteCustomDimensionResponse>(Arena*);
template<> ::kentik::custom_dimension::v202411alpha1::DeletePopulatorRequest* Arena::CreateMaybeMessage<::kentik::custom_dimension::v202411alpha1::DeletePopulatorRequest>(Arena*);
template<> ::kentik::custom_dimension::v202411alpha1::DeletePopulatorResponse* Arena::CreateMaybeMessage<::kentik::custom_dimension::v202411alpha1::DeletePopulatorResponse>(Arena*);
template<> ::kentik::custom_dimension::v202411alpha1::ExtendedField* Arena::CreateMaybeMessage<::kentik::custom_dimension::v202411alpha1::ExtendedField>(Arena*);
template<> ::kentik::custom_dimension::v202411alpha1::GetCustomDimensionInfoRequest* Arena::CreateMaybeMessage<::kentik::custom_dimension::v202411alpha1::GetCustomDimensionInfoRequest>(Arena*);
template<> ::kentik::custom_dimension::v202411alpha1::GetCustomDimensionInfoResponse* Arena::CreateMaybeMessage<::kentik::custom_dimension::v202411alpha1::GetCustomDimensionInfoResponse>(Arena*);
template<> ::kentik::custom_dimension::v202411alpha1::ListCustomDimensionsRequest* Arena::CreateMaybeMessage<::kentik::custom_dimension::v202411alpha1::ListCustomDimensionsRequest>(Arena*);
template<> ::kentik::custom_dimension::v202411alpha1::ListCustomDimensionsResponse* Arena::CreateMaybeMessage<::kentik::custom_dimension::v202411alpha1::ListCustomDimensionsResponse>(Arena*);
template<> ::kentik::custom_dimension::v202411alpha1::Populator* Arena::CreateMaybeMessage<::kentik::custom_dimension::v202411alpha1::Populator>(Arena*);
template<> ::kentik::custom_dimension::v202411alpha1::Populator_ExtendedFieldsEntry_DoNotUse* Arena::CreateMaybeMessage<::kentik::custom_dimension::v202411alpha1::Populator_ExtendedFieldsEntry_DoNotUse>(Arena*);
template<> ::kentik::custom_dimension::v202411alpha1::UpdateCustomDimensionRequest* Arena::CreateMaybeMessage<::kentik::custom_dimension::v202411alpha1::UpdateCustomDimensionRequest>(Arena*);
template<> ::kentik::custom_dimension::v202411alpha1::UpdateCustomDimensionResponse* Arena::CreateMaybeMessage<::kentik::custom_dimension::v202411alpha1::UpdateCustomDimensionResponse>(Arena*);
template<> ::kentik::custom_dimension::v202411alpha1::UpdatePopulatorRequest* Arena::CreateMaybeMessage<::kentik::custom_dimension::v202411alpha1::UpdatePopulatorRequest>(Arena*);
template<> ::kentik::custom_dimension::v202411alpha1::UpdatePopulatorResponse* Arena::CreateMaybeMessage<::kentik::custom_dimension::v202411alpha1::UpdatePopulatorResponse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace kentik {
namespace custom_dimension {
namespace v202411alpha1 {

// ===================================================================

class CustomDimension PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kentik.custom_dimension.v202411alpha1.CustomDimension) */ {
 public:
  inline CustomDimension() : CustomDimension(nullptr) {};
  virtual ~CustomDimension();

  CustomDimension(const CustomDimension& from);
  CustomDimension(CustomDimension&& from) noexcept
    : CustomDimension() {
    *this = ::std::move(from);
  }

  inline CustomDimension& operator=(const CustomDimension& from) {
    CopyFrom(from);
    return *this;
  }
  inline CustomDimension& operator=(CustomDimension&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CustomDimension& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CustomDimension* internal_default_instance() {
    return reinterpret_cast<const CustomDimension*>(
               &_CustomDimension_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(CustomDimension& a, CustomDimension& b) {
    a.Swap(&b);
  }
  inline void Swap(CustomDimension* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CustomDimension* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CustomDimension* New() const final {
    return CreateMaybeMessage<CustomDimension>(nullptr);
  }

  CustomDimension* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CustomDimension>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CustomDimension& from);
  void MergeFrom(const CustomDimension& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CustomDimension* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kentik.custom_dimension.v202411alpha1.CustomDimension";
  }
  protected:
  explicit CustomDimension(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto);
    return ::descriptor_table_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPopulatorsFieldNumber = 5,
    kIdFieldNumber = 1,
    kNameFieldNumber = 2,
    kTypeFieldNumber = 3,
    kDescriptionFieldNumber = 4,
    kCompanyIdFieldNumber = 6,
    kCreatedDateFieldNumber = 7,
    kUpdatedDateFieldNumber = 8,
  };
  // repeated .kentik.custom_dimension.v202411alpha1.Populator populators = 5[json_name = "populators", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int populators_size() const;
  private:
  int _internal_populators_size() const;
  public:
  void clear_populators();
  ::kentik::custom_dimension::v202411alpha1::Populator* mutable_populators(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kentik::custom_dimension::v202411alpha1::Populator >*
      mutable_populators();
  private:
  const ::kentik::custom_dimension::v202411alpha1::Populator& _internal_populators(int index) const;
  ::kentik::custom_dimension::v202411alpha1::Populator* _internal_add_populators();
  public:
  const ::kentik::custom_dimension::v202411alpha1::Populator& populators(int index) const;
  ::kentik::custom_dimension::v202411alpha1::Populator* add_populators();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kentik::custom_dimension::v202411alpha1::Populator >&
      populators() const;

  // string id = 1[json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_id();
  const std::string& id() const;
  void set_id(const std::string& value);
  void set_id(std::string&& value);
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  std::string* mutable_id();
  std::string* release_id();
  void set_allocated_id(std::string* id);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_id();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_id(
      std::string* id);
  private:
  const std::string& _internal_id() const;
  void _internal_set_id(const std::string& value);
  std::string* _internal_mutable_id();
  public:

  // string name = 2[json_name = "name", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_name();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_name(
      std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // string type = 3[json_name = "type", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_type();
  const std::string& type() const;
  void set_type(const std::string& value);
  void set_type(std::string&& value);
  void set_type(const char* value);
  void set_type(const char* value, size_t size);
  std::string* mutable_type();
  std::string* release_type();
  void set_allocated_type(std::string* type);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_type();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_type(
      std::string* type);
  private:
  const std::string& _internal_type() const;
  void _internal_set_type(const std::string& value);
  std::string* _internal_mutable_type();
  public:

  // string description = 4[json_name = "description", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_description();
  const std::string& description() const;
  void set_description(const std::string& value);
  void set_description(std::string&& value);
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  std::string* mutable_description();
  std::string* release_description();
  void set_allocated_description(std::string* description);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_description();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_description(
      std::string* description);
  private:
  const std::string& _internal_description() const;
  void _internal_set_description(const std::string& value);
  std::string* _internal_mutable_description();
  public:

  // string company_id = 6[json_name = "companyId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_company_id();
  const std::string& company_id() const;
  void set_company_id(const std::string& value);
  void set_company_id(std::string&& value);
  void set_company_id(const char* value);
  void set_company_id(const char* value, size_t size);
  std::string* mutable_company_id();
  std::string* release_company_id();
  void set_allocated_company_id(std::string* company_id);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_company_id();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_company_id(
      std::string* company_id);
  private:
  const std::string& _internal_company_id() const;
  void _internal_set_company_id(const std::string& value);
  std::string* _internal_mutable_company_id();
  public:

  // .google.protobuf.Timestamp created_date = 7[json_name = "createdDate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_created_date() const;
  private:
  bool _internal_has_created_date() const;
  public:
  void clear_created_date();
  const PROTOBUF_NAMESPACE_ID::Timestamp& created_date() const;
  PROTOBUF_NAMESPACE_ID::Timestamp* release_created_date();
  PROTOBUF_NAMESPACE_ID::Timestamp* mutable_created_date();
  void set_allocated_created_date(PROTOBUF_NAMESPACE_ID::Timestamp* created_date);
  private:
  const PROTOBUF_NAMESPACE_ID::Timestamp& _internal_created_date() const;
  PROTOBUF_NAMESPACE_ID::Timestamp* _internal_mutable_created_date();
  public:
  void unsafe_arena_set_allocated_created_date(
      PROTOBUF_NAMESPACE_ID::Timestamp* created_date);
  PROTOBUF_NAMESPACE_ID::Timestamp* unsafe_arena_release_created_date();

  // .google.protobuf.Timestamp updated_date = 8[json_name = "updatedDate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_updated_date() const;
  private:
  bool _internal_has_updated_date() const;
  public:
  void clear_updated_date();
  const PROTOBUF_NAMESPACE_ID::Timestamp& updated_date() const;
  PROTOBUF_NAMESPACE_ID::Timestamp* release_updated_date();
  PROTOBUF_NAMESPACE_ID::Timestamp* mutable_updated_date();
  void set_allocated_updated_date(PROTOBUF_NAMESPACE_ID::Timestamp* updated_date);
  private:
  const PROTOBUF_NAMESPACE_ID::Timestamp& _internal_updated_date() const;
  PROTOBUF_NAMESPACE_ID::Timestamp* _internal_mutable_updated_date();
  public:
  void unsafe_arena_set_allocated_updated_date(
      PROTOBUF_NAMESPACE_ID::Timestamp* updated_date);
  PROTOBUF_NAMESPACE_ID::Timestamp* unsafe_arena_release_updated_date();

  // @@protoc_insertion_point(class_scope:kentik.custom_dimension.v202411alpha1.CustomDimension)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kentik::custom_dimension::v202411alpha1::Populator > populators_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr id_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr type_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr description_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr company_id_;
  PROTOBUF_NAMESPACE_ID::Timestamp* created_date_;
  PROTOBUF_NAMESPACE_ID::Timestamp* updated_date_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto;
};
// -------------------------------------------------------------------

class Populator_ExtendedFieldsEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<Populator_ExtendedFieldsEntry_DoNotUse, 
    std::string, ::kentik::custom_dimension::v202411alpha1::ExtendedField,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<Populator_ExtendedFieldsEntry_DoNotUse, 
    std::string, ::kentik::custom_dimension::v202411alpha1::ExtendedField,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  Populator_ExtendedFieldsEntry_DoNotUse();
  Populator_ExtendedFieldsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const Populator_ExtendedFieldsEntry_DoNotUse& other);
  static const Populator_ExtendedFieldsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const Populator_ExtendedFieldsEntry_DoNotUse*>(&_Populator_ExtendedFieldsEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
    return ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "kentik.custom_dimension.v202411alpha1.Populator.ExtendedFieldsEntry.key");
 }
  static bool ValidateValue(void*) { return true; }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto);
    return ::descriptor_table_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto.file_level_metadata[1];
  }

  public:
};

// -------------------------------------------------------------------

class Populator PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kentik.custom_dimension.v202411alpha1.Populator) */ {
 public:
  inline Populator() : Populator(nullptr) {};
  virtual ~Populator();

  Populator(const Populator& from);
  Populator(Populator&& from) noexcept
    : Populator() {
    *this = ::std::move(from);
  }

  inline Populator& operator=(const Populator& from) {
    CopyFrom(from);
    return *this;
  }
  inline Populator& operator=(Populator&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Populator& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Populator* internal_default_instance() {
    return reinterpret_cast<const Populator*>(
               &_Populator_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(Populator& a, Populator& b) {
    a.Swap(&b);
  }
  inline void Swap(Populator* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Populator* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Populator* New() const final {
    return CreateMaybeMessage<Populator>(nullptr);
  }

  Populator* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Populator>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Populator& from);
  void MergeFrom(const Populator& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Populator* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kentik.custom_dimension.v202411alpha1.Populator";
  }
  protected:
  explicit Populator(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto);
    return ::descriptor_table_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kDeviceNameFieldNumber = 4,
    kDeviceTypeFieldNumber = 5,
    kSiteFieldNumber = 6,
    kInterfaceNameFieldNumber = 7,
    kAddrFieldNumber = 8,
    kPortFieldNumber = 9,
    kProtocolFieldNumber = 11,
    kAsnFieldNumber = 12,
    kLasthopAsNameFieldNumber = 13,
    kNexthopAsnFieldNumber = 14,
    kNexthopAsNameFieldNumber = 15,
    kNexthopFieldNumber = 16,
    kBgpAspathFieldNumber = 17,
    kBgpCommunityFieldNumber = 18,
    kMacFieldNumber = 19,
    kCountryFieldNumber = 20,
    kVlansFieldNumber = 21,
    kExtendedFieldsFieldNumber = 27,
    kIdFieldNumber = 1,
    kValueFieldNumber = 2,
    kDirectionFieldNumber = 3,
    kUserFieldNumber = 22,
    kCreatedDateFieldNumber = 23,
    kUpdatedDateFieldNumber = 24,
    kTcpFlagsFieldNumber = 10,
    kAddrCountFieldNumber = 25,
    kMacCountFieldNumber = 26,
  };
  // repeated string device_name = 4[json_name = "deviceName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int device_name_size() const;
  private:
  int _internal_device_name_size() const;
  public:
  void clear_device_name();
  const std::string& device_name(int index) const;
  std::string* mutable_device_name(int index);
  void set_device_name(int index, const std::string& value);
  void set_device_name(int index, std::string&& value);
  void set_device_name(int index, const char* value);
  void set_device_name(int index, const char* value, size_t size);
  std::string* add_device_name();
  void add_device_name(const std::string& value);
  void add_device_name(std::string&& value);
  void add_device_name(const char* value);
  void add_device_name(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& device_name() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_device_name();
  private:
  const std::string& _internal_device_name(int index) const;
  std::string* _internal_add_device_name();
  public:

  // repeated string device_type = 5[json_name = "deviceType", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int device_type_size() const;
  private:
  int _internal_device_type_size() const;
  public:
  void clear_device_type();
  const std::string& device_type(int index) const;
  std::string* mutable_device_type(int index);
  void set_device_type(int index, const std::string& value);
  void set_device_type(int index, std::string&& value);
  void set_device_type(int index, const char* value);
  void set_device_type(int index, const char* value, size_t size);
  std::string* add_device_type();
  void add_device_type(const std::string& value);
  void add_device_type(std::string&& value);
  void add_device_type(const char* value);
  void add_device_type(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& device_type() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_device_type();
  private:
  const std::string& _internal_device_type(int index) const;
  std::string* _internal_add_device_type();
  public:

  // repeated string site = 6[json_name = "site", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int site_size() const;
  private:
  int _internal_site_size() const;
  public:
  void clear_site();
  const std::string& site(int index) const;
  std::string* mutable_site(int index);
  void set_site(int index, const std::string& value);
  void set_site(int index, std::string&& value);
  void set_site(int index, const char* value);
  void set_site(int index, const char* value, size_t size);
  std::string* add_site();
  void add_site(const std::string& value);
  void add_site(std::string&& value);
  void add_site(const char* value);
  void add_site(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& site() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_site();
  private:
  const std::string& _internal_site(int index) const;
  std::string* _internal_add_site();
  public:

  // repeated string interface_name = 7[json_name = "interfaceName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int interface_name_size() const;
  private:
  int _internal_interface_name_size() const;
  public:
  void clear_interface_name();
  const std::string& interface_name(int index) const;
  std::string* mutable_interface_name(int index);
  void set_interface_name(int index, const std::string& value);
  void set_interface_name(int index, std::string&& value);
  void set_interface_name(int index, const char* value);
  void set_interface_name(int index, const char* value, size_t size);
  std::string* add_interface_name();
  void add_interface_name(const std::string& value);
  void add_interface_name(std::string&& value);
  void add_interface_name(const char* value);
  void add_interface_name(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& interface_name() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_interface_name();
  private:
  const std::string& _internal_interface_name(int index) const;
  std::string* _internal_add_interface_name();
  public:

  // repeated string addr = 8[json_name = "addr", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int addr_size() const;
  private:
  int _internal_addr_size() const;
  public:
  void clear_addr();
  const std::string& addr(int index) const;
  std::string* mutable_addr(int index);
  void set_addr(int index, const std::string& value);
  void set_addr(int index, std::string&& value);
  void set_addr(int index, const char* value);
  void set_addr(int index, const char* value, size_t size);
  std::string* add_addr();
  void add_addr(const std::string& value);
  void add_addr(std::string&& value);
  void add_addr(const char* value);
  void add_addr(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& addr() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_addr();
  private:
  const std::string& _internal_addr(int index) const;
  std::string* _internal_add_addr();
  public:

  // repeated uint32 port = 9[json_name = "port", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int port_size() const;
  private:
  int _internal_port_size() const;
  public:
  void clear_port();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_port(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_port() const;
  void _internal_add_port(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_port();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 port(int index) const;
  void set_port(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_port(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      port() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_port();

  // repeated uint32 protocol = 11[json_name = "protocol", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int protocol_size() const;
  private:
  int _internal_protocol_size() const;
  public:
  void clear_protocol();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_protocol(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_protocol() const;
  void _internal_add_protocol(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_protocol();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 protocol(int index) const;
  void set_protocol(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_protocol(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      protocol() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_protocol();

  // repeated uint32 asn = 12[json_name = "asn", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int asn_size() const;
  private:
  int _internal_asn_size() const;
  public:
  void clear_asn();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_asn(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_asn() const;
  void _internal_add_asn(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_asn();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 asn(int index) const;
  void set_asn(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_asn(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      asn() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_asn();

  // repeated string lasthop_as_name = 13[json_name = "lasthopAsName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int lasthop_as_name_size() const;
  private:
  int _internal_lasthop_as_name_size() const;
  public:
  void clear_lasthop_as_name();
  const std::string& lasthop_as_name(int index) const;
  std::string* mutable_lasthop_as_name(int index);
  void set_lasthop_as_name(int index, const std::string& value);
  void set_lasthop_as_name(int index, std::string&& value);
  void set_lasthop_as_name(int index, const char* value);
  void set_lasthop_as_name(int index, const char* value, size_t size);
  std::string* add_lasthop_as_name();
  void add_lasthop_as_name(const std::string& value);
  void add_lasthop_as_name(std::string&& value);
  void add_lasthop_as_name(const char* value);
  void add_lasthop_as_name(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& lasthop_as_name() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_lasthop_as_name();
  private:
  const std::string& _internal_lasthop_as_name(int index) const;
  std::string* _internal_add_lasthop_as_name();
  public:

  // repeated uint32 nexthop_asn = 14[json_name = "nexthopAsn", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int nexthop_asn_size() const;
  private:
  int _internal_nexthop_asn_size() const;
  public:
  void clear_nexthop_asn();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_nexthop_asn(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_nexthop_asn() const;
  void _internal_add_nexthop_asn(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_nexthop_asn();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 nexthop_asn(int index) const;
  void set_nexthop_asn(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_nexthop_asn(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      nexthop_asn() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_nexthop_asn();

  // repeated string nexthop_as_name = 15[json_name = "nexthopAsName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int nexthop_as_name_size() const;
  private:
  int _internal_nexthop_as_name_size() const;
  public:
  void clear_nexthop_as_name();
  const std::string& nexthop_as_name(int index) const;
  std::string* mutable_nexthop_as_name(int index);
  void set_nexthop_as_name(int index, const std::string& value);
  void set_nexthop_as_name(int index, std::string&& value);
  void set_nexthop_as_name(int index, const char* value);
  void set_nexthop_as_name(int index, const char* value, size_t size);
  std::string* add_nexthop_as_name();
  void add_nexthop_as_name(const std::string& value);
  void add_nexthop_as_name(std::string&& value);
  void add_nexthop_as_name(const char* value);
  void add_nexthop_as_name(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& nexthop_as_name() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_nexthop_as_name();
  private:
  const std::string& _internal_nexthop_as_name(int index) const;
  std::string* _internal_add_nexthop_as_name();
  public:

  // repeated string nexthop = 16[json_name = "nexthop", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int nexthop_size() const;
  private:
  int _internal_nexthop_size() const;
  public:
  void clear_nexthop();
  const std::string& nexthop(int index) const;
  std::string* mutable_nexthop(int index);
  void set_nexthop(int index, const std::string& value);
  void set_nexthop(int index, std::string&& value);
  void set_nexthop(int index, const char* value);
  void set_nexthop(int index, const char* value, size_t size);
  std::string* add_nexthop();
  void add_nexthop(const std::string& value);
  void add_nexthop(std::string&& value);
  void add_nexthop(const char* value);
  void add_nexthop(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& nexthop() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_nexthop();
  private:
  const std::string& _internal_nexthop(int index) const;
  std::string* _internal_add_nexthop();
  public:

  // repeated string bgp_aspath = 17[json_name = "bgpAspath", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int bgp_aspath_size() const;
  private:
  int _internal_bgp_aspath_size() const;
  public:
  void clear_bgp_aspath();
  const std::string& bgp_aspath(int index) const;
  std::string* mutable_bgp_aspath(int index);
  void set_bgp_aspath(int index, const std::string& value);
  void set_bgp_aspath(int index, std::string&& value);
  void set_bgp_aspath(int index, const char* value);
  void set_bgp_aspath(int index, const char* value, size_t size);
  std::string* add_bgp_aspath();
  void add_bgp_aspath(const std::string& value);
  void add_bgp_aspath(std::string&& value);
  void add_bgp_aspath(const char* value);
  void add_bgp_aspath(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& bgp_aspath() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_bgp_aspath();
  private:
  const std::string& _internal_bgp_aspath(int index) const;
  std::string* _internal_add_bgp_aspath();
  public:

  // repeated string bgp_community = 18[json_name = "bgpCommunity", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int bgp_community_size() const;
  private:
  int _internal_bgp_community_size() const;
  public:
  void clear_bgp_community();
  const std::string& bgp_community(int index) const;
  std::string* mutable_bgp_community(int index);
  void set_bgp_community(int index, const std::string& value);
  void set_bgp_community(int index, std::string&& value);
  void set_bgp_community(int index, const char* value);
  void set_bgp_community(int index, const char* value, size_t size);
  std::string* add_bgp_community();
  void add_bgp_community(const std::string& value);
  void add_bgp_community(std::string&& value);
  void add_bgp_community(const char* value);
  void add_bgp_community(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& bgp_community() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_bgp_community();
  private:
  const std::string& _internal_bgp_community(int index) const;
  std::string* _internal_add_bgp_community();
  public:

  // repeated string mac = 19[json_name = "mac", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int mac_size() const;
  private:
  int _internal_mac_size() const;
  public:
  void clear_mac();
  const std::string& mac(int index) const;
  std::string* mutable_mac(int index);
  void set_mac(int index, const std::string& value);
  void set_mac(int index, std::string&& value);
  void set_mac(int index, const char* value);
  void set_mac(int index, const char* value, size_t size);
  std::string* add_mac();
  void add_mac(const std::string& value);
  void add_mac(std::string&& value);
  void add_mac(const char* value);
  void add_mac(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& mac() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_mac();
  private:
  const std::string& _internal_mac(int index) const;
  std::string* _internal_add_mac();
  public:

  // repeated string country = 20[json_name = "country", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int country_size() const;
  private:
  int _internal_country_size() const;
  public:
  void clear_country();
  const std::string& country(int index) const;
  std::string* mutable_country(int index);
  void set_country(int index, const std::string& value);
  void set_country(int index, std::string&& value);
  void set_country(int index, const char* value);
  void set_country(int index, const char* value, size_t size);
  std::string* add_country();
  void add_country(const std::string& value);
  void add_country(std::string&& value);
  void add_country(const char* value);
  void add_country(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& country() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_country();
  private:
  const std::string& _internal_country(int index) const;
  std::string* _internal_add_country();
  public:

  // repeated string vlans = 21[json_name = "vlans", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int vlans_size() const;
  private:
  int _internal_vlans_size() const;
  public:
  void clear_vlans();
  const std::string& vlans(int index) const;
  std::string* mutable_vlans(int index);
  void set_vlans(int index, const std::string& value);
  void set_vlans(int index, std::string&& value);
  void set_vlans(int index, const char* value);
  void set_vlans(int index, const char* value, size_t size);
  std::string* add_vlans();
  void add_vlans(const std::string& value);
  void add_vlans(std::string&& value);
  void add_vlans(const char* value);
  void add_vlans(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& vlans() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_vlans();
  private:
  const std::string& _internal_vlans(int index) const;
  std::string* _internal_add_vlans();
  public:

  // map<string, .kentik.custom_dimension.v202411alpha1.ExtendedField> extended_fields = 27[json_name = "extendedFields", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int extended_fields_size() const;
  private:
  int _internal_extended_fields_size() const;
  public:
  void clear_extended_fields();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::kentik::custom_dimension::v202411alpha1::ExtendedField >&
      _internal_extended_fields() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::kentik::custom_dimension::v202411alpha1::ExtendedField >*
      _internal_mutable_extended_fields();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::kentik::custom_dimension::v202411alpha1::ExtendedField >&
      extended_fields() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::kentik::custom_dimension::v202411alpha1::ExtendedField >*
      mutable_extended_fields();

  // string id = 1[json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_id();
  const std::string& id() const;
  void set_id(const std::string& value);
  void set_id(std::string&& value);
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  std::string* mutable_id();
  std::string* release_id();
  void set_allocated_id(std::string* id);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_id();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_id(
      std::string* id);
  private:
  const std::string& _internal_id() const;
  void _internal_set_id(const std::string& value);
  std::string* _internal_mutable_id();
  public:

  // string value = 2[json_name = "value", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_value();
  const std::string& value() const;
  void set_value(const std::string& value);
  void set_value(std::string&& value);
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  std::string* mutable_value();
  std::string* release_value();
  void set_allocated_value(std::string* value);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_value();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_value(
      std::string* value);
  private:
  const std::string& _internal_value() const;
  void _internal_set_value(const std::string& value);
  std::string* _internal_mutable_value();
  public:

  // string direction = 3[json_name = "direction", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_direction();
  const std::string& direction() const;
  void set_direction(const std::string& value);
  void set_direction(std::string&& value);
  void set_direction(const char* value);
  void set_direction(const char* value, size_t size);
  std::string* mutable_direction();
  std::string* release_direction();
  void set_allocated_direction(std::string* direction);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_direction();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_direction(
      std::string* direction);
  private:
  const std::string& _internal_direction() const;
  void _internal_set_direction(const std::string& value);
  std::string* _internal_mutable_direction();
  public:

  // string user = 22[json_name = "user", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_user();
  const std::string& user() const;
  void set_user(const std::string& value);
  void set_user(std::string&& value);
  void set_user(const char* value);
  void set_user(const char* value, size_t size);
  std::string* mutable_user();
  std::string* release_user();
  void set_allocated_user(std::string* user);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_user();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_user(
      std::string* user);
  private:
  const std::string& _internal_user() const;
  void _internal_set_user(const std::string& value);
  std::string* _internal_mutable_user();
  public:

  // .google.protobuf.Timestamp created_date = 23[json_name = "createdDate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_created_date() const;
  private:
  bool _internal_has_created_date() const;
  public:
  void clear_created_date();
  const PROTOBUF_NAMESPACE_ID::Timestamp& created_date() const;
  PROTOBUF_NAMESPACE_ID::Timestamp* release_created_date();
  PROTOBUF_NAMESPACE_ID::Timestamp* mutable_created_date();
  void set_allocated_created_date(PROTOBUF_NAMESPACE_ID::Timestamp* created_date);
  private:
  const PROTOBUF_NAMESPACE_ID::Timestamp& _internal_created_date() const;
  PROTOBUF_NAMESPACE_ID::Timestamp* _internal_mutable_created_date();
  public:
  void unsafe_arena_set_allocated_created_date(
      PROTOBUF_NAMESPACE_ID::Timestamp* created_date);
  PROTOBUF_NAMESPACE_ID::Timestamp* unsafe_arena_release_created_date();

  // .google.protobuf.Timestamp updated_date = 24[json_name = "updatedDate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_updated_date() const;
  private:
  bool _internal_has_updated_date() const;
  public:
  void clear_updated_date();
  const PROTOBUF_NAMESPACE_ID::Timestamp& updated_date() const;
  PROTOBUF_NAMESPACE_ID::Timestamp* release_updated_date();
  PROTOBUF_NAMESPACE_ID::Timestamp* mutable_updated_date();
  void set_allocated_updated_date(PROTOBUF_NAMESPACE_ID::Timestamp* updated_date);
  private:
  const PROTOBUF_NAMESPACE_ID::Timestamp& _internal_updated_date() const;
  PROTOBUF_NAMESPACE_ID::Timestamp* _internal_mutable_updated_date();
  public:
  void unsafe_arena_set_allocated_updated_date(
      PROTOBUF_NAMESPACE_ID::Timestamp* updated_date);
  PROTOBUF_NAMESPACE_ID::Timestamp* unsafe_arena_release_updated_date();

  // uint32 tcp_flags = 10[json_name = "tcpFlags", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_tcp_flags();
  ::PROTOBUF_NAMESPACE_ID::uint32 tcp_flags() const;
  void set_tcp_flags(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_tcp_flags() const;
  void _internal_set_tcp_flags(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 addr_count = 25[json_name = "addrCount", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_addr_count();
  ::PROTOBUF_NAMESPACE_ID::uint32 addr_count() const;
  void set_addr_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_addr_count() const;
  void _internal_set_addr_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 mac_count = 26[json_name = "macCount", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_mac_count();
  ::PROTOBUF_NAMESPACE_ID::uint32 mac_count() const;
  void set_mac_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_mac_count() const;
  void _internal_set_mac_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:kentik.custom_dimension.v202411alpha1.Populator)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> device_name_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> device_type_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> site_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> interface_name_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> addr_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > port_;
  mutable std::atomic<int> _port_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > protocol_;
  mutable std::atomic<int> _protocol_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > asn_;
  mutable std::atomic<int> _asn_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> lasthop_as_name_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > nexthop_asn_;
  mutable std::atomic<int> _nexthop_asn_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> nexthop_as_name_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> nexthop_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> bgp_aspath_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> bgp_community_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> mac_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> country_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> vlans_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      Populator_ExtendedFieldsEntry_DoNotUse,
      std::string, ::kentik::custom_dimension::v202411alpha1::ExtendedField,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
      0 > extended_fields_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr id_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr value_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr direction_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr user_;
  PROTOBUF_NAMESPACE_ID::Timestamp* created_date_;
  PROTOBUF_NAMESPACE_ID::Timestamp* updated_date_;
  ::PROTOBUF_NAMESPACE_ID::uint32 tcp_flags_;
  ::PROTOBUF_NAMESPACE_ID::uint32 addr_count_;
  ::PROTOBUF_NAMESPACE_ID::uint32 mac_count_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto;
};
// -------------------------------------------------------------------

class ExtendedField PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kentik.custom_dimension.v202411alpha1.ExtendedField) */ {
 public:
  inline ExtendedField() : ExtendedField(nullptr) {};
  virtual ~ExtendedField();

  ExtendedField(const ExtendedField& from);
  ExtendedField(ExtendedField&& from) noexcept
    : ExtendedField() {
    *this = ::std::move(from);
  }

  inline ExtendedField& operator=(const ExtendedField& from) {
    CopyFrom(from);
    return *this;
  }
  inline ExtendedField& operator=(ExtendedField&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ExtendedField& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ExtendedField* internal_default_instance() {
    return reinterpret_cast<const ExtendedField*>(
               &_ExtendedField_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(ExtendedField& a, ExtendedField& b) {
    a.Swap(&b);
  }
  inline void Swap(ExtendedField* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ExtendedField* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ExtendedField* New() const final {
    return CreateMaybeMessage<ExtendedField>(nullptr);
  }

  ExtendedField* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ExtendedField>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ExtendedField& from);
  void MergeFrom(const ExtendedField& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ExtendedField* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kentik.custom_dimension.v202411alpha1.ExtendedField";
  }
  protected:
  explicit ExtendedField(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto);
    return ::descriptor_table_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValueFieldNumber = 1,
  };
  // repeated string value = 1[json_name = "value"];
  int value_size() const;
  private:
  int _internal_value_size() const;
  public:
  void clear_value();
  const std::string& value(int index) const;
  std::string* mutable_value(int index);
  void set_value(int index, const std::string& value);
  void set_value(int index, std::string&& value);
  void set_value(int index, const char* value);
  void set_value(int index, const char* value, size_t size);
  std::string* add_value();
  void add_value(const std::string& value);
  void add_value(std::string&& value);
  void add_value(const char* value);
  void add_value(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& value() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_value();
  private:
  const std::string& _internal_value(int index) const;
  std::string* _internal_add_value();
  public:

  // @@protoc_insertion_point(class_scope:kentik.custom_dimension.v202411alpha1.ExtendedField)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> value_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto;
};
// -------------------------------------------------------------------

class ListCustomDimensionsRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kentik.custom_dimension.v202411alpha1.ListCustomDimensionsRequest) */ {
 public:
  inline ListCustomDimensionsRequest() : ListCustomDimensionsRequest(nullptr) {};
  virtual ~ListCustomDimensionsRequest();

  ListCustomDimensionsRequest(const ListCustomDimensionsRequest& from);
  ListCustomDimensionsRequest(ListCustomDimensionsRequest&& from) noexcept
    : ListCustomDimensionsRequest() {
    *this = ::std::move(from);
  }

  inline ListCustomDimensionsRequest& operator=(const ListCustomDimensionsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListCustomDimensionsRequest& operator=(ListCustomDimensionsRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ListCustomDimensionsRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListCustomDimensionsRequest* internal_default_instance() {
    return reinterpret_cast<const ListCustomDimensionsRequest*>(
               &_ListCustomDimensionsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(ListCustomDimensionsRequest& a, ListCustomDimensionsRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ListCustomDimensionsRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListCustomDimensionsRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ListCustomDimensionsRequest* New() const final {
    return CreateMaybeMessage<ListCustomDimensionsRequest>(nullptr);
  }

  ListCustomDimensionsRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ListCustomDimensionsRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ListCustomDimensionsRequest& from);
  void MergeFrom(const ListCustomDimensionsRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListCustomDimensionsRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kentik.custom_dimension.v202411alpha1.ListCustomDimensionsRequest";
  }
  protected:
  explicit ListCustomDimensionsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto);
    return ::descriptor_table_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:kentik.custom_dimension.v202411alpha1.ListCustomDimensionsRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto;
};
// -------------------------------------------------------------------

class ListCustomDimensionsResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kentik.custom_dimension.v202411alpha1.ListCustomDimensionsResponse) */ {
 public:
  inline ListCustomDimensionsResponse() : ListCustomDimensionsResponse(nullptr) {};
  virtual ~ListCustomDimensionsResponse();

  ListCustomDimensionsResponse(const ListCustomDimensionsResponse& from);
  ListCustomDimensionsResponse(ListCustomDimensionsResponse&& from) noexcept
    : ListCustomDimensionsResponse() {
    *this = ::std::move(from);
  }

  inline ListCustomDimensionsResponse& operator=(const ListCustomDimensionsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListCustomDimensionsResponse& operator=(ListCustomDimensionsResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ListCustomDimensionsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListCustomDimensionsResponse* internal_default_instance() {
    return reinterpret_cast<const ListCustomDimensionsResponse*>(
               &_ListCustomDimensionsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(ListCustomDimensionsResponse& a, ListCustomDimensionsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ListCustomDimensionsResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListCustomDimensionsResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ListCustomDimensionsResponse* New() const final {
    return CreateMaybeMessage<ListCustomDimensionsResponse>(nullptr);
  }

  ListCustomDimensionsResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ListCustomDimensionsResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ListCustomDimensionsResponse& from);
  void MergeFrom(const ListCustomDimensionsResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListCustomDimensionsResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kentik.custom_dimension.v202411alpha1.ListCustomDimensionsResponse";
  }
  protected:
  explicit ListCustomDimensionsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto);
    return ::descriptor_table_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDimensionsFieldNumber = 1,
  };
  // repeated .kentik.custom_dimension.v202411alpha1.CustomDimension dimensions = 1[json_name = "dimensions"];
  int dimensions_size() const;
  private:
  int _internal_dimensions_size() const;
  public:
  void clear_dimensions();
  ::kentik::custom_dimension::v202411alpha1::CustomDimension* mutable_dimensions(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kentik::custom_dimension::v202411alpha1::CustomDimension >*
      mutable_dimensions();
  private:
  const ::kentik::custom_dimension::v202411alpha1::CustomDimension& _internal_dimensions(int index) const;
  ::kentik::custom_dimension::v202411alpha1::CustomDimension* _internal_add_dimensions();
  public:
  const ::kentik::custom_dimension::v202411alpha1::CustomDimension& dimensions(int index) const;
  ::kentik::custom_dimension::v202411alpha1::CustomDimension* add_dimensions();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kentik::custom_dimension::v202411alpha1::CustomDimension >&
      dimensions() const;

  // @@protoc_insertion_point(class_scope:kentik.custom_dimension.v202411alpha1.ListCustomDimensionsResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kentik::custom_dimension::v202411alpha1::CustomDimension > dimensions_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto;
};
// -------------------------------------------------------------------

class GetCustomDimensionInfoRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kentik.custom_dimension.v202411alpha1.GetCustomDimensionInfoRequest) */ {
 public:
  inline GetCustomDimensionInfoRequest() : GetCustomDimensionInfoRequest(nullptr) {};
  virtual ~GetCustomDimensionInfoRequest();

  GetCustomDimensionInfoRequest(const GetCustomDimensionInfoRequest& from);
  GetCustomDimensionInfoRequest(GetCustomDimensionInfoRequest&& from) noexcept
    : GetCustomDimensionInfoRequest() {
    *this = ::std::move(from);
  }

  inline GetCustomDimensionInfoRequest& operator=(const GetCustomDimensionInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetCustomDimensionInfoRequest& operator=(GetCustomDimensionInfoRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GetCustomDimensionInfoRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetCustomDimensionInfoRequest* internal_default_instance() {
    return reinterpret_cast<const GetCustomDimensionInfoRequest*>(
               &_GetCustomDimensionInfoRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(GetCustomDimensionInfoRequest& a, GetCustomDimensionInfoRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetCustomDimensionInfoRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetCustomDimensionInfoRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetCustomDimensionInfoRequest* New() const final {
    return CreateMaybeMessage<GetCustomDimensionInfoRequest>(nullptr);
  }

  GetCustomDimensionInfoRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetCustomDimensionInfoRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GetCustomDimensionInfoRequest& from);
  void MergeFrom(const GetCustomDimensionInfoRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetCustomDimensionInfoRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kentik.custom_dimension.v202411alpha1.GetCustomDimensionInfoRequest";
  }
  protected:
  explicit GetCustomDimensionInfoRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto);
    return ::descriptor_table_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCustomDimensionIdFieldNumber = 1,
  };
  // string custom_dimension_id = 1[json_name = "customDimensionId"];
  void clear_custom_dimension_id();
  const std::string& custom_dimension_id() const;
  void set_custom_dimension_id(const std::string& value);
  void set_custom_dimension_id(std::string&& value);
  void set_custom_dimension_id(const char* value);
  void set_custom_dimension_id(const char* value, size_t size);
  std::string* mutable_custom_dimension_id();
  std::string* release_custom_dimension_id();
  void set_allocated_custom_dimension_id(std::string* custom_dimension_id);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_custom_dimension_id();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_custom_dimension_id(
      std::string* custom_dimension_id);
  private:
  const std::string& _internal_custom_dimension_id() const;
  void _internal_set_custom_dimension_id(const std::string& value);
  std::string* _internal_mutable_custom_dimension_id();
  public:

  // @@protoc_insertion_point(class_scope:kentik.custom_dimension.v202411alpha1.GetCustomDimensionInfoRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr custom_dimension_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto;
};
// -------------------------------------------------------------------

class GetCustomDimensionInfoResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kentik.custom_dimension.v202411alpha1.GetCustomDimensionInfoResponse) */ {
 public:
  inline GetCustomDimensionInfoResponse() : GetCustomDimensionInfoResponse(nullptr) {};
  virtual ~GetCustomDimensionInfoResponse();

  GetCustomDimensionInfoResponse(const GetCustomDimensionInfoResponse& from);
  GetCustomDimensionInfoResponse(GetCustomDimensionInfoResponse&& from) noexcept
    : GetCustomDimensionInfoResponse() {
    *this = ::std::move(from);
  }

  inline GetCustomDimensionInfoResponse& operator=(const GetCustomDimensionInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetCustomDimensionInfoResponse& operator=(GetCustomDimensionInfoResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GetCustomDimensionInfoResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetCustomDimensionInfoResponse* internal_default_instance() {
    return reinterpret_cast<const GetCustomDimensionInfoResponse*>(
               &_GetCustomDimensionInfoResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(GetCustomDimensionInfoResponse& a, GetCustomDimensionInfoResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetCustomDimensionInfoResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetCustomDimensionInfoResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetCustomDimensionInfoResponse* New() const final {
    return CreateMaybeMessage<GetCustomDimensionInfoResponse>(nullptr);
  }

  GetCustomDimensionInfoResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetCustomDimensionInfoResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GetCustomDimensionInfoResponse& from);
  void MergeFrom(const GetCustomDimensionInfoResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetCustomDimensionInfoResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kentik.custom_dimension.v202411alpha1.GetCustomDimensionInfoResponse";
  }
  protected:
  explicit GetCustomDimensionInfoResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto);
    return ::descriptor_table_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDimensionFieldNumber = 1,
  };
  // .kentik.custom_dimension.v202411alpha1.CustomDimension dimension = 1[json_name = "dimension"];
  bool has_dimension() const;
  private:
  bool _internal_has_dimension() const;
  public:
  void clear_dimension();
  const ::kentik::custom_dimension::v202411alpha1::CustomDimension& dimension() const;
  ::kentik::custom_dimension::v202411alpha1::CustomDimension* release_dimension();
  ::kentik::custom_dimension::v202411alpha1::CustomDimension* mutable_dimension();
  void set_allocated_dimension(::kentik::custom_dimension::v202411alpha1::CustomDimension* dimension);
  private:
  const ::kentik::custom_dimension::v202411alpha1::CustomDimension& _internal_dimension() const;
  ::kentik::custom_dimension::v202411alpha1::CustomDimension* _internal_mutable_dimension();
  public:
  void unsafe_arena_set_allocated_dimension(
      ::kentik::custom_dimension::v202411alpha1::CustomDimension* dimension);
  ::kentik::custom_dimension::v202411alpha1::CustomDimension* unsafe_arena_release_dimension();

  // @@protoc_insertion_point(class_scope:kentik.custom_dimension.v202411alpha1.GetCustomDimensionInfoResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::kentik::custom_dimension::v202411alpha1::CustomDimension* dimension_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto;
};
// -------------------------------------------------------------------

class CreateCustomDimensionRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kentik.custom_dimension.v202411alpha1.CreateCustomDimensionRequest) */ {
 public:
  inline CreateCustomDimensionRequest() : CreateCustomDimensionRequest(nullptr) {};
  virtual ~CreateCustomDimensionRequest();

  CreateCustomDimensionRequest(const CreateCustomDimensionRequest& from);
  CreateCustomDimensionRequest(CreateCustomDimensionRequest&& from) noexcept
    : CreateCustomDimensionRequest() {
    *this = ::std::move(from);
  }

  inline CreateCustomDimensionRequest& operator=(const CreateCustomDimensionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateCustomDimensionRequest& operator=(CreateCustomDimensionRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CreateCustomDimensionRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateCustomDimensionRequest* internal_default_instance() {
    return reinterpret_cast<const CreateCustomDimensionRequest*>(
               &_CreateCustomDimensionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(CreateCustomDimensionRequest& a, CreateCustomDimensionRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(CreateCustomDimensionRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateCustomDimensionRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CreateCustomDimensionRequest* New() const final {
    return CreateMaybeMessage<CreateCustomDimensionRequest>(nullptr);
  }

  CreateCustomDimensionRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CreateCustomDimensionRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CreateCustomDimensionRequest& from);
  void MergeFrom(const CreateCustomDimensionRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreateCustomDimensionRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kentik.custom_dimension.v202411alpha1.CreateCustomDimensionRequest";
  }
  protected:
  explicit CreateCustomDimensionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto);
    return ::descriptor_table_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDimensionFieldNumber = 1,
  };
  // .kentik.custom_dimension.v202411alpha1.CustomDimension dimension = 1[json_name = "dimension"];
  bool has_dimension() const;
  private:
  bool _internal_has_dimension() const;
  public:
  void clear_dimension();
  const ::kentik::custom_dimension::v202411alpha1::CustomDimension& dimension() const;
  ::kentik::custom_dimension::v202411alpha1::CustomDimension* release_dimension();
  ::kentik::custom_dimension::v202411alpha1::CustomDimension* mutable_dimension();
  void set_allocated_dimension(::kentik::custom_dimension::v202411alpha1::CustomDimension* dimension);
  private:
  const ::kentik::custom_dimension::v202411alpha1::CustomDimension& _internal_dimension() const;
  ::kentik::custom_dimension::v202411alpha1::CustomDimension* _internal_mutable_dimension();
  public:
  void unsafe_arena_set_allocated_dimension(
      ::kentik::custom_dimension::v202411alpha1::CustomDimension* dimension);
  ::kentik::custom_dimension::v202411alpha1::CustomDimension* unsafe_arena_release_dimension();

  // @@protoc_insertion_point(class_scope:kentik.custom_dimension.v202411alpha1.CreateCustomDimensionRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::kentik::custom_dimension::v202411alpha1::CustomDimension* dimension_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto;
};
// -------------------------------------------------------------------

class CreateCustomDimensionResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kentik.custom_dimension.v202411alpha1.CreateCustomDimensionResponse) */ {
 public:
  inline CreateCustomDimensionResponse() : CreateCustomDimensionResponse(nullptr) {};
  virtual ~CreateCustomDimensionResponse();

  CreateCustomDimensionResponse(const CreateCustomDimensionResponse& from);
  CreateCustomDimensionResponse(CreateCustomDimensionResponse&& from) noexcept
    : CreateCustomDimensionResponse() {
    *this = ::std::move(from);
  }

  inline CreateCustomDimensionResponse& operator=(const CreateCustomDimensionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateCustomDimensionResponse& operator=(CreateCustomDimensionResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CreateCustomDimensionResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateCustomDimensionResponse* internal_default_instance() {
    return reinterpret_cast<const CreateCustomDimensionResponse*>(
               &_CreateCustomDimensionResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(CreateCustomDimensionResponse& a, CreateCustomDimensionResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CreateCustomDimensionResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateCustomDimensionResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CreateCustomDimensionResponse* New() const final {
    return CreateMaybeMessage<CreateCustomDimensionResponse>(nullptr);
  }

  CreateCustomDimensionResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CreateCustomDimensionResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CreateCustomDimensionResponse& from);
  void MergeFrom(const CreateCustomDimensionResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreateCustomDimensionResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kentik.custom_dimension.v202411alpha1.CreateCustomDimensionResponse";
  }
  protected:
  explicit CreateCustomDimensionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto);
    return ::descriptor_table_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDimensionFieldNumber = 1,
  };
  // .kentik.custom_dimension.v202411alpha1.CustomDimension dimension = 1[json_name = "dimension"];
  bool has_dimension() const;
  private:
  bool _internal_has_dimension() const;
  public:
  void clear_dimension();
  const ::kentik::custom_dimension::v202411alpha1::CustomDimension& dimension() const;
  ::kentik::custom_dimension::v202411alpha1::CustomDimension* release_dimension();
  ::kentik::custom_dimension::v202411alpha1::CustomDimension* mutable_dimension();
  void set_allocated_dimension(::kentik::custom_dimension::v202411alpha1::CustomDimension* dimension);
  private:
  const ::kentik::custom_dimension::v202411alpha1::CustomDimension& _internal_dimension() const;
  ::kentik::custom_dimension::v202411alpha1::CustomDimension* _internal_mutable_dimension();
  public:
  void unsafe_arena_set_allocated_dimension(
      ::kentik::custom_dimension::v202411alpha1::CustomDimension* dimension);
  ::kentik::custom_dimension::v202411alpha1::CustomDimension* unsafe_arena_release_dimension();

  // @@protoc_insertion_point(class_scope:kentik.custom_dimension.v202411alpha1.CreateCustomDimensionResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::kentik::custom_dimension::v202411alpha1::CustomDimension* dimension_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto;
};
// -------------------------------------------------------------------

class UpdateCustomDimensionRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kentik.custom_dimension.v202411alpha1.UpdateCustomDimensionRequest) */ {
 public:
  inline UpdateCustomDimensionRequest() : UpdateCustomDimensionRequest(nullptr) {};
  virtual ~UpdateCustomDimensionRequest();

  UpdateCustomDimensionRequest(const UpdateCustomDimensionRequest& from);
  UpdateCustomDimensionRequest(UpdateCustomDimensionRequest&& from) noexcept
    : UpdateCustomDimensionRequest() {
    *this = ::std::move(from);
  }

  inline UpdateCustomDimensionRequest& operator=(const UpdateCustomDimensionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateCustomDimensionRequest& operator=(UpdateCustomDimensionRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const UpdateCustomDimensionRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UpdateCustomDimensionRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateCustomDimensionRequest*>(
               &_UpdateCustomDimensionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(UpdateCustomDimensionRequest& a, UpdateCustomDimensionRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(UpdateCustomDimensionRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateCustomDimensionRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UpdateCustomDimensionRequest* New() const final {
    return CreateMaybeMessage<UpdateCustomDimensionRequest>(nullptr);
  }

  UpdateCustomDimensionRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UpdateCustomDimensionRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const UpdateCustomDimensionRequest& from);
  void MergeFrom(const UpdateCustomDimensionRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UpdateCustomDimensionRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kentik.custom_dimension.v202411alpha1.UpdateCustomDimensionRequest";
  }
  protected:
  explicit UpdateCustomDimensionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto);
    return ::descriptor_table_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCustomDimensionIdFieldNumber = 1,
    kDimensionFieldNumber = 2,
  };
  // string custom_dimension_id = 1[json_name = "customDimensionId"];
  void clear_custom_dimension_id();
  const std::string& custom_dimension_id() const;
  void set_custom_dimension_id(const std::string& value);
  void set_custom_dimension_id(std::string&& value);
  void set_custom_dimension_id(const char* value);
  void set_custom_dimension_id(const char* value, size_t size);
  std::string* mutable_custom_dimension_id();
  std::string* release_custom_dimension_id();
  void set_allocated_custom_dimension_id(std::string* custom_dimension_id);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_custom_dimension_id();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_custom_dimension_id(
      std::string* custom_dimension_id);
  private:
  const std::string& _internal_custom_dimension_id() const;
  void _internal_set_custom_dimension_id(const std::string& value);
  std::string* _internal_mutable_custom_dimension_id();
  public:

  // .kentik.custom_dimension.v202411alpha1.CustomDimension dimension = 2[json_name = "dimension"];
  bool has_dimension() const;
  private:
  bool _internal_has_dimension() const;
  public:
  void clear_dimension();
  const ::kentik::custom_dimension::v202411alpha1::CustomDimension& dimension() const;
  ::kentik::custom_dimension::v202411alpha1::CustomDimension* release_dimension();
  ::kentik::custom_dimension::v202411alpha1::CustomDimension* mutable_dimension();
  void set_allocated_dimension(::kentik::custom_dimension::v202411alpha1::CustomDimension* dimension);
  private:
  const ::kentik::custom_dimension::v202411alpha1::CustomDimension& _internal_dimension() const;
  ::kentik::custom_dimension::v202411alpha1::CustomDimension* _internal_mutable_dimension();
  public:
  void unsafe_arena_set_allocated_dimension(
      ::kentik::custom_dimension::v202411alpha1::CustomDimension* dimension);
  ::kentik::custom_dimension::v202411alpha1::CustomDimension* unsafe_arena_release_dimension();

  // @@protoc_insertion_point(class_scope:kentik.custom_dimension.v202411alpha1.UpdateCustomDimensionRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr custom_dimension_id_;
  ::kentik::custom_dimension::v202411alpha1::CustomDimension* dimension_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto;
};
// -------------------------------------------------------------------

class UpdateCustomDimensionResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kentik.custom_dimension.v202411alpha1.UpdateCustomDimensionResponse) */ {
 public:
  inline UpdateCustomDimensionResponse() : UpdateCustomDimensionResponse(nullptr) {};
  virtual ~UpdateCustomDimensionResponse();

  UpdateCustomDimensionResponse(const UpdateCustomDimensionResponse& from);
  UpdateCustomDimensionResponse(UpdateCustomDimensionResponse&& from) noexcept
    : UpdateCustomDimensionResponse() {
    *this = ::std::move(from);
  }

  inline UpdateCustomDimensionResponse& operator=(const UpdateCustomDimensionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateCustomDimensionResponse& operator=(UpdateCustomDimensionResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const UpdateCustomDimensionResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UpdateCustomDimensionResponse* internal_default_instance() {
    return reinterpret_cast<const UpdateCustomDimensionResponse*>(
               &_UpdateCustomDimensionResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(UpdateCustomDimensionResponse& a, UpdateCustomDimensionResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(UpdateCustomDimensionResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateCustomDimensionResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UpdateCustomDimensionResponse* New() const final {
    return CreateMaybeMessage<UpdateCustomDimensionResponse>(nullptr);
  }

  UpdateCustomDimensionResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UpdateCustomDimensionResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const UpdateCustomDimensionResponse& from);
  void MergeFrom(const UpdateCustomDimensionResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UpdateCustomDimensionResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kentik.custom_dimension.v202411alpha1.UpdateCustomDimensionResponse";
  }
  protected:
  explicit UpdateCustomDimensionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto);
    return ::descriptor_table_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDimensionFieldNumber = 1,
  };
  // .kentik.custom_dimension.v202411alpha1.CustomDimension dimension = 1[json_name = "dimension"];
  bool has_dimension() const;
  private:
  bool _internal_has_dimension() const;
  public:
  void clear_dimension();
  const ::kentik::custom_dimension::v202411alpha1::CustomDimension& dimension() const;
  ::kentik::custom_dimension::v202411alpha1::CustomDimension* release_dimension();
  ::kentik::custom_dimension::v202411alpha1::CustomDimension* mutable_dimension();
  void set_allocated_dimension(::kentik::custom_dimension::v202411alpha1::CustomDimension* dimension);
  private:
  const ::kentik::custom_dimension::v202411alpha1::CustomDimension& _internal_dimension() const;
  ::kentik::custom_dimension::v202411alpha1::CustomDimension* _internal_mutable_dimension();
  public:
  void unsafe_arena_set_allocated_dimension(
      ::kentik::custom_dimension::v202411alpha1::CustomDimension* dimension);
  ::kentik::custom_dimension::v202411alpha1::CustomDimension* unsafe_arena_release_dimension();

  // @@protoc_insertion_point(class_scope:kentik.custom_dimension.v202411alpha1.UpdateCustomDimensionResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::kentik::custom_dimension::v202411alpha1::CustomDimension* dimension_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto;
};
// -------------------------------------------------------------------

class DeleteCustomDimensionRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kentik.custom_dimension.v202411alpha1.DeleteCustomDimensionRequest) */ {
 public:
  inline DeleteCustomDimensionRequest() : DeleteCustomDimensionRequest(nullptr) {};
  virtual ~DeleteCustomDimensionRequest();

  DeleteCustomDimensionRequest(const DeleteCustomDimensionRequest& from);
  DeleteCustomDimensionRequest(DeleteCustomDimensionRequest&& from) noexcept
    : DeleteCustomDimensionRequest() {
    *this = ::std::move(from);
  }

  inline DeleteCustomDimensionRequest& operator=(const DeleteCustomDimensionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteCustomDimensionRequest& operator=(DeleteCustomDimensionRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DeleteCustomDimensionRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeleteCustomDimensionRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteCustomDimensionRequest*>(
               &_DeleteCustomDimensionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(DeleteCustomDimensionRequest& a, DeleteCustomDimensionRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(DeleteCustomDimensionRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteCustomDimensionRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DeleteCustomDimensionRequest* New() const final {
    return CreateMaybeMessage<DeleteCustomDimensionRequest>(nullptr);
  }

  DeleteCustomDimensionRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DeleteCustomDimensionRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DeleteCustomDimensionRequest& from);
  void MergeFrom(const DeleteCustomDimensionRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeleteCustomDimensionRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kentik.custom_dimension.v202411alpha1.DeleteCustomDimensionRequest";
  }
  protected:
  explicit DeleteCustomDimensionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto);
    return ::descriptor_table_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCustomDimensionIdFieldNumber = 1,
  };
  // string custom_dimension_id = 1[json_name = "customDimensionId"];
  void clear_custom_dimension_id();
  const std::string& custom_dimension_id() const;
  void set_custom_dimension_id(const std::string& value);
  void set_custom_dimension_id(std::string&& value);
  void set_custom_dimension_id(const char* value);
  void set_custom_dimension_id(const char* value, size_t size);
  std::string* mutable_custom_dimension_id();
  std::string* release_custom_dimension_id();
  void set_allocated_custom_dimension_id(std::string* custom_dimension_id);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_custom_dimension_id();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_custom_dimension_id(
      std::string* custom_dimension_id);
  private:
  const std::string& _internal_custom_dimension_id() const;
  void _internal_set_custom_dimension_id(const std::string& value);
  std::string* _internal_mutable_custom_dimension_id();
  public:

  // @@protoc_insertion_point(class_scope:kentik.custom_dimension.v202411alpha1.DeleteCustomDimensionRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr custom_dimension_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto;
};
// -------------------------------------------------------------------

class DeleteCustomDimensionResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kentik.custom_dimension.v202411alpha1.DeleteCustomDimensionResponse) */ {
 public:
  inline DeleteCustomDimensionResponse() : DeleteCustomDimensionResponse(nullptr) {};
  virtual ~DeleteCustomDimensionResponse();

  DeleteCustomDimensionResponse(const DeleteCustomDimensionResponse& from);
  DeleteCustomDimensionResponse(DeleteCustomDimensionResponse&& from) noexcept
    : DeleteCustomDimensionResponse() {
    *this = ::std::move(from);
  }

  inline DeleteCustomDimensionResponse& operator=(const DeleteCustomDimensionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteCustomDimensionResponse& operator=(DeleteCustomDimensionResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DeleteCustomDimensionResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeleteCustomDimensionResponse* internal_default_instance() {
    return reinterpret_cast<const DeleteCustomDimensionResponse*>(
               &_DeleteCustomDimensionResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(DeleteCustomDimensionResponse& a, DeleteCustomDimensionResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(DeleteCustomDimensionResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteCustomDimensionResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DeleteCustomDimensionResponse* New() const final {
    return CreateMaybeMessage<DeleteCustomDimensionResponse>(nullptr);
  }

  DeleteCustomDimensionResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DeleteCustomDimensionResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DeleteCustomDimensionResponse& from);
  void MergeFrom(const DeleteCustomDimensionResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeleteCustomDimensionResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kentik.custom_dimension.v202411alpha1.DeleteCustomDimensionResponse";
  }
  protected:
  explicit DeleteCustomDimensionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto);
    return ::descriptor_table_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:kentik.custom_dimension.v202411alpha1.DeleteCustomDimensionResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto;
};
// -------------------------------------------------------------------

class CreatePopulatorRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kentik.custom_dimension.v202411alpha1.CreatePopulatorRequest) */ {
 public:
  inline CreatePopulatorRequest() : CreatePopulatorRequest(nullptr) {};
  virtual ~CreatePopulatorRequest();

  CreatePopulatorRequest(const CreatePopulatorRequest& from);
  CreatePopulatorRequest(CreatePopulatorRequest&& from) noexcept
    : CreatePopulatorRequest() {
    *this = ::std::move(from);
  }

  inline CreatePopulatorRequest& operator=(const CreatePopulatorRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreatePopulatorRequest& operator=(CreatePopulatorRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CreatePopulatorRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreatePopulatorRequest* internal_default_instance() {
    return reinterpret_cast<const CreatePopulatorRequest*>(
               &_CreatePopulatorRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(CreatePopulatorRequest& a, CreatePopulatorRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(CreatePopulatorRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreatePopulatorRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CreatePopulatorRequest* New() const final {
    return CreateMaybeMessage<CreatePopulatorRequest>(nullptr);
  }

  CreatePopulatorRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CreatePopulatorRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CreatePopulatorRequest& from);
  void MergeFrom(const CreatePopulatorRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreatePopulatorRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kentik.custom_dimension.v202411alpha1.CreatePopulatorRequest";
  }
  protected:
  explicit CreatePopulatorRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto);
    return ::descriptor_table_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCustomDimensionIdFieldNumber = 1,
    kPopulatorFieldNumber = 2,
  };
  // string custom_dimension_id = 1[json_name = "customDimensionId"];
  void clear_custom_dimension_id();
  const std::string& custom_dimension_id() const;
  void set_custom_dimension_id(const std::string& value);
  void set_custom_dimension_id(std::string&& value);
  void set_custom_dimension_id(const char* value);
  void set_custom_dimension_id(const char* value, size_t size);
  std::string* mutable_custom_dimension_id();
  std::string* release_custom_dimension_id();
  void set_allocated_custom_dimension_id(std::string* custom_dimension_id);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_custom_dimension_id();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_custom_dimension_id(
      std::string* custom_dimension_id);
  private:
  const std::string& _internal_custom_dimension_id() const;
  void _internal_set_custom_dimension_id(const std::string& value);
  std::string* _internal_mutable_custom_dimension_id();
  public:

  // .kentik.custom_dimension.v202411alpha1.Populator populator = 2[json_name = "populator"];
  bool has_populator() const;
  private:
  bool _internal_has_populator() const;
  public:
  void clear_populator();
  const ::kentik::custom_dimension::v202411alpha1::Populator& populator() const;
  ::kentik::custom_dimension::v202411alpha1::Populator* release_populator();
  ::kentik::custom_dimension::v202411alpha1::Populator* mutable_populator();
  void set_allocated_populator(::kentik::custom_dimension::v202411alpha1::Populator* populator);
  private:
  const ::kentik::custom_dimension::v202411alpha1::Populator& _internal_populator() const;
  ::kentik::custom_dimension::v202411alpha1::Populator* _internal_mutable_populator();
  public:
  void unsafe_arena_set_allocated_populator(
      ::kentik::custom_dimension::v202411alpha1::Populator* populator);
  ::kentik::custom_dimension::v202411alpha1::Populator* unsafe_arena_release_populator();

  // @@protoc_insertion_point(class_scope:kentik.custom_dimension.v202411alpha1.CreatePopulatorRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr custom_dimension_id_;
  ::kentik::custom_dimension::v202411alpha1::Populator* populator_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto;
};
// -------------------------------------------------------------------

class CreatePopulatorResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kentik.custom_dimension.v202411alpha1.CreatePopulatorResponse) */ {
 public:
  inline CreatePopulatorResponse() : CreatePopulatorResponse(nullptr) {};
  virtual ~CreatePopulatorResponse();

  CreatePopulatorResponse(const CreatePopulatorResponse& from);
  CreatePopulatorResponse(CreatePopulatorResponse&& from) noexcept
    : CreatePopulatorResponse() {
    *this = ::std::move(from);
  }

  inline CreatePopulatorResponse& operator=(const CreatePopulatorResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreatePopulatorResponse& operator=(CreatePopulatorResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CreatePopulatorResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreatePopulatorResponse* internal_default_instance() {
    return reinterpret_cast<const CreatePopulatorResponse*>(
               &_CreatePopulatorResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(CreatePopulatorResponse& a, CreatePopulatorResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CreatePopulatorResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreatePopulatorResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CreatePopulatorResponse* New() const final {
    return CreateMaybeMessage<CreatePopulatorResponse>(nullptr);
  }

  CreatePopulatorResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CreatePopulatorResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CreatePopulatorResponse& from);
  void MergeFrom(const CreatePopulatorResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreatePopulatorResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kentik.custom_dimension.v202411alpha1.CreatePopulatorResponse";
  }
  protected:
  explicit CreatePopulatorResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto);
    return ::descriptor_table_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPopulatorFieldNumber = 1,
  };
  // .kentik.custom_dimension.v202411alpha1.Populator populator = 1[json_name = "populator"];
  bool has_populator() const;
  private:
  bool _internal_has_populator() const;
  public:
  void clear_populator();
  const ::kentik::custom_dimension::v202411alpha1::Populator& populator() const;
  ::kentik::custom_dimension::v202411alpha1::Populator* release_populator();
  ::kentik::custom_dimension::v202411alpha1::Populator* mutable_populator();
  void set_allocated_populator(::kentik::custom_dimension::v202411alpha1::Populator* populator);
  private:
  const ::kentik::custom_dimension::v202411alpha1::Populator& _internal_populator() const;
  ::kentik::custom_dimension::v202411alpha1::Populator* _internal_mutable_populator();
  public:
  void unsafe_arena_set_allocated_populator(
      ::kentik::custom_dimension::v202411alpha1::Populator* populator);
  ::kentik::custom_dimension::v202411alpha1::Populator* unsafe_arena_release_populator();

  // @@protoc_insertion_point(class_scope:kentik.custom_dimension.v202411alpha1.CreatePopulatorResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::kentik::custom_dimension::v202411alpha1::Populator* populator_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto;
};
// -------------------------------------------------------------------

class UpdatePopulatorRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kentik.custom_dimension.v202411alpha1.UpdatePopulatorRequest) */ {
 public:
  inline UpdatePopulatorRequest() : UpdatePopulatorRequest(nullptr) {};
  virtual ~UpdatePopulatorRequest();

  UpdatePopulatorRequest(const UpdatePopulatorRequest& from);
  UpdatePopulatorRequest(UpdatePopulatorRequest&& from) noexcept
    : UpdatePopulatorRequest() {
    *this = ::std::move(from);
  }

  inline UpdatePopulatorRequest& operator=(const UpdatePopulatorRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdatePopulatorRequest& operator=(UpdatePopulatorRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const UpdatePopulatorRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UpdatePopulatorRequest* internal_default_instance() {
    return reinterpret_cast<const UpdatePopulatorRequest*>(
               &_UpdatePopulatorRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(UpdatePopulatorRequest& a, UpdatePopulatorRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(UpdatePopulatorRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdatePopulatorRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UpdatePopulatorRequest* New() const final {
    return CreateMaybeMessage<UpdatePopulatorRequest>(nullptr);
  }

  UpdatePopulatorRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UpdatePopulatorRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const UpdatePopulatorRequest& from);
  void MergeFrom(const UpdatePopulatorRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UpdatePopulatorRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kentik.custom_dimension.v202411alpha1.UpdatePopulatorRequest";
  }
  protected:
  explicit UpdatePopulatorRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto);
    return ::descriptor_table_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCustomDimensionIdFieldNumber = 1,
    kPopulatorIdFieldNumber = 2,
    kPopulatorFieldNumber = 3,
  };
  // string custom_dimension_id = 1[json_name = "customDimensionId"];
  void clear_custom_dimension_id();
  const std::string& custom_dimension_id() const;
  void set_custom_dimension_id(const std::string& value);
  void set_custom_dimension_id(std::string&& value);
  void set_custom_dimension_id(const char* value);
  void set_custom_dimension_id(const char* value, size_t size);
  std::string* mutable_custom_dimension_id();
  std::string* release_custom_dimension_id();
  void set_allocated_custom_dimension_id(std::string* custom_dimension_id);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_custom_dimension_id();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_custom_dimension_id(
      std::string* custom_dimension_id);
  private:
  const std::string& _internal_custom_dimension_id() const;
  void _internal_set_custom_dimension_id(const std::string& value);
  std::string* _internal_mutable_custom_dimension_id();
  public:

  // string populator_id = 2[json_name = "populatorId"];
  void clear_populator_id();
  const std::string& populator_id() const;
  void set_populator_id(const std::string& value);
  void set_populator_id(std::string&& value);
  void set_populator_id(const char* value);
  void set_populator_id(const char* value, size_t size);
  std::string* mutable_populator_id();
  std::string* release_populator_id();
  void set_allocated_populator_id(std::string* populator_id);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_populator_id();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_populator_id(
      std::string* populator_id);
  private:
  const std::string& _internal_populator_id() const;
  void _internal_set_populator_id(const std::string& value);
  std::string* _internal_mutable_populator_id();
  public:

  // .kentik.custom_dimension.v202411alpha1.Populator populator = 3[json_name = "populator"];
  bool has_populator() const;
  private:
  bool _internal_has_populator() const;
  public:
  void clear_populator();
  const ::kentik::custom_dimension::v202411alpha1::Populator& populator() const;
  ::kentik::custom_dimension::v202411alpha1::Populator* release_populator();
  ::kentik::custom_dimension::v202411alpha1::Populator* mutable_populator();
  void set_allocated_populator(::kentik::custom_dimension::v202411alpha1::Populator* populator);
  private:
  const ::kentik::custom_dimension::v202411alpha1::Populator& _internal_populator() const;
  ::kentik::custom_dimension::v202411alpha1::Populator* _internal_mutable_populator();
  public:
  void unsafe_arena_set_allocated_populator(
      ::kentik::custom_dimension::v202411alpha1::Populator* populator);
  ::kentik::custom_dimension::v202411alpha1::Populator* unsafe_arena_release_populator();

  // @@protoc_insertion_point(class_scope:kentik.custom_dimension.v202411alpha1.UpdatePopulatorRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr custom_dimension_id_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr populator_id_;
  ::kentik::custom_dimension::v202411alpha1::Populator* populator_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto;
};
// -------------------------------------------------------------------

class UpdatePopulatorResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kentik.custom_dimension.v202411alpha1.UpdatePopulatorResponse) */ {
 public:
  inline UpdatePopulatorResponse() : UpdatePopulatorResponse(nullptr) {};
  virtual ~UpdatePopulatorResponse();

  UpdatePopulatorResponse(const UpdatePopulatorResponse& from);
  UpdatePopulatorResponse(UpdatePopulatorResponse&& from) noexcept
    : UpdatePopulatorResponse() {
    *this = ::std::move(from);
  }

  inline UpdatePopulatorResponse& operator=(const UpdatePopulatorResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdatePopulatorResponse& operator=(UpdatePopulatorResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const UpdatePopulatorResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UpdatePopulatorResponse* internal_default_instance() {
    return reinterpret_cast<const UpdatePopulatorResponse*>(
               &_UpdatePopulatorResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(UpdatePopulatorResponse& a, UpdatePopulatorResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(UpdatePopulatorResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdatePopulatorResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UpdatePopulatorResponse* New() const final {
    return CreateMaybeMessage<UpdatePopulatorResponse>(nullptr);
  }

  UpdatePopulatorResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UpdatePopulatorResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const UpdatePopulatorResponse& from);
  void MergeFrom(const UpdatePopulatorResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UpdatePopulatorResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kentik.custom_dimension.v202411alpha1.UpdatePopulatorResponse";
  }
  protected:
  explicit UpdatePopulatorResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto);
    return ::descriptor_table_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPopulatorFieldNumber = 1,
  };
  // .kentik.custom_dimension.v202411alpha1.Populator populator = 1[json_name = "populator"];
  bool has_populator() const;
  private:
  bool _internal_has_populator() const;
  public:
  void clear_populator();
  const ::kentik::custom_dimension::v202411alpha1::Populator& populator() const;
  ::kentik::custom_dimension::v202411alpha1::Populator* release_populator();
  ::kentik::custom_dimension::v202411alpha1::Populator* mutable_populator();
  void set_allocated_populator(::kentik::custom_dimension::v202411alpha1::Populator* populator);
  private:
  const ::kentik::custom_dimension::v202411alpha1::Populator& _internal_populator() const;
  ::kentik::custom_dimension::v202411alpha1::Populator* _internal_mutable_populator();
  public:
  void unsafe_arena_set_allocated_populator(
      ::kentik::custom_dimension::v202411alpha1::Populator* populator);
  ::kentik::custom_dimension::v202411alpha1::Populator* unsafe_arena_release_populator();

  // @@protoc_insertion_point(class_scope:kentik.custom_dimension.v202411alpha1.UpdatePopulatorResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::kentik::custom_dimension::v202411alpha1::Populator* populator_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto;
};
// -------------------------------------------------------------------

class DeletePopulatorRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kentik.custom_dimension.v202411alpha1.DeletePopulatorRequest) */ {
 public:
  inline DeletePopulatorRequest() : DeletePopulatorRequest(nullptr) {};
  virtual ~DeletePopulatorRequest();

  DeletePopulatorRequest(const DeletePopulatorRequest& from);
  DeletePopulatorRequest(DeletePopulatorRequest&& from) noexcept
    : DeletePopulatorRequest() {
    *this = ::std::move(from);
  }

  inline DeletePopulatorRequest& operator=(const DeletePopulatorRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeletePopulatorRequest& operator=(DeletePopulatorRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DeletePopulatorRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeletePopulatorRequest* internal_default_instance() {
    return reinterpret_cast<const DeletePopulatorRequest*>(
               &_DeletePopulatorRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(DeletePopulatorRequest& a, DeletePopulatorRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(DeletePopulatorRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeletePopulatorRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DeletePopulatorRequest* New() const final {
    return CreateMaybeMessage<DeletePopulatorRequest>(nullptr);
  }

  DeletePopulatorRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DeletePopulatorRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DeletePopulatorRequest& from);
  void MergeFrom(const DeletePopulatorRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeletePopulatorRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kentik.custom_dimension.v202411alpha1.DeletePopulatorRequest";
  }
  protected:
  explicit DeletePopulatorRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto);
    return ::descriptor_table_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCustomDimensionIdFieldNumber = 1,
    kPopulatorIdFieldNumber = 2,
  };
  // string custom_dimension_id = 1[json_name = "customDimensionId"];
  void clear_custom_dimension_id();
  const std::string& custom_dimension_id() const;
  void set_custom_dimension_id(const std::string& value);
  void set_custom_dimension_id(std::string&& value);
  void set_custom_dimension_id(const char* value);
  void set_custom_dimension_id(const char* value, size_t size);
  std::string* mutable_custom_dimension_id();
  std::string* release_custom_dimension_id();
  void set_allocated_custom_dimension_id(std::string* custom_dimension_id);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_custom_dimension_id();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_custom_dimension_id(
      std::string* custom_dimension_id);
  private:
  const std::string& _internal_custom_dimension_id() const;
  void _internal_set_custom_dimension_id(const std::string& value);
  std::string* _internal_mutable_custom_dimension_id();
  public:

  // string populator_id = 2[json_name = "populatorId"];
  void clear_populator_id();
  const std::string& populator_id() const;
  void set_populator_id(const std::string& value);
  void set_populator_id(std::string&& value);
  void set_populator_id(const char* value);
  void set_populator_id(const char* value, size_t size);
  std::string* mutable_populator_id();
  std::string* release_populator_id();
  void set_allocated_populator_id(std::string* populator_id);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_populator_id();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_populator_id(
      std::string* populator_id);
  private:
  const std::string& _internal_populator_id() const;
  void _internal_set_populator_id(const std::string& value);
  std::string* _internal_mutable_populator_id();
  public:

  // @@protoc_insertion_point(class_scope:kentik.custom_dimension.v202411alpha1.DeletePopulatorRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr custom_dimension_id_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr populator_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto;
};
// -------------------------------------------------------------------

class DeletePopulatorResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kentik.custom_dimension.v202411alpha1.DeletePopulatorResponse) */ {
 public:
  inline DeletePopulatorResponse() : DeletePopulatorResponse(nullptr) {};
  virtual ~DeletePopulatorResponse();

  DeletePopulatorResponse(const DeletePopulatorResponse& from);
  DeletePopulatorResponse(DeletePopulatorResponse&& from) noexcept
    : DeletePopulatorResponse() {
    *this = ::std::move(from);
  }

  inline DeletePopulatorResponse& operator=(const DeletePopulatorResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeletePopulatorResponse& operator=(DeletePopulatorResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DeletePopulatorResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeletePopulatorResponse* internal_default_instance() {
    return reinterpret_cast<const DeletePopulatorResponse*>(
               &_DeletePopulatorResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(DeletePopulatorResponse& a, DeletePopulatorResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(DeletePopulatorResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeletePopulatorResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DeletePopulatorResponse* New() const final {
    return CreateMaybeMessage<DeletePopulatorResponse>(nullptr);
  }

  DeletePopulatorResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DeletePopulatorResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DeletePopulatorResponse& from);
  void MergeFrom(const DeletePopulatorResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeletePopulatorResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kentik.custom_dimension.v202411alpha1.DeletePopulatorResponse";
  }
  protected:
  explicit DeletePopulatorResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto);
    return ::descriptor_table_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:kentik.custom_dimension.v202411alpha1.DeletePopulatorResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CustomDimension

// string id = 1[json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void CustomDimension::clear_id() {
  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& CustomDimension::id() const {
  // @@protoc_insertion_point(field_get:kentik.custom_dimension.v202411alpha1.CustomDimension.id)
  return _internal_id();
}
inline void CustomDimension::set_id(const std::string& value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:kentik.custom_dimension.v202411alpha1.CustomDimension.id)
}
inline std::string* CustomDimension::mutable_id() {
  // @@protoc_insertion_point(field_mutable:kentik.custom_dimension.v202411alpha1.CustomDimension.id)
  return _internal_mutable_id();
}
inline const std::string& CustomDimension::_internal_id() const {
  return id_.Get();
}
inline void CustomDimension::_internal_set_id(const std::string& value) {
  
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void CustomDimension::set_id(std::string&& value) {
  
  id_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:kentik.custom_dimension.v202411alpha1.CustomDimension.id)
}
inline void CustomDimension::set_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:kentik.custom_dimension.v202411alpha1.CustomDimension.id)
}
inline void CustomDimension::set_id(const char* value,
    size_t size) {
  
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:kentik.custom_dimension.v202411alpha1.CustomDimension.id)
}
inline std::string* CustomDimension::_internal_mutable_id() {
  
  return id_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* CustomDimension::release_id() {
  // @@protoc_insertion_point(field_release:kentik.custom_dimension.v202411alpha1.CustomDimension.id)
  return id_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CustomDimension::set_allocated_id(std::string* id) {
  if (id != nullptr) {
    
  } else {
    
  }
  id_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), id,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:kentik.custom_dimension.v202411alpha1.CustomDimension.id)
}
inline std::string* CustomDimension::unsafe_arena_release_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:kentik.custom_dimension.v202411alpha1.CustomDimension.id)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return id_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void CustomDimension::unsafe_arena_set_allocated_id(
    std::string* id) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (id != nullptr) {
    
  } else {
    
  }
  id_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      id, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.custom_dimension.v202411alpha1.CustomDimension.id)
}

// string name = 2[json_name = "name", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void CustomDimension::clear_name() {
  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& CustomDimension::name() const {
  // @@protoc_insertion_point(field_get:kentik.custom_dimension.v202411alpha1.CustomDimension.name)
  return _internal_name();
}
inline void CustomDimension::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:kentik.custom_dimension.v202411alpha1.CustomDimension.name)
}
inline std::string* CustomDimension::mutable_name() {
  // @@protoc_insertion_point(field_mutable:kentik.custom_dimension.v202411alpha1.CustomDimension.name)
  return _internal_mutable_name();
}
inline const std::string& CustomDimension::_internal_name() const {
  return name_.Get();
}
inline void CustomDimension::_internal_set_name(const std::string& value) {
  
  name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void CustomDimension::set_name(std::string&& value) {
  
  name_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:kentik.custom_dimension.v202411alpha1.CustomDimension.name)
}
inline void CustomDimension::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:kentik.custom_dimension.v202411alpha1.CustomDimension.name)
}
inline void CustomDimension::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:kentik.custom_dimension.v202411alpha1.CustomDimension.name)
}
inline std::string* CustomDimension::_internal_mutable_name() {
  
  return name_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* CustomDimension::release_name() {
  // @@protoc_insertion_point(field_release:kentik.custom_dimension.v202411alpha1.CustomDimension.name)
  return name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CustomDimension::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:kentik.custom_dimension.v202411alpha1.CustomDimension.name)
}
inline std::string* CustomDimension::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:kentik.custom_dimension.v202411alpha1.CustomDimension.name)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return name_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void CustomDimension::unsafe_arena_set_allocated_name(
    std::string* name) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (name != nullptr) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      name, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.custom_dimension.v202411alpha1.CustomDimension.name)
}

// string type = 3[json_name = "type", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void CustomDimension::clear_type() {
  type_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& CustomDimension::type() const {
  // @@protoc_insertion_point(field_get:kentik.custom_dimension.v202411alpha1.CustomDimension.type)
  return _internal_type();
}
inline void CustomDimension::set_type(const std::string& value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:kentik.custom_dimension.v202411alpha1.CustomDimension.type)
}
inline std::string* CustomDimension::mutable_type() {
  // @@protoc_insertion_point(field_mutable:kentik.custom_dimension.v202411alpha1.CustomDimension.type)
  return _internal_mutable_type();
}
inline const std::string& CustomDimension::_internal_type() const {
  return type_.Get();
}
inline void CustomDimension::_internal_set_type(const std::string& value) {
  
  type_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void CustomDimension::set_type(std::string&& value) {
  
  type_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:kentik.custom_dimension.v202411alpha1.CustomDimension.type)
}
inline void CustomDimension::set_type(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  type_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:kentik.custom_dimension.v202411alpha1.CustomDimension.type)
}
inline void CustomDimension::set_type(const char* value,
    size_t size) {
  
  type_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:kentik.custom_dimension.v202411alpha1.CustomDimension.type)
}
inline std::string* CustomDimension::_internal_mutable_type() {
  
  return type_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* CustomDimension::release_type() {
  // @@protoc_insertion_point(field_release:kentik.custom_dimension.v202411alpha1.CustomDimension.type)
  return type_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CustomDimension::set_allocated_type(std::string* type) {
  if (type != nullptr) {
    
  } else {
    
  }
  type_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), type,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:kentik.custom_dimension.v202411alpha1.CustomDimension.type)
}
inline std::string* CustomDimension::unsafe_arena_release_type() {
  // @@protoc_insertion_point(field_unsafe_arena_release:kentik.custom_dimension.v202411alpha1.CustomDimension.type)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return type_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void CustomDimension::unsafe_arena_set_allocated_type(
    std::string* type) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (type != nullptr) {
    
  } else {
    
  }
  type_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      type, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.custom_dimension.v202411alpha1.CustomDimension.type)
}

// string description = 4[json_name = "description", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void CustomDimension::clear_description() {
  description_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& CustomDimension::description() const {
  // @@protoc_insertion_point(field_get:kentik.custom_dimension.v202411alpha1.CustomDimension.description)
  return _internal_description();
}
inline void CustomDimension::set_description(const std::string& value) {
  _internal_set_description(value);
  // @@protoc_insertion_point(field_set:kentik.custom_dimension.v202411alpha1.CustomDimension.description)
}
inline std::string* CustomDimension::mutable_description() {
  // @@protoc_insertion_point(field_mutable:kentik.custom_dimension.v202411alpha1.CustomDimension.description)
  return _internal_mutable_description();
}
inline const std::string& CustomDimension::_internal_description() const {
  return description_.Get();
}
inline void CustomDimension::_internal_set_description(const std::string& value) {
  
  description_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void CustomDimension::set_description(std::string&& value) {
  
  description_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:kentik.custom_dimension.v202411alpha1.CustomDimension.description)
}
inline void CustomDimension::set_description(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  description_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:kentik.custom_dimension.v202411alpha1.CustomDimension.description)
}
inline void CustomDimension::set_description(const char* value,
    size_t size) {
  
  description_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:kentik.custom_dimension.v202411alpha1.CustomDimension.description)
}
inline std::string* CustomDimension::_internal_mutable_description() {
  
  return description_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* CustomDimension::release_description() {
  // @@protoc_insertion_point(field_release:kentik.custom_dimension.v202411alpha1.CustomDimension.description)
  return description_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CustomDimension::set_allocated_description(std::string* description) {
  if (description != nullptr) {
    
  } else {
    
  }
  description_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), description,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:kentik.custom_dimension.v202411alpha1.CustomDimension.description)
}
inline std::string* CustomDimension::unsafe_arena_release_description() {
  // @@protoc_insertion_point(field_unsafe_arena_release:kentik.custom_dimension.v202411alpha1.CustomDimension.description)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return description_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void CustomDimension::unsafe_arena_set_allocated_description(
    std::string* description) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (description != nullptr) {
    
  } else {
    
  }
  description_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      description, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.custom_dimension.v202411alpha1.CustomDimension.description)
}

// repeated .kentik.custom_dimension.v202411alpha1.Populator populators = 5[json_name = "populators", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int CustomDimension::_internal_populators_size() const {
  return populators_.size();
}
inline int CustomDimension::populators_size() const {
  return _internal_populators_size();
}
inline void CustomDimension::clear_populators() {
  populators_.Clear();
}
inline ::kentik::custom_dimension::v202411alpha1::Populator* CustomDimension::mutable_populators(int index) {
  // @@protoc_insertion_point(field_mutable:kentik.custom_dimension.v202411alpha1.CustomDimension.populators)
  return populators_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kentik::custom_dimension::v202411alpha1::Populator >*
CustomDimension::mutable_populators() {
  // @@protoc_insertion_point(field_mutable_list:kentik.custom_dimension.v202411alpha1.CustomDimension.populators)
  return &populators_;
}
inline const ::kentik::custom_dimension::v202411alpha1::Populator& CustomDimension::_internal_populators(int index) const {
  return populators_.Get(index);
}
inline const ::kentik::custom_dimension::v202411alpha1::Populator& CustomDimension::populators(int index) const {
  // @@protoc_insertion_point(field_get:kentik.custom_dimension.v202411alpha1.CustomDimension.populators)
  return _internal_populators(index);
}
inline ::kentik::custom_dimension::v202411alpha1::Populator* CustomDimension::_internal_add_populators() {
  return populators_.Add();
}
inline ::kentik::custom_dimension::v202411alpha1::Populator* CustomDimension::add_populators() {
  // @@protoc_insertion_point(field_add:kentik.custom_dimension.v202411alpha1.CustomDimension.populators)
  return _internal_add_populators();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kentik::custom_dimension::v202411alpha1::Populator >&
CustomDimension::populators() const {
  // @@protoc_insertion_point(field_list:kentik.custom_dimension.v202411alpha1.CustomDimension.populators)
  return populators_;
}

// string company_id = 6[json_name = "companyId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void CustomDimension::clear_company_id() {
  company_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& CustomDimension::company_id() const {
  // @@protoc_insertion_point(field_get:kentik.custom_dimension.v202411alpha1.CustomDimension.company_id)
  return _internal_company_id();
}
inline void CustomDimension::set_company_id(const std::string& value) {
  _internal_set_company_id(value);
  // @@protoc_insertion_point(field_set:kentik.custom_dimension.v202411alpha1.CustomDimension.company_id)
}
inline std::string* CustomDimension::mutable_company_id() {
  // @@protoc_insertion_point(field_mutable:kentik.custom_dimension.v202411alpha1.CustomDimension.company_id)
  return _internal_mutable_company_id();
}
inline const std::string& CustomDimension::_internal_company_id() const {
  return company_id_.Get();
}
inline void CustomDimension::_internal_set_company_id(const std::string& value) {
  
  company_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void CustomDimension::set_company_id(std::string&& value) {
  
  company_id_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:kentik.custom_dimension.v202411alpha1.CustomDimension.company_id)
}
inline void CustomDimension::set_company_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  company_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:kentik.custom_dimension.v202411alpha1.CustomDimension.company_id)
}
inline void CustomDimension::set_company_id(const char* value,
    size_t size) {
  
  company_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:kentik.custom_dimension.v202411alpha1.CustomDimension.company_id)
}
inline std::string* CustomDimension::_internal_mutable_company_id() {
  
  return company_id_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* CustomDimension::release_company_id() {
  // @@protoc_insertion_point(field_release:kentik.custom_dimension.v202411alpha1.CustomDimension.company_id)
  return company_id_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CustomDimension::set_allocated_company_id(std::string* company_id) {
  if (company_id != nullptr) {
    
  } else {
    
  }
  company_id_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), company_id,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:kentik.custom_dimension.v202411alpha1.CustomDimension.company_id)
}
inline std::string* CustomDimension::unsafe_arena_release_company_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:kentik.custom_dimension.v202411alpha1.CustomDimension.company_id)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return company_id_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void CustomDimension::unsafe_arena_set_allocated_company_id(
    std::string* company_id) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (company_id != nullptr) {
    
  } else {
    
  }
  company_id_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      company_id, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.custom_dimension.v202411alpha1.CustomDimension.company_id)
}

// .google.protobuf.Timestamp created_date = 7[json_name = "createdDate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool CustomDimension::_internal_has_created_date() const {
  return this != internal_default_instance() && created_date_ != nullptr;
}
inline bool CustomDimension::has_created_date() const {
  return _internal_has_created_date();
}
inline const PROTOBUF_NAMESPACE_ID::Timestamp& CustomDimension::_internal_created_date() const {
  const PROTOBUF_NAMESPACE_ID::Timestamp* p = created_date_;
  return p != nullptr ? *p : *reinterpret_cast<const PROTOBUF_NAMESPACE_ID::Timestamp*>(
      &PROTOBUF_NAMESPACE_ID::_Timestamp_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::Timestamp& CustomDimension::created_date() const {
  // @@protoc_insertion_point(field_get:kentik.custom_dimension.v202411alpha1.CustomDimension.created_date)
  return _internal_created_date();
}
inline void CustomDimension::unsafe_arena_set_allocated_created_date(
    PROTOBUF_NAMESPACE_ID::Timestamp* created_date) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(created_date_);
  }
  created_date_ = created_date;
  if (created_date) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.custom_dimension.v202411alpha1.CustomDimension.created_date)
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* CustomDimension::release_created_date() {
  auto temp = unsafe_arena_release_created_date();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* CustomDimension::unsafe_arena_release_created_date() {
  // @@protoc_insertion_point(field_release:kentik.custom_dimension.v202411alpha1.CustomDimension.created_date)
  
  PROTOBUF_NAMESPACE_ID::Timestamp* temp = created_date_;
  created_date_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* CustomDimension::_internal_mutable_created_date() {
  
  if (created_date_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::Timestamp>(GetArena());
    created_date_ = p;
  }
  return created_date_;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* CustomDimension::mutable_created_date() {
  // @@protoc_insertion_point(field_mutable:kentik.custom_dimension.v202411alpha1.CustomDimension.created_date)
  return _internal_mutable_created_date();
}
inline void CustomDimension::set_allocated_created_date(PROTOBUF_NAMESPACE_ID::Timestamp* created_date) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(created_date_);
  }
  if (created_date) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(created_date)->GetArena();
    if (message_arena != submessage_arena) {
      created_date = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, created_date, submessage_arena);
    }
    
  } else {
    
  }
  created_date_ = created_date;
  // @@protoc_insertion_point(field_set_allocated:kentik.custom_dimension.v202411alpha1.CustomDimension.created_date)
}

// .google.protobuf.Timestamp updated_date = 8[json_name = "updatedDate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool CustomDimension::_internal_has_updated_date() const {
  return this != internal_default_instance() && updated_date_ != nullptr;
}
inline bool CustomDimension::has_updated_date() const {
  return _internal_has_updated_date();
}
inline const PROTOBUF_NAMESPACE_ID::Timestamp& CustomDimension::_internal_updated_date() const {
  const PROTOBUF_NAMESPACE_ID::Timestamp* p = updated_date_;
  return p != nullptr ? *p : *reinterpret_cast<const PROTOBUF_NAMESPACE_ID::Timestamp*>(
      &PROTOBUF_NAMESPACE_ID::_Timestamp_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::Timestamp& CustomDimension::updated_date() const {
  // @@protoc_insertion_point(field_get:kentik.custom_dimension.v202411alpha1.CustomDimension.updated_date)
  return _internal_updated_date();
}
inline void CustomDimension::unsafe_arena_set_allocated_updated_date(
    PROTOBUF_NAMESPACE_ID::Timestamp* updated_date) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(updated_date_);
  }
  updated_date_ = updated_date;
  if (updated_date) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.custom_dimension.v202411alpha1.CustomDimension.updated_date)
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* CustomDimension::release_updated_date() {
  auto temp = unsafe_arena_release_updated_date();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* CustomDimension::unsafe_arena_release_updated_date() {
  // @@protoc_insertion_point(field_release:kentik.custom_dimension.v202411alpha1.CustomDimension.updated_date)
  
  PROTOBUF_NAMESPACE_ID::Timestamp* temp = updated_date_;
  updated_date_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* CustomDimension::_internal_mutable_updated_date() {
  
  if (updated_date_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::Timestamp>(GetArena());
    updated_date_ = p;
  }
  return updated_date_;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* CustomDimension::mutable_updated_date() {
  // @@protoc_insertion_point(field_mutable:kentik.custom_dimension.v202411alpha1.CustomDimension.updated_date)
  return _internal_mutable_updated_date();
}
inline void CustomDimension::set_allocated_updated_date(PROTOBUF_NAMESPACE_ID::Timestamp* updated_date) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(updated_date_);
  }
  if (updated_date) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(updated_date)->GetArena();
    if (message_arena != submessage_arena) {
      updated_date = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, updated_date, submessage_arena);
    }
    
  } else {
    
  }
  updated_date_ = updated_date;
  // @@protoc_insertion_point(field_set_allocated:kentik.custom_dimension.v202411alpha1.CustomDimension.updated_date)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// Populator

// string id = 1[json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Populator::clear_id() {
  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& Populator::id() const {
  // @@protoc_insertion_point(field_get:kentik.custom_dimension.v202411alpha1.Populator.id)
  return _internal_id();
}
inline void Populator::set_id(const std::string& value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:kentik.custom_dimension.v202411alpha1.Populator.id)
}
inline std::string* Populator::mutable_id() {
  // @@protoc_insertion_point(field_mutable:kentik.custom_dimension.v202411alpha1.Populator.id)
  return _internal_mutable_id();
}
inline const std::string& Populator::_internal_id() const {
  return id_.Get();
}
inline void Populator::_internal_set_id(const std::string& value) {
  
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void Populator::set_id(std::string&& value) {
  
  id_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:kentik.custom_dimension.v202411alpha1.Populator.id)
}
inline void Populator::set_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:kentik.custom_dimension.v202411alpha1.Populator.id)
}
inline void Populator::set_id(const char* value,
    size_t size) {
  
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:kentik.custom_dimension.v202411alpha1.Populator.id)
}
inline std::string* Populator::_internal_mutable_id() {
  
  return id_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* Populator::release_id() {
  // @@protoc_insertion_point(field_release:kentik.custom_dimension.v202411alpha1.Populator.id)
  return id_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void Populator::set_allocated_id(std::string* id) {
  if (id != nullptr) {
    
  } else {
    
  }
  id_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), id,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:kentik.custom_dimension.v202411alpha1.Populator.id)
}
inline std::string* Populator::unsafe_arena_release_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:kentik.custom_dimension.v202411alpha1.Populator.id)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return id_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void Populator::unsafe_arena_set_allocated_id(
    std::string* id) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (id != nullptr) {
    
  } else {
    
  }
  id_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      id, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.custom_dimension.v202411alpha1.Populator.id)
}

// string value = 2[json_name = "value", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Populator::clear_value() {
  value_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& Populator::value() const {
  // @@protoc_insertion_point(field_get:kentik.custom_dimension.v202411alpha1.Populator.value)
  return _internal_value();
}
inline void Populator::set_value(const std::string& value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:kentik.custom_dimension.v202411alpha1.Populator.value)
}
inline std::string* Populator::mutable_value() {
  // @@protoc_insertion_point(field_mutable:kentik.custom_dimension.v202411alpha1.Populator.value)
  return _internal_mutable_value();
}
inline const std::string& Populator::_internal_value() const {
  return value_.Get();
}
inline void Populator::_internal_set_value(const std::string& value) {
  
  value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void Populator::set_value(std::string&& value) {
  
  value_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:kentik.custom_dimension.v202411alpha1.Populator.value)
}
inline void Populator::set_value(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:kentik.custom_dimension.v202411alpha1.Populator.value)
}
inline void Populator::set_value(const char* value,
    size_t size) {
  
  value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:kentik.custom_dimension.v202411alpha1.Populator.value)
}
inline std::string* Populator::_internal_mutable_value() {
  
  return value_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* Populator::release_value() {
  // @@protoc_insertion_point(field_release:kentik.custom_dimension.v202411alpha1.Populator.value)
  return value_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void Populator::set_allocated_value(std::string* value) {
  if (value != nullptr) {
    
  } else {
    
  }
  value_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:kentik.custom_dimension.v202411alpha1.Populator.value)
}
inline std::string* Populator::unsafe_arena_release_value() {
  // @@protoc_insertion_point(field_unsafe_arena_release:kentik.custom_dimension.v202411alpha1.Populator.value)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return value_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void Populator::unsafe_arena_set_allocated_value(
    std::string* value) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (value != nullptr) {
    
  } else {
    
  }
  value_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      value, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.custom_dimension.v202411alpha1.Populator.value)
}

// string direction = 3[json_name = "direction", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Populator::clear_direction() {
  direction_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& Populator::direction() const {
  // @@protoc_insertion_point(field_get:kentik.custom_dimension.v202411alpha1.Populator.direction)
  return _internal_direction();
}
inline void Populator::set_direction(const std::string& value) {
  _internal_set_direction(value);
  // @@protoc_insertion_point(field_set:kentik.custom_dimension.v202411alpha1.Populator.direction)
}
inline std::string* Populator::mutable_direction() {
  // @@protoc_insertion_point(field_mutable:kentik.custom_dimension.v202411alpha1.Populator.direction)
  return _internal_mutable_direction();
}
inline const std::string& Populator::_internal_direction() const {
  return direction_.Get();
}
inline void Populator::_internal_set_direction(const std::string& value) {
  
  direction_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void Populator::set_direction(std::string&& value) {
  
  direction_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:kentik.custom_dimension.v202411alpha1.Populator.direction)
}
inline void Populator::set_direction(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  direction_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:kentik.custom_dimension.v202411alpha1.Populator.direction)
}
inline void Populator::set_direction(const char* value,
    size_t size) {
  
  direction_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:kentik.custom_dimension.v202411alpha1.Populator.direction)
}
inline std::string* Populator::_internal_mutable_direction() {
  
  return direction_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* Populator::release_direction() {
  // @@protoc_insertion_point(field_release:kentik.custom_dimension.v202411alpha1.Populator.direction)
  return direction_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void Populator::set_allocated_direction(std::string* direction) {
  if (direction != nullptr) {
    
  } else {
    
  }
  direction_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), direction,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:kentik.custom_dimension.v202411alpha1.Populator.direction)
}
inline std::string* Populator::unsafe_arena_release_direction() {
  // @@protoc_insertion_point(field_unsafe_arena_release:kentik.custom_dimension.v202411alpha1.Populator.direction)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return direction_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void Populator::unsafe_arena_set_allocated_direction(
    std::string* direction) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (direction != nullptr) {
    
  } else {
    
  }
  direction_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      direction, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.custom_dimension.v202411alpha1.Populator.direction)
}

// repeated string device_name = 4[json_name = "deviceName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int Populator::_internal_device_name_size() const {
  return device_name_.size();
}
inline int Populator::device_name_size() const {
  return _internal_device_name_size();
}
inline void Populator::clear_device_name() {
  device_name_.Clear();
}
inline std::string* Populator::add_device_name() {
  // @@protoc_insertion_point(field_add_mutable:kentik.custom_dimension.v202411alpha1.Populator.device_name)
  return _internal_add_device_name();
}
inline const std::string& Populator::_internal_device_name(int index) const {
  return device_name_.Get(index);
}
inline const std::string& Populator::device_name(int index) const {
  // @@protoc_insertion_point(field_get:kentik.custom_dimension.v202411alpha1.Populator.device_name)
  return _internal_device_name(index);
}
inline std::string* Populator::mutable_device_name(int index) {
  // @@protoc_insertion_point(field_mutable:kentik.custom_dimension.v202411alpha1.Populator.device_name)
  return device_name_.Mutable(index);
}
inline void Populator::set_device_name(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:kentik.custom_dimension.v202411alpha1.Populator.device_name)
  device_name_.Mutable(index)->assign(value);
}
inline void Populator::set_device_name(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:kentik.custom_dimension.v202411alpha1.Populator.device_name)
  device_name_.Mutable(index)->assign(std::move(value));
}
inline void Populator::set_device_name(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  device_name_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:kentik.custom_dimension.v202411alpha1.Populator.device_name)
}
inline void Populator::set_device_name(int index, const char* value, size_t size) {
  device_name_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:kentik.custom_dimension.v202411alpha1.Populator.device_name)
}
inline std::string* Populator::_internal_add_device_name() {
  return device_name_.Add();
}
inline void Populator::add_device_name(const std::string& value) {
  device_name_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:kentik.custom_dimension.v202411alpha1.Populator.device_name)
}
inline void Populator::add_device_name(std::string&& value) {
  device_name_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:kentik.custom_dimension.v202411alpha1.Populator.device_name)
}
inline void Populator::add_device_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  device_name_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:kentik.custom_dimension.v202411alpha1.Populator.device_name)
}
inline void Populator::add_device_name(const char* value, size_t size) {
  device_name_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:kentik.custom_dimension.v202411alpha1.Populator.device_name)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
Populator::device_name() const {
  // @@protoc_insertion_point(field_list:kentik.custom_dimension.v202411alpha1.Populator.device_name)
  return device_name_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
Populator::mutable_device_name() {
  // @@protoc_insertion_point(field_mutable_list:kentik.custom_dimension.v202411alpha1.Populator.device_name)
  return &device_name_;
}

// repeated string device_type = 5[json_name = "deviceType", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int Populator::_internal_device_type_size() const {
  return device_type_.size();
}
inline int Populator::device_type_size() const {
  return _internal_device_type_size();
}
inline void Populator::clear_device_type() {
  device_type_.Clear();
}
inline std::string* Populator::add_device_type() {
  // @@protoc_insertion_point(field_add_mutable:kentik.custom_dimension.v202411alpha1.Populator.device_type)
  return _internal_add_device_type();
}
inline const std::string& Populator::_internal_device_type(int index) const {
  return device_type_.Get(index);
}
inline const std::string& Populator::device_type(int index) const {
  // @@protoc_insertion_point(field_get:kentik.custom_dimension.v202411alpha1.Populator.device_type)
  return _internal_device_type(index);
}
inline std::string* Populator::mutable_device_type(int index) {
  // @@protoc_insertion_point(field_mutable:kentik.custom_dimension.v202411alpha1.Populator.device_type)
  return device_type_.Mutable(index);
}
inline void Populator::set_device_type(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:kentik.custom_dimension.v202411alpha1.Populator.device_type)
  device_type_.Mutable(index)->assign(value);
}
inline void Populator::set_device_type(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:kentik.custom_dimension.v202411alpha1.Populator.device_type)
  device_type_.Mutable(index)->assign(std::move(value));
}
inline void Populator::set_device_type(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  device_type_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:kentik.custom_dimension.v202411alpha1.Populator.device_type)
}
inline void Populator::set_device_type(int index, const char* value, size_t size) {
  device_type_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:kentik.custom_dimension.v202411alpha1.Populator.device_type)
}
inline std::string* Populator::_internal_add_device_type() {
  return device_type_.Add();
}
inline void Populator::add_device_type(const std::string& value) {
  device_type_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:kentik.custom_dimension.v202411alpha1.Populator.device_type)
}
inline void Populator::add_device_type(std::string&& value) {
  device_type_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:kentik.custom_dimension.v202411alpha1.Populator.device_type)
}
inline void Populator::add_device_type(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  device_type_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:kentik.custom_dimension.v202411alpha1.Populator.device_type)
}
inline void Populator::add_device_type(const char* value, size_t size) {
  device_type_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:kentik.custom_dimension.v202411alpha1.Populator.device_type)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
Populator::device_type() const {
  // @@protoc_insertion_point(field_list:kentik.custom_dimension.v202411alpha1.Populator.device_type)
  return device_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
Populator::mutable_device_type() {
  // @@protoc_insertion_point(field_mutable_list:kentik.custom_dimension.v202411alpha1.Populator.device_type)
  return &device_type_;
}

// repeated string site = 6[json_name = "site", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int Populator::_internal_site_size() const {
  return site_.size();
}
inline int Populator::site_size() const {
  return _internal_site_size();
}
inline void Populator::clear_site() {
  site_.Clear();
}
inline std::string* Populator::add_site() {
  // @@protoc_insertion_point(field_add_mutable:kentik.custom_dimension.v202411alpha1.Populator.site)
  return _internal_add_site();
}
inline const std::string& Populator::_internal_site(int index) const {
  return site_.Get(index);
}
inline const std::string& Populator::site(int index) const {
  // @@protoc_insertion_point(field_get:kentik.custom_dimension.v202411alpha1.Populator.site)
  return _internal_site(index);
}
inline std::string* Populator::mutable_site(int index) {
  // @@protoc_insertion_point(field_mutable:kentik.custom_dimension.v202411alpha1.Populator.site)
  return site_.Mutable(index);
}
inline void Populator::set_site(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:kentik.custom_dimension.v202411alpha1.Populator.site)
  site_.Mutable(index)->assign(value);
}
inline void Populator::set_site(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:kentik.custom_dimension.v202411alpha1.Populator.site)
  site_.Mutable(index)->assign(std::move(value));
}
inline void Populator::set_site(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  site_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:kentik.custom_dimension.v202411alpha1.Populator.site)
}
inline void Populator::set_site(int index, const char* value, size_t size) {
  site_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:kentik.custom_dimension.v202411alpha1.Populator.site)
}
inline std::string* Populator::_internal_add_site() {
  return site_.Add();
}
inline void Populator::add_site(const std::string& value) {
  site_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:kentik.custom_dimension.v202411alpha1.Populator.site)
}
inline void Populator::add_site(std::string&& value) {
  site_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:kentik.custom_dimension.v202411alpha1.Populator.site)
}
inline void Populator::add_site(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  site_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:kentik.custom_dimension.v202411alpha1.Populator.site)
}
inline void Populator::add_site(const char* value, size_t size) {
  site_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:kentik.custom_dimension.v202411alpha1.Populator.site)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
Populator::site() const {
  // @@protoc_insertion_point(field_list:kentik.custom_dimension.v202411alpha1.Populator.site)
  return site_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
Populator::mutable_site() {
  // @@protoc_insertion_point(field_mutable_list:kentik.custom_dimension.v202411alpha1.Populator.site)
  return &site_;
}

// repeated string interface_name = 7[json_name = "interfaceName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int Populator::_internal_interface_name_size() const {
  return interface_name_.size();
}
inline int Populator::interface_name_size() const {
  return _internal_interface_name_size();
}
inline void Populator::clear_interface_name() {
  interface_name_.Clear();
}
inline std::string* Populator::add_interface_name() {
  // @@protoc_insertion_point(field_add_mutable:kentik.custom_dimension.v202411alpha1.Populator.interface_name)
  return _internal_add_interface_name();
}
inline const std::string& Populator::_internal_interface_name(int index) const {
  return interface_name_.Get(index);
}
inline const std::string& Populator::interface_name(int index) const {
  // @@protoc_insertion_point(field_get:kentik.custom_dimension.v202411alpha1.Populator.interface_name)
  return _internal_interface_name(index);
}
inline std::string* Populator::mutable_interface_name(int index) {
  // @@protoc_insertion_point(field_mutable:kentik.custom_dimension.v202411alpha1.Populator.interface_name)
  return interface_name_.Mutable(index);
}
inline void Populator::set_interface_name(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:kentik.custom_dimension.v202411alpha1.Populator.interface_name)
  interface_name_.Mutable(index)->assign(value);
}
inline void Populator::set_interface_name(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:kentik.custom_dimension.v202411alpha1.Populator.interface_name)
  interface_name_.Mutable(index)->assign(std::move(value));
}
inline void Populator::set_interface_name(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  interface_name_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:kentik.custom_dimension.v202411alpha1.Populator.interface_name)
}
inline void Populator::set_interface_name(int index, const char* value, size_t size) {
  interface_name_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:kentik.custom_dimension.v202411alpha1.Populator.interface_name)
}
inline std::string* Populator::_internal_add_interface_name() {
  return interface_name_.Add();
}
inline void Populator::add_interface_name(const std::string& value) {
  interface_name_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:kentik.custom_dimension.v202411alpha1.Populator.interface_name)
}
inline void Populator::add_interface_name(std::string&& value) {
  interface_name_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:kentik.custom_dimension.v202411alpha1.Populator.interface_name)
}
inline void Populator::add_interface_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  interface_name_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:kentik.custom_dimension.v202411alpha1.Populator.interface_name)
}
inline void Populator::add_interface_name(const char* value, size_t size) {
  interface_name_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:kentik.custom_dimension.v202411alpha1.Populator.interface_name)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
Populator::interface_name() const {
  // @@protoc_insertion_point(field_list:kentik.custom_dimension.v202411alpha1.Populator.interface_name)
  return interface_name_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
Populator::mutable_interface_name() {
  // @@protoc_insertion_point(field_mutable_list:kentik.custom_dimension.v202411alpha1.Populator.interface_name)
  return &interface_name_;
}

// repeated string addr = 8[json_name = "addr", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int Populator::_internal_addr_size() const {
  return addr_.size();
}
inline int Populator::addr_size() const {
  return _internal_addr_size();
}
inline void Populator::clear_addr() {
  addr_.Clear();
}
inline std::string* Populator::add_addr() {
  // @@protoc_insertion_point(field_add_mutable:kentik.custom_dimension.v202411alpha1.Populator.addr)
  return _internal_add_addr();
}
inline const std::string& Populator::_internal_addr(int index) const {
  return addr_.Get(index);
}
inline const std::string& Populator::addr(int index) const {
  // @@protoc_insertion_point(field_get:kentik.custom_dimension.v202411alpha1.Populator.addr)
  return _internal_addr(index);
}
inline std::string* Populator::mutable_addr(int index) {
  // @@protoc_insertion_point(field_mutable:kentik.custom_dimension.v202411alpha1.Populator.addr)
  return addr_.Mutable(index);
}
inline void Populator::set_addr(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:kentik.custom_dimension.v202411alpha1.Populator.addr)
  addr_.Mutable(index)->assign(value);
}
inline void Populator::set_addr(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:kentik.custom_dimension.v202411alpha1.Populator.addr)
  addr_.Mutable(index)->assign(std::move(value));
}
inline void Populator::set_addr(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  addr_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:kentik.custom_dimension.v202411alpha1.Populator.addr)
}
inline void Populator::set_addr(int index, const char* value, size_t size) {
  addr_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:kentik.custom_dimension.v202411alpha1.Populator.addr)
}
inline std::string* Populator::_internal_add_addr() {
  return addr_.Add();
}
inline void Populator::add_addr(const std::string& value) {
  addr_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:kentik.custom_dimension.v202411alpha1.Populator.addr)
}
inline void Populator::add_addr(std::string&& value) {
  addr_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:kentik.custom_dimension.v202411alpha1.Populator.addr)
}
inline void Populator::add_addr(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  addr_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:kentik.custom_dimension.v202411alpha1.Populator.addr)
}
inline void Populator::add_addr(const char* value, size_t size) {
  addr_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:kentik.custom_dimension.v202411alpha1.Populator.addr)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
Populator::addr() const {
  // @@protoc_insertion_point(field_list:kentik.custom_dimension.v202411alpha1.Populator.addr)
  return addr_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
Populator::mutable_addr() {
  // @@protoc_insertion_point(field_mutable_list:kentik.custom_dimension.v202411alpha1.Populator.addr)
  return &addr_;
}

// repeated uint32 port = 9[json_name = "port", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int Populator::_internal_port_size() const {
  return port_.size();
}
inline int Populator::port_size() const {
  return _internal_port_size();
}
inline void Populator::clear_port() {
  port_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Populator::_internal_port(int index) const {
  return port_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Populator::port(int index) const {
  // @@protoc_insertion_point(field_get:kentik.custom_dimension.v202411alpha1.Populator.port)
  return _internal_port(index);
}
inline void Populator::set_port(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  port_.Set(index, value);
  // @@protoc_insertion_point(field_set:kentik.custom_dimension.v202411alpha1.Populator.port)
}
inline void Populator::_internal_add_port(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  port_.Add(value);
}
inline void Populator::add_port(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_port(value);
  // @@protoc_insertion_point(field_add:kentik.custom_dimension.v202411alpha1.Populator.port)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
Populator::_internal_port() const {
  return port_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
Populator::port() const {
  // @@protoc_insertion_point(field_list:kentik.custom_dimension.v202411alpha1.Populator.port)
  return _internal_port();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
Populator::_internal_mutable_port() {
  return &port_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
Populator::mutable_port() {
  // @@protoc_insertion_point(field_mutable_list:kentik.custom_dimension.v202411alpha1.Populator.port)
  return _internal_mutable_port();
}

// uint32 tcp_flags = 10[json_name = "tcpFlags", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Populator::clear_tcp_flags() {
  tcp_flags_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Populator::_internal_tcp_flags() const {
  return tcp_flags_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Populator::tcp_flags() const {
  // @@protoc_insertion_point(field_get:kentik.custom_dimension.v202411alpha1.Populator.tcp_flags)
  return _internal_tcp_flags();
}
inline void Populator::_internal_set_tcp_flags(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  tcp_flags_ = value;
}
inline void Populator::set_tcp_flags(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_tcp_flags(value);
  // @@protoc_insertion_point(field_set:kentik.custom_dimension.v202411alpha1.Populator.tcp_flags)
}

// repeated uint32 protocol = 11[json_name = "protocol", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int Populator::_internal_protocol_size() const {
  return protocol_.size();
}
inline int Populator::protocol_size() const {
  return _internal_protocol_size();
}
inline void Populator::clear_protocol() {
  protocol_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Populator::_internal_protocol(int index) const {
  return protocol_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Populator::protocol(int index) const {
  // @@protoc_insertion_point(field_get:kentik.custom_dimension.v202411alpha1.Populator.protocol)
  return _internal_protocol(index);
}
inline void Populator::set_protocol(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  protocol_.Set(index, value);
  // @@protoc_insertion_point(field_set:kentik.custom_dimension.v202411alpha1.Populator.protocol)
}
inline void Populator::_internal_add_protocol(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  protocol_.Add(value);
}
inline void Populator::add_protocol(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_protocol(value);
  // @@protoc_insertion_point(field_add:kentik.custom_dimension.v202411alpha1.Populator.protocol)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
Populator::_internal_protocol() const {
  return protocol_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
Populator::protocol() const {
  // @@protoc_insertion_point(field_list:kentik.custom_dimension.v202411alpha1.Populator.protocol)
  return _internal_protocol();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
Populator::_internal_mutable_protocol() {
  return &protocol_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
Populator::mutable_protocol() {
  // @@protoc_insertion_point(field_mutable_list:kentik.custom_dimension.v202411alpha1.Populator.protocol)
  return _internal_mutable_protocol();
}

// repeated uint32 asn = 12[json_name = "asn", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int Populator::_internal_asn_size() const {
  return asn_.size();
}
inline int Populator::asn_size() const {
  return _internal_asn_size();
}
inline void Populator::clear_asn() {
  asn_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Populator::_internal_asn(int index) const {
  return asn_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Populator::asn(int index) const {
  // @@protoc_insertion_point(field_get:kentik.custom_dimension.v202411alpha1.Populator.asn)
  return _internal_asn(index);
}
inline void Populator::set_asn(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  asn_.Set(index, value);
  // @@protoc_insertion_point(field_set:kentik.custom_dimension.v202411alpha1.Populator.asn)
}
inline void Populator::_internal_add_asn(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  asn_.Add(value);
}
inline void Populator::add_asn(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_asn(value);
  // @@protoc_insertion_point(field_add:kentik.custom_dimension.v202411alpha1.Populator.asn)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
Populator::_internal_asn() const {
  return asn_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
Populator::asn() const {
  // @@protoc_insertion_point(field_list:kentik.custom_dimension.v202411alpha1.Populator.asn)
  return _internal_asn();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
Populator::_internal_mutable_asn() {
  return &asn_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
Populator::mutable_asn() {
  // @@protoc_insertion_point(field_mutable_list:kentik.custom_dimension.v202411alpha1.Populator.asn)
  return _internal_mutable_asn();
}

// repeated string lasthop_as_name = 13[json_name = "lasthopAsName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int Populator::_internal_lasthop_as_name_size() const {
  return lasthop_as_name_.size();
}
inline int Populator::lasthop_as_name_size() const {
  return _internal_lasthop_as_name_size();
}
inline void Populator::clear_lasthop_as_name() {
  lasthop_as_name_.Clear();
}
inline std::string* Populator::add_lasthop_as_name() {
  // @@protoc_insertion_point(field_add_mutable:kentik.custom_dimension.v202411alpha1.Populator.lasthop_as_name)
  return _internal_add_lasthop_as_name();
}
inline const std::string& Populator::_internal_lasthop_as_name(int index) const {
  return lasthop_as_name_.Get(index);
}
inline const std::string& Populator::lasthop_as_name(int index) const {
  // @@protoc_insertion_point(field_get:kentik.custom_dimension.v202411alpha1.Populator.lasthop_as_name)
  return _internal_lasthop_as_name(index);
}
inline std::string* Populator::mutable_lasthop_as_name(int index) {
  // @@protoc_insertion_point(field_mutable:kentik.custom_dimension.v202411alpha1.Populator.lasthop_as_name)
  return lasthop_as_name_.Mutable(index);
}
inline void Populator::set_lasthop_as_name(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:kentik.custom_dimension.v202411alpha1.Populator.lasthop_as_name)
  lasthop_as_name_.Mutable(index)->assign(value);
}
inline void Populator::set_lasthop_as_name(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:kentik.custom_dimension.v202411alpha1.Populator.lasthop_as_name)
  lasthop_as_name_.Mutable(index)->assign(std::move(value));
}
inline void Populator::set_lasthop_as_name(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  lasthop_as_name_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:kentik.custom_dimension.v202411alpha1.Populator.lasthop_as_name)
}
inline void Populator::set_lasthop_as_name(int index, const char* value, size_t size) {
  lasthop_as_name_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:kentik.custom_dimension.v202411alpha1.Populator.lasthop_as_name)
}
inline std::string* Populator::_internal_add_lasthop_as_name() {
  return lasthop_as_name_.Add();
}
inline void Populator::add_lasthop_as_name(const std::string& value) {
  lasthop_as_name_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:kentik.custom_dimension.v202411alpha1.Populator.lasthop_as_name)
}
inline void Populator::add_lasthop_as_name(std::string&& value) {
  lasthop_as_name_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:kentik.custom_dimension.v202411alpha1.Populator.lasthop_as_name)
}
inline void Populator::add_lasthop_as_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  lasthop_as_name_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:kentik.custom_dimension.v202411alpha1.Populator.lasthop_as_name)
}
inline void Populator::add_lasthop_as_name(const char* value, size_t size) {
  lasthop_as_name_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:kentik.custom_dimension.v202411alpha1.Populator.lasthop_as_name)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
Populator::lasthop_as_name() const {
  // @@protoc_insertion_point(field_list:kentik.custom_dimension.v202411alpha1.Populator.lasthop_as_name)
  return lasthop_as_name_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
Populator::mutable_lasthop_as_name() {
  // @@protoc_insertion_point(field_mutable_list:kentik.custom_dimension.v202411alpha1.Populator.lasthop_as_name)
  return &lasthop_as_name_;
}

// repeated uint32 nexthop_asn = 14[json_name = "nexthopAsn", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int Populator::_internal_nexthop_asn_size() const {
  return nexthop_asn_.size();
}
inline int Populator::nexthop_asn_size() const {
  return _internal_nexthop_asn_size();
}
inline void Populator::clear_nexthop_asn() {
  nexthop_asn_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Populator::_internal_nexthop_asn(int index) const {
  return nexthop_asn_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Populator::nexthop_asn(int index) const {
  // @@protoc_insertion_point(field_get:kentik.custom_dimension.v202411alpha1.Populator.nexthop_asn)
  return _internal_nexthop_asn(index);
}
inline void Populator::set_nexthop_asn(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  nexthop_asn_.Set(index, value);
  // @@protoc_insertion_point(field_set:kentik.custom_dimension.v202411alpha1.Populator.nexthop_asn)
}
inline void Populator::_internal_add_nexthop_asn(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  nexthop_asn_.Add(value);
}
inline void Populator::add_nexthop_asn(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_nexthop_asn(value);
  // @@protoc_insertion_point(field_add:kentik.custom_dimension.v202411alpha1.Populator.nexthop_asn)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
Populator::_internal_nexthop_asn() const {
  return nexthop_asn_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
Populator::nexthop_asn() const {
  // @@protoc_insertion_point(field_list:kentik.custom_dimension.v202411alpha1.Populator.nexthop_asn)
  return _internal_nexthop_asn();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
Populator::_internal_mutable_nexthop_asn() {
  return &nexthop_asn_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
Populator::mutable_nexthop_asn() {
  // @@protoc_insertion_point(field_mutable_list:kentik.custom_dimension.v202411alpha1.Populator.nexthop_asn)
  return _internal_mutable_nexthop_asn();
}

// repeated string nexthop_as_name = 15[json_name = "nexthopAsName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int Populator::_internal_nexthop_as_name_size() const {
  return nexthop_as_name_.size();
}
inline int Populator::nexthop_as_name_size() const {
  return _internal_nexthop_as_name_size();
}
inline void Populator::clear_nexthop_as_name() {
  nexthop_as_name_.Clear();
}
inline std::string* Populator::add_nexthop_as_name() {
  // @@protoc_insertion_point(field_add_mutable:kentik.custom_dimension.v202411alpha1.Populator.nexthop_as_name)
  return _internal_add_nexthop_as_name();
}
inline const std::string& Populator::_internal_nexthop_as_name(int index) const {
  return nexthop_as_name_.Get(index);
}
inline const std::string& Populator::nexthop_as_name(int index) const {
  // @@protoc_insertion_point(field_get:kentik.custom_dimension.v202411alpha1.Populator.nexthop_as_name)
  return _internal_nexthop_as_name(index);
}
inline std::string* Populator::mutable_nexthop_as_name(int index) {
  // @@protoc_insertion_point(field_mutable:kentik.custom_dimension.v202411alpha1.Populator.nexthop_as_name)
  return nexthop_as_name_.Mutable(index);
}
inline void Populator::set_nexthop_as_name(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:kentik.custom_dimension.v202411alpha1.Populator.nexthop_as_name)
  nexthop_as_name_.Mutable(index)->assign(value);
}
inline void Populator::set_nexthop_as_name(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:kentik.custom_dimension.v202411alpha1.Populator.nexthop_as_name)
  nexthop_as_name_.Mutable(index)->assign(std::move(value));
}
inline void Populator::set_nexthop_as_name(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  nexthop_as_name_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:kentik.custom_dimension.v202411alpha1.Populator.nexthop_as_name)
}
inline void Populator::set_nexthop_as_name(int index, const char* value, size_t size) {
  nexthop_as_name_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:kentik.custom_dimension.v202411alpha1.Populator.nexthop_as_name)
}
inline std::string* Populator::_internal_add_nexthop_as_name() {
  return nexthop_as_name_.Add();
}
inline void Populator::add_nexthop_as_name(const std::string& value) {
  nexthop_as_name_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:kentik.custom_dimension.v202411alpha1.Populator.nexthop_as_name)
}
inline void Populator::add_nexthop_as_name(std::string&& value) {
  nexthop_as_name_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:kentik.custom_dimension.v202411alpha1.Populator.nexthop_as_name)
}
inline void Populator::add_nexthop_as_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  nexthop_as_name_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:kentik.custom_dimension.v202411alpha1.Populator.nexthop_as_name)
}
inline void Populator::add_nexthop_as_name(const char* value, size_t size) {
  nexthop_as_name_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:kentik.custom_dimension.v202411alpha1.Populator.nexthop_as_name)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
Populator::nexthop_as_name() const {
  // @@protoc_insertion_point(field_list:kentik.custom_dimension.v202411alpha1.Populator.nexthop_as_name)
  return nexthop_as_name_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
Populator::mutable_nexthop_as_name() {
  // @@protoc_insertion_point(field_mutable_list:kentik.custom_dimension.v202411alpha1.Populator.nexthop_as_name)
  return &nexthop_as_name_;
}

// repeated string nexthop = 16[json_name = "nexthop", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int Populator::_internal_nexthop_size() const {
  return nexthop_.size();
}
inline int Populator::nexthop_size() const {
  return _internal_nexthop_size();
}
inline void Populator::clear_nexthop() {
  nexthop_.Clear();
}
inline std::string* Populator::add_nexthop() {
  // @@protoc_insertion_point(field_add_mutable:kentik.custom_dimension.v202411alpha1.Populator.nexthop)
  return _internal_add_nexthop();
}
inline const std::string& Populator::_internal_nexthop(int index) const {
  return nexthop_.Get(index);
}
inline const std::string& Populator::nexthop(int index) const {
  // @@protoc_insertion_point(field_get:kentik.custom_dimension.v202411alpha1.Populator.nexthop)
  return _internal_nexthop(index);
}
inline std::string* Populator::mutable_nexthop(int index) {
  // @@protoc_insertion_point(field_mutable:kentik.custom_dimension.v202411alpha1.Populator.nexthop)
  return nexthop_.Mutable(index);
}
inline void Populator::set_nexthop(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:kentik.custom_dimension.v202411alpha1.Populator.nexthop)
  nexthop_.Mutable(index)->assign(value);
}
inline void Populator::set_nexthop(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:kentik.custom_dimension.v202411alpha1.Populator.nexthop)
  nexthop_.Mutable(index)->assign(std::move(value));
}
inline void Populator::set_nexthop(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  nexthop_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:kentik.custom_dimension.v202411alpha1.Populator.nexthop)
}
inline void Populator::set_nexthop(int index, const char* value, size_t size) {
  nexthop_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:kentik.custom_dimension.v202411alpha1.Populator.nexthop)
}
inline std::string* Populator::_internal_add_nexthop() {
  return nexthop_.Add();
}
inline void Populator::add_nexthop(const std::string& value) {
  nexthop_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:kentik.custom_dimension.v202411alpha1.Populator.nexthop)
}
inline void Populator::add_nexthop(std::string&& value) {
  nexthop_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:kentik.custom_dimension.v202411alpha1.Populator.nexthop)
}
inline void Populator::add_nexthop(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  nexthop_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:kentik.custom_dimension.v202411alpha1.Populator.nexthop)
}
inline void Populator::add_nexthop(const char* value, size_t size) {
  nexthop_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:kentik.custom_dimension.v202411alpha1.Populator.nexthop)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
Populator::nexthop() const {
  // @@protoc_insertion_point(field_list:kentik.custom_dimension.v202411alpha1.Populator.nexthop)
  return nexthop_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
Populator::mutable_nexthop() {
  // @@protoc_insertion_point(field_mutable_list:kentik.custom_dimension.v202411alpha1.Populator.nexthop)
  return &nexthop_;
}

// repeated string bgp_aspath = 17[json_name = "bgpAspath", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int Populator::_internal_bgp_aspath_size() const {
  return bgp_aspath_.size();
}
inline int Populator::bgp_aspath_size() const {
  return _internal_bgp_aspath_size();
}
inline void Populator::clear_bgp_aspath() {
  bgp_aspath_.Clear();
}
inline std::string* Populator::add_bgp_aspath() {
  // @@protoc_insertion_point(field_add_mutable:kentik.custom_dimension.v202411alpha1.Populator.bgp_aspath)
  return _internal_add_bgp_aspath();
}
inline const std::string& Populator::_internal_bgp_aspath(int index) const {
  return bgp_aspath_.Get(index);
}
inline const std::string& Populator::bgp_aspath(int index) const {
  // @@protoc_insertion_point(field_get:kentik.custom_dimension.v202411alpha1.Populator.bgp_aspath)
  return _internal_bgp_aspath(index);
}
inline std::string* Populator::mutable_bgp_aspath(int index) {
  // @@protoc_insertion_point(field_mutable:kentik.custom_dimension.v202411alpha1.Populator.bgp_aspath)
  return bgp_aspath_.Mutable(index);
}
inline void Populator::set_bgp_aspath(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:kentik.custom_dimension.v202411alpha1.Populator.bgp_aspath)
  bgp_aspath_.Mutable(index)->assign(value);
}
inline void Populator::set_bgp_aspath(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:kentik.custom_dimension.v202411alpha1.Populator.bgp_aspath)
  bgp_aspath_.Mutable(index)->assign(std::move(value));
}
inline void Populator::set_bgp_aspath(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  bgp_aspath_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:kentik.custom_dimension.v202411alpha1.Populator.bgp_aspath)
}
inline void Populator::set_bgp_aspath(int index, const char* value, size_t size) {
  bgp_aspath_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:kentik.custom_dimension.v202411alpha1.Populator.bgp_aspath)
}
inline std::string* Populator::_internal_add_bgp_aspath() {
  return bgp_aspath_.Add();
}
inline void Populator::add_bgp_aspath(const std::string& value) {
  bgp_aspath_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:kentik.custom_dimension.v202411alpha1.Populator.bgp_aspath)
}
inline void Populator::add_bgp_aspath(std::string&& value) {
  bgp_aspath_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:kentik.custom_dimension.v202411alpha1.Populator.bgp_aspath)
}
inline void Populator::add_bgp_aspath(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  bgp_aspath_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:kentik.custom_dimension.v202411alpha1.Populator.bgp_aspath)
}
inline void Populator::add_bgp_aspath(const char* value, size_t size) {
  bgp_aspath_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:kentik.custom_dimension.v202411alpha1.Populator.bgp_aspath)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
Populator::bgp_aspath() const {
  // @@protoc_insertion_point(field_list:kentik.custom_dimension.v202411alpha1.Populator.bgp_aspath)
  return bgp_aspath_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
Populator::mutable_bgp_aspath() {
  // @@protoc_insertion_point(field_mutable_list:kentik.custom_dimension.v202411alpha1.Populator.bgp_aspath)
  return &bgp_aspath_;
}

// repeated string bgp_community = 18[json_name = "bgpCommunity", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int Populator::_internal_bgp_community_size() const {
  return bgp_community_.size();
}
inline int Populator::bgp_community_size() const {
  return _internal_bgp_community_size();
}
inline void Populator::clear_bgp_community() {
  bgp_community_.Clear();
}
inline std::string* Populator::add_bgp_community() {
  // @@protoc_insertion_point(field_add_mutable:kentik.custom_dimension.v202411alpha1.Populator.bgp_community)
  return _internal_add_bgp_community();
}
inline const std::string& Populator::_internal_bgp_community(int index) const {
  return bgp_community_.Get(index);
}
inline const std::string& Populator::bgp_community(int index) const {
  // @@protoc_insertion_point(field_get:kentik.custom_dimension.v202411alpha1.Populator.bgp_community)
  return _internal_bgp_community(index);
}
inline std::string* Populator::mutable_bgp_community(int index) {
  // @@protoc_insertion_point(field_mutable:kentik.custom_dimension.v202411alpha1.Populator.bgp_community)
  return bgp_community_.Mutable(index);
}
inline void Populator::set_bgp_community(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:kentik.custom_dimension.v202411alpha1.Populator.bgp_community)
  bgp_community_.Mutable(index)->assign(value);
}
inline void Populator::set_bgp_community(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:kentik.custom_dimension.v202411alpha1.Populator.bgp_community)
  bgp_community_.Mutable(index)->assign(std::move(value));
}
inline void Populator::set_bgp_community(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  bgp_community_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:kentik.custom_dimension.v202411alpha1.Populator.bgp_community)
}
inline void Populator::set_bgp_community(int index, const char* value, size_t size) {
  bgp_community_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:kentik.custom_dimension.v202411alpha1.Populator.bgp_community)
}
inline std::string* Populator::_internal_add_bgp_community() {
  return bgp_community_.Add();
}
inline void Populator::add_bgp_community(const std::string& value) {
  bgp_community_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:kentik.custom_dimension.v202411alpha1.Populator.bgp_community)
}
inline void Populator::add_bgp_community(std::string&& value) {
  bgp_community_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:kentik.custom_dimension.v202411alpha1.Populator.bgp_community)
}
inline void Populator::add_bgp_community(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  bgp_community_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:kentik.custom_dimension.v202411alpha1.Populator.bgp_community)
}
inline void Populator::add_bgp_community(const char* value, size_t size) {
  bgp_community_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:kentik.custom_dimension.v202411alpha1.Populator.bgp_community)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
Populator::bgp_community() const {
  // @@protoc_insertion_point(field_list:kentik.custom_dimension.v202411alpha1.Populator.bgp_community)
  return bgp_community_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
Populator::mutable_bgp_community() {
  // @@protoc_insertion_point(field_mutable_list:kentik.custom_dimension.v202411alpha1.Populator.bgp_community)
  return &bgp_community_;
}

// repeated string mac = 19[json_name = "mac", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int Populator::_internal_mac_size() const {
  return mac_.size();
}
inline int Populator::mac_size() const {
  return _internal_mac_size();
}
inline void Populator::clear_mac() {
  mac_.Clear();
}
inline std::string* Populator::add_mac() {
  // @@protoc_insertion_point(field_add_mutable:kentik.custom_dimension.v202411alpha1.Populator.mac)
  return _internal_add_mac();
}
inline const std::string& Populator::_internal_mac(int index) const {
  return mac_.Get(index);
}
inline const std::string& Populator::mac(int index) const {
  // @@protoc_insertion_point(field_get:kentik.custom_dimension.v202411alpha1.Populator.mac)
  return _internal_mac(index);
}
inline std::string* Populator::mutable_mac(int index) {
  // @@protoc_insertion_point(field_mutable:kentik.custom_dimension.v202411alpha1.Populator.mac)
  return mac_.Mutable(index);
}
inline void Populator::set_mac(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:kentik.custom_dimension.v202411alpha1.Populator.mac)
  mac_.Mutable(index)->assign(value);
}
inline void Populator::set_mac(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:kentik.custom_dimension.v202411alpha1.Populator.mac)
  mac_.Mutable(index)->assign(std::move(value));
}
inline void Populator::set_mac(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  mac_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:kentik.custom_dimension.v202411alpha1.Populator.mac)
}
inline void Populator::set_mac(int index, const char* value, size_t size) {
  mac_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:kentik.custom_dimension.v202411alpha1.Populator.mac)
}
inline std::string* Populator::_internal_add_mac() {
  return mac_.Add();
}
inline void Populator::add_mac(const std::string& value) {
  mac_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:kentik.custom_dimension.v202411alpha1.Populator.mac)
}
inline void Populator::add_mac(std::string&& value) {
  mac_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:kentik.custom_dimension.v202411alpha1.Populator.mac)
}
inline void Populator::add_mac(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  mac_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:kentik.custom_dimension.v202411alpha1.Populator.mac)
}
inline void Populator::add_mac(const char* value, size_t size) {
  mac_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:kentik.custom_dimension.v202411alpha1.Populator.mac)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
Populator::mac() const {
  // @@protoc_insertion_point(field_list:kentik.custom_dimension.v202411alpha1.Populator.mac)
  return mac_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
Populator::mutable_mac() {
  // @@protoc_insertion_point(field_mutable_list:kentik.custom_dimension.v202411alpha1.Populator.mac)
  return &mac_;
}

// repeated string country = 20[json_name = "country", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int Populator::_internal_country_size() const {
  return country_.size();
}
inline int Populator::country_size() const {
  return _internal_country_size();
}
inline void Populator::clear_country() {
  country_.Clear();
}
inline std::string* Populator::add_country() {
  // @@protoc_insertion_point(field_add_mutable:kentik.custom_dimension.v202411alpha1.Populator.country)
  return _internal_add_country();
}
inline const std::string& Populator::_internal_country(int index) const {
  return country_.Get(index);
}
inline const std::string& Populator::country(int index) const {
  // @@protoc_insertion_point(field_get:kentik.custom_dimension.v202411alpha1.Populator.country)
  return _internal_country(index);
}
inline std::string* Populator::mutable_country(int index) {
  // @@protoc_insertion_point(field_mutable:kentik.custom_dimension.v202411alpha1.Populator.country)
  return country_.Mutable(index);
}
inline void Populator::set_country(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:kentik.custom_dimension.v202411alpha1.Populator.country)
  country_.Mutable(index)->assign(value);
}
inline void Populator::set_country(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:kentik.custom_dimension.v202411alpha1.Populator.country)
  country_.Mutable(index)->assign(std::move(value));
}
inline void Populator::set_country(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  country_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:kentik.custom_dimension.v202411alpha1.Populator.country)
}
inline void Populator::set_country(int index, const char* value, size_t size) {
  country_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:kentik.custom_dimension.v202411alpha1.Populator.country)
}
inline std::string* Populator::_internal_add_country() {
  return country_.Add();
}
inline void Populator::add_country(const std::string& value) {
  country_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:kentik.custom_dimension.v202411alpha1.Populator.country)
}
inline void Populator::add_country(std::string&& value) {
  country_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:kentik.custom_dimension.v202411alpha1.Populator.country)
}
inline void Populator::add_country(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  country_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:kentik.custom_dimension.v202411alpha1.Populator.country)
}
inline void Populator::add_country(const char* value, size_t size) {
  country_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:kentik.custom_dimension.v202411alpha1.Populator.country)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
Populator::country() const {
  // @@protoc_insertion_point(field_list:kentik.custom_dimension.v202411alpha1.Populator.country)
  return country_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
Populator::mutable_country() {
  // @@protoc_insertion_point(field_mutable_list:kentik.custom_dimension.v202411alpha1.Populator.country)
  return &country_;
}

// repeated string vlans = 21[json_name = "vlans", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int Populator::_internal_vlans_size() const {
  return vlans_.size();
}
inline int Populator::vlans_size() const {
  return _internal_vlans_size();
}
inline void Populator::clear_vlans() {
  vlans_.Clear();
}
inline std::string* Populator::add_vlans() {
  // @@protoc_insertion_point(field_add_mutable:kentik.custom_dimension.v202411alpha1.Populator.vlans)
  return _internal_add_vlans();
}
inline const std::string& Populator::_internal_vlans(int index) const {
  return vlans_.Get(index);
}
inline const std::string& Populator::vlans(int index) const {
  // @@protoc_insertion_point(field_get:kentik.custom_dimension.v202411alpha1.Populator.vlans)
  return _internal_vlans(index);
}
inline std::string* Populator::mutable_vlans(int index) {
  // @@protoc_insertion_point(field_mutable:kentik.custom_dimension.v202411alpha1.Populator.vlans)
  return vlans_.Mutable(index);
}
inline void Populator::set_vlans(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:kentik.custom_dimension.v202411alpha1.Populator.vlans)
  vlans_.Mutable(index)->assign(value);
}
inline void Populator::set_vlans(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:kentik.custom_dimension.v202411alpha1.Populator.vlans)
  vlans_.Mutable(index)->assign(std::move(value));
}
inline void Populator::set_vlans(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  vlans_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:kentik.custom_dimension.v202411alpha1.Populator.vlans)
}
inline void Populator::set_vlans(int index, const char* value, size_t size) {
  vlans_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:kentik.custom_dimension.v202411alpha1.Populator.vlans)
}
inline std::string* Populator::_internal_add_vlans() {
  return vlans_.Add();
}
inline void Populator::add_vlans(const std::string& value) {
  vlans_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:kentik.custom_dimension.v202411alpha1.Populator.vlans)
}
inline void Populator::add_vlans(std::string&& value) {
  vlans_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:kentik.custom_dimension.v202411alpha1.Populator.vlans)
}
inline void Populator::add_vlans(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  vlans_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:kentik.custom_dimension.v202411alpha1.Populator.vlans)
}
inline void Populator::add_vlans(const char* value, size_t size) {
  vlans_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:kentik.custom_dimension.v202411alpha1.Populator.vlans)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
Populator::vlans() const {
  // @@protoc_insertion_point(field_list:kentik.custom_dimension.v202411alpha1.Populator.vlans)
  return vlans_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
Populator::mutable_vlans() {
  // @@protoc_insertion_point(field_mutable_list:kentik.custom_dimension.v202411alpha1.Populator.vlans)
  return &vlans_;
}

// string user = 22[json_name = "user", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Populator::clear_user() {
  user_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& Populator::user() const {
  // @@protoc_insertion_point(field_get:kentik.custom_dimension.v202411alpha1.Populator.user)
  return _internal_user();
}
inline void Populator::set_user(const std::string& value) {
  _internal_set_user(value);
  // @@protoc_insertion_point(field_set:kentik.custom_dimension.v202411alpha1.Populator.user)
}
inline std::string* Populator::mutable_user() {
  // @@protoc_insertion_point(field_mutable:kentik.custom_dimension.v202411alpha1.Populator.user)
  return _internal_mutable_user();
}
inline const std::string& Populator::_internal_user() const {
  return user_.Get();
}
inline void Populator::_internal_set_user(const std::string& value) {
  
  user_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void Populator::set_user(std::string&& value) {
  
  user_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:kentik.custom_dimension.v202411alpha1.Populator.user)
}
inline void Populator::set_user(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  user_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:kentik.custom_dimension.v202411alpha1.Populator.user)
}
inline void Populator::set_user(const char* value,
    size_t size) {
  
  user_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:kentik.custom_dimension.v202411alpha1.Populator.user)
}
inline std::string* Populator::_internal_mutable_user() {
  
  return user_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* Populator::release_user() {
  // @@protoc_insertion_point(field_release:kentik.custom_dimension.v202411alpha1.Populator.user)
  return user_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void Populator::set_allocated_user(std::string* user) {
  if (user != nullptr) {
    
  } else {
    
  }
  user_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), user,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:kentik.custom_dimension.v202411alpha1.Populator.user)
}
inline std::string* Populator::unsafe_arena_release_user() {
  // @@protoc_insertion_point(field_unsafe_arena_release:kentik.custom_dimension.v202411alpha1.Populator.user)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return user_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void Populator::unsafe_arena_set_allocated_user(
    std::string* user) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (user != nullptr) {
    
  } else {
    
  }
  user_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      user, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.custom_dimension.v202411alpha1.Populator.user)
}

// .google.protobuf.Timestamp created_date = 23[json_name = "createdDate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool Populator::_internal_has_created_date() const {
  return this != internal_default_instance() && created_date_ != nullptr;
}
inline bool Populator::has_created_date() const {
  return _internal_has_created_date();
}
inline const PROTOBUF_NAMESPACE_ID::Timestamp& Populator::_internal_created_date() const {
  const PROTOBUF_NAMESPACE_ID::Timestamp* p = created_date_;
  return p != nullptr ? *p : *reinterpret_cast<const PROTOBUF_NAMESPACE_ID::Timestamp*>(
      &PROTOBUF_NAMESPACE_ID::_Timestamp_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::Timestamp& Populator::created_date() const {
  // @@protoc_insertion_point(field_get:kentik.custom_dimension.v202411alpha1.Populator.created_date)
  return _internal_created_date();
}
inline void Populator::unsafe_arena_set_allocated_created_date(
    PROTOBUF_NAMESPACE_ID::Timestamp* created_date) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(created_date_);
  }
  created_date_ = created_date;
  if (created_date) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.custom_dimension.v202411alpha1.Populator.created_date)
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* Populator::release_created_date() {
  auto temp = unsafe_arena_release_created_date();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* Populator::unsafe_arena_release_created_date() {
  // @@protoc_insertion_point(field_release:kentik.custom_dimension.v202411alpha1.Populator.created_date)
  
  PROTOBUF_NAMESPACE_ID::Timestamp* temp = created_date_;
  created_date_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* Populator::_internal_mutable_created_date() {
  
  if (created_date_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::Timestamp>(GetArena());
    created_date_ = p;
  }
  return created_date_;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* Populator::mutable_created_date() {
  // @@protoc_insertion_point(field_mutable:kentik.custom_dimension.v202411alpha1.Populator.created_date)
  return _internal_mutable_created_date();
}
inline void Populator::set_allocated_created_date(PROTOBUF_NAMESPACE_ID::Timestamp* created_date) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(created_date_);
  }
  if (created_date) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(created_date)->GetArena();
    if (message_arena != submessage_arena) {
      created_date = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, created_date, submessage_arena);
    }
    
  } else {
    
  }
  created_date_ = created_date;
  // @@protoc_insertion_point(field_set_allocated:kentik.custom_dimension.v202411alpha1.Populator.created_date)
}

// .google.protobuf.Timestamp updated_date = 24[json_name = "updatedDate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool Populator::_internal_has_updated_date() const {
  return this != internal_default_instance() && updated_date_ != nullptr;
}
inline bool Populator::has_updated_date() const {
  return _internal_has_updated_date();
}
inline const PROTOBUF_NAMESPACE_ID::Timestamp& Populator::_internal_updated_date() const {
  const PROTOBUF_NAMESPACE_ID::Timestamp* p = updated_date_;
  return p != nullptr ? *p : *reinterpret_cast<const PROTOBUF_NAMESPACE_ID::Timestamp*>(
      &PROTOBUF_NAMESPACE_ID::_Timestamp_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::Timestamp& Populator::updated_date() const {
  // @@protoc_insertion_point(field_get:kentik.custom_dimension.v202411alpha1.Populator.updated_date)
  return _internal_updated_date();
}
inline void Populator::unsafe_arena_set_allocated_updated_date(
    PROTOBUF_NAMESPACE_ID::Timestamp* updated_date) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(updated_date_);
  }
  updated_date_ = updated_date;
  if (updated_date) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.custom_dimension.v202411alpha1.Populator.updated_date)
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* Populator::release_updated_date() {
  auto temp = unsafe_arena_release_updated_date();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* Populator::unsafe_arena_release_updated_date() {
  // @@protoc_insertion_point(field_release:kentik.custom_dimension.v202411alpha1.Populator.updated_date)
  
  PROTOBUF_NAMESPACE_ID::Timestamp* temp = updated_date_;
  updated_date_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* Populator::_internal_mutable_updated_date() {
  
  if (updated_date_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::Timestamp>(GetArena());
    updated_date_ = p;
  }
  return updated_date_;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* Populator::mutable_updated_date() {
  // @@protoc_insertion_point(field_mutable:kentik.custom_dimension.v202411alpha1.Populator.updated_date)
  return _internal_mutable_updated_date();
}
inline void Populator::set_allocated_updated_date(PROTOBUF_NAMESPACE_ID::Timestamp* updated_date) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(updated_date_);
  }
  if (updated_date) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(updated_date)->GetArena();
    if (message_arena != submessage_arena) {
      updated_date = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, updated_date, submessage_arena);
    }
    
  } else {
    
  }
  updated_date_ = updated_date;
  // @@protoc_insertion_point(field_set_allocated:kentik.custom_dimension.v202411alpha1.Populator.updated_date)
}

// uint32 addr_count = 25[json_name = "addrCount", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Populator::clear_addr_count() {
  addr_count_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Populator::_internal_addr_count() const {
  return addr_count_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Populator::addr_count() const {
  // @@protoc_insertion_point(field_get:kentik.custom_dimension.v202411alpha1.Populator.addr_count)
  return _internal_addr_count();
}
inline void Populator::_internal_set_addr_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  addr_count_ = value;
}
inline void Populator::set_addr_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_addr_count(value);
  // @@protoc_insertion_point(field_set:kentik.custom_dimension.v202411alpha1.Populator.addr_count)
}

// uint32 mac_count = 26[json_name = "macCount", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Populator::clear_mac_count() {
  mac_count_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Populator::_internal_mac_count() const {
  return mac_count_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Populator::mac_count() const {
  // @@protoc_insertion_point(field_get:kentik.custom_dimension.v202411alpha1.Populator.mac_count)
  return _internal_mac_count();
}
inline void Populator::_internal_set_mac_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  mac_count_ = value;
}
inline void Populator::set_mac_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_mac_count(value);
  // @@protoc_insertion_point(field_set:kentik.custom_dimension.v202411alpha1.Populator.mac_count)
}

// map<string, .kentik.custom_dimension.v202411alpha1.ExtendedField> extended_fields = 27[json_name = "extendedFields", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int Populator::_internal_extended_fields_size() const {
  return extended_fields_.size();
}
inline int Populator::extended_fields_size() const {
  return _internal_extended_fields_size();
}
inline void Populator::clear_extended_fields() {
  extended_fields_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::kentik::custom_dimension::v202411alpha1::ExtendedField >&
Populator::_internal_extended_fields() const {
  return extended_fields_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::kentik::custom_dimension::v202411alpha1::ExtendedField >&
Populator::extended_fields() const {
  // @@protoc_insertion_point(field_map:kentik.custom_dimension.v202411alpha1.Populator.extended_fields)
  return _internal_extended_fields();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::kentik::custom_dimension::v202411alpha1::ExtendedField >*
Populator::_internal_mutable_extended_fields() {
  return extended_fields_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::kentik::custom_dimension::v202411alpha1::ExtendedField >*
Populator::mutable_extended_fields() {
  // @@protoc_insertion_point(field_mutable_map:kentik.custom_dimension.v202411alpha1.Populator.extended_fields)
  return _internal_mutable_extended_fields();
}

// -------------------------------------------------------------------

// ExtendedField

// repeated string value = 1[json_name = "value"];
inline int ExtendedField::_internal_value_size() const {
  return value_.size();
}
inline int ExtendedField::value_size() const {
  return _internal_value_size();
}
inline void ExtendedField::clear_value() {
  value_.Clear();
}
inline std::string* ExtendedField::add_value() {
  // @@protoc_insertion_point(field_add_mutable:kentik.custom_dimension.v202411alpha1.ExtendedField.value)
  return _internal_add_value();
}
inline const std::string& ExtendedField::_internal_value(int index) const {
  return value_.Get(index);
}
inline const std::string& ExtendedField::value(int index) const {
  // @@protoc_insertion_point(field_get:kentik.custom_dimension.v202411alpha1.ExtendedField.value)
  return _internal_value(index);
}
inline std::string* ExtendedField::mutable_value(int index) {
  // @@protoc_insertion_point(field_mutable:kentik.custom_dimension.v202411alpha1.ExtendedField.value)
  return value_.Mutable(index);
}
inline void ExtendedField::set_value(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:kentik.custom_dimension.v202411alpha1.ExtendedField.value)
  value_.Mutable(index)->assign(value);
}
inline void ExtendedField::set_value(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:kentik.custom_dimension.v202411alpha1.ExtendedField.value)
  value_.Mutable(index)->assign(std::move(value));
}
inline void ExtendedField::set_value(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  value_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:kentik.custom_dimension.v202411alpha1.ExtendedField.value)
}
inline void ExtendedField::set_value(int index, const char* value, size_t size) {
  value_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:kentik.custom_dimension.v202411alpha1.ExtendedField.value)
}
inline std::string* ExtendedField::_internal_add_value() {
  return value_.Add();
}
inline void ExtendedField::add_value(const std::string& value) {
  value_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:kentik.custom_dimension.v202411alpha1.ExtendedField.value)
}
inline void ExtendedField::add_value(std::string&& value) {
  value_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:kentik.custom_dimension.v202411alpha1.ExtendedField.value)
}
inline void ExtendedField::add_value(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  value_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:kentik.custom_dimension.v202411alpha1.ExtendedField.value)
}
inline void ExtendedField::add_value(const char* value, size_t size) {
  value_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:kentik.custom_dimension.v202411alpha1.ExtendedField.value)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
ExtendedField::value() const {
  // @@protoc_insertion_point(field_list:kentik.custom_dimension.v202411alpha1.ExtendedField.value)
  return value_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
ExtendedField::mutable_value() {
  // @@protoc_insertion_point(field_mutable_list:kentik.custom_dimension.v202411alpha1.ExtendedField.value)
  return &value_;
}

// -------------------------------------------------------------------

// ListCustomDimensionsRequest

// -------------------------------------------------------------------

// ListCustomDimensionsResponse

// repeated .kentik.custom_dimension.v202411alpha1.CustomDimension dimensions = 1[json_name = "dimensions"];
inline int ListCustomDimensionsResponse::_internal_dimensions_size() const {
  return dimensions_.size();
}
inline int ListCustomDimensionsResponse::dimensions_size() const {
  return _internal_dimensions_size();
}
inline void ListCustomDimensionsResponse::clear_dimensions() {
  dimensions_.Clear();
}
inline ::kentik::custom_dimension::v202411alpha1::CustomDimension* ListCustomDimensionsResponse::mutable_dimensions(int index) {
  // @@protoc_insertion_point(field_mutable:kentik.custom_dimension.v202411alpha1.ListCustomDimensionsResponse.dimensions)
  return dimensions_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kentik::custom_dimension::v202411alpha1::CustomDimension >*
ListCustomDimensionsResponse::mutable_dimensions() {
  // @@protoc_insertion_point(field_mutable_list:kentik.custom_dimension.v202411alpha1.ListCustomDimensionsResponse.dimensions)
  return &dimensions_;
}
inline const ::kentik::custom_dimension::v202411alpha1::CustomDimension& ListCustomDimensionsResponse::_internal_dimensions(int index) const {
  return dimensions_.Get(index);
}
inline const ::kentik::custom_dimension::v202411alpha1::CustomDimension& ListCustomDimensionsResponse::dimensions(int index) const {
  // @@protoc_insertion_point(field_get:kentik.custom_dimension.v202411alpha1.ListCustomDimensionsResponse.dimensions)
  return _internal_dimensions(index);
}
inline ::kentik::custom_dimension::v202411alpha1::CustomDimension* ListCustomDimensionsResponse::_internal_add_dimensions() {
  return dimensions_.Add();
}
inline ::kentik::custom_dimension::v202411alpha1::CustomDimension* ListCustomDimensionsResponse::add_dimensions() {
  // @@protoc_insertion_point(field_add:kentik.custom_dimension.v202411alpha1.ListCustomDimensionsResponse.dimensions)
  return _internal_add_dimensions();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kentik::custom_dimension::v202411alpha1::CustomDimension >&
ListCustomDimensionsResponse::dimensions() const {
  // @@protoc_insertion_point(field_list:kentik.custom_dimension.v202411alpha1.ListCustomDimensionsResponse.dimensions)
  return dimensions_;
}

// -------------------------------------------------------------------

// GetCustomDimensionInfoRequest

// string custom_dimension_id = 1[json_name = "customDimensionId"];
inline void GetCustomDimensionInfoRequest::clear_custom_dimension_id() {
  custom_dimension_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& GetCustomDimensionInfoRequest::custom_dimension_id() const {
  // @@protoc_insertion_point(field_get:kentik.custom_dimension.v202411alpha1.GetCustomDimensionInfoRequest.custom_dimension_id)
  return _internal_custom_dimension_id();
}
inline void GetCustomDimensionInfoRequest::set_custom_dimension_id(const std::string& value) {
  _internal_set_custom_dimension_id(value);
  // @@protoc_insertion_point(field_set:kentik.custom_dimension.v202411alpha1.GetCustomDimensionInfoRequest.custom_dimension_id)
}
inline std::string* GetCustomDimensionInfoRequest::mutable_custom_dimension_id() {
  // @@protoc_insertion_point(field_mutable:kentik.custom_dimension.v202411alpha1.GetCustomDimensionInfoRequest.custom_dimension_id)
  return _internal_mutable_custom_dimension_id();
}
inline const std::string& GetCustomDimensionInfoRequest::_internal_custom_dimension_id() const {
  return custom_dimension_id_.Get();
}
inline void GetCustomDimensionInfoRequest::_internal_set_custom_dimension_id(const std::string& value) {
  
  custom_dimension_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void GetCustomDimensionInfoRequest::set_custom_dimension_id(std::string&& value) {
  
  custom_dimension_id_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:kentik.custom_dimension.v202411alpha1.GetCustomDimensionInfoRequest.custom_dimension_id)
}
inline void GetCustomDimensionInfoRequest::set_custom_dimension_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  custom_dimension_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:kentik.custom_dimension.v202411alpha1.GetCustomDimensionInfoRequest.custom_dimension_id)
}
inline void GetCustomDimensionInfoRequest::set_custom_dimension_id(const char* value,
    size_t size) {
  
  custom_dimension_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:kentik.custom_dimension.v202411alpha1.GetCustomDimensionInfoRequest.custom_dimension_id)
}
inline std::string* GetCustomDimensionInfoRequest::_internal_mutable_custom_dimension_id() {
  
  return custom_dimension_id_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* GetCustomDimensionInfoRequest::release_custom_dimension_id() {
  // @@protoc_insertion_point(field_release:kentik.custom_dimension.v202411alpha1.GetCustomDimensionInfoRequest.custom_dimension_id)
  return custom_dimension_id_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void GetCustomDimensionInfoRequest::set_allocated_custom_dimension_id(std::string* custom_dimension_id) {
  if (custom_dimension_id != nullptr) {
    
  } else {
    
  }
  custom_dimension_id_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), custom_dimension_id,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:kentik.custom_dimension.v202411alpha1.GetCustomDimensionInfoRequest.custom_dimension_id)
}
inline std::string* GetCustomDimensionInfoRequest::unsafe_arena_release_custom_dimension_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:kentik.custom_dimension.v202411alpha1.GetCustomDimensionInfoRequest.custom_dimension_id)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return custom_dimension_id_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void GetCustomDimensionInfoRequest::unsafe_arena_set_allocated_custom_dimension_id(
    std::string* custom_dimension_id) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (custom_dimension_id != nullptr) {
    
  } else {
    
  }
  custom_dimension_id_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      custom_dimension_id, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.custom_dimension.v202411alpha1.GetCustomDimensionInfoRequest.custom_dimension_id)
}

// -------------------------------------------------------------------

// GetCustomDimensionInfoResponse

// .kentik.custom_dimension.v202411alpha1.CustomDimension dimension = 1[json_name = "dimension"];
inline bool GetCustomDimensionInfoResponse::_internal_has_dimension() const {
  return this != internal_default_instance() && dimension_ != nullptr;
}
inline bool GetCustomDimensionInfoResponse::has_dimension() const {
  return _internal_has_dimension();
}
inline void GetCustomDimensionInfoResponse::clear_dimension() {
  if (GetArena() == nullptr && dimension_ != nullptr) {
    delete dimension_;
  }
  dimension_ = nullptr;
}
inline const ::kentik::custom_dimension::v202411alpha1::CustomDimension& GetCustomDimensionInfoResponse::_internal_dimension() const {
  const ::kentik::custom_dimension::v202411alpha1::CustomDimension* p = dimension_;
  return p != nullptr ? *p : *reinterpret_cast<const ::kentik::custom_dimension::v202411alpha1::CustomDimension*>(
      &::kentik::custom_dimension::v202411alpha1::_CustomDimension_default_instance_);
}
inline const ::kentik::custom_dimension::v202411alpha1::CustomDimension& GetCustomDimensionInfoResponse::dimension() const {
  // @@protoc_insertion_point(field_get:kentik.custom_dimension.v202411alpha1.GetCustomDimensionInfoResponse.dimension)
  return _internal_dimension();
}
inline void GetCustomDimensionInfoResponse::unsafe_arena_set_allocated_dimension(
    ::kentik::custom_dimension::v202411alpha1::CustomDimension* dimension) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(dimension_);
  }
  dimension_ = dimension;
  if (dimension) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.custom_dimension.v202411alpha1.GetCustomDimensionInfoResponse.dimension)
}
inline ::kentik::custom_dimension::v202411alpha1::CustomDimension* GetCustomDimensionInfoResponse::release_dimension() {
  auto temp = unsafe_arena_release_dimension();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::kentik::custom_dimension::v202411alpha1::CustomDimension* GetCustomDimensionInfoResponse::unsafe_arena_release_dimension() {
  // @@protoc_insertion_point(field_release:kentik.custom_dimension.v202411alpha1.GetCustomDimensionInfoResponse.dimension)
  
  ::kentik::custom_dimension::v202411alpha1::CustomDimension* temp = dimension_;
  dimension_ = nullptr;
  return temp;
}
inline ::kentik::custom_dimension::v202411alpha1::CustomDimension* GetCustomDimensionInfoResponse::_internal_mutable_dimension() {
  
  if (dimension_ == nullptr) {
    auto* p = CreateMaybeMessage<::kentik::custom_dimension::v202411alpha1::CustomDimension>(GetArena());
    dimension_ = p;
  }
  return dimension_;
}
inline ::kentik::custom_dimension::v202411alpha1::CustomDimension* GetCustomDimensionInfoResponse::mutable_dimension() {
  // @@protoc_insertion_point(field_mutable:kentik.custom_dimension.v202411alpha1.GetCustomDimensionInfoResponse.dimension)
  return _internal_mutable_dimension();
}
inline void GetCustomDimensionInfoResponse::set_allocated_dimension(::kentik::custom_dimension::v202411alpha1::CustomDimension* dimension) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete dimension_;
  }
  if (dimension) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(dimension);
    if (message_arena != submessage_arena) {
      dimension = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, dimension, submessage_arena);
    }
    
  } else {
    
  }
  dimension_ = dimension;
  // @@protoc_insertion_point(field_set_allocated:kentik.custom_dimension.v202411alpha1.GetCustomDimensionInfoResponse.dimension)
}

// -------------------------------------------------------------------

// CreateCustomDimensionRequest

// .kentik.custom_dimension.v202411alpha1.CustomDimension dimension = 1[json_name = "dimension"];
inline bool CreateCustomDimensionRequest::_internal_has_dimension() const {
  return this != internal_default_instance() && dimension_ != nullptr;
}
inline bool CreateCustomDimensionRequest::has_dimension() const {
  return _internal_has_dimension();
}
inline void CreateCustomDimensionRequest::clear_dimension() {
  if (GetArena() == nullptr && dimension_ != nullptr) {
    delete dimension_;
  }
  dimension_ = nullptr;
}
inline const ::kentik::custom_dimension::v202411alpha1::CustomDimension& CreateCustomDimensionRequest::_internal_dimension() const {
  const ::kentik::custom_dimension::v202411alpha1::CustomDimension* p = dimension_;
  return p != nullptr ? *p : *reinterpret_cast<const ::kentik::custom_dimension::v202411alpha1::CustomDimension*>(
      &::kentik::custom_dimension::v202411alpha1::_CustomDimension_default_instance_);
}
inline const ::kentik::custom_dimension::v202411alpha1::CustomDimension& CreateCustomDimensionRequest::dimension() const {
  // @@protoc_insertion_point(field_get:kentik.custom_dimension.v202411alpha1.CreateCustomDimensionRequest.dimension)
  return _internal_dimension();
}
inline void CreateCustomDimensionRequest::unsafe_arena_set_allocated_dimension(
    ::kentik::custom_dimension::v202411alpha1::CustomDimension* dimension) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(dimension_);
  }
  dimension_ = dimension;
  if (dimension) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.custom_dimension.v202411alpha1.CreateCustomDimensionRequest.dimension)
}
inline ::kentik::custom_dimension::v202411alpha1::CustomDimension* CreateCustomDimensionRequest::release_dimension() {
  auto temp = unsafe_arena_release_dimension();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::kentik::custom_dimension::v202411alpha1::CustomDimension* CreateCustomDimensionRequest::unsafe_arena_release_dimension() {
  // @@protoc_insertion_point(field_release:kentik.custom_dimension.v202411alpha1.CreateCustomDimensionRequest.dimension)
  
  ::kentik::custom_dimension::v202411alpha1::CustomDimension* temp = dimension_;
  dimension_ = nullptr;
  return temp;
}
inline ::kentik::custom_dimension::v202411alpha1::CustomDimension* CreateCustomDimensionRequest::_internal_mutable_dimension() {
  
  if (dimension_ == nullptr) {
    auto* p = CreateMaybeMessage<::kentik::custom_dimension::v202411alpha1::CustomDimension>(GetArena());
    dimension_ = p;
  }
  return dimension_;
}
inline ::kentik::custom_dimension::v202411alpha1::CustomDimension* CreateCustomDimensionRequest::mutable_dimension() {
  // @@protoc_insertion_point(field_mutable:kentik.custom_dimension.v202411alpha1.CreateCustomDimensionRequest.dimension)
  return _internal_mutable_dimension();
}
inline void CreateCustomDimensionRequest::set_allocated_dimension(::kentik::custom_dimension::v202411alpha1::CustomDimension* dimension) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete dimension_;
  }
  if (dimension) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(dimension);
    if (message_arena != submessage_arena) {
      dimension = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, dimension, submessage_arena);
    }
    
  } else {
    
  }
  dimension_ = dimension;
  // @@protoc_insertion_point(field_set_allocated:kentik.custom_dimension.v202411alpha1.CreateCustomDimensionRequest.dimension)
}

// -------------------------------------------------------------------

// CreateCustomDimensionResponse

// .kentik.custom_dimension.v202411alpha1.CustomDimension dimension = 1[json_name = "dimension"];
inline bool CreateCustomDimensionResponse::_internal_has_dimension() const {
  return this != internal_default_instance() && dimension_ != nullptr;
}
inline bool CreateCustomDimensionResponse::has_dimension() const {
  return _internal_has_dimension();
}
inline void CreateCustomDimensionResponse::clear_dimension() {
  if (GetArena() == nullptr && dimension_ != nullptr) {
    delete dimension_;
  }
  dimension_ = nullptr;
}
inline const ::kentik::custom_dimension::v202411alpha1::CustomDimension& CreateCustomDimensionResponse::_internal_dimension() const {
  const ::kentik::custom_dimension::v202411alpha1::CustomDimension* p = dimension_;
  return p != nullptr ? *p : *reinterpret_cast<const ::kentik::custom_dimension::v202411alpha1::CustomDimension*>(
      &::kentik::custom_dimension::v202411alpha1::_CustomDimension_default_instance_);
}
inline const ::kentik::custom_dimension::v202411alpha1::CustomDimension& CreateCustomDimensionResponse::dimension() const {
  // @@protoc_insertion_point(field_get:kentik.custom_dimension.v202411alpha1.CreateCustomDimensionResponse.dimension)
  return _internal_dimension();
}
inline void CreateCustomDimensionResponse::unsafe_arena_set_allocated_dimension(
    ::kentik::custom_dimension::v202411alpha1::CustomDimension* dimension) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(dimension_);
  }
  dimension_ = dimension;
  if (dimension) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.custom_dimension.v202411alpha1.CreateCustomDimensionResponse.dimension)
}
inline ::kentik::custom_dimension::v202411alpha1::CustomDimension* CreateCustomDimensionResponse::release_dimension() {
  auto temp = unsafe_arena_release_dimension();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::kentik::custom_dimension::v202411alpha1::CustomDimension* CreateCustomDimensionResponse::unsafe_arena_release_dimension() {
  // @@protoc_insertion_point(field_release:kentik.custom_dimension.v202411alpha1.CreateCustomDimensionResponse.dimension)
  
  ::kentik::custom_dimension::v202411alpha1::CustomDimension* temp = dimension_;
  dimension_ = nullptr;
  return temp;
}
inline ::kentik::custom_dimension::v202411alpha1::CustomDimension* CreateCustomDimensionResponse::_internal_mutable_dimension() {
  
  if (dimension_ == nullptr) {
    auto* p = CreateMaybeMessage<::kentik::custom_dimension::v202411alpha1::CustomDimension>(GetArena());
    dimension_ = p;
  }
  return dimension_;
}
inline ::kentik::custom_dimension::v202411alpha1::CustomDimension* CreateCustomDimensionResponse::mutable_dimension() {
  // @@protoc_insertion_point(field_mutable:kentik.custom_dimension.v202411alpha1.CreateCustomDimensionResponse.dimension)
  return _internal_mutable_dimension();
}
inline void CreateCustomDimensionResponse::set_allocated_dimension(::kentik::custom_dimension::v202411alpha1::CustomDimension* dimension) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete dimension_;
  }
  if (dimension) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(dimension);
    if (message_arena != submessage_arena) {
      dimension = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, dimension, submessage_arena);
    }
    
  } else {
    
  }
  dimension_ = dimension;
  // @@protoc_insertion_point(field_set_allocated:kentik.custom_dimension.v202411alpha1.CreateCustomDimensionResponse.dimension)
}

// -------------------------------------------------------------------

// UpdateCustomDimensionRequest

// string custom_dimension_id = 1[json_name = "customDimensionId"];
inline void UpdateCustomDimensionRequest::clear_custom_dimension_id() {
  custom_dimension_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& UpdateCustomDimensionRequest::custom_dimension_id() const {
  // @@protoc_insertion_point(field_get:kentik.custom_dimension.v202411alpha1.UpdateCustomDimensionRequest.custom_dimension_id)
  return _internal_custom_dimension_id();
}
inline void UpdateCustomDimensionRequest::set_custom_dimension_id(const std::string& value) {
  _internal_set_custom_dimension_id(value);
  // @@protoc_insertion_point(field_set:kentik.custom_dimension.v202411alpha1.UpdateCustomDimensionRequest.custom_dimension_id)
}
inline std::string* UpdateCustomDimensionRequest::mutable_custom_dimension_id() {
  // @@protoc_insertion_point(field_mutable:kentik.custom_dimension.v202411alpha1.UpdateCustomDimensionRequest.custom_dimension_id)
  return _internal_mutable_custom_dimension_id();
}
inline const std::string& UpdateCustomDimensionRequest::_internal_custom_dimension_id() const {
  return custom_dimension_id_.Get();
}
inline void UpdateCustomDimensionRequest::_internal_set_custom_dimension_id(const std::string& value) {
  
  custom_dimension_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void UpdateCustomDimensionRequest::set_custom_dimension_id(std::string&& value) {
  
  custom_dimension_id_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:kentik.custom_dimension.v202411alpha1.UpdateCustomDimensionRequest.custom_dimension_id)
}
inline void UpdateCustomDimensionRequest::set_custom_dimension_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  custom_dimension_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:kentik.custom_dimension.v202411alpha1.UpdateCustomDimensionRequest.custom_dimension_id)
}
inline void UpdateCustomDimensionRequest::set_custom_dimension_id(const char* value,
    size_t size) {
  
  custom_dimension_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:kentik.custom_dimension.v202411alpha1.UpdateCustomDimensionRequest.custom_dimension_id)
}
inline std::string* UpdateCustomDimensionRequest::_internal_mutable_custom_dimension_id() {
  
  return custom_dimension_id_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* UpdateCustomDimensionRequest::release_custom_dimension_id() {
  // @@protoc_insertion_point(field_release:kentik.custom_dimension.v202411alpha1.UpdateCustomDimensionRequest.custom_dimension_id)
  return custom_dimension_id_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void UpdateCustomDimensionRequest::set_allocated_custom_dimension_id(std::string* custom_dimension_id) {
  if (custom_dimension_id != nullptr) {
    
  } else {
    
  }
  custom_dimension_id_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), custom_dimension_id,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:kentik.custom_dimension.v202411alpha1.UpdateCustomDimensionRequest.custom_dimension_id)
}
inline std::string* UpdateCustomDimensionRequest::unsafe_arena_release_custom_dimension_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:kentik.custom_dimension.v202411alpha1.UpdateCustomDimensionRequest.custom_dimension_id)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return custom_dimension_id_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void UpdateCustomDimensionRequest::unsafe_arena_set_allocated_custom_dimension_id(
    std::string* custom_dimension_id) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (custom_dimension_id != nullptr) {
    
  } else {
    
  }
  custom_dimension_id_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      custom_dimension_id, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.custom_dimension.v202411alpha1.UpdateCustomDimensionRequest.custom_dimension_id)
}

// .kentik.custom_dimension.v202411alpha1.CustomDimension dimension = 2[json_name = "dimension"];
inline bool UpdateCustomDimensionRequest::_internal_has_dimension() const {
  return this != internal_default_instance() && dimension_ != nullptr;
}
inline bool UpdateCustomDimensionRequest::has_dimension() const {
  return _internal_has_dimension();
}
inline void UpdateCustomDimensionRequest::clear_dimension() {
  if (GetArena() == nullptr && dimension_ != nullptr) {
    delete dimension_;
  }
  dimension_ = nullptr;
}
inline const ::kentik::custom_dimension::v202411alpha1::CustomDimension& UpdateCustomDimensionRequest::_internal_dimension() const {
  const ::kentik::custom_dimension::v202411alpha1::CustomDimension* p = dimension_;
  return p != nullptr ? *p : *reinterpret_cast<const ::kentik::custom_dimension::v202411alpha1::CustomDimension*>(
      &::kentik::custom_dimension::v202411alpha1::_CustomDimension_default_instance_);
}
inline const ::kentik::custom_dimension::v202411alpha1::CustomDimension& UpdateCustomDimensionRequest::dimension() const {
  // @@protoc_insertion_point(field_get:kentik.custom_dimension.v202411alpha1.UpdateCustomDimensionRequest.dimension)
  return _internal_dimension();
}
inline void UpdateCustomDimensionRequest::unsafe_arena_set_allocated_dimension(
    ::kentik::custom_dimension::v202411alpha1::CustomDimension* dimension) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(dimension_);
  }
  dimension_ = dimension;
  if (dimension) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.custom_dimension.v202411alpha1.UpdateCustomDimensionRequest.dimension)
}
inline ::kentik::custom_dimension::v202411alpha1::CustomDimension* UpdateCustomDimensionRequest::release_dimension() {
  auto temp = unsafe_arena_release_dimension();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::kentik::custom_dimension::v202411alpha1::CustomDimension* UpdateCustomDimensionRequest::unsafe_arena_release_dimension() {
  // @@protoc_insertion_point(field_release:kentik.custom_dimension.v202411alpha1.UpdateCustomDimensionRequest.dimension)
  
  ::kentik::custom_dimension::v202411alpha1::CustomDimension* temp = dimension_;
  dimension_ = nullptr;
  return temp;
}
inline ::kentik::custom_dimension::v202411alpha1::CustomDimension* UpdateCustomDimensionRequest::_internal_mutable_dimension() {
  
  if (dimension_ == nullptr) {
    auto* p = CreateMaybeMessage<::kentik::custom_dimension::v202411alpha1::CustomDimension>(GetArena());
    dimension_ = p;
  }
  return dimension_;
}
inline ::kentik::custom_dimension::v202411alpha1::CustomDimension* UpdateCustomDimensionRequest::mutable_dimension() {
  // @@protoc_insertion_point(field_mutable:kentik.custom_dimension.v202411alpha1.UpdateCustomDimensionRequest.dimension)
  return _internal_mutable_dimension();
}
inline void UpdateCustomDimensionRequest::set_allocated_dimension(::kentik::custom_dimension::v202411alpha1::CustomDimension* dimension) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete dimension_;
  }
  if (dimension) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(dimension);
    if (message_arena != submessage_arena) {
      dimension = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, dimension, submessage_arena);
    }
    
  } else {
    
  }
  dimension_ = dimension;
  // @@protoc_insertion_point(field_set_allocated:kentik.custom_dimension.v202411alpha1.UpdateCustomDimensionRequest.dimension)
}

// -------------------------------------------------------------------

// UpdateCustomDimensionResponse

// .kentik.custom_dimension.v202411alpha1.CustomDimension dimension = 1[json_name = "dimension"];
inline bool UpdateCustomDimensionResponse::_internal_has_dimension() const {
  return this != internal_default_instance() && dimension_ != nullptr;
}
inline bool UpdateCustomDimensionResponse::has_dimension() const {
  return _internal_has_dimension();
}
inline void UpdateCustomDimensionResponse::clear_dimension() {
  if (GetArena() == nullptr && dimension_ != nullptr) {
    delete dimension_;
  }
  dimension_ = nullptr;
}
inline const ::kentik::custom_dimension::v202411alpha1::CustomDimension& UpdateCustomDimensionResponse::_internal_dimension() const {
  const ::kentik::custom_dimension::v202411alpha1::CustomDimension* p = dimension_;
  return p != nullptr ? *p : *reinterpret_cast<const ::kentik::custom_dimension::v202411alpha1::CustomDimension*>(
      &::kentik::custom_dimension::v202411alpha1::_CustomDimension_default_instance_);
}
inline const ::kentik::custom_dimension::v202411alpha1::CustomDimension& UpdateCustomDimensionResponse::dimension() const {
  // @@protoc_insertion_point(field_get:kentik.custom_dimension.v202411alpha1.UpdateCustomDimensionResponse.dimension)
  return _internal_dimension();
}
inline void UpdateCustomDimensionResponse::unsafe_arena_set_allocated_dimension(
    ::kentik::custom_dimension::v202411alpha1::CustomDimension* dimension) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(dimension_);
  }
  dimension_ = dimension;
  if (dimension) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.custom_dimension.v202411alpha1.UpdateCustomDimensionResponse.dimension)
}
inline ::kentik::custom_dimension::v202411alpha1::CustomDimension* UpdateCustomDimensionResponse::release_dimension() {
  auto temp = unsafe_arena_release_dimension();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::kentik::custom_dimension::v202411alpha1::CustomDimension* UpdateCustomDimensionResponse::unsafe_arena_release_dimension() {
  // @@protoc_insertion_point(field_release:kentik.custom_dimension.v202411alpha1.UpdateCustomDimensionResponse.dimension)
  
  ::kentik::custom_dimension::v202411alpha1::CustomDimension* temp = dimension_;
  dimension_ = nullptr;
  return temp;
}
inline ::kentik::custom_dimension::v202411alpha1::CustomDimension* UpdateCustomDimensionResponse::_internal_mutable_dimension() {
  
  if (dimension_ == nullptr) {
    auto* p = CreateMaybeMessage<::kentik::custom_dimension::v202411alpha1::CustomDimension>(GetArena());
    dimension_ = p;
  }
  return dimension_;
}
inline ::kentik::custom_dimension::v202411alpha1::CustomDimension* UpdateCustomDimensionResponse::mutable_dimension() {
  // @@protoc_insertion_point(field_mutable:kentik.custom_dimension.v202411alpha1.UpdateCustomDimensionResponse.dimension)
  return _internal_mutable_dimension();
}
inline void UpdateCustomDimensionResponse::set_allocated_dimension(::kentik::custom_dimension::v202411alpha1::CustomDimension* dimension) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete dimension_;
  }
  if (dimension) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(dimension);
    if (message_arena != submessage_arena) {
      dimension = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, dimension, submessage_arena);
    }
    
  } else {
    
  }
  dimension_ = dimension;
  // @@protoc_insertion_point(field_set_allocated:kentik.custom_dimension.v202411alpha1.UpdateCustomDimensionResponse.dimension)
}

// -------------------------------------------------------------------

// DeleteCustomDimensionRequest

// string custom_dimension_id = 1[json_name = "customDimensionId"];
inline void DeleteCustomDimensionRequest::clear_custom_dimension_id() {
  custom_dimension_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& DeleteCustomDimensionRequest::custom_dimension_id() const {
  // @@protoc_insertion_point(field_get:kentik.custom_dimension.v202411alpha1.DeleteCustomDimensionRequest.custom_dimension_id)
  return _internal_custom_dimension_id();
}
inline void DeleteCustomDimensionRequest::set_custom_dimension_id(const std::string& value) {
  _internal_set_custom_dimension_id(value);
  // @@protoc_insertion_point(field_set:kentik.custom_dimension.v202411alpha1.DeleteCustomDimensionRequest.custom_dimension_id)
}
inline std::string* DeleteCustomDimensionRequest::mutable_custom_dimension_id() {
  // @@protoc_insertion_point(field_mutable:kentik.custom_dimension.v202411alpha1.DeleteCustomDimensionRequest.custom_dimension_id)
  return _internal_mutable_custom_dimension_id();
}
inline const std::string& DeleteCustomDimensionRequest::_internal_custom_dimension_id() const {
  return custom_dimension_id_.Get();
}
inline void DeleteCustomDimensionRequest::_internal_set_custom_dimension_id(const std::string& value) {
  
  custom_dimension_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void DeleteCustomDimensionRequest::set_custom_dimension_id(std::string&& value) {
  
  custom_dimension_id_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:kentik.custom_dimension.v202411alpha1.DeleteCustomDimensionRequest.custom_dimension_id)
}
inline void DeleteCustomDimensionRequest::set_custom_dimension_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  custom_dimension_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:kentik.custom_dimension.v202411alpha1.DeleteCustomDimensionRequest.custom_dimension_id)
}
inline void DeleteCustomDimensionRequest::set_custom_dimension_id(const char* value,
    size_t size) {
  
  custom_dimension_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:kentik.custom_dimension.v202411alpha1.DeleteCustomDimensionRequest.custom_dimension_id)
}
inline std::string* DeleteCustomDimensionRequest::_internal_mutable_custom_dimension_id() {
  
  return custom_dimension_id_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* DeleteCustomDimensionRequest::release_custom_dimension_id() {
  // @@protoc_insertion_point(field_release:kentik.custom_dimension.v202411alpha1.DeleteCustomDimensionRequest.custom_dimension_id)
  return custom_dimension_id_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void DeleteCustomDimensionRequest::set_allocated_custom_dimension_id(std::string* custom_dimension_id) {
  if (custom_dimension_id != nullptr) {
    
  } else {
    
  }
  custom_dimension_id_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), custom_dimension_id,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:kentik.custom_dimension.v202411alpha1.DeleteCustomDimensionRequest.custom_dimension_id)
}
inline std::string* DeleteCustomDimensionRequest::unsafe_arena_release_custom_dimension_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:kentik.custom_dimension.v202411alpha1.DeleteCustomDimensionRequest.custom_dimension_id)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return custom_dimension_id_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void DeleteCustomDimensionRequest::unsafe_arena_set_allocated_custom_dimension_id(
    std::string* custom_dimension_id) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (custom_dimension_id != nullptr) {
    
  } else {
    
  }
  custom_dimension_id_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      custom_dimension_id, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.custom_dimension.v202411alpha1.DeleteCustomDimensionRequest.custom_dimension_id)
}

// -------------------------------------------------------------------

// DeleteCustomDimensionResponse

// -------------------------------------------------------------------

// CreatePopulatorRequest

// string custom_dimension_id = 1[json_name = "customDimensionId"];
inline void CreatePopulatorRequest::clear_custom_dimension_id() {
  custom_dimension_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& CreatePopulatorRequest::custom_dimension_id() const {
  // @@protoc_insertion_point(field_get:kentik.custom_dimension.v202411alpha1.CreatePopulatorRequest.custom_dimension_id)
  return _internal_custom_dimension_id();
}
inline void CreatePopulatorRequest::set_custom_dimension_id(const std::string& value) {
  _internal_set_custom_dimension_id(value);
  // @@protoc_insertion_point(field_set:kentik.custom_dimension.v202411alpha1.CreatePopulatorRequest.custom_dimension_id)
}
inline std::string* CreatePopulatorRequest::mutable_custom_dimension_id() {
  // @@protoc_insertion_point(field_mutable:kentik.custom_dimension.v202411alpha1.CreatePopulatorRequest.custom_dimension_id)
  return _internal_mutable_custom_dimension_id();
}
inline const std::string& CreatePopulatorRequest::_internal_custom_dimension_id() const {
  return custom_dimension_id_.Get();
}
inline void CreatePopulatorRequest::_internal_set_custom_dimension_id(const std::string& value) {
  
  custom_dimension_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void CreatePopulatorRequest::set_custom_dimension_id(std::string&& value) {
  
  custom_dimension_id_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:kentik.custom_dimension.v202411alpha1.CreatePopulatorRequest.custom_dimension_id)
}
inline void CreatePopulatorRequest::set_custom_dimension_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  custom_dimension_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:kentik.custom_dimension.v202411alpha1.CreatePopulatorRequest.custom_dimension_id)
}
inline void CreatePopulatorRequest::set_custom_dimension_id(const char* value,
    size_t size) {
  
  custom_dimension_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:kentik.custom_dimension.v202411alpha1.CreatePopulatorRequest.custom_dimension_id)
}
inline std::string* CreatePopulatorRequest::_internal_mutable_custom_dimension_id() {
  
  return custom_dimension_id_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* CreatePopulatorRequest::release_custom_dimension_id() {
  // @@protoc_insertion_point(field_release:kentik.custom_dimension.v202411alpha1.CreatePopulatorRequest.custom_dimension_id)
  return custom_dimension_id_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CreatePopulatorRequest::set_allocated_custom_dimension_id(std::string* custom_dimension_id) {
  if (custom_dimension_id != nullptr) {
    
  } else {
    
  }
  custom_dimension_id_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), custom_dimension_id,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:kentik.custom_dimension.v202411alpha1.CreatePopulatorRequest.custom_dimension_id)
}
inline std::string* CreatePopulatorRequest::unsafe_arena_release_custom_dimension_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:kentik.custom_dimension.v202411alpha1.CreatePopulatorRequest.custom_dimension_id)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return custom_dimension_id_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void CreatePopulatorRequest::unsafe_arena_set_allocated_custom_dimension_id(
    std::string* custom_dimension_id) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (custom_dimension_id != nullptr) {
    
  } else {
    
  }
  custom_dimension_id_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      custom_dimension_id, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.custom_dimension.v202411alpha1.CreatePopulatorRequest.custom_dimension_id)
}

// .kentik.custom_dimension.v202411alpha1.Populator populator = 2[json_name = "populator"];
inline bool CreatePopulatorRequest::_internal_has_populator() const {
  return this != internal_default_instance() && populator_ != nullptr;
}
inline bool CreatePopulatorRequest::has_populator() const {
  return _internal_has_populator();
}
inline void CreatePopulatorRequest::clear_populator() {
  if (GetArena() == nullptr && populator_ != nullptr) {
    delete populator_;
  }
  populator_ = nullptr;
}
inline const ::kentik::custom_dimension::v202411alpha1::Populator& CreatePopulatorRequest::_internal_populator() const {
  const ::kentik::custom_dimension::v202411alpha1::Populator* p = populator_;
  return p != nullptr ? *p : *reinterpret_cast<const ::kentik::custom_dimension::v202411alpha1::Populator*>(
      &::kentik::custom_dimension::v202411alpha1::_Populator_default_instance_);
}
inline const ::kentik::custom_dimension::v202411alpha1::Populator& CreatePopulatorRequest::populator() const {
  // @@protoc_insertion_point(field_get:kentik.custom_dimension.v202411alpha1.CreatePopulatorRequest.populator)
  return _internal_populator();
}
inline void CreatePopulatorRequest::unsafe_arena_set_allocated_populator(
    ::kentik::custom_dimension::v202411alpha1::Populator* populator) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(populator_);
  }
  populator_ = populator;
  if (populator) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.custom_dimension.v202411alpha1.CreatePopulatorRequest.populator)
}
inline ::kentik::custom_dimension::v202411alpha1::Populator* CreatePopulatorRequest::release_populator() {
  auto temp = unsafe_arena_release_populator();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::kentik::custom_dimension::v202411alpha1::Populator* CreatePopulatorRequest::unsafe_arena_release_populator() {
  // @@protoc_insertion_point(field_release:kentik.custom_dimension.v202411alpha1.CreatePopulatorRequest.populator)
  
  ::kentik::custom_dimension::v202411alpha1::Populator* temp = populator_;
  populator_ = nullptr;
  return temp;
}
inline ::kentik::custom_dimension::v202411alpha1::Populator* CreatePopulatorRequest::_internal_mutable_populator() {
  
  if (populator_ == nullptr) {
    auto* p = CreateMaybeMessage<::kentik::custom_dimension::v202411alpha1::Populator>(GetArena());
    populator_ = p;
  }
  return populator_;
}
inline ::kentik::custom_dimension::v202411alpha1::Populator* CreatePopulatorRequest::mutable_populator() {
  // @@protoc_insertion_point(field_mutable:kentik.custom_dimension.v202411alpha1.CreatePopulatorRequest.populator)
  return _internal_mutable_populator();
}
inline void CreatePopulatorRequest::set_allocated_populator(::kentik::custom_dimension::v202411alpha1::Populator* populator) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete populator_;
  }
  if (populator) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(populator);
    if (message_arena != submessage_arena) {
      populator = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, populator, submessage_arena);
    }
    
  } else {
    
  }
  populator_ = populator;
  // @@protoc_insertion_point(field_set_allocated:kentik.custom_dimension.v202411alpha1.CreatePopulatorRequest.populator)
}

// -------------------------------------------------------------------

// CreatePopulatorResponse

// .kentik.custom_dimension.v202411alpha1.Populator populator = 1[json_name = "populator"];
inline bool CreatePopulatorResponse::_internal_has_populator() const {
  return this != internal_default_instance() && populator_ != nullptr;
}
inline bool CreatePopulatorResponse::has_populator() const {
  return _internal_has_populator();
}
inline void CreatePopulatorResponse::clear_populator() {
  if (GetArena() == nullptr && populator_ != nullptr) {
    delete populator_;
  }
  populator_ = nullptr;
}
inline const ::kentik::custom_dimension::v202411alpha1::Populator& CreatePopulatorResponse::_internal_populator() const {
  const ::kentik::custom_dimension::v202411alpha1::Populator* p = populator_;
  return p != nullptr ? *p : *reinterpret_cast<const ::kentik::custom_dimension::v202411alpha1::Populator*>(
      &::kentik::custom_dimension::v202411alpha1::_Populator_default_instance_);
}
inline const ::kentik::custom_dimension::v202411alpha1::Populator& CreatePopulatorResponse::populator() const {
  // @@protoc_insertion_point(field_get:kentik.custom_dimension.v202411alpha1.CreatePopulatorResponse.populator)
  return _internal_populator();
}
inline void CreatePopulatorResponse::unsafe_arena_set_allocated_populator(
    ::kentik::custom_dimension::v202411alpha1::Populator* populator) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(populator_);
  }
  populator_ = populator;
  if (populator) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.custom_dimension.v202411alpha1.CreatePopulatorResponse.populator)
}
inline ::kentik::custom_dimension::v202411alpha1::Populator* CreatePopulatorResponse::release_populator() {
  auto temp = unsafe_arena_release_populator();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::kentik::custom_dimension::v202411alpha1::Populator* CreatePopulatorResponse::unsafe_arena_release_populator() {
  // @@protoc_insertion_point(field_release:kentik.custom_dimension.v202411alpha1.CreatePopulatorResponse.populator)
  
  ::kentik::custom_dimension::v202411alpha1::Populator* temp = populator_;
  populator_ = nullptr;
  return temp;
}
inline ::kentik::custom_dimension::v202411alpha1::Populator* CreatePopulatorResponse::_internal_mutable_populator() {
  
  if (populator_ == nullptr) {
    auto* p = CreateMaybeMessage<::kentik::custom_dimension::v202411alpha1::Populator>(GetArena());
    populator_ = p;
  }
  return populator_;
}
inline ::kentik::custom_dimension::v202411alpha1::Populator* CreatePopulatorResponse::mutable_populator() {
  // @@protoc_insertion_point(field_mutable:kentik.custom_dimension.v202411alpha1.CreatePopulatorResponse.populator)
  return _internal_mutable_populator();
}
inline void CreatePopulatorResponse::set_allocated_populator(::kentik::custom_dimension::v202411alpha1::Populator* populator) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete populator_;
  }
  if (populator) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(populator);
    if (message_arena != submessage_arena) {
      populator = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, populator, submessage_arena);
    }
    
  } else {
    
  }
  populator_ = populator;
  // @@protoc_insertion_point(field_set_allocated:kentik.custom_dimension.v202411alpha1.CreatePopulatorResponse.populator)
}

// -------------------------------------------------------------------

// UpdatePopulatorRequest

// string custom_dimension_id = 1[json_name = "customDimensionId"];
inline void UpdatePopulatorRequest::clear_custom_dimension_id() {
  custom_dimension_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& UpdatePopulatorRequest::custom_dimension_id() const {
  // @@protoc_insertion_point(field_get:kentik.custom_dimension.v202411alpha1.UpdatePopulatorRequest.custom_dimension_id)
  return _internal_custom_dimension_id();
}
inline void UpdatePopulatorRequest::set_custom_dimension_id(const std::string& value) {
  _internal_set_custom_dimension_id(value);
  // @@protoc_insertion_point(field_set:kentik.custom_dimension.v202411alpha1.UpdatePopulatorRequest.custom_dimension_id)
}
inline std::string* UpdatePopulatorRequest::mutable_custom_dimension_id() {
  // @@protoc_insertion_point(field_mutable:kentik.custom_dimension.v202411alpha1.UpdatePopulatorRequest.custom_dimension_id)
  return _internal_mutable_custom_dimension_id();
}
inline const std::string& UpdatePopulatorRequest::_internal_custom_dimension_id() const {
  return custom_dimension_id_.Get();
}
inline void UpdatePopulatorRequest::_internal_set_custom_dimension_id(const std::string& value) {
  
  custom_dimension_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void UpdatePopulatorRequest::set_custom_dimension_id(std::string&& value) {
  
  custom_dimension_id_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:kentik.custom_dimension.v202411alpha1.UpdatePopulatorRequest.custom_dimension_id)
}
inline void UpdatePopulatorRequest::set_custom_dimension_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  custom_dimension_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:kentik.custom_dimension.v202411alpha1.UpdatePopulatorRequest.custom_dimension_id)
}
inline void UpdatePopulatorRequest::set_custom_dimension_id(const char* value,
    size_t size) {
  
  custom_dimension_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:kentik.custom_dimension.v202411alpha1.UpdatePopulatorRequest.custom_dimension_id)
}
inline std::string* UpdatePopulatorRequest::_internal_mutable_custom_dimension_id() {
  
  return custom_dimension_id_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* UpdatePopulatorRequest::release_custom_dimension_id() {
  // @@protoc_insertion_point(field_release:kentik.custom_dimension.v202411alpha1.UpdatePopulatorRequest.custom_dimension_id)
  return custom_dimension_id_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void UpdatePopulatorRequest::set_allocated_custom_dimension_id(std::string* custom_dimension_id) {
  if (custom_dimension_id != nullptr) {
    
  } else {
    
  }
  custom_dimension_id_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), custom_dimension_id,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:kentik.custom_dimension.v202411alpha1.UpdatePopulatorRequest.custom_dimension_id)
}
inline std::string* UpdatePopulatorRequest::unsafe_arena_release_custom_dimension_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:kentik.custom_dimension.v202411alpha1.UpdatePopulatorRequest.custom_dimension_id)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return custom_dimension_id_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void UpdatePopulatorRequest::unsafe_arena_set_allocated_custom_dimension_id(
    std::string* custom_dimension_id) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (custom_dimension_id != nullptr) {
    
  } else {
    
  }
  custom_dimension_id_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      custom_dimension_id, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.custom_dimension.v202411alpha1.UpdatePopulatorRequest.custom_dimension_id)
}

// string populator_id = 2[json_name = "populatorId"];
inline void UpdatePopulatorRequest::clear_populator_id() {
  populator_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& UpdatePopulatorRequest::populator_id() const {
  // @@protoc_insertion_point(field_get:kentik.custom_dimension.v202411alpha1.UpdatePopulatorRequest.populator_id)
  return _internal_populator_id();
}
inline void UpdatePopulatorRequest::set_populator_id(const std::string& value) {
  _internal_set_populator_id(value);
  // @@protoc_insertion_point(field_set:kentik.custom_dimension.v202411alpha1.UpdatePopulatorRequest.populator_id)
}
inline std::string* UpdatePopulatorRequest::mutable_populator_id() {
  // @@protoc_insertion_point(field_mutable:kentik.custom_dimension.v202411alpha1.UpdatePopulatorRequest.populator_id)
  return _internal_mutable_populator_id();
}
inline const std::string& UpdatePopulatorRequest::_internal_populator_id() const {
  return populator_id_.Get();
}
inline void UpdatePopulatorRequest::_internal_set_populator_id(const std::string& value) {
  
  populator_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void UpdatePopulatorRequest::set_populator_id(std::string&& value) {
  
  populator_id_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:kentik.custom_dimension.v202411alpha1.UpdatePopulatorRequest.populator_id)
}
inline void UpdatePopulatorRequest::set_populator_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  populator_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:kentik.custom_dimension.v202411alpha1.UpdatePopulatorRequest.populator_id)
}
inline void UpdatePopulatorRequest::set_populator_id(const char* value,
    size_t size) {
  
  populator_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:kentik.custom_dimension.v202411alpha1.UpdatePopulatorRequest.populator_id)
}
inline std::string* UpdatePopulatorRequest::_internal_mutable_populator_id() {
  
  return populator_id_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* UpdatePopulatorRequest::release_populator_id() {
  // @@protoc_insertion_point(field_release:kentik.custom_dimension.v202411alpha1.UpdatePopulatorRequest.populator_id)
  return populator_id_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void UpdatePopulatorRequest::set_allocated_populator_id(std::string* populator_id) {
  if (populator_id != nullptr) {
    
  } else {
    
  }
  populator_id_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), populator_id,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:kentik.custom_dimension.v202411alpha1.UpdatePopulatorRequest.populator_id)
}
inline std::string* UpdatePopulatorRequest::unsafe_arena_release_populator_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:kentik.custom_dimension.v202411alpha1.UpdatePopulatorRequest.populator_id)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return populator_id_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void UpdatePopulatorRequest::unsafe_arena_set_allocated_populator_id(
    std::string* populator_id) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (populator_id != nullptr) {
    
  } else {
    
  }
  populator_id_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      populator_id, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.custom_dimension.v202411alpha1.UpdatePopulatorRequest.populator_id)
}

// .kentik.custom_dimension.v202411alpha1.Populator populator = 3[json_name = "populator"];
inline bool UpdatePopulatorRequest::_internal_has_populator() const {
  return this != internal_default_instance() && populator_ != nullptr;
}
inline bool UpdatePopulatorRequest::has_populator() const {
  return _internal_has_populator();
}
inline void UpdatePopulatorRequest::clear_populator() {
  if (GetArena() == nullptr && populator_ != nullptr) {
    delete populator_;
  }
  populator_ = nullptr;
}
inline const ::kentik::custom_dimension::v202411alpha1::Populator& UpdatePopulatorRequest::_internal_populator() const {
  const ::kentik::custom_dimension::v202411alpha1::Populator* p = populator_;
  return p != nullptr ? *p : *reinterpret_cast<const ::kentik::custom_dimension::v202411alpha1::Populator*>(
      &::kentik::custom_dimension::v202411alpha1::_Populator_default_instance_);
}
inline const ::kentik::custom_dimension::v202411alpha1::Populator& UpdatePopulatorRequest::populator() const {
  // @@protoc_insertion_point(field_get:kentik.custom_dimension.v202411alpha1.UpdatePopulatorRequest.populator)
  return _internal_populator();
}
inline void UpdatePopulatorRequest::unsafe_arena_set_allocated_populator(
    ::kentik::custom_dimension::v202411alpha1::Populator* populator) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(populator_);
  }
  populator_ = populator;
  if (populator) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.custom_dimension.v202411alpha1.UpdatePopulatorRequest.populator)
}
inline ::kentik::custom_dimension::v202411alpha1::Populator* UpdatePopulatorRequest::release_populator() {
  auto temp = unsafe_arena_release_populator();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::kentik::custom_dimension::v202411alpha1::Populator* UpdatePopulatorRequest::unsafe_arena_release_populator() {
  // @@protoc_insertion_point(field_release:kentik.custom_dimension.v202411alpha1.UpdatePopulatorRequest.populator)
  
  ::kentik::custom_dimension::v202411alpha1::Populator* temp = populator_;
  populator_ = nullptr;
  return temp;
}
inline ::kentik::custom_dimension::v202411alpha1::Populator* UpdatePopulatorRequest::_internal_mutable_populator() {
  
  if (populator_ == nullptr) {
    auto* p = CreateMaybeMessage<::kentik::custom_dimension::v202411alpha1::Populator>(GetArena());
    populator_ = p;
  }
  return populator_;
}
inline ::kentik::custom_dimension::v202411alpha1::Populator* UpdatePopulatorRequest::mutable_populator() {
  // @@protoc_insertion_point(field_mutable:kentik.custom_dimension.v202411alpha1.UpdatePopulatorRequest.populator)
  return _internal_mutable_populator();
}
inline void UpdatePopulatorRequest::set_allocated_populator(::kentik::custom_dimension::v202411alpha1::Populator* populator) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete populator_;
  }
  if (populator) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(populator);
    if (message_arena != submessage_arena) {
      populator = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, populator, submessage_arena);
    }
    
  } else {
    
  }
  populator_ = populator;
  // @@protoc_insertion_point(field_set_allocated:kentik.custom_dimension.v202411alpha1.UpdatePopulatorRequest.populator)
}

// -------------------------------------------------------------------

// UpdatePopulatorResponse

// .kentik.custom_dimension.v202411alpha1.Populator populator = 1[json_name = "populator"];
inline bool UpdatePopulatorResponse::_internal_has_populator() const {
  return this != internal_default_instance() && populator_ != nullptr;
}
inline bool UpdatePopulatorResponse::has_populator() const {
  return _internal_has_populator();
}
inline void UpdatePopulatorResponse::clear_populator() {
  if (GetArena() == nullptr && populator_ != nullptr) {
    delete populator_;
  }
  populator_ = nullptr;
}
inline const ::kentik::custom_dimension::v202411alpha1::Populator& UpdatePopulatorResponse::_internal_populator() const {
  const ::kentik::custom_dimension::v202411alpha1::Populator* p = populator_;
  return p != nullptr ? *p : *reinterpret_cast<const ::kentik::custom_dimension::v202411alpha1::Populator*>(
      &::kentik::custom_dimension::v202411alpha1::_Populator_default_instance_);
}
inline const ::kentik::custom_dimension::v202411alpha1::Populator& UpdatePopulatorResponse::populator() const {
  // @@protoc_insertion_point(field_get:kentik.custom_dimension.v202411alpha1.UpdatePopulatorResponse.populator)
  return _internal_populator();
}
inline void UpdatePopulatorResponse::unsafe_arena_set_allocated_populator(
    ::kentik::custom_dimension::v202411alpha1::Populator* populator) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(populator_);
  }
  populator_ = populator;
  if (populator) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.custom_dimension.v202411alpha1.UpdatePopulatorResponse.populator)
}
inline ::kentik::custom_dimension::v202411alpha1::Populator* UpdatePopulatorResponse::release_populator() {
  auto temp = unsafe_arena_release_populator();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::kentik::custom_dimension::v202411alpha1::Populator* UpdatePopulatorResponse::unsafe_arena_release_populator() {
  // @@protoc_insertion_point(field_release:kentik.custom_dimension.v202411alpha1.UpdatePopulatorResponse.populator)
  
  ::kentik::custom_dimension::v202411alpha1::Populator* temp = populator_;
  populator_ = nullptr;
  return temp;
}
inline ::kentik::custom_dimension::v202411alpha1::Populator* UpdatePopulatorResponse::_internal_mutable_populator() {
  
  if (populator_ == nullptr) {
    auto* p = CreateMaybeMessage<::kentik::custom_dimension::v202411alpha1::Populator>(GetArena());
    populator_ = p;
  }
  return populator_;
}
inline ::kentik::custom_dimension::v202411alpha1::Populator* UpdatePopulatorResponse::mutable_populator() {
  // @@protoc_insertion_point(field_mutable:kentik.custom_dimension.v202411alpha1.UpdatePopulatorResponse.populator)
  return _internal_mutable_populator();
}
inline void UpdatePopulatorResponse::set_allocated_populator(::kentik::custom_dimension::v202411alpha1::Populator* populator) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete populator_;
  }
  if (populator) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(populator);
    if (message_arena != submessage_arena) {
      populator = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, populator, submessage_arena);
    }
    
  } else {
    
  }
  populator_ = populator;
  // @@protoc_insertion_point(field_set_allocated:kentik.custom_dimension.v202411alpha1.UpdatePopulatorResponse.populator)
}

// -------------------------------------------------------------------

// DeletePopulatorRequest

// string custom_dimension_id = 1[json_name = "customDimensionId"];
inline void DeletePopulatorRequest::clear_custom_dimension_id() {
  custom_dimension_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& DeletePopulatorRequest::custom_dimension_id() const {
  // @@protoc_insertion_point(field_get:kentik.custom_dimension.v202411alpha1.DeletePopulatorRequest.custom_dimension_id)
  return _internal_custom_dimension_id();
}
inline void DeletePopulatorRequest::set_custom_dimension_id(const std::string& value) {
  _internal_set_custom_dimension_id(value);
  // @@protoc_insertion_point(field_set:kentik.custom_dimension.v202411alpha1.DeletePopulatorRequest.custom_dimension_id)
}
inline std::string* DeletePopulatorRequest::mutable_custom_dimension_id() {
  // @@protoc_insertion_point(field_mutable:kentik.custom_dimension.v202411alpha1.DeletePopulatorRequest.custom_dimension_id)
  return _internal_mutable_custom_dimension_id();
}
inline const std::string& DeletePopulatorRequest::_internal_custom_dimension_id() const {
  return custom_dimension_id_.Get();
}
inline void DeletePopulatorRequest::_internal_set_custom_dimension_id(const std::string& value) {
  
  custom_dimension_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void DeletePopulatorRequest::set_custom_dimension_id(std::string&& value) {
  
  custom_dimension_id_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:kentik.custom_dimension.v202411alpha1.DeletePopulatorRequest.custom_dimension_id)
}
inline void DeletePopulatorRequest::set_custom_dimension_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  custom_dimension_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:kentik.custom_dimension.v202411alpha1.DeletePopulatorRequest.custom_dimension_id)
}
inline void DeletePopulatorRequest::set_custom_dimension_id(const char* value,
    size_t size) {
  
  custom_dimension_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:kentik.custom_dimension.v202411alpha1.DeletePopulatorRequest.custom_dimension_id)
}
inline std::string* DeletePopulatorRequest::_internal_mutable_custom_dimension_id() {
  
  return custom_dimension_id_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* DeletePopulatorRequest::release_custom_dimension_id() {
  // @@protoc_insertion_point(field_release:kentik.custom_dimension.v202411alpha1.DeletePopulatorRequest.custom_dimension_id)
  return custom_dimension_id_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void DeletePopulatorRequest::set_allocated_custom_dimension_id(std::string* custom_dimension_id) {
  if (custom_dimension_id != nullptr) {
    
  } else {
    
  }
  custom_dimension_id_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), custom_dimension_id,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:kentik.custom_dimension.v202411alpha1.DeletePopulatorRequest.custom_dimension_id)
}
inline std::string* DeletePopulatorRequest::unsafe_arena_release_custom_dimension_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:kentik.custom_dimension.v202411alpha1.DeletePopulatorRequest.custom_dimension_id)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return custom_dimension_id_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void DeletePopulatorRequest::unsafe_arena_set_allocated_custom_dimension_id(
    std::string* custom_dimension_id) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (custom_dimension_id != nullptr) {
    
  } else {
    
  }
  custom_dimension_id_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      custom_dimension_id, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.custom_dimension.v202411alpha1.DeletePopulatorRequest.custom_dimension_id)
}

// string populator_id = 2[json_name = "populatorId"];
inline void DeletePopulatorRequest::clear_populator_id() {
  populator_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& DeletePopulatorRequest::populator_id() const {
  // @@protoc_insertion_point(field_get:kentik.custom_dimension.v202411alpha1.DeletePopulatorRequest.populator_id)
  return _internal_populator_id();
}
inline void DeletePopulatorRequest::set_populator_id(const std::string& value) {
  _internal_set_populator_id(value);
  // @@protoc_insertion_point(field_set:kentik.custom_dimension.v202411alpha1.DeletePopulatorRequest.populator_id)
}
inline std::string* DeletePopulatorRequest::mutable_populator_id() {
  // @@protoc_insertion_point(field_mutable:kentik.custom_dimension.v202411alpha1.DeletePopulatorRequest.populator_id)
  return _internal_mutable_populator_id();
}
inline const std::string& DeletePopulatorRequest::_internal_populator_id() const {
  return populator_id_.Get();
}
inline void DeletePopulatorRequest::_internal_set_populator_id(const std::string& value) {
  
  populator_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void DeletePopulatorRequest::set_populator_id(std::string&& value) {
  
  populator_id_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:kentik.custom_dimension.v202411alpha1.DeletePopulatorRequest.populator_id)
}
inline void DeletePopulatorRequest::set_populator_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  populator_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:kentik.custom_dimension.v202411alpha1.DeletePopulatorRequest.populator_id)
}
inline void DeletePopulatorRequest::set_populator_id(const char* value,
    size_t size) {
  
  populator_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:kentik.custom_dimension.v202411alpha1.DeletePopulatorRequest.populator_id)
}
inline std::string* DeletePopulatorRequest::_internal_mutable_populator_id() {
  
  return populator_id_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* DeletePopulatorRequest::release_populator_id() {
  // @@protoc_insertion_point(field_release:kentik.custom_dimension.v202411alpha1.DeletePopulatorRequest.populator_id)
  return populator_id_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void DeletePopulatorRequest::set_allocated_populator_id(std::string* populator_id) {
  if (populator_id != nullptr) {
    
  } else {
    
  }
  populator_id_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), populator_id,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:kentik.custom_dimension.v202411alpha1.DeletePopulatorRequest.populator_id)
}
inline std::string* DeletePopulatorRequest::unsafe_arena_release_populator_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:kentik.custom_dimension.v202411alpha1.DeletePopulatorRequest.populator_id)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return populator_id_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void DeletePopulatorRequest::unsafe_arena_set_allocated_populator_id(
    std::string* populator_id) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (populator_id != nullptr) {
    
  } else {
    
  }
  populator_id_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      populator_id, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.custom_dimension.v202411alpha1.DeletePopulatorRequest.populator_id)
}

// -------------------------------------------------------------------

// DeletePopulatorResponse

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v202411alpha1
}  // namespace custom_dimension
}  // namespace kentik

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto
