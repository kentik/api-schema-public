// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: kentik/custom_dimension/v202411alpha1/custom_dimension.proto

#include "kentik/custom_dimension/v202411alpha1/custom_dimension.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2ftimestamp_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_CustomDimension_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Populator_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto;
namespace kentik {
namespace custom_dimension {
namespace v202411alpha1 {
class CustomDimensionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CustomDimension> _instance;
} _CustomDimension_default_instance_;
class PopulatorDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Populator> _instance;
} _Populator_default_instance_;
class ListCustomDimensionsRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ListCustomDimensionsRequest> _instance;
} _ListCustomDimensionsRequest_default_instance_;
class ListCustomDimensionsResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ListCustomDimensionsResponse> _instance;
} _ListCustomDimensionsResponse_default_instance_;
class GetCustomDimensionInfoRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetCustomDimensionInfoRequest> _instance;
} _GetCustomDimensionInfoRequest_default_instance_;
class GetCustomDimensionInfoResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetCustomDimensionInfoResponse> _instance;
} _GetCustomDimensionInfoResponse_default_instance_;
class CreateCustomDimensionRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateCustomDimensionRequest> _instance;
} _CreateCustomDimensionRequest_default_instance_;
class CreateCustomDimensionResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateCustomDimensionResponse> _instance;
} _CreateCustomDimensionResponse_default_instance_;
class UpdateCustomDimensionRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdateCustomDimensionRequest> _instance;
} _UpdateCustomDimensionRequest_default_instance_;
class UpdateCustomDimensionResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdateCustomDimensionResponse> _instance;
} _UpdateCustomDimensionResponse_default_instance_;
class DeleteCustomDimensionRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteCustomDimensionRequest> _instance;
} _DeleteCustomDimensionRequest_default_instance_;
class DeleteCustomDimensionResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteCustomDimensionResponse> _instance;
} _DeleteCustomDimensionResponse_default_instance_;
class CreatePopulatorRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreatePopulatorRequest> _instance;
} _CreatePopulatorRequest_default_instance_;
class CreatePopulatorResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreatePopulatorResponse> _instance;
} _CreatePopulatorResponse_default_instance_;
class UpdatePopulatorRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdatePopulatorRequest> _instance;
} _UpdatePopulatorRequest_default_instance_;
class UpdatePopulatorResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdatePopulatorResponse> _instance;
} _UpdatePopulatorResponse_default_instance_;
class DeletePopulatorRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeletePopulatorRequest> _instance;
} _DeletePopulatorRequest_default_instance_;
class DeletePopulatorResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeletePopulatorResponse> _instance;
} _DeletePopulatorResponse_default_instance_;
}  // namespace v202411alpha1
}  // namespace custom_dimension
}  // namespace kentik
static void InitDefaultsscc_info_CreateCustomDimensionRequest_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kentik::custom_dimension::v202411alpha1::_CreateCustomDimensionRequest_default_instance_;
    new (ptr) ::kentik::custom_dimension::v202411alpha1::CreateCustomDimensionRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kentik::custom_dimension::v202411alpha1::CreateCustomDimensionRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CreateCustomDimensionRequest_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_CreateCustomDimensionRequest_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto}, {
      &scc_info_CustomDimension_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto.base,}};

static void InitDefaultsscc_info_CreateCustomDimensionResponse_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kentik::custom_dimension::v202411alpha1::_CreateCustomDimensionResponse_default_instance_;
    new (ptr) ::kentik::custom_dimension::v202411alpha1::CreateCustomDimensionResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kentik::custom_dimension::v202411alpha1::CreateCustomDimensionResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CreateCustomDimensionResponse_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_CreateCustomDimensionResponse_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto}, {
      &scc_info_CustomDimension_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto.base,}};

static void InitDefaultsscc_info_CreatePopulatorRequest_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kentik::custom_dimension::v202411alpha1::_CreatePopulatorRequest_default_instance_;
    new (ptr) ::kentik::custom_dimension::v202411alpha1::CreatePopulatorRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kentik::custom_dimension::v202411alpha1::CreatePopulatorRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CreatePopulatorRequest_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_CreatePopulatorRequest_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto}, {
      &scc_info_Populator_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto.base,}};

static void InitDefaultsscc_info_CreatePopulatorResponse_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kentik::custom_dimension::v202411alpha1::_CreatePopulatorResponse_default_instance_;
    new (ptr) ::kentik::custom_dimension::v202411alpha1::CreatePopulatorResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kentik::custom_dimension::v202411alpha1::CreatePopulatorResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CreatePopulatorResponse_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_CreatePopulatorResponse_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto}, {
      &scc_info_Populator_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto.base,}};

static void InitDefaultsscc_info_CustomDimension_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kentik::custom_dimension::v202411alpha1::_CustomDimension_default_instance_;
    new (ptr) ::kentik::custom_dimension::v202411alpha1::CustomDimension();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kentik::custom_dimension::v202411alpha1::CustomDimension::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_CustomDimension_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_CustomDimension_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto}, {
      &scc_info_Populator_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto.base,
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,}};

static void InitDefaultsscc_info_DeleteCustomDimensionRequest_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kentik::custom_dimension::v202411alpha1::_DeleteCustomDimensionRequest_default_instance_;
    new (ptr) ::kentik::custom_dimension::v202411alpha1::DeleteCustomDimensionRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kentik::custom_dimension::v202411alpha1::DeleteCustomDimensionRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteCustomDimensionRequest_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteCustomDimensionRequest_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto}, {}};

static void InitDefaultsscc_info_DeleteCustomDimensionResponse_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kentik::custom_dimension::v202411alpha1::_DeleteCustomDimensionResponse_default_instance_;
    new (ptr) ::kentik::custom_dimension::v202411alpha1::DeleteCustomDimensionResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kentik::custom_dimension::v202411alpha1::DeleteCustomDimensionResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteCustomDimensionResponse_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteCustomDimensionResponse_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto}, {}};

static void InitDefaultsscc_info_DeletePopulatorRequest_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kentik::custom_dimension::v202411alpha1::_DeletePopulatorRequest_default_instance_;
    new (ptr) ::kentik::custom_dimension::v202411alpha1::DeletePopulatorRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kentik::custom_dimension::v202411alpha1::DeletePopulatorRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeletePopulatorRequest_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeletePopulatorRequest_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto}, {}};

static void InitDefaultsscc_info_DeletePopulatorResponse_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kentik::custom_dimension::v202411alpha1::_DeletePopulatorResponse_default_instance_;
    new (ptr) ::kentik::custom_dimension::v202411alpha1::DeletePopulatorResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kentik::custom_dimension::v202411alpha1::DeletePopulatorResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeletePopulatorResponse_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeletePopulatorResponse_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto}, {}};

static void InitDefaultsscc_info_GetCustomDimensionInfoRequest_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kentik::custom_dimension::v202411alpha1::_GetCustomDimensionInfoRequest_default_instance_;
    new (ptr) ::kentik::custom_dimension::v202411alpha1::GetCustomDimensionInfoRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kentik::custom_dimension::v202411alpha1::GetCustomDimensionInfoRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetCustomDimensionInfoRequest_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetCustomDimensionInfoRequest_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto}, {}};

static void InitDefaultsscc_info_GetCustomDimensionInfoResponse_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kentik::custom_dimension::v202411alpha1::_GetCustomDimensionInfoResponse_default_instance_;
    new (ptr) ::kentik::custom_dimension::v202411alpha1::GetCustomDimensionInfoResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kentik::custom_dimension::v202411alpha1::GetCustomDimensionInfoResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetCustomDimensionInfoResponse_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetCustomDimensionInfoResponse_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto}, {
      &scc_info_CustomDimension_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto.base,}};

static void InitDefaultsscc_info_ListCustomDimensionsRequest_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kentik::custom_dimension::v202411alpha1::_ListCustomDimensionsRequest_default_instance_;
    new (ptr) ::kentik::custom_dimension::v202411alpha1::ListCustomDimensionsRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kentik::custom_dimension::v202411alpha1::ListCustomDimensionsRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ListCustomDimensionsRequest_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ListCustomDimensionsRequest_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto}, {}};

static void InitDefaultsscc_info_ListCustomDimensionsResponse_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kentik::custom_dimension::v202411alpha1::_ListCustomDimensionsResponse_default_instance_;
    new (ptr) ::kentik::custom_dimension::v202411alpha1::ListCustomDimensionsResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kentik::custom_dimension::v202411alpha1::ListCustomDimensionsResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ListCustomDimensionsResponse_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ListCustomDimensionsResponse_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto}, {
      &scc_info_CustomDimension_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto.base,}};

static void InitDefaultsscc_info_Populator_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kentik::custom_dimension::v202411alpha1::_Populator_default_instance_;
    new (ptr) ::kentik::custom_dimension::v202411alpha1::Populator();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kentik::custom_dimension::v202411alpha1::Populator::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Populator_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Populator_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto}, {
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,}};

static void InitDefaultsscc_info_UpdateCustomDimensionRequest_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kentik::custom_dimension::v202411alpha1::_UpdateCustomDimensionRequest_default_instance_;
    new (ptr) ::kentik::custom_dimension::v202411alpha1::UpdateCustomDimensionRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kentik::custom_dimension::v202411alpha1::UpdateCustomDimensionRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_UpdateCustomDimensionRequest_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_UpdateCustomDimensionRequest_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto}, {
      &scc_info_CustomDimension_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto.base,}};

static void InitDefaultsscc_info_UpdateCustomDimensionResponse_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kentik::custom_dimension::v202411alpha1::_UpdateCustomDimensionResponse_default_instance_;
    new (ptr) ::kentik::custom_dimension::v202411alpha1::UpdateCustomDimensionResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kentik::custom_dimension::v202411alpha1::UpdateCustomDimensionResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_UpdateCustomDimensionResponse_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_UpdateCustomDimensionResponse_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto}, {
      &scc_info_CustomDimension_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto.base,}};

static void InitDefaultsscc_info_UpdatePopulatorRequest_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kentik::custom_dimension::v202411alpha1::_UpdatePopulatorRequest_default_instance_;
    new (ptr) ::kentik::custom_dimension::v202411alpha1::UpdatePopulatorRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kentik::custom_dimension::v202411alpha1::UpdatePopulatorRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_UpdatePopulatorRequest_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_UpdatePopulatorRequest_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto}, {
      &scc_info_Populator_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto.base,}};

static void InitDefaultsscc_info_UpdatePopulatorResponse_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kentik::custom_dimension::v202411alpha1::_UpdatePopulatorResponse_default_instance_;
    new (ptr) ::kentik::custom_dimension::v202411alpha1::UpdatePopulatorResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kentik::custom_dimension::v202411alpha1::UpdatePopulatorResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_UpdatePopulatorResponse_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_UpdatePopulatorResponse_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto}, {
      &scc_info_Populator_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto[18];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kentik::custom_dimension::v202411alpha1::CustomDimension, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kentik::custom_dimension::v202411alpha1::CustomDimension, id_),
  PROTOBUF_FIELD_OFFSET(::kentik::custom_dimension::v202411alpha1::CustomDimension, name_),
  PROTOBUF_FIELD_OFFSET(::kentik::custom_dimension::v202411alpha1::CustomDimension, type_),
  PROTOBUF_FIELD_OFFSET(::kentik::custom_dimension::v202411alpha1::CustomDimension, description_),
  PROTOBUF_FIELD_OFFSET(::kentik::custom_dimension::v202411alpha1::CustomDimension, populators_),
  PROTOBUF_FIELD_OFFSET(::kentik::custom_dimension::v202411alpha1::CustomDimension, company_id_),
  PROTOBUF_FIELD_OFFSET(::kentik::custom_dimension::v202411alpha1::CustomDimension, created_date_),
  PROTOBUF_FIELD_OFFSET(::kentik::custom_dimension::v202411alpha1::CustomDimension, updated_date_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kentik::custom_dimension::v202411alpha1::Populator, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kentik::custom_dimension::v202411alpha1::Populator, id_),
  PROTOBUF_FIELD_OFFSET(::kentik::custom_dimension::v202411alpha1::Populator, value_),
  PROTOBUF_FIELD_OFFSET(::kentik::custom_dimension::v202411alpha1::Populator, direction_),
  PROTOBUF_FIELD_OFFSET(::kentik::custom_dimension::v202411alpha1::Populator, device_name_),
  PROTOBUF_FIELD_OFFSET(::kentik::custom_dimension::v202411alpha1::Populator, device_type_),
  PROTOBUF_FIELD_OFFSET(::kentik::custom_dimension::v202411alpha1::Populator, site_),
  PROTOBUF_FIELD_OFFSET(::kentik::custom_dimension::v202411alpha1::Populator, interface_name_),
  PROTOBUF_FIELD_OFFSET(::kentik::custom_dimension::v202411alpha1::Populator, addr_),
  PROTOBUF_FIELD_OFFSET(::kentik::custom_dimension::v202411alpha1::Populator, port_),
  PROTOBUF_FIELD_OFFSET(::kentik::custom_dimension::v202411alpha1::Populator, tcp_flags_),
  PROTOBUF_FIELD_OFFSET(::kentik::custom_dimension::v202411alpha1::Populator, protocol_),
  PROTOBUF_FIELD_OFFSET(::kentik::custom_dimension::v202411alpha1::Populator, asn_),
  PROTOBUF_FIELD_OFFSET(::kentik::custom_dimension::v202411alpha1::Populator, lasthop_as_name_),
  PROTOBUF_FIELD_OFFSET(::kentik::custom_dimension::v202411alpha1::Populator, nexthop_asn_),
  PROTOBUF_FIELD_OFFSET(::kentik::custom_dimension::v202411alpha1::Populator, nexthop_as_name_),
  PROTOBUF_FIELD_OFFSET(::kentik::custom_dimension::v202411alpha1::Populator, nexthop_),
  PROTOBUF_FIELD_OFFSET(::kentik::custom_dimension::v202411alpha1::Populator, bgp_aspath_),
  PROTOBUF_FIELD_OFFSET(::kentik::custom_dimension::v202411alpha1::Populator, bgp_community_),
  PROTOBUF_FIELD_OFFSET(::kentik::custom_dimension::v202411alpha1::Populator, mac_),
  PROTOBUF_FIELD_OFFSET(::kentik::custom_dimension::v202411alpha1::Populator, country_),
  PROTOBUF_FIELD_OFFSET(::kentik::custom_dimension::v202411alpha1::Populator, vlans_),
  PROTOBUF_FIELD_OFFSET(::kentik::custom_dimension::v202411alpha1::Populator, user_),
  PROTOBUF_FIELD_OFFSET(::kentik::custom_dimension::v202411alpha1::Populator, created_date_),
  PROTOBUF_FIELD_OFFSET(::kentik::custom_dimension::v202411alpha1::Populator, updated_date_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kentik::custom_dimension::v202411alpha1::ListCustomDimensionsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kentik::custom_dimension::v202411alpha1::ListCustomDimensionsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kentik::custom_dimension::v202411alpha1::ListCustomDimensionsResponse, dimensions_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kentik::custom_dimension::v202411alpha1::GetCustomDimensionInfoRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kentik::custom_dimension::v202411alpha1::GetCustomDimensionInfoRequest, custom_dimension_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kentik::custom_dimension::v202411alpha1::GetCustomDimensionInfoResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kentik::custom_dimension::v202411alpha1::GetCustomDimensionInfoResponse, dimension_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kentik::custom_dimension::v202411alpha1::CreateCustomDimensionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kentik::custom_dimension::v202411alpha1::CreateCustomDimensionRequest, dimension_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kentik::custom_dimension::v202411alpha1::CreateCustomDimensionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kentik::custom_dimension::v202411alpha1::CreateCustomDimensionResponse, dimension_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kentik::custom_dimension::v202411alpha1::UpdateCustomDimensionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kentik::custom_dimension::v202411alpha1::UpdateCustomDimensionRequest, custom_dimension_id_),
  PROTOBUF_FIELD_OFFSET(::kentik::custom_dimension::v202411alpha1::UpdateCustomDimensionRequest, dimension_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kentik::custom_dimension::v202411alpha1::UpdateCustomDimensionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kentik::custom_dimension::v202411alpha1::UpdateCustomDimensionResponse, dimension_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kentik::custom_dimension::v202411alpha1::DeleteCustomDimensionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kentik::custom_dimension::v202411alpha1::DeleteCustomDimensionRequest, custom_dimension_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kentik::custom_dimension::v202411alpha1::DeleteCustomDimensionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kentik::custom_dimension::v202411alpha1::CreatePopulatorRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kentik::custom_dimension::v202411alpha1::CreatePopulatorRequest, custom_dimension_id_),
  PROTOBUF_FIELD_OFFSET(::kentik::custom_dimension::v202411alpha1::CreatePopulatorRequest, populator_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kentik::custom_dimension::v202411alpha1::CreatePopulatorResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kentik::custom_dimension::v202411alpha1::CreatePopulatorResponse, populator_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kentik::custom_dimension::v202411alpha1::UpdatePopulatorRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kentik::custom_dimension::v202411alpha1::UpdatePopulatorRequest, custom_dimension_id_),
  PROTOBUF_FIELD_OFFSET(::kentik::custom_dimension::v202411alpha1::UpdatePopulatorRequest, populator_id_),
  PROTOBUF_FIELD_OFFSET(::kentik::custom_dimension::v202411alpha1::UpdatePopulatorRequest, populator_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kentik::custom_dimension::v202411alpha1::UpdatePopulatorResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kentik::custom_dimension::v202411alpha1::UpdatePopulatorResponse, populator_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kentik::custom_dimension::v202411alpha1::DeletePopulatorRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kentik::custom_dimension::v202411alpha1::DeletePopulatorRequest, custom_dimension_id_),
  PROTOBUF_FIELD_OFFSET(::kentik::custom_dimension::v202411alpha1::DeletePopulatorRequest, populator_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kentik::custom_dimension::v202411alpha1::DeletePopulatorResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::kentik::custom_dimension::v202411alpha1::CustomDimension)},
  { 13, -1, sizeof(::kentik::custom_dimension::v202411alpha1::Populator)},
  { 42, -1, sizeof(::kentik::custom_dimension::v202411alpha1::ListCustomDimensionsRequest)},
  { 47, -1, sizeof(::kentik::custom_dimension::v202411alpha1::ListCustomDimensionsResponse)},
  { 53, -1, sizeof(::kentik::custom_dimension::v202411alpha1::GetCustomDimensionInfoRequest)},
  { 59, -1, sizeof(::kentik::custom_dimension::v202411alpha1::GetCustomDimensionInfoResponse)},
  { 65, -1, sizeof(::kentik::custom_dimension::v202411alpha1::CreateCustomDimensionRequest)},
  { 71, -1, sizeof(::kentik::custom_dimension::v202411alpha1::CreateCustomDimensionResponse)},
  { 77, -1, sizeof(::kentik::custom_dimension::v202411alpha1::UpdateCustomDimensionRequest)},
  { 84, -1, sizeof(::kentik::custom_dimension::v202411alpha1::UpdateCustomDimensionResponse)},
  { 90, -1, sizeof(::kentik::custom_dimension::v202411alpha1::DeleteCustomDimensionRequest)},
  { 96, -1, sizeof(::kentik::custom_dimension::v202411alpha1::DeleteCustomDimensionResponse)},
  { 101, -1, sizeof(::kentik::custom_dimension::v202411alpha1::CreatePopulatorRequest)},
  { 108, -1, sizeof(::kentik::custom_dimension::v202411alpha1::CreatePopulatorResponse)},
  { 114, -1, sizeof(::kentik::custom_dimension::v202411alpha1::UpdatePopulatorRequest)},
  { 122, -1, sizeof(::kentik::custom_dimension::v202411alpha1::UpdatePopulatorResponse)},
  { 128, -1, sizeof(::kentik::custom_dimension::v202411alpha1::DeletePopulatorRequest)},
  { 135, -1, sizeof(::kentik::custom_dimension::v202411alpha1::DeletePopulatorResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::kentik::custom_dimension::v202411alpha1::_CustomDimension_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::kentik::custom_dimension::v202411alpha1::_Populator_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::kentik::custom_dimension::v202411alpha1::_ListCustomDimensionsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::kentik::custom_dimension::v202411alpha1::_ListCustomDimensionsResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::kentik::custom_dimension::v202411alpha1::_GetCustomDimensionInfoRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::kentik::custom_dimension::v202411alpha1::_GetCustomDimensionInfoResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::kentik::custom_dimension::v202411alpha1::_CreateCustomDimensionRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::kentik::custom_dimension::v202411alpha1::_CreateCustomDimensionResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::kentik::custom_dimension::v202411alpha1::_UpdateCustomDimensionRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::kentik::custom_dimension::v202411alpha1::_UpdateCustomDimensionResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::kentik::custom_dimension::v202411alpha1::_DeleteCustomDimensionRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::kentik::custom_dimension::v202411alpha1::_DeleteCustomDimensionResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::kentik::custom_dimension::v202411alpha1::_CreatePopulatorRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::kentik::custom_dimension::v202411alpha1::_CreatePopulatorResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::kentik::custom_dimension::v202411alpha1::_UpdatePopulatorRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::kentik::custom_dimension::v202411alpha1::_UpdatePopulatorResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::kentik::custom_dimension::v202411alpha1::_DeletePopulatorRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::kentik::custom_dimension::v202411alpha1::_DeletePopulatorResponse_default_instance_),
};

const char descriptor_table_protodef_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n<kentik/custom_dimension/v202411alpha1/"
  "custom_dimension.proto\022%kentik.custom_di"
  "mension.v202411alpha1\032\034google/api/annota"
  "tions.proto\032\027google/api/client.proto\032\037go"
  "ogle/api/field_behavior.proto\032\037google/pr"
  "otobuf/timestamp.proto\032.protoc-gen-opena"
  "piv2/options/annotations.proto\032%kentik/c"
  "ore/v202303/annotations.proto\032\036kentik/us"
  "er/v202211/user.proto\"\343\007\n\017CustomDimensio"
  "n\022D\n\002id\030\001 \001(\rB4\222A-2+Unique identifier fo"
  "r the custom dimension.\342A\001\003R\002id\022\245\001\n\004name"
  "\030\002 \001(\tB\220\001\222A\210\0012\205\001The name of the custom d"
  "imension. Must start with \'c_\'. Valid ch"
  "aracters: alphanumeric dashes and unders"
  "cores. Length: min=1, max=20.\342A\001\002R\004name\022"
  "^\n\004type\030\003 \001(\tBJ\222AC2AType of the custom d"
  "imension (valid values: \'string\' or \'uin"
  "t32\')\342A\001\002R\004type\022\265\001\n\013description\030\004 \001(\tB\222\001"
  "\222A\212\0012\207\001The name to be displayed of the c"
  "ustom dimension. Valid characters: alpha"
  "numeric spaces, dashes and underscores. "
  "Length: min=2, max=30.\342A\001\002R\013description\022"
  "\214\001\n\npopulators\030\005 \003(\01320.kentik.custom_dim"
  "ension.v202411alpha1.PopulatorB:\222A321Pop"
  "ulators associated with this custom dime"
  "nsion.\342A\001\003R\npopulators\022O\n\ncompany_id\030\006 \001"
  "(\rB0\222A)2\'The system-assigned ID of the c"
  "ustomer.\342A\001\003R\tcompanyId\022p\n\014created_date\030"
  "\007 \001(\0132\032.google.protobuf.TimestampB1\222A*2("
  "Date-time of populator creation, in UTC."
  "\342A\001\003R\013createdDate\022x\n\014updated_date\030\010 \001(\0132"
  "\032.google.protobuf.TimestampB9\222A220Date-t"
  "ime of most-recent populator edit, in UT"
  "C.\342A\001\003R\013updatedDate\"\265%\n\tPopulator\022=\n\002id\030"
  "\001 \001(\rB-\222A&2$Unique identifier for the po"
  "pulator.\342A\001\003R\002id\022\224\002\n\005value\030\002 \001(\tB\375\001\222A\371\0012"
  "\366\001The value of the dimension. When the c"
  "ustom dimension\'s type is \'string\' - Val"
  "id characters: alphanumeric, spaces, das"
  "hes and underscores. Length: min=1, max="
  "128. When the custom dimension\'s type is"
  " \'uint32\' - Valid values: min=0, max=429"
  "4967295.R\005value\022k\n\tdirection\030\003 \001(\tBM\222AJ2"
  "HThe direction of the populator. Valid v"
  "alues: \'src\', \'dst\', or \'either\'.R\tdirec"
  "tion\022\324\001\n\013device_name\030\004 \003(\tB\262\001\222A\256\0012\253\001Devi"
  "ce names, IPs, or regular expressions. A"
  " match results when any specified device"
  " name matches the device name or IP addr"
  "ess associated with a device sending flo"
  "w data.R\ndeviceName\022\300\001\n\013device_type\030\005 \003("
  "\tB\236\001\222A\232\0012\227\001Device types or regular expre"
  "ssions. A match results when any specifi"
  "ed device type matches the device_type a"
  "ssociated with a device sending flow dat"
  "a.R\ndeviceType\022\243\001\n\004site\030\006 \003(\tB\216\001\222A\212\0012\207\001S"
  "ite names or regular expressions. A matc"
  "h results when any specified site matche"
  "s the site associated with a device send"
  "ing flow data.R\004site\022\313\001\n\016interface_name\030"
  "\007 \003(\tB\243\001\222A\237\0012\234\001Interface names or regula"
  "r expressions. A match results when any "
  "specified interface name matches the nam"
  "e or description of an interface sending"
  " flow data.R\rinterfaceName\022\372\003\n\004addr\030\010 \003("
  "\tB\345\003\222A\341\0032\336\003IP addresses in IP/CIDR forma"
  "t. A match results when any specified IP"
  " address corresponds to a range of IP ad"
  "dresses in incoming flow. It allows IPv6"
  " CIDRs. \'short form\' (e.g. 1::2/127) is "
  "allowed. If no CIDRs are specified in a "
  "tag, the tag will be matched against bot"
  "h incoming IPv4 and v6 flows. If CIDRs a"
  "re given, the tag will only be matched a"
  "gainst the given type of flow; in partic"
  "ular, if you only give IPv4 CIDRs, the t"
  "ag will not match any IPv6 flows, and vi"
  "ce versa.R\004addr\022\205\001\n\004port\030\t \003(\rBq\222An2lPor"
  "ts (between 0 and 65535). A match result"
  "s when any specified port matches a port"
  " number in incoming flow.R\004port\022\374\001\n\ttcp_"
  "flags\030\n \001(\rB\336\001\222A\332\0012\327\001TCP flag: Numbers b"
  "etween 0 and 255 representing an 8-bit b"
  "inary bit pattern corresponding to TCP f"
  "lags. A match will result if the value i"
  "n both the flow bit pattern and the bitm"
  "ask is 1 at any of the eight places.R\010tc"
  "pFlags\022\300\001\n\010protocol\030\013 \003(\rB\243\001\222A\237\0012\234\001Proto"
  "col numbers (between 0 and 255). A match"
  " results when any specified protocol num"
  "ber is the same as the protocol of the t"
  "raffic represented by the flow.R\010protoco"
  "l\022\364\001\n\003asn\030\014 \003(\rB\341\001\222A\335\0012\332\001Last-hop (origi"
  "n) ASN: ASNs (between 1 and 2^32-1=42949"
  "67295). A match results when any specifi"
  "ed ASN is the same as the last ASN in th"
  "e path in the routing table for either t"
  "he source (SRC IP) or destination (DST I"
  "P).R\003asn\022\241\002\n\017lasthop_as_name\030\r \003(\tB\370\001\222A\364"
  "\0012\361\001Last-hop (origin) AS Name: AS Names "
  "or regular expressions. A match results "
  "when any specified AS Name represents th"
  "e name corresponding to the last ASN in "
  "the path in the routing table for either"
  " the source (SRC IP) or destination (DST"
  " IP).R\rlasthopAsName\022\232\001\n\013nexthop_asn\030\016 \003"
  "(\rBy\222Av2tNext-hop ASN. A match results w"
  "hen any specified ASN is the same as the"
  " ASN of the next hop router based on AS "
  "path.R\nnexthopAsn\022\337\001\n\017nexthop_as_name\030\017 "
  "\003(\tB\266\001\222A\262\0012\257\001Next-hop AS Name: AS Names "
  "or regular expressions. A match results "
  "when any specified ASN represents the na"
  "me corresponding to the ASN of the next "
  "hop router based on AS path.R\rnexthopAsN"
  "ame\022\243\001\n\007nexthop\030\020 \003(\tB\210\001\222A\204\0012\201\001Next-hop "
  "IP: IPv4 and/or IPv6 CIDRs. A match resu"
  "lts when any specified IP is within a ra"
  "nge of specified IPv4 and/or IPv6 CIDRs."
  "R\007nexthop\022\273\002\n\nbgp_aspath\030\021 \003(\tB\233\002\222A\227\0022\224\002"
  "BGP AS path: Numbers representing bgp as"
  "path. A match results when any specified"
  " value is the same as the BGP AS-PATH in"
  " the route. Example: \'^3737 1212,_7801_,"
  "2906$\' would look for any of those 3 com"
  "binations in the AS path. Permitted char"
  "acters []*:_^$.0123456789()+\?,space-R\tbg"
  "pAspath\022\270\002\n\rbgp_community\030\022 \003(\tB\222\002\222A\216\0022\213"
  "\002BGP community: Numbers or regular expre"
  "ssion representing BGP community (i.e. 2"
  "096:2212). A match results when any spec"
  "ified value is the same as the BGP commu"
  "nity of the BGP route associated with in"
  "coming flow data. Permitted characters ["
  "]*:_^$.0123456789()+\?,space-R\014bgpCommuni"
  "ty\022\211\001\n\003mac\030\023 \003(\tBw\222At2rMAC Addresses. A "
  "match results when any specified MAC Add"
  "ress matches source or destination Ether"
  "net (L2) address.R\003mac\022\252\001\n\007country\030\024 \003(\t"
  "B\217\001\222A\213\0012\210\001Country: Two-character country"
  " codes. A match results when any specifi"
  "ed country code matches source or destin"
  "ation country of the flow.R\007country\022V\n\005v"
  "lans\030\025 \003(\tB@\222A=2;VLAN(s): Integers or ra"
  "nges of integers between 0 and 4095.R\005vl"
  "ans\022Z\n\004user\030\026 \001(\tBF\222A\?2=The system-assig"
  "ned ID of the user who created the popul"
  "ator.\342A\001\003R\004user\022p\n\014created_date\030\027 \001(\0132\032."
  "google.protobuf.TimestampB1\222A*2(Date-tim"
  "e of populator creation, in UTC.\342A\001\003R\013cr"
  "eatedDate\022x\n\014updated_date\030\030 \001(\0132\032.google"
  ".protobuf.TimestampB9\222A220Date-time of m"
  "ost-recent populator edit, in UTC.\342A\001\003R\013"
  "updatedDate\"\035\n\033ListCustomDimensionsReque"
  "st\"v\n\034ListCustomDimensionsResponse\022V\n\ndi"
  "mensions\030\001 \003(\01326.kentik.custom_dimension"
  ".v202411alpha1.CustomDimensionR\ndimensio"
  "ns\"O\n\035GetCustomDimensionInfoRequest\022.\n\023c"
  "ustom_dimension_id\030\001 \001(\rR\021customDimensio"
  "nId\"v\n\036GetCustomDimensionInfoResponse\022T\n"
  "\tdimension\030\001 \001(\01326.kentik.custom_dimensi"
  "on.v202411alpha1.CustomDimensionR\tdimens"
  "ion\"t\n\034CreateCustomDimensionRequest\022T\n\td"
  "imension\030\001 \001(\01326.kentik.custom_dimension"
  ".v202411alpha1.CustomDimensionR\tdimensio"
  "n\"u\n\035CreateCustomDimensionResponse\022T\n\tdi"
  "mension\030\001 \001(\01326.kentik.custom_dimension."
  "v202411alpha1.CustomDimensionR\tdimension"
  "\"\244\001\n\034UpdateCustomDimensionRequest\022.\n\023cus"
  "tom_dimension_id\030\001 \001(\rR\021customDimensionI"
  "d\022T\n\tdimension\030\002 \001(\01326.kentik.custom_dim"
  "ension.v202411alpha1.CustomDimensionR\tdi"
  "mension\"u\n\035UpdateCustomDimensionResponse"
  "\022T\n\tdimension\030\001 \001(\01326.kentik.custom_dime"
  "nsion.v202411alpha1.CustomDimensionR\tdim"
  "ension\"N\n\034DeleteCustomDimensionRequest\022."
  "\n\023custom_dimension_id\030\001 \001(\rR\021customDimen"
  "sionId\"\037\n\035DeleteCustomDimensionResponse\""
  "\230\001\n\026CreatePopulatorRequest\022.\n\023custom_dim"
  "ension_id\030\001 \001(\rR\021customDimensionId\022N\n\tpo"
  "pulator\030\002 \001(\01320.kentik.custom_dimension."
  "v202411alpha1.PopulatorR\tpopulator\"i\n\027Cr"
  "eatePopulatorResponse\022N\n\tpopulator\030\001 \001(\013"
  "20.kentik.custom_dimension.v202411alpha1"
  ".PopulatorR\tpopulator\"\273\001\n\026UpdatePopulato"
  "rRequest\022.\n\023custom_dimension_id\030\001 \001(\rR\021c"
  "ustomDimensionId\022!\n\014populator_id\030\002 \001(\rR\013"
  "populatorId\022N\n\tpopulator\030\003 \001(\01320.kentik."
  "custom_dimension.v202411alpha1.Populator"
  "R\tpopulator\"i\n\027UpdatePopulatorResponse\022N"
  "\n\tpopulator\030\001 \001(\01320.kentik.custom_dimens"
  "ion.v202411alpha1.PopulatorR\tpopulator\"k"
  "\n\026DeletePopulatorRequest\022.\n\023custom_dimen"
  "sion_id\030\001 \001(\rR\021customDimensionId\022!\n\014popu"
  "lator_id\030\002 \001(\rR\013populatorId\"\031\n\027DeletePop"
  "ulatorResponse2\212\030\n\026CustomDimensionServic"
  "e\022\356\002\n\024ListCustomDimensions\022B.kentik.cust"
  "om_dimension.v202411alpha1.ListCustomDim"
  "ensionsRequest\032C.kentik.custom_dimension"
  ".v202411alpha1.ListCustomDimensionsRespo"
  "nse\"\314\001\222A\240\001\022\026List Custom Dimensions\032pRetu"
  "rns an array of custom dimension objects"
  " that each contain information about an "
  "individual custom dimension.*\024ListCustom"
  "Dimensions\202\323\344\223\002\"\022 /custom_dimensions/v20"
  "2411alpha1\022\371\002\n\026GetCustomDimensionInfo\022D."
  "kentik.custom_dimension.v202411alpha1.Ge"
  "tCustomDimensionInfoRequest\032E.kentik.cus"
  "tom_dimension.v202411alpha1.GetCustomDim"
  "ensionInfoResponse\"\321\001\222A\217\001\022\025Custom Dimens"
  "ion Info\032^Returns a custom dimension obj"
  "ect containing information about an indi"
  "vidual custom dimension.*\026GetCustomDimen"
  "sionInfo\202\323\344\223\0028\0226/custom_dimensions/v2024"
  "11alpha1/{custom_dimension_id}\022\352\002\n\025Creat"
  "eCustomDimension\022C.kentik.custom_dimensi"
  "on.v202411alpha1.CreateCustomDimensionRe"
  "quest\032D.kentik.custom_dimension.v202411a"
  "lpha1.CreateCustomDimensionResponse\"\305\001\222A"
  "\233\001\022\027Create Custom Dimension\032iCreates and"
  " returns a custom dimension object conta"
  "ining information about an individual cu"
  "stom dimension*\025CreateCustomDimension\202\323\344"
  "\223\002 \"\023/v1/customdimension:\tdimension\022\225\004\n\025"
  "UpdateCustomDimension\022C.kentik.custom_di"
  "mension.v202411alpha1.UpdateCustomDimens"
  "ionRequest\032D.kentik.custom_dimension.v20"
  "2411alpha1.UpdateCustomDimensionResponse"
  "\"\360\002\222A\243\002\022\027Update Custom Dimension\032\360\001Updat"
  "es and returns a custom dimension object"
  " containing information about an individ"
  "ual custom dimension (see About Custom D"
  "imensions). Populators are not sent back"
  " in the response body. To get them use \'"
  "Custom Dimension info\' API instead.*\025Upd"
  "ateCustomDimension\202\323\344\223\002C\0326/custom_dimens"
  "ions/v202411alpha1/{custom_dimension_id}"
  ":\tdimension\022\263\002\n\025DeleteCustomDimension\022C."
  "kentik.custom_dimension.v202411alpha1.De"
  "leteCustomDimensionRequest\032D.kentik.cust"
  "om_dimension.v202411alpha1.DeleteCustomD"
  "imensionResponse\"\216\001\222AM\022\027Delete Custom Di"
  "mension\032\033Deletes a custom dimension.*\025De"
  "leteCustomDimension\202\323\344\223\0028*6/custom_dimen"
  "sions/v202411alpha1/{custom_dimension_id"
  "}\022\353\002\n\017CreatePopulator\022=.kentik.custom_di"
  "mension.v202411alpha1.CreatePopulatorReq"
  "uest\032>.kentik.custom_dimension.v202411al"
  "pha1.CreatePopulatorResponse\"\330\001\222A\201\001\022\020Cre"
  "ate Populator\032\\Creates and returns a pop"
  "ulator object containing information abo"
  "ut an individual populator.*\017CreatePopul"
  "ator\202\323\344\223\002M\"@/custom_dimensions/v202411al"
  "pha1/{custom_dimension_id}/populator:\tpo"
  "pulator\022\372\002\n\017UpdatePopulator\022=.kentik.cus"
  "tom_dimension.v202411alpha1.UpdatePopula"
  "torRequest\032>.kentik.custom_dimension.v20"
  "2411alpha1.UpdatePopulatorResponse\"\347\001\222A\201"
  "\001\022\020Update Populator\032\\Updates and returns"
  " a populator object containing informati"
  "on about an individual populator.*\017Updat"
  "ePopulator\202\323\344\223\002\\\032O/custom_dimensions/v20"
  "2411alpha1/{custom_dimension_id}/populat"
  "or/{populator_id}:\tpopulator\022\246\002\n\017DeleteP"
  "opulator\022=.kentik.custom_dimension.v2024"
  "11alpha1.DeletePopulatorRequest\032>.kentik"
  ".custom_dimension.v202411alpha1.DeletePo"
  "pulatorResponse\"\223\001\222A9\022\020Delete Populator\032"
  "\024Deletes a populator.*\017DeletePopulator\202\323"
  "\344\223\002Q*O/custom_dimensions/v202411alpha1/{"
  "custom_dimension_id}/populator/{populato"
  "r_id}\0324\312A\023grpc.api.kentik.com\352\327\002\026admin.c"
  "ustom_dimension\220\330\002\003B\342\004Zagithub.com/kenti"
  "k/api-schema-public/gen/go/kentik/custom"
  "_dimension/v202411alpha1;custom_dimensio"
  "n\222A\373\003\022\352\001\n\025Custom Dimensions API\022{# Overv"
  "iew\nThe Custom Dimensions API enables pr"
  "ogrammatic access to information on Cust"
  "om Dimensions and their Populators.\n\"E\n\026"
  "Kentik API Engineering\022+https://github.c"
  "om/kentik/api-schema-public2\rv202411alph"
  "a1*\001\0022\020application/json:\020application/jso"
  "nZD\n\036\n\005email\022\025\010\002\032\017X-CH-Auth-Email \002\n\"\n\005t"
  "oken\022\031\010\002\032\023X-CH-Auth-API-Token \002b\026\n\t\n\005ema"
  "il\022\000\n\t\n\005token\022\000r\206\001\n[Knowledge base artic"
  "le outlining the purpose and usage of Cu"
  "stom Dimensions and Populators.\022\'https:/"
  "/kb.kentik.com/proto/v4/Cb06.htmb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto_deps[7] = {
  &::descriptor_table_google_2fapi_2fannotations_2eproto,
  &::descriptor_table_google_2fapi_2fclient_2eproto,
  &::descriptor_table_google_2fapi_2ffield_5fbehavior_2eproto,
  &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
  &::descriptor_table_kentik_2fcore_2fv202303_2fannotations_2eproto,
  &::descriptor_table_kentik_2fuser_2fv202211_2fuser_2eproto,
  &::descriptor_table_protoc_2dgen_2dopenapiv2_2foptions_2fannotations_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto_sccs[18] = {
  &scc_info_CreateCustomDimensionRequest_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto.base,
  &scc_info_CreateCustomDimensionResponse_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto.base,
  &scc_info_CreatePopulatorRequest_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto.base,
  &scc_info_CreatePopulatorResponse_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto.base,
  &scc_info_CustomDimension_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto.base,
  &scc_info_DeleteCustomDimensionRequest_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto.base,
  &scc_info_DeleteCustomDimensionResponse_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto.base,
  &scc_info_DeletePopulatorRequest_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto.base,
  &scc_info_DeletePopulatorResponse_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto.base,
  &scc_info_GetCustomDimensionInfoRequest_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto.base,
  &scc_info_GetCustomDimensionInfoResponse_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto.base,
  &scc_info_ListCustomDimensionsRequest_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto.base,
  &scc_info_ListCustomDimensionsResponse_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto.base,
  &scc_info_Populator_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto.base,
  &scc_info_UpdateCustomDimensionRequest_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto.base,
  &scc_info_UpdateCustomDimensionResponse_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto.base,
  &scc_info_UpdatePopulatorRequest_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto.base,
  &scc_info_UpdatePopulatorResponse_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto = {
  false, false, descriptor_table_protodef_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto, "kentik/custom_dimension/v202411alpha1/custom_dimension.proto", 11520,
  &descriptor_table_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto_once, descriptor_table_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto_sccs, descriptor_table_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto_deps, 18, 7,
  schemas, file_default_instances, TableStruct_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto::offsets,
  file_level_metadata_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto, 18, file_level_enum_descriptors_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto, file_level_service_descriptors_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto)), true);
namespace kentik {
namespace custom_dimension {
namespace v202411alpha1 {

// ===================================================================

void CustomDimension::InitAsDefaultInstance() {
  ::kentik::custom_dimension::v202411alpha1::_CustomDimension_default_instance_._instance.get_mutable()->created_date_ = const_cast< PROTOBUF_NAMESPACE_ID::Timestamp*>(
      PROTOBUF_NAMESPACE_ID::Timestamp::internal_default_instance());
  ::kentik::custom_dimension::v202411alpha1::_CustomDimension_default_instance_._instance.get_mutable()->updated_date_ = const_cast< PROTOBUF_NAMESPACE_ID::Timestamp*>(
      PROTOBUF_NAMESPACE_ID::Timestamp::internal_default_instance());
}
class CustomDimension::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Timestamp& created_date(const CustomDimension* msg);
  static const PROTOBUF_NAMESPACE_ID::Timestamp& updated_date(const CustomDimension* msg);
};

const PROTOBUF_NAMESPACE_ID::Timestamp&
CustomDimension::_Internal::created_date(const CustomDimension* msg) {
  return *msg->created_date_;
}
const PROTOBUF_NAMESPACE_ID::Timestamp&
CustomDimension::_Internal::updated_date(const CustomDimension* msg) {
  return *msg->updated_date_;
}
void CustomDimension::clear_created_date() {
  if (GetArena() == nullptr && created_date_ != nullptr) {
    delete created_date_;
  }
  created_date_ = nullptr;
}
void CustomDimension::clear_updated_date() {
  if (GetArena() == nullptr && updated_date_ != nullptr) {
    delete updated_date_;
  }
  updated_date_ = nullptr;
}
CustomDimension::CustomDimension(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  populators_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.custom_dimension.v202411alpha1.CustomDimension)
}
CustomDimension::CustomDimension(const CustomDimension& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      populators_(from.populators_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_type().empty()) {
    type_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_type(),
      GetArena());
  }
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_description().empty()) {
    description_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_description(),
      GetArena());
  }
  if (from._internal_has_created_date()) {
    created_date_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.created_date_);
  } else {
    created_date_ = nullptr;
  }
  if (from._internal_has_updated_date()) {
    updated_date_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.updated_date_);
  } else {
    updated_date_ = nullptr;
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&company_id_) -
    reinterpret_cast<char*>(&id_)) + sizeof(company_id_));
  // @@protoc_insertion_point(copy_constructor:kentik.custom_dimension.v202411alpha1.CustomDimension)
}

void CustomDimension::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CustomDimension_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&created_date_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&company_id_) -
      reinterpret_cast<char*>(&created_date_)) + sizeof(company_id_));
}

CustomDimension::~CustomDimension() {
  // @@protoc_insertion_point(destructor:kentik.custom_dimension.v202411alpha1.CustomDimension)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CustomDimension::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete created_date_;
  if (this != internal_default_instance()) delete updated_date_;
}

void CustomDimension::ArenaDtor(void* object) {
  CustomDimension* _this = reinterpret_cast< CustomDimension* >(object);
  (void)_this;
}
void CustomDimension::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CustomDimension::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CustomDimension& CustomDimension::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CustomDimension_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto.base);
  return *internal_default_instance();
}


void CustomDimension::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.custom_dimension.v202411alpha1.CustomDimension)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  populators_.Clear();
  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  type_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  description_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && created_date_ != nullptr) {
    delete created_date_;
  }
  created_date_ = nullptr;
  if (GetArena() == nullptr && updated_date_ != nullptr) {
    delete updated_date_;
  }
  updated_date_ = nullptr;
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&company_id_) -
      reinterpret_cast<char*>(&id_)) + sizeof(company_id_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CustomDimension::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 id = 1[json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 2[json_name = "name", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "kentik.custom_dimension.v202411alpha1.CustomDimension.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string type = 3[json_name = "type", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "kentik.custom_dimension.v202411alpha1.CustomDimension.type"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string description = 4[json_name = "description", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_description();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "kentik.custom_dimension.v202411alpha1.CustomDimension.description"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .kentik.custom_dimension.v202411alpha1.Populator populators = 5[json_name = "populators", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_populators(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else goto handle_unusual;
        continue;
      // uint32 company_id = 6[json_name = "companyId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          company_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp created_date = 7[json_name = "createdDate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_created_date(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp updated_date = 8[json_name = "updatedDate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_updated_date(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CustomDimension::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kentik.custom_dimension.v202411alpha1.CustomDimension)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1[json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_id(), target);
  }

  // string name = 2[json_name = "name", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "kentik.custom_dimension.v202411alpha1.CustomDimension.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // string type = 3[json_name = "type", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->type().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_type().data(), static_cast<int>(this->_internal_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "kentik.custom_dimension.v202411alpha1.CustomDimension.type");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_type(), target);
  }

  // string description = 4[json_name = "description", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->description().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "kentik.custom_dimension.v202411alpha1.CustomDimension.description");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_description(), target);
  }

  // repeated .kentik.custom_dimension.v202411alpha1.Populator populators = 5[json_name = "populators", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_populators_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, this->_internal_populators(i), target, stream);
  }

  // uint32 company_id = 6[json_name = "companyId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->company_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(6, this->_internal_company_id(), target);
  }

  // .google.protobuf.Timestamp created_date = 7[json_name = "createdDate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->has_created_date()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        7, _Internal::created_date(this), target, stream);
  }

  // .google.protobuf.Timestamp updated_date = 8[json_name = "updatedDate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->has_updated_date()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        8, _Internal::updated_date(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kentik.custom_dimension.v202411alpha1.CustomDimension)
  return target;
}

size_t CustomDimension::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kentik.custom_dimension.v202411alpha1.CustomDimension)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .kentik.custom_dimension.v202411alpha1.Populator populators = 5[json_name = "populators", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  total_size += 1UL * this->_internal_populators_size();
  for (const auto& msg : this->populators_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string name = 2[json_name = "name", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string type = 3[json_name = "type", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->type().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_type());
  }

  // string description = 4[json_name = "description", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->description().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  // .google.protobuf.Timestamp created_date = 7[json_name = "createdDate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->has_created_date()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *created_date_);
  }

  // .google.protobuf.Timestamp updated_date = 8[json_name = "updatedDate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->has_updated_date()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *updated_date_);
  }

  // uint32 id = 1[json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_id());
  }

  // uint32 company_id = 6[json_name = "companyId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->company_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_company_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CustomDimension::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kentik.custom_dimension.v202411alpha1.CustomDimension)
  GOOGLE_DCHECK_NE(&from, this);
  const CustomDimension* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CustomDimension>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kentik.custom_dimension.v202411alpha1.CustomDimension)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kentik.custom_dimension.v202411alpha1.CustomDimension)
    MergeFrom(*source);
  }
}

void CustomDimension::MergeFrom(const CustomDimension& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kentik.custom_dimension.v202411alpha1.CustomDimension)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  populators_.MergeFrom(from.populators_);
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.type().size() > 0) {
    _internal_set_type(from._internal_type());
  }
  if (from.description().size() > 0) {
    _internal_set_description(from._internal_description());
  }
  if (from.has_created_date()) {
    _internal_mutable_created_date()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_created_date());
  }
  if (from.has_updated_date()) {
    _internal_mutable_updated_date()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_updated_date());
  }
  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.company_id() != 0) {
    _internal_set_company_id(from._internal_company_id());
  }
}

void CustomDimension::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kentik.custom_dimension.v202411alpha1.CustomDimension)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CustomDimension::CopyFrom(const CustomDimension& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.custom_dimension.v202411alpha1.CustomDimension)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CustomDimension::IsInitialized() const {
  return true;
}

void CustomDimension::InternalSwap(CustomDimension* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  populators_.InternalSwap(&other->populators_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  type_.Swap(&other->type_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  description_.Swap(&other->description_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CustomDimension, company_id_)
      + sizeof(CustomDimension::company_id_)
      - PROTOBUF_FIELD_OFFSET(CustomDimension, created_date_)>(
          reinterpret_cast<char*>(&created_date_),
          reinterpret_cast<char*>(&other->created_date_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CustomDimension::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Populator::InitAsDefaultInstance() {
  ::kentik::custom_dimension::v202411alpha1::_Populator_default_instance_._instance.get_mutable()->created_date_ = const_cast< PROTOBUF_NAMESPACE_ID::Timestamp*>(
      PROTOBUF_NAMESPACE_ID::Timestamp::internal_default_instance());
  ::kentik::custom_dimension::v202411alpha1::_Populator_default_instance_._instance.get_mutable()->updated_date_ = const_cast< PROTOBUF_NAMESPACE_ID::Timestamp*>(
      PROTOBUF_NAMESPACE_ID::Timestamp::internal_default_instance());
}
class Populator::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Timestamp& created_date(const Populator* msg);
  static const PROTOBUF_NAMESPACE_ID::Timestamp& updated_date(const Populator* msg);
};

const PROTOBUF_NAMESPACE_ID::Timestamp&
Populator::_Internal::created_date(const Populator* msg) {
  return *msg->created_date_;
}
const PROTOBUF_NAMESPACE_ID::Timestamp&
Populator::_Internal::updated_date(const Populator* msg) {
  return *msg->updated_date_;
}
void Populator::clear_created_date() {
  if (GetArena() == nullptr && created_date_ != nullptr) {
    delete created_date_;
  }
  created_date_ = nullptr;
}
void Populator::clear_updated_date() {
  if (GetArena() == nullptr && updated_date_ != nullptr) {
    delete updated_date_;
  }
  updated_date_ = nullptr;
}
Populator::Populator(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  device_name_(arena),
  device_type_(arena),
  site_(arena),
  interface_name_(arena),
  addr_(arena),
  port_(arena),
  protocol_(arena),
  asn_(arena),
  lasthop_as_name_(arena),
  nexthop_asn_(arena),
  nexthop_as_name_(arena),
  nexthop_(arena),
  bgp_aspath_(arena),
  bgp_community_(arena),
  mac_(arena),
  country_(arena),
  vlans_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.custom_dimension.v202411alpha1.Populator)
}
Populator::Populator(const Populator& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      device_name_(from.device_name_),
      device_type_(from.device_type_),
      site_(from.site_),
      interface_name_(from.interface_name_),
      addr_(from.addr_),
      port_(from.port_),
      protocol_(from.protocol_),
      asn_(from.asn_),
      lasthop_as_name_(from.lasthop_as_name_),
      nexthop_asn_(from.nexthop_asn_),
      nexthop_as_name_(from.nexthop_as_name_),
      nexthop_(from.nexthop_),
      bgp_aspath_(from.bgp_aspath_),
      bgp_community_(from.bgp_community_),
      mac_(from.mac_),
      country_(from.country_),
      vlans_(from.vlans_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_value().empty()) {
    value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_value(),
      GetArena());
  }
  direction_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_direction().empty()) {
    direction_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_direction(),
      GetArena());
  }
  user_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_user().empty()) {
    user_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_user(),
      GetArena());
  }
  if (from._internal_has_created_date()) {
    created_date_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.created_date_);
  } else {
    created_date_ = nullptr;
  }
  if (from._internal_has_updated_date()) {
    updated_date_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.updated_date_);
  } else {
    updated_date_ = nullptr;
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&tcp_flags_) -
    reinterpret_cast<char*>(&id_)) + sizeof(tcp_flags_));
  // @@protoc_insertion_point(copy_constructor:kentik.custom_dimension.v202411alpha1.Populator)
}

void Populator::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Populator_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto.base);
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  direction_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  user_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&created_date_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tcp_flags_) -
      reinterpret_cast<char*>(&created_date_)) + sizeof(tcp_flags_));
}

Populator::~Populator() {
  // @@protoc_insertion_point(destructor:kentik.custom_dimension.v202411alpha1.Populator)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Populator::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  direction_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  user_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete created_date_;
  if (this != internal_default_instance()) delete updated_date_;
}

void Populator::ArenaDtor(void* object) {
  Populator* _this = reinterpret_cast< Populator* >(object);
  (void)_this;
}
void Populator::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Populator::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Populator& Populator::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Populator_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto.base);
  return *internal_default_instance();
}


void Populator::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.custom_dimension.v202411alpha1.Populator)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  device_name_.Clear();
  device_type_.Clear();
  site_.Clear();
  interface_name_.Clear();
  addr_.Clear();
  port_.Clear();
  protocol_.Clear();
  asn_.Clear();
  lasthop_as_name_.Clear();
  nexthop_asn_.Clear();
  nexthop_as_name_.Clear();
  nexthop_.Clear();
  bgp_aspath_.Clear();
  bgp_community_.Clear();
  mac_.Clear();
  country_.Clear();
  vlans_.Clear();
  value_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  direction_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  user_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && created_date_ != nullptr) {
    delete created_date_;
  }
  created_date_ = nullptr;
  if (GetArena() == nullptr && updated_date_ != nullptr) {
    delete updated_date_;
  }
  updated_date_ = nullptr;
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tcp_flags_) -
      reinterpret_cast<char*>(&id_)) + sizeof(tcp_flags_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Populator::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 id = 1[json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string value = 2[json_name = "value", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "kentik.custom_dimension.v202411alpha1.Populator.value"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string direction = 3[json_name = "direction", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_direction();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "kentik.custom_dimension.v202411alpha1.Populator.direction"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string device_name = 4[json_name = "deviceName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_device_name();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "kentik.custom_dimension.v202411alpha1.Populator.device_name"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated string device_type = 5[json_name = "deviceType", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_device_type();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "kentik.custom_dimension.v202411alpha1.Populator.device_type"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated string site = 6[json_name = "site", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_site();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "kentik.custom_dimension.v202411alpha1.Populator.site"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated string interface_name = 7[json_name = "interfaceName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_interface_name();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "kentik.custom_dimension.v202411alpha1.Populator.interface_name"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<58>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated string addr = 8[json_name = "addr", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_addr();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "kentik.custom_dimension.v202411alpha1.Populator.addr"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<66>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated uint32 port = 9[json_name = "port", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_port(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72) {
          _internal_add_port(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 tcp_flags = 10[json_name = "tcpFlags", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          tcp_flags_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated uint32 protocol = 11[json_name = "protocol", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_protocol(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 88) {
          _internal_add_protocol(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated uint32 asn = 12[json_name = "asn", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_asn(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96) {
          _internal_add_asn(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string lasthop_as_name = 13[json_name = "lasthopAsName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_lasthop_as_name();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "kentik.custom_dimension.v202411alpha1.Populator.lasthop_as_name"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<106>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated uint32 nexthop_asn = 14[json_name = "nexthopAsn", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 114)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_nexthop_asn(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 112) {
          _internal_add_nexthop_asn(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string nexthop_as_name = 15[json_name = "nexthopAsName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 122)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_nexthop_as_name();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "kentik.custom_dimension.v202411alpha1.Populator.nexthop_as_name"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<122>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated string nexthop = 16[json_name = "nexthop", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 130)) {
          ptr -= 2;
          do {
            ptr += 2;
            auto str = _internal_add_nexthop();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "kentik.custom_dimension.v202411alpha1.Populator.nexthop"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<130>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated string bgp_aspath = 17[json_name = "bgpAspath", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 138)) {
          ptr -= 2;
          do {
            ptr += 2;
            auto str = _internal_add_bgp_aspath();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "kentik.custom_dimension.v202411alpha1.Populator.bgp_aspath"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<138>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated string bgp_community = 18[json_name = "bgpCommunity", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 146)) {
          ptr -= 2;
          do {
            ptr += 2;
            auto str = _internal_add_bgp_community();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "kentik.custom_dimension.v202411alpha1.Populator.bgp_community"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<146>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated string mac = 19[json_name = "mac", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 19:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 154)) {
          ptr -= 2;
          do {
            ptr += 2;
            auto str = _internal_add_mac();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "kentik.custom_dimension.v202411alpha1.Populator.mac"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<154>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated string country = 20[json_name = "country", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 162)) {
          ptr -= 2;
          do {
            ptr += 2;
            auto str = _internal_add_country();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "kentik.custom_dimension.v202411alpha1.Populator.country"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<162>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated string vlans = 21[json_name = "vlans", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 170)) {
          ptr -= 2;
          do {
            ptr += 2;
            auto str = _internal_add_vlans();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "kentik.custom_dimension.v202411alpha1.Populator.vlans"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<170>(ptr));
        } else goto handle_unusual;
        continue;
      // string user = 22[json_name = "user", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 22:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 178)) {
          auto str = _internal_mutable_user();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "kentik.custom_dimension.v202411alpha1.Populator.user"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp created_date = 23[json_name = "createdDate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 23:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 186)) {
          ptr = ctx->ParseMessage(_internal_mutable_created_date(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp updated_date = 24[json_name = "updatedDate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 24:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 194)) {
          ptr = ctx->ParseMessage(_internal_mutable_updated_date(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Populator::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kentik.custom_dimension.v202411alpha1.Populator)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1[json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_id(), target);
  }

  // string value = 2[json_name = "value", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->value().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_value().data(), static_cast<int>(this->_internal_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "kentik.custom_dimension.v202411alpha1.Populator.value");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_value(), target);
  }

  // string direction = 3[json_name = "direction", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->direction().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_direction().data(), static_cast<int>(this->_internal_direction().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "kentik.custom_dimension.v202411alpha1.Populator.direction");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_direction(), target);
  }

  // repeated string device_name = 4[json_name = "deviceName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  for (int i = 0, n = this->_internal_device_name_size(); i < n; i++) {
    const auto& s = this->_internal_device_name(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "kentik.custom_dimension.v202411alpha1.Populator.device_name");
    target = stream->WriteString(4, s, target);
  }

  // repeated string device_type = 5[json_name = "deviceType", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  for (int i = 0, n = this->_internal_device_type_size(); i < n; i++) {
    const auto& s = this->_internal_device_type(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "kentik.custom_dimension.v202411alpha1.Populator.device_type");
    target = stream->WriteString(5, s, target);
  }

  // repeated string site = 6[json_name = "site", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  for (int i = 0, n = this->_internal_site_size(); i < n; i++) {
    const auto& s = this->_internal_site(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "kentik.custom_dimension.v202411alpha1.Populator.site");
    target = stream->WriteString(6, s, target);
  }

  // repeated string interface_name = 7[json_name = "interfaceName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  for (int i = 0, n = this->_internal_interface_name_size(); i < n; i++) {
    const auto& s = this->_internal_interface_name(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "kentik.custom_dimension.v202411alpha1.Populator.interface_name");
    target = stream->WriteString(7, s, target);
  }

  // repeated string addr = 8[json_name = "addr", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  for (int i = 0, n = this->_internal_addr_size(); i < n; i++) {
    const auto& s = this->_internal_addr(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "kentik.custom_dimension.v202411alpha1.Populator.addr");
    target = stream->WriteString(8, s, target);
  }

  // repeated uint32 port = 9[json_name = "port", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  {
    int byte_size = _port_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(
          9, _internal_port(), byte_size, target);
    }
  }

  // uint32 tcp_flags = 10[json_name = "tcpFlags", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->tcp_flags() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(10, this->_internal_tcp_flags(), target);
  }

  // repeated uint32 protocol = 11[json_name = "protocol", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  {
    int byte_size = _protocol_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(
          11, _internal_protocol(), byte_size, target);
    }
  }

  // repeated uint32 asn = 12[json_name = "asn", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  {
    int byte_size = _asn_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(
          12, _internal_asn(), byte_size, target);
    }
  }

  // repeated string lasthop_as_name = 13[json_name = "lasthopAsName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  for (int i = 0, n = this->_internal_lasthop_as_name_size(); i < n; i++) {
    const auto& s = this->_internal_lasthop_as_name(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "kentik.custom_dimension.v202411alpha1.Populator.lasthop_as_name");
    target = stream->WriteString(13, s, target);
  }

  // repeated uint32 nexthop_asn = 14[json_name = "nexthopAsn", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  {
    int byte_size = _nexthop_asn_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(
          14, _internal_nexthop_asn(), byte_size, target);
    }
  }

  // repeated string nexthop_as_name = 15[json_name = "nexthopAsName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  for (int i = 0, n = this->_internal_nexthop_as_name_size(); i < n; i++) {
    const auto& s = this->_internal_nexthop_as_name(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "kentik.custom_dimension.v202411alpha1.Populator.nexthop_as_name");
    target = stream->WriteString(15, s, target);
  }

  // repeated string nexthop = 16[json_name = "nexthop", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  for (int i = 0, n = this->_internal_nexthop_size(); i < n; i++) {
    const auto& s = this->_internal_nexthop(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "kentik.custom_dimension.v202411alpha1.Populator.nexthop");
    target = stream->WriteString(16, s, target);
  }

  // repeated string bgp_aspath = 17[json_name = "bgpAspath", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  for (int i = 0, n = this->_internal_bgp_aspath_size(); i < n; i++) {
    const auto& s = this->_internal_bgp_aspath(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "kentik.custom_dimension.v202411alpha1.Populator.bgp_aspath");
    target = stream->WriteString(17, s, target);
  }

  // repeated string bgp_community = 18[json_name = "bgpCommunity", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  for (int i = 0, n = this->_internal_bgp_community_size(); i < n; i++) {
    const auto& s = this->_internal_bgp_community(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "kentik.custom_dimension.v202411alpha1.Populator.bgp_community");
    target = stream->WriteString(18, s, target);
  }

  // repeated string mac = 19[json_name = "mac", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  for (int i = 0, n = this->_internal_mac_size(); i < n; i++) {
    const auto& s = this->_internal_mac(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "kentik.custom_dimension.v202411alpha1.Populator.mac");
    target = stream->WriteString(19, s, target);
  }

  // repeated string country = 20[json_name = "country", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  for (int i = 0, n = this->_internal_country_size(); i < n; i++) {
    const auto& s = this->_internal_country(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "kentik.custom_dimension.v202411alpha1.Populator.country");
    target = stream->WriteString(20, s, target);
  }

  // repeated string vlans = 21[json_name = "vlans", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  for (int i = 0, n = this->_internal_vlans_size(); i < n; i++) {
    const auto& s = this->_internal_vlans(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "kentik.custom_dimension.v202411alpha1.Populator.vlans");
    target = stream->WriteString(21, s, target);
  }

  // string user = 22[json_name = "user", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->user().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_user().data(), static_cast<int>(this->_internal_user().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "kentik.custom_dimension.v202411alpha1.Populator.user");
    target = stream->WriteStringMaybeAliased(
        22, this->_internal_user(), target);
  }

  // .google.protobuf.Timestamp created_date = 23[json_name = "createdDate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->has_created_date()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        23, _Internal::created_date(this), target, stream);
  }

  // .google.protobuf.Timestamp updated_date = 24[json_name = "updatedDate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->has_updated_date()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        24, _Internal::updated_date(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kentik.custom_dimension.v202411alpha1.Populator)
  return target;
}

size_t Populator::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kentik.custom_dimension.v202411alpha1.Populator)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string device_name = 4[json_name = "deviceName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(device_name_.size());
  for (int i = 0, n = device_name_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      device_name_.Get(i));
  }

  // repeated string device_type = 5[json_name = "deviceType", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(device_type_.size());
  for (int i = 0, n = device_type_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      device_type_.Get(i));
  }

  // repeated string site = 6[json_name = "site", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(site_.size());
  for (int i = 0, n = site_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      site_.Get(i));
  }

  // repeated string interface_name = 7[json_name = "interfaceName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(interface_name_.size());
  for (int i = 0, n = interface_name_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      interface_name_.Get(i));
  }

  // repeated string addr = 8[json_name = "addr", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(addr_.size());
  for (int i = 0, n = addr_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      addr_.Get(i));
  }

  // repeated uint32 port = 9[json_name = "port", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt32Size(this->port_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _port_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated uint32 protocol = 11[json_name = "protocol", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt32Size(this->protocol_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _protocol_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated uint32 asn = 12[json_name = "asn", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt32Size(this->asn_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _asn_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated string lasthop_as_name = 13[json_name = "lasthopAsName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(lasthop_as_name_.size());
  for (int i = 0, n = lasthop_as_name_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      lasthop_as_name_.Get(i));
  }

  // repeated uint32 nexthop_asn = 14[json_name = "nexthopAsn", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt32Size(this->nexthop_asn_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _nexthop_asn_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated string nexthop_as_name = 15[json_name = "nexthopAsName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(nexthop_as_name_.size());
  for (int i = 0, n = nexthop_as_name_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      nexthop_as_name_.Get(i));
  }

  // repeated string nexthop = 16[json_name = "nexthop", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  total_size += 2 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(nexthop_.size());
  for (int i = 0, n = nexthop_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      nexthop_.Get(i));
  }

  // repeated string bgp_aspath = 17[json_name = "bgpAspath", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  total_size += 2 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(bgp_aspath_.size());
  for (int i = 0, n = bgp_aspath_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      bgp_aspath_.Get(i));
  }

  // repeated string bgp_community = 18[json_name = "bgpCommunity", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  total_size += 2 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(bgp_community_.size());
  for (int i = 0, n = bgp_community_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      bgp_community_.Get(i));
  }

  // repeated string mac = 19[json_name = "mac", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  total_size += 2 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(mac_.size());
  for (int i = 0, n = mac_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      mac_.Get(i));
  }

  // repeated string country = 20[json_name = "country", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  total_size += 2 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(country_.size());
  for (int i = 0, n = country_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      country_.Get(i));
  }

  // repeated string vlans = 21[json_name = "vlans", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  total_size += 2 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(vlans_.size());
  for (int i = 0, n = vlans_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      vlans_.Get(i));
  }

  // string value = 2[json_name = "value", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->value().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_value());
  }

  // string direction = 3[json_name = "direction", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->direction().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_direction());
  }

  // string user = 22[json_name = "user", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->user().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_user());
  }

  // .google.protobuf.Timestamp created_date = 23[json_name = "createdDate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->has_created_date()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *created_date_);
  }

  // .google.protobuf.Timestamp updated_date = 24[json_name = "updatedDate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->has_updated_date()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *updated_date_);
  }

  // uint32 id = 1[json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_id());
  }

  // uint32 tcp_flags = 10[json_name = "tcpFlags", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->tcp_flags() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_tcp_flags());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Populator::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kentik.custom_dimension.v202411alpha1.Populator)
  GOOGLE_DCHECK_NE(&from, this);
  const Populator* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Populator>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kentik.custom_dimension.v202411alpha1.Populator)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kentik.custom_dimension.v202411alpha1.Populator)
    MergeFrom(*source);
  }
}

void Populator::MergeFrom(const Populator& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kentik.custom_dimension.v202411alpha1.Populator)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  device_name_.MergeFrom(from.device_name_);
  device_type_.MergeFrom(from.device_type_);
  site_.MergeFrom(from.site_);
  interface_name_.MergeFrom(from.interface_name_);
  addr_.MergeFrom(from.addr_);
  port_.MergeFrom(from.port_);
  protocol_.MergeFrom(from.protocol_);
  asn_.MergeFrom(from.asn_);
  lasthop_as_name_.MergeFrom(from.lasthop_as_name_);
  nexthop_asn_.MergeFrom(from.nexthop_asn_);
  nexthop_as_name_.MergeFrom(from.nexthop_as_name_);
  nexthop_.MergeFrom(from.nexthop_);
  bgp_aspath_.MergeFrom(from.bgp_aspath_);
  bgp_community_.MergeFrom(from.bgp_community_);
  mac_.MergeFrom(from.mac_);
  country_.MergeFrom(from.country_);
  vlans_.MergeFrom(from.vlans_);
  if (from.value().size() > 0) {
    _internal_set_value(from._internal_value());
  }
  if (from.direction().size() > 0) {
    _internal_set_direction(from._internal_direction());
  }
  if (from.user().size() > 0) {
    _internal_set_user(from._internal_user());
  }
  if (from.has_created_date()) {
    _internal_mutable_created_date()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_created_date());
  }
  if (from.has_updated_date()) {
    _internal_mutable_updated_date()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_updated_date());
  }
  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.tcp_flags() != 0) {
    _internal_set_tcp_flags(from._internal_tcp_flags());
  }
}

void Populator::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kentik.custom_dimension.v202411alpha1.Populator)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Populator::CopyFrom(const Populator& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.custom_dimension.v202411alpha1.Populator)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Populator::IsInitialized() const {
  return true;
}

void Populator::InternalSwap(Populator* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  device_name_.InternalSwap(&other->device_name_);
  device_type_.InternalSwap(&other->device_type_);
  site_.InternalSwap(&other->site_);
  interface_name_.InternalSwap(&other->interface_name_);
  addr_.InternalSwap(&other->addr_);
  port_.InternalSwap(&other->port_);
  protocol_.InternalSwap(&other->protocol_);
  asn_.InternalSwap(&other->asn_);
  lasthop_as_name_.InternalSwap(&other->lasthop_as_name_);
  nexthop_asn_.InternalSwap(&other->nexthop_asn_);
  nexthop_as_name_.InternalSwap(&other->nexthop_as_name_);
  nexthop_.InternalSwap(&other->nexthop_);
  bgp_aspath_.InternalSwap(&other->bgp_aspath_);
  bgp_community_.InternalSwap(&other->bgp_community_);
  mac_.InternalSwap(&other->mac_);
  country_.InternalSwap(&other->country_);
  vlans_.InternalSwap(&other->vlans_);
  value_.Swap(&other->value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  direction_.Swap(&other->direction_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  user_.Swap(&other->user_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Populator, tcp_flags_)
      + sizeof(Populator::tcp_flags_)
      - PROTOBUF_FIELD_OFFSET(Populator, created_date_)>(
          reinterpret_cast<char*>(&created_date_),
          reinterpret_cast<char*>(&other->created_date_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Populator::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ListCustomDimensionsRequest::InitAsDefaultInstance() {
}
class ListCustomDimensionsRequest::_Internal {
 public:
};

ListCustomDimensionsRequest::ListCustomDimensionsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.custom_dimension.v202411alpha1.ListCustomDimensionsRequest)
}
ListCustomDimensionsRequest::ListCustomDimensionsRequest(const ListCustomDimensionsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:kentik.custom_dimension.v202411alpha1.ListCustomDimensionsRequest)
}

void ListCustomDimensionsRequest::SharedCtor() {
}

ListCustomDimensionsRequest::~ListCustomDimensionsRequest() {
  // @@protoc_insertion_point(destructor:kentik.custom_dimension.v202411alpha1.ListCustomDimensionsRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ListCustomDimensionsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ListCustomDimensionsRequest::ArenaDtor(void* object) {
  ListCustomDimensionsRequest* _this = reinterpret_cast< ListCustomDimensionsRequest* >(object);
  (void)_this;
}
void ListCustomDimensionsRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListCustomDimensionsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListCustomDimensionsRequest& ListCustomDimensionsRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ListCustomDimensionsRequest_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto.base);
  return *internal_default_instance();
}


void ListCustomDimensionsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.custom_dimension.v202411alpha1.ListCustomDimensionsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListCustomDimensionsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListCustomDimensionsRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kentik.custom_dimension.v202411alpha1.ListCustomDimensionsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kentik.custom_dimension.v202411alpha1.ListCustomDimensionsRequest)
  return target;
}

size_t ListCustomDimensionsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kentik.custom_dimension.v202411alpha1.ListCustomDimensionsRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListCustomDimensionsRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kentik.custom_dimension.v202411alpha1.ListCustomDimensionsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListCustomDimensionsRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListCustomDimensionsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kentik.custom_dimension.v202411alpha1.ListCustomDimensionsRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kentik.custom_dimension.v202411alpha1.ListCustomDimensionsRequest)
    MergeFrom(*source);
  }
}

void ListCustomDimensionsRequest::MergeFrom(const ListCustomDimensionsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kentik.custom_dimension.v202411alpha1.ListCustomDimensionsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ListCustomDimensionsRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kentik.custom_dimension.v202411alpha1.ListCustomDimensionsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListCustomDimensionsRequest::CopyFrom(const ListCustomDimensionsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.custom_dimension.v202411alpha1.ListCustomDimensionsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListCustomDimensionsRequest::IsInitialized() const {
  return true;
}

void ListCustomDimensionsRequest::InternalSwap(ListCustomDimensionsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListCustomDimensionsRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ListCustomDimensionsResponse::InitAsDefaultInstance() {
}
class ListCustomDimensionsResponse::_Internal {
 public:
};

ListCustomDimensionsResponse::ListCustomDimensionsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  dimensions_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.custom_dimension.v202411alpha1.ListCustomDimensionsResponse)
}
ListCustomDimensionsResponse::ListCustomDimensionsResponse(const ListCustomDimensionsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      dimensions_(from.dimensions_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:kentik.custom_dimension.v202411alpha1.ListCustomDimensionsResponse)
}

void ListCustomDimensionsResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ListCustomDimensionsResponse_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto.base);
}

ListCustomDimensionsResponse::~ListCustomDimensionsResponse() {
  // @@protoc_insertion_point(destructor:kentik.custom_dimension.v202411alpha1.ListCustomDimensionsResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ListCustomDimensionsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ListCustomDimensionsResponse::ArenaDtor(void* object) {
  ListCustomDimensionsResponse* _this = reinterpret_cast< ListCustomDimensionsResponse* >(object);
  (void)_this;
}
void ListCustomDimensionsResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListCustomDimensionsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListCustomDimensionsResponse& ListCustomDimensionsResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ListCustomDimensionsResponse_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto.base);
  return *internal_default_instance();
}


void ListCustomDimensionsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.custom_dimension.v202411alpha1.ListCustomDimensionsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dimensions_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListCustomDimensionsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .kentik.custom_dimension.v202411alpha1.CustomDimension dimensions = 1[json_name = "dimensions"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_dimensions(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListCustomDimensionsResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kentik.custom_dimension.v202411alpha1.ListCustomDimensionsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .kentik.custom_dimension.v202411alpha1.CustomDimension dimensions = 1[json_name = "dimensions"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_dimensions_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_dimensions(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kentik.custom_dimension.v202411alpha1.ListCustomDimensionsResponse)
  return target;
}

size_t ListCustomDimensionsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kentik.custom_dimension.v202411alpha1.ListCustomDimensionsResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .kentik.custom_dimension.v202411alpha1.CustomDimension dimensions = 1[json_name = "dimensions"];
  total_size += 1UL * this->_internal_dimensions_size();
  for (const auto& msg : this->dimensions_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListCustomDimensionsResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kentik.custom_dimension.v202411alpha1.ListCustomDimensionsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListCustomDimensionsResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListCustomDimensionsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kentik.custom_dimension.v202411alpha1.ListCustomDimensionsResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kentik.custom_dimension.v202411alpha1.ListCustomDimensionsResponse)
    MergeFrom(*source);
  }
}

void ListCustomDimensionsResponse::MergeFrom(const ListCustomDimensionsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kentik.custom_dimension.v202411alpha1.ListCustomDimensionsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  dimensions_.MergeFrom(from.dimensions_);
}

void ListCustomDimensionsResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kentik.custom_dimension.v202411alpha1.ListCustomDimensionsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListCustomDimensionsResponse::CopyFrom(const ListCustomDimensionsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.custom_dimension.v202411alpha1.ListCustomDimensionsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListCustomDimensionsResponse::IsInitialized() const {
  return true;
}

void ListCustomDimensionsResponse::InternalSwap(ListCustomDimensionsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  dimensions_.InternalSwap(&other->dimensions_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListCustomDimensionsResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetCustomDimensionInfoRequest::InitAsDefaultInstance() {
}
class GetCustomDimensionInfoRequest::_Internal {
 public:
};

GetCustomDimensionInfoRequest::GetCustomDimensionInfoRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.custom_dimension.v202411alpha1.GetCustomDimensionInfoRequest)
}
GetCustomDimensionInfoRequest::GetCustomDimensionInfoRequest(const GetCustomDimensionInfoRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  custom_dimension_id_ = from.custom_dimension_id_;
  // @@protoc_insertion_point(copy_constructor:kentik.custom_dimension.v202411alpha1.GetCustomDimensionInfoRequest)
}

void GetCustomDimensionInfoRequest::SharedCtor() {
  custom_dimension_id_ = 0u;
}

GetCustomDimensionInfoRequest::~GetCustomDimensionInfoRequest() {
  // @@protoc_insertion_point(destructor:kentik.custom_dimension.v202411alpha1.GetCustomDimensionInfoRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetCustomDimensionInfoRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetCustomDimensionInfoRequest::ArenaDtor(void* object) {
  GetCustomDimensionInfoRequest* _this = reinterpret_cast< GetCustomDimensionInfoRequest* >(object);
  (void)_this;
}
void GetCustomDimensionInfoRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetCustomDimensionInfoRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetCustomDimensionInfoRequest& GetCustomDimensionInfoRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetCustomDimensionInfoRequest_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto.base);
  return *internal_default_instance();
}


void GetCustomDimensionInfoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.custom_dimension.v202411alpha1.GetCustomDimensionInfoRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  custom_dimension_id_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetCustomDimensionInfoRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 custom_dimension_id = 1[json_name = "customDimensionId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          custom_dimension_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetCustomDimensionInfoRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kentik.custom_dimension.v202411alpha1.GetCustomDimensionInfoRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 custom_dimension_id = 1[json_name = "customDimensionId"];
  if (this->custom_dimension_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_custom_dimension_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kentik.custom_dimension.v202411alpha1.GetCustomDimensionInfoRequest)
  return target;
}

size_t GetCustomDimensionInfoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kentik.custom_dimension.v202411alpha1.GetCustomDimensionInfoRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 custom_dimension_id = 1[json_name = "customDimensionId"];
  if (this->custom_dimension_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_custom_dimension_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetCustomDimensionInfoRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kentik.custom_dimension.v202411alpha1.GetCustomDimensionInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetCustomDimensionInfoRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetCustomDimensionInfoRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kentik.custom_dimension.v202411alpha1.GetCustomDimensionInfoRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kentik.custom_dimension.v202411alpha1.GetCustomDimensionInfoRequest)
    MergeFrom(*source);
  }
}

void GetCustomDimensionInfoRequest::MergeFrom(const GetCustomDimensionInfoRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kentik.custom_dimension.v202411alpha1.GetCustomDimensionInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.custom_dimension_id() != 0) {
    _internal_set_custom_dimension_id(from._internal_custom_dimension_id());
  }
}

void GetCustomDimensionInfoRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kentik.custom_dimension.v202411alpha1.GetCustomDimensionInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetCustomDimensionInfoRequest::CopyFrom(const GetCustomDimensionInfoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.custom_dimension.v202411alpha1.GetCustomDimensionInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetCustomDimensionInfoRequest::IsInitialized() const {
  return true;
}

void GetCustomDimensionInfoRequest::InternalSwap(GetCustomDimensionInfoRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(custom_dimension_id_, other->custom_dimension_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetCustomDimensionInfoRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetCustomDimensionInfoResponse::InitAsDefaultInstance() {
  ::kentik::custom_dimension::v202411alpha1::_GetCustomDimensionInfoResponse_default_instance_._instance.get_mutable()->dimension_ = const_cast< ::kentik::custom_dimension::v202411alpha1::CustomDimension*>(
      ::kentik::custom_dimension::v202411alpha1::CustomDimension::internal_default_instance());
}
class GetCustomDimensionInfoResponse::_Internal {
 public:
  static const ::kentik::custom_dimension::v202411alpha1::CustomDimension& dimension(const GetCustomDimensionInfoResponse* msg);
};

const ::kentik::custom_dimension::v202411alpha1::CustomDimension&
GetCustomDimensionInfoResponse::_Internal::dimension(const GetCustomDimensionInfoResponse* msg) {
  return *msg->dimension_;
}
GetCustomDimensionInfoResponse::GetCustomDimensionInfoResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.custom_dimension.v202411alpha1.GetCustomDimensionInfoResponse)
}
GetCustomDimensionInfoResponse::GetCustomDimensionInfoResponse(const GetCustomDimensionInfoResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_dimension()) {
    dimension_ = new ::kentik::custom_dimension::v202411alpha1::CustomDimension(*from.dimension_);
  } else {
    dimension_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:kentik.custom_dimension.v202411alpha1.GetCustomDimensionInfoResponse)
}

void GetCustomDimensionInfoResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetCustomDimensionInfoResponse_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto.base);
  dimension_ = nullptr;
}

GetCustomDimensionInfoResponse::~GetCustomDimensionInfoResponse() {
  // @@protoc_insertion_point(destructor:kentik.custom_dimension.v202411alpha1.GetCustomDimensionInfoResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetCustomDimensionInfoResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete dimension_;
}

void GetCustomDimensionInfoResponse::ArenaDtor(void* object) {
  GetCustomDimensionInfoResponse* _this = reinterpret_cast< GetCustomDimensionInfoResponse* >(object);
  (void)_this;
}
void GetCustomDimensionInfoResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetCustomDimensionInfoResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetCustomDimensionInfoResponse& GetCustomDimensionInfoResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetCustomDimensionInfoResponse_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto.base);
  return *internal_default_instance();
}


void GetCustomDimensionInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.custom_dimension.v202411alpha1.GetCustomDimensionInfoResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && dimension_ != nullptr) {
    delete dimension_;
  }
  dimension_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetCustomDimensionInfoResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .kentik.custom_dimension.v202411alpha1.CustomDimension dimension = 1[json_name = "dimension"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_dimension(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetCustomDimensionInfoResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kentik.custom_dimension.v202411alpha1.GetCustomDimensionInfoResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kentik.custom_dimension.v202411alpha1.CustomDimension dimension = 1[json_name = "dimension"];
  if (this->has_dimension()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::dimension(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kentik.custom_dimension.v202411alpha1.GetCustomDimensionInfoResponse)
  return target;
}

size_t GetCustomDimensionInfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kentik.custom_dimension.v202411alpha1.GetCustomDimensionInfoResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .kentik.custom_dimension.v202411alpha1.CustomDimension dimension = 1[json_name = "dimension"];
  if (this->has_dimension()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *dimension_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetCustomDimensionInfoResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kentik.custom_dimension.v202411alpha1.GetCustomDimensionInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetCustomDimensionInfoResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetCustomDimensionInfoResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kentik.custom_dimension.v202411alpha1.GetCustomDimensionInfoResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kentik.custom_dimension.v202411alpha1.GetCustomDimensionInfoResponse)
    MergeFrom(*source);
  }
}

void GetCustomDimensionInfoResponse::MergeFrom(const GetCustomDimensionInfoResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kentik.custom_dimension.v202411alpha1.GetCustomDimensionInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_dimension()) {
    _internal_mutable_dimension()->::kentik::custom_dimension::v202411alpha1::CustomDimension::MergeFrom(from._internal_dimension());
  }
}

void GetCustomDimensionInfoResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kentik.custom_dimension.v202411alpha1.GetCustomDimensionInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetCustomDimensionInfoResponse::CopyFrom(const GetCustomDimensionInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.custom_dimension.v202411alpha1.GetCustomDimensionInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetCustomDimensionInfoResponse::IsInitialized() const {
  return true;
}

void GetCustomDimensionInfoResponse::InternalSwap(GetCustomDimensionInfoResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(dimension_, other->dimension_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetCustomDimensionInfoResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CreateCustomDimensionRequest::InitAsDefaultInstance() {
  ::kentik::custom_dimension::v202411alpha1::_CreateCustomDimensionRequest_default_instance_._instance.get_mutable()->dimension_ = const_cast< ::kentik::custom_dimension::v202411alpha1::CustomDimension*>(
      ::kentik::custom_dimension::v202411alpha1::CustomDimension::internal_default_instance());
}
class CreateCustomDimensionRequest::_Internal {
 public:
  static const ::kentik::custom_dimension::v202411alpha1::CustomDimension& dimension(const CreateCustomDimensionRequest* msg);
};

const ::kentik::custom_dimension::v202411alpha1::CustomDimension&
CreateCustomDimensionRequest::_Internal::dimension(const CreateCustomDimensionRequest* msg) {
  return *msg->dimension_;
}
CreateCustomDimensionRequest::CreateCustomDimensionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.custom_dimension.v202411alpha1.CreateCustomDimensionRequest)
}
CreateCustomDimensionRequest::CreateCustomDimensionRequest(const CreateCustomDimensionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_dimension()) {
    dimension_ = new ::kentik::custom_dimension::v202411alpha1::CustomDimension(*from.dimension_);
  } else {
    dimension_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:kentik.custom_dimension.v202411alpha1.CreateCustomDimensionRequest)
}

void CreateCustomDimensionRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CreateCustomDimensionRequest_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto.base);
  dimension_ = nullptr;
}

CreateCustomDimensionRequest::~CreateCustomDimensionRequest() {
  // @@protoc_insertion_point(destructor:kentik.custom_dimension.v202411alpha1.CreateCustomDimensionRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateCustomDimensionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete dimension_;
}

void CreateCustomDimensionRequest::ArenaDtor(void* object) {
  CreateCustomDimensionRequest* _this = reinterpret_cast< CreateCustomDimensionRequest* >(object);
  (void)_this;
}
void CreateCustomDimensionRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateCustomDimensionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateCustomDimensionRequest& CreateCustomDimensionRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateCustomDimensionRequest_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto.base);
  return *internal_default_instance();
}


void CreateCustomDimensionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.custom_dimension.v202411alpha1.CreateCustomDimensionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && dimension_ != nullptr) {
    delete dimension_;
  }
  dimension_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateCustomDimensionRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .kentik.custom_dimension.v202411alpha1.CustomDimension dimension = 1[json_name = "dimension"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_dimension(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateCustomDimensionRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kentik.custom_dimension.v202411alpha1.CreateCustomDimensionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kentik.custom_dimension.v202411alpha1.CustomDimension dimension = 1[json_name = "dimension"];
  if (this->has_dimension()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::dimension(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kentik.custom_dimension.v202411alpha1.CreateCustomDimensionRequest)
  return target;
}

size_t CreateCustomDimensionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kentik.custom_dimension.v202411alpha1.CreateCustomDimensionRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .kentik.custom_dimension.v202411alpha1.CustomDimension dimension = 1[json_name = "dimension"];
  if (this->has_dimension()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *dimension_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateCustomDimensionRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kentik.custom_dimension.v202411alpha1.CreateCustomDimensionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateCustomDimensionRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateCustomDimensionRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kentik.custom_dimension.v202411alpha1.CreateCustomDimensionRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kentik.custom_dimension.v202411alpha1.CreateCustomDimensionRequest)
    MergeFrom(*source);
  }
}

void CreateCustomDimensionRequest::MergeFrom(const CreateCustomDimensionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kentik.custom_dimension.v202411alpha1.CreateCustomDimensionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_dimension()) {
    _internal_mutable_dimension()->::kentik::custom_dimension::v202411alpha1::CustomDimension::MergeFrom(from._internal_dimension());
  }
}

void CreateCustomDimensionRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kentik.custom_dimension.v202411alpha1.CreateCustomDimensionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateCustomDimensionRequest::CopyFrom(const CreateCustomDimensionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.custom_dimension.v202411alpha1.CreateCustomDimensionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateCustomDimensionRequest::IsInitialized() const {
  return true;
}

void CreateCustomDimensionRequest::InternalSwap(CreateCustomDimensionRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(dimension_, other->dimension_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateCustomDimensionRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CreateCustomDimensionResponse::InitAsDefaultInstance() {
  ::kentik::custom_dimension::v202411alpha1::_CreateCustomDimensionResponse_default_instance_._instance.get_mutable()->dimension_ = const_cast< ::kentik::custom_dimension::v202411alpha1::CustomDimension*>(
      ::kentik::custom_dimension::v202411alpha1::CustomDimension::internal_default_instance());
}
class CreateCustomDimensionResponse::_Internal {
 public:
  static const ::kentik::custom_dimension::v202411alpha1::CustomDimension& dimension(const CreateCustomDimensionResponse* msg);
};

const ::kentik::custom_dimension::v202411alpha1::CustomDimension&
CreateCustomDimensionResponse::_Internal::dimension(const CreateCustomDimensionResponse* msg) {
  return *msg->dimension_;
}
CreateCustomDimensionResponse::CreateCustomDimensionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.custom_dimension.v202411alpha1.CreateCustomDimensionResponse)
}
CreateCustomDimensionResponse::CreateCustomDimensionResponse(const CreateCustomDimensionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_dimension()) {
    dimension_ = new ::kentik::custom_dimension::v202411alpha1::CustomDimension(*from.dimension_);
  } else {
    dimension_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:kentik.custom_dimension.v202411alpha1.CreateCustomDimensionResponse)
}

void CreateCustomDimensionResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CreateCustomDimensionResponse_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto.base);
  dimension_ = nullptr;
}

CreateCustomDimensionResponse::~CreateCustomDimensionResponse() {
  // @@protoc_insertion_point(destructor:kentik.custom_dimension.v202411alpha1.CreateCustomDimensionResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateCustomDimensionResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete dimension_;
}

void CreateCustomDimensionResponse::ArenaDtor(void* object) {
  CreateCustomDimensionResponse* _this = reinterpret_cast< CreateCustomDimensionResponse* >(object);
  (void)_this;
}
void CreateCustomDimensionResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateCustomDimensionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateCustomDimensionResponse& CreateCustomDimensionResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateCustomDimensionResponse_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto.base);
  return *internal_default_instance();
}


void CreateCustomDimensionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.custom_dimension.v202411alpha1.CreateCustomDimensionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && dimension_ != nullptr) {
    delete dimension_;
  }
  dimension_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateCustomDimensionResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .kentik.custom_dimension.v202411alpha1.CustomDimension dimension = 1[json_name = "dimension"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_dimension(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateCustomDimensionResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kentik.custom_dimension.v202411alpha1.CreateCustomDimensionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kentik.custom_dimension.v202411alpha1.CustomDimension dimension = 1[json_name = "dimension"];
  if (this->has_dimension()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::dimension(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kentik.custom_dimension.v202411alpha1.CreateCustomDimensionResponse)
  return target;
}

size_t CreateCustomDimensionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kentik.custom_dimension.v202411alpha1.CreateCustomDimensionResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .kentik.custom_dimension.v202411alpha1.CustomDimension dimension = 1[json_name = "dimension"];
  if (this->has_dimension()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *dimension_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateCustomDimensionResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kentik.custom_dimension.v202411alpha1.CreateCustomDimensionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateCustomDimensionResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateCustomDimensionResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kentik.custom_dimension.v202411alpha1.CreateCustomDimensionResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kentik.custom_dimension.v202411alpha1.CreateCustomDimensionResponse)
    MergeFrom(*source);
  }
}

void CreateCustomDimensionResponse::MergeFrom(const CreateCustomDimensionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kentik.custom_dimension.v202411alpha1.CreateCustomDimensionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_dimension()) {
    _internal_mutable_dimension()->::kentik::custom_dimension::v202411alpha1::CustomDimension::MergeFrom(from._internal_dimension());
  }
}

void CreateCustomDimensionResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kentik.custom_dimension.v202411alpha1.CreateCustomDimensionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateCustomDimensionResponse::CopyFrom(const CreateCustomDimensionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.custom_dimension.v202411alpha1.CreateCustomDimensionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateCustomDimensionResponse::IsInitialized() const {
  return true;
}

void CreateCustomDimensionResponse::InternalSwap(CreateCustomDimensionResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(dimension_, other->dimension_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateCustomDimensionResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpdateCustomDimensionRequest::InitAsDefaultInstance() {
  ::kentik::custom_dimension::v202411alpha1::_UpdateCustomDimensionRequest_default_instance_._instance.get_mutable()->dimension_ = const_cast< ::kentik::custom_dimension::v202411alpha1::CustomDimension*>(
      ::kentik::custom_dimension::v202411alpha1::CustomDimension::internal_default_instance());
}
class UpdateCustomDimensionRequest::_Internal {
 public:
  static const ::kentik::custom_dimension::v202411alpha1::CustomDimension& dimension(const UpdateCustomDimensionRequest* msg);
};

const ::kentik::custom_dimension::v202411alpha1::CustomDimension&
UpdateCustomDimensionRequest::_Internal::dimension(const UpdateCustomDimensionRequest* msg) {
  return *msg->dimension_;
}
UpdateCustomDimensionRequest::UpdateCustomDimensionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.custom_dimension.v202411alpha1.UpdateCustomDimensionRequest)
}
UpdateCustomDimensionRequest::UpdateCustomDimensionRequest(const UpdateCustomDimensionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_dimension()) {
    dimension_ = new ::kentik::custom_dimension::v202411alpha1::CustomDimension(*from.dimension_);
  } else {
    dimension_ = nullptr;
  }
  custom_dimension_id_ = from.custom_dimension_id_;
  // @@protoc_insertion_point(copy_constructor:kentik.custom_dimension.v202411alpha1.UpdateCustomDimensionRequest)
}

void UpdateCustomDimensionRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UpdateCustomDimensionRequest_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto.base);
  ::memset(&dimension_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&custom_dimension_id_) -
      reinterpret_cast<char*>(&dimension_)) + sizeof(custom_dimension_id_));
}

UpdateCustomDimensionRequest::~UpdateCustomDimensionRequest() {
  // @@protoc_insertion_point(destructor:kentik.custom_dimension.v202411alpha1.UpdateCustomDimensionRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UpdateCustomDimensionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete dimension_;
}

void UpdateCustomDimensionRequest::ArenaDtor(void* object) {
  UpdateCustomDimensionRequest* _this = reinterpret_cast< UpdateCustomDimensionRequest* >(object);
  (void)_this;
}
void UpdateCustomDimensionRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateCustomDimensionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateCustomDimensionRequest& UpdateCustomDimensionRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpdateCustomDimensionRequest_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto.base);
  return *internal_default_instance();
}


void UpdateCustomDimensionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.custom_dimension.v202411alpha1.UpdateCustomDimensionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && dimension_ != nullptr) {
    delete dimension_;
  }
  dimension_ = nullptr;
  custom_dimension_id_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateCustomDimensionRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 custom_dimension_id = 1[json_name = "customDimensionId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          custom_dimension_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .kentik.custom_dimension.v202411alpha1.CustomDimension dimension = 2[json_name = "dimension"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_dimension(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateCustomDimensionRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kentik.custom_dimension.v202411alpha1.UpdateCustomDimensionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 custom_dimension_id = 1[json_name = "customDimensionId"];
  if (this->custom_dimension_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_custom_dimension_id(), target);
  }

  // .kentik.custom_dimension.v202411alpha1.CustomDimension dimension = 2[json_name = "dimension"];
  if (this->has_dimension()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::dimension(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kentik.custom_dimension.v202411alpha1.UpdateCustomDimensionRequest)
  return target;
}

size_t UpdateCustomDimensionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kentik.custom_dimension.v202411alpha1.UpdateCustomDimensionRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .kentik.custom_dimension.v202411alpha1.CustomDimension dimension = 2[json_name = "dimension"];
  if (this->has_dimension()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *dimension_);
  }

  // uint32 custom_dimension_id = 1[json_name = "customDimensionId"];
  if (this->custom_dimension_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_custom_dimension_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateCustomDimensionRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kentik.custom_dimension.v202411alpha1.UpdateCustomDimensionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateCustomDimensionRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateCustomDimensionRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kentik.custom_dimension.v202411alpha1.UpdateCustomDimensionRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kentik.custom_dimension.v202411alpha1.UpdateCustomDimensionRequest)
    MergeFrom(*source);
  }
}

void UpdateCustomDimensionRequest::MergeFrom(const UpdateCustomDimensionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kentik.custom_dimension.v202411alpha1.UpdateCustomDimensionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_dimension()) {
    _internal_mutable_dimension()->::kentik::custom_dimension::v202411alpha1::CustomDimension::MergeFrom(from._internal_dimension());
  }
  if (from.custom_dimension_id() != 0) {
    _internal_set_custom_dimension_id(from._internal_custom_dimension_id());
  }
}

void UpdateCustomDimensionRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kentik.custom_dimension.v202411alpha1.UpdateCustomDimensionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateCustomDimensionRequest::CopyFrom(const UpdateCustomDimensionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.custom_dimension.v202411alpha1.UpdateCustomDimensionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateCustomDimensionRequest::IsInitialized() const {
  return true;
}

void UpdateCustomDimensionRequest::InternalSwap(UpdateCustomDimensionRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UpdateCustomDimensionRequest, custom_dimension_id_)
      + sizeof(UpdateCustomDimensionRequest::custom_dimension_id_)
      - PROTOBUF_FIELD_OFFSET(UpdateCustomDimensionRequest, dimension_)>(
          reinterpret_cast<char*>(&dimension_),
          reinterpret_cast<char*>(&other->dimension_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateCustomDimensionRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpdateCustomDimensionResponse::InitAsDefaultInstance() {
  ::kentik::custom_dimension::v202411alpha1::_UpdateCustomDimensionResponse_default_instance_._instance.get_mutable()->dimension_ = const_cast< ::kentik::custom_dimension::v202411alpha1::CustomDimension*>(
      ::kentik::custom_dimension::v202411alpha1::CustomDimension::internal_default_instance());
}
class UpdateCustomDimensionResponse::_Internal {
 public:
  static const ::kentik::custom_dimension::v202411alpha1::CustomDimension& dimension(const UpdateCustomDimensionResponse* msg);
};

const ::kentik::custom_dimension::v202411alpha1::CustomDimension&
UpdateCustomDimensionResponse::_Internal::dimension(const UpdateCustomDimensionResponse* msg) {
  return *msg->dimension_;
}
UpdateCustomDimensionResponse::UpdateCustomDimensionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.custom_dimension.v202411alpha1.UpdateCustomDimensionResponse)
}
UpdateCustomDimensionResponse::UpdateCustomDimensionResponse(const UpdateCustomDimensionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_dimension()) {
    dimension_ = new ::kentik::custom_dimension::v202411alpha1::CustomDimension(*from.dimension_);
  } else {
    dimension_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:kentik.custom_dimension.v202411alpha1.UpdateCustomDimensionResponse)
}

void UpdateCustomDimensionResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UpdateCustomDimensionResponse_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto.base);
  dimension_ = nullptr;
}

UpdateCustomDimensionResponse::~UpdateCustomDimensionResponse() {
  // @@protoc_insertion_point(destructor:kentik.custom_dimension.v202411alpha1.UpdateCustomDimensionResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UpdateCustomDimensionResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete dimension_;
}

void UpdateCustomDimensionResponse::ArenaDtor(void* object) {
  UpdateCustomDimensionResponse* _this = reinterpret_cast< UpdateCustomDimensionResponse* >(object);
  (void)_this;
}
void UpdateCustomDimensionResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateCustomDimensionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateCustomDimensionResponse& UpdateCustomDimensionResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpdateCustomDimensionResponse_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto.base);
  return *internal_default_instance();
}


void UpdateCustomDimensionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.custom_dimension.v202411alpha1.UpdateCustomDimensionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && dimension_ != nullptr) {
    delete dimension_;
  }
  dimension_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateCustomDimensionResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .kentik.custom_dimension.v202411alpha1.CustomDimension dimension = 1[json_name = "dimension"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_dimension(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateCustomDimensionResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kentik.custom_dimension.v202411alpha1.UpdateCustomDimensionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kentik.custom_dimension.v202411alpha1.CustomDimension dimension = 1[json_name = "dimension"];
  if (this->has_dimension()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::dimension(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kentik.custom_dimension.v202411alpha1.UpdateCustomDimensionResponse)
  return target;
}

size_t UpdateCustomDimensionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kentik.custom_dimension.v202411alpha1.UpdateCustomDimensionResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .kentik.custom_dimension.v202411alpha1.CustomDimension dimension = 1[json_name = "dimension"];
  if (this->has_dimension()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *dimension_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateCustomDimensionResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kentik.custom_dimension.v202411alpha1.UpdateCustomDimensionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateCustomDimensionResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateCustomDimensionResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kentik.custom_dimension.v202411alpha1.UpdateCustomDimensionResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kentik.custom_dimension.v202411alpha1.UpdateCustomDimensionResponse)
    MergeFrom(*source);
  }
}

void UpdateCustomDimensionResponse::MergeFrom(const UpdateCustomDimensionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kentik.custom_dimension.v202411alpha1.UpdateCustomDimensionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_dimension()) {
    _internal_mutable_dimension()->::kentik::custom_dimension::v202411alpha1::CustomDimension::MergeFrom(from._internal_dimension());
  }
}

void UpdateCustomDimensionResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kentik.custom_dimension.v202411alpha1.UpdateCustomDimensionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateCustomDimensionResponse::CopyFrom(const UpdateCustomDimensionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.custom_dimension.v202411alpha1.UpdateCustomDimensionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateCustomDimensionResponse::IsInitialized() const {
  return true;
}

void UpdateCustomDimensionResponse::InternalSwap(UpdateCustomDimensionResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(dimension_, other->dimension_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateCustomDimensionResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteCustomDimensionRequest::InitAsDefaultInstance() {
}
class DeleteCustomDimensionRequest::_Internal {
 public:
};

DeleteCustomDimensionRequest::DeleteCustomDimensionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.custom_dimension.v202411alpha1.DeleteCustomDimensionRequest)
}
DeleteCustomDimensionRequest::DeleteCustomDimensionRequest(const DeleteCustomDimensionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  custom_dimension_id_ = from.custom_dimension_id_;
  // @@protoc_insertion_point(copy_constructor:kentik.custom_dimension.v202411alpha1.DeleteCustomDimensionRequest)
}

void DeleteCustomDimensionRequest::SharedCtor() {
  custom_dimension_id_ = 0u;
}

DeleteCustomDimensionRequest::~DeleteCustomDimensionRequest() {
  // @@protoc_insertion_point(destructor:kentik.custom_dimension.v202411alpha1.DeleteCustomDimensionRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteCustomDimensionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void DeleteCustomDimensionRequest::ArenaDtor(void* object) {
  DeleteCustomDimensionRequest* _this = reinterpret_cast< DeleteCustomDimensionRequest* >(object);
  (void)_this;
}
void DeleteCustomDimensionRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteCustomDimensionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteCustomDimensionRequest& DeleteCustomDimensionRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteCustomDimensionRequest_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto.base);
  return *internal_default_instance();
}


void DeleteCustomDimensionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.custom_dimension.v202411alpha1.DeleteCustomDimensionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  custom_dimension_id_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteCustomDimensionRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 custom_dimension_id = 1[json_name = "customDimensionId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          custom_dimension_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteCustomDimensionRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kentik.custom_dimension.v202411alpha1.DeleteCustomDimensionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 custom_dimension_id = 1[json_name = "customDimensionId"];
  if (this->custom_dimension_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_custom_dimension_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kentik.custom_dimension.v202411alpha1.DeleteCustomDimensionRequest)
  return target;
}

size_t DeleteCustomDimensionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kentik.custom_dimension.v202411alpha1.DeleteCustomDimensionRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 custom_dimension_id = 1[json_name = "customDimensionId"];
  if (this->custom_dimension_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_custom_dimension_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteCustomDimensionRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kentik.custom_dimension.v202411alpha1.DeleteCustomDimensionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteCustomDimensionRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteCustomDimensionRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kentik.custom_dimension.v202411alpha1.DeleteCustomDimensionRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kentik.custom_dimension.v202411alpha1.DeleteCustomDimensionRequest)
    MergeFrom(*source);
  }
}

void DeleteCustomDimensionRequest::MergeFrom(const DeleteCustomDimensionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kentik.custom_dimension.v202411alpha1.DeleteCustomDimensionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.custom_dimension_id() != 0) {
    _internal_set_custom_dimension_id(from._internal_custom_dimension_id());
  }
}

void DeleteCustomDimensionRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kentik.custom_dimension.v202411alpha1.DeleteCustomDimensionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteCustomDimensionRequest::CopyFrom(const DeleteCustomDimensionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.custom_dimension.v202411alpha1.DeleteCustomDimensionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteCustomDimensionRequest::IsInitialized() const {
  return true;
}

void DeleteCustomDimensionRequest::InternalSwap(DeleteCustomDimensionRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(custom_dimension_id_, other->custom_dimension_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteCustomDimensionRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteCustomDimensionResponse::InitAsDefaultInstance() {
}
class DeleteCustomDimensionResponse::_Internal {
 public:
};

DeleteCustomDimensionResponse::DeleteCustomDimensionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.custom_dimension.v202411alpha1.DeleteCustomDimensionResponse)
}
DeleteCustomDimensionResponse::DeleteCustomDimensionResponse(const DeleteCustomDimensionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:kentik.custom_dimension.v202411alpha1.DeleteCustomDimensionResponse)
}

void DeleteCustomDimensionResponse::SharedCtor() {
}

DeleteCustomDimensionResponse::~DeleteCustomDimensionResponse() {
  // @@protoc_insertion_point(destructor:kentik.custom_dimension.v202411alpha1.DeleteCustomDimensionResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteCustomDimensionResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void DeleteCustomDimensionResponse::ArenaDtor(void* object) {
  DeleteCustomDimensionResponse* _this = reinterpret_cast< DeleteCustomDimensionResponse* >(object);
  (void)_this;
}
void DeleteCustomDimensionResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteCustomDimensionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteCustomDimensionResponse& DeleteCustomDimensionResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteCustomDimensionResponse_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto.base);
  return *internal_default_instance();
}


void DeleteCustomDimensionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.custom_dimension.v202411alpha1.DeleteCustomDimensionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteCustomDimensionResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteCustomDimensionResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kentik.custom_dimension.v202411alpha1.DeleteCustomDimensionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kentik.custom_dimension.v202411alpha1.DeleteCustomDimensionResponse)
  return target;
}

size_t DeleteCustomDimensionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kentik.custom_dimension.v202411alpha1.DeleteCustomDimensionResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteCustomDimensionResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kentik.custom_dimension.v202411alpha1.DeleteCustomDimensionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteCustomDimensionResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteCustomDimensionResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kentik.custom_dimension.v202411alpha1.DeleteCustomDimensionResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kentik.custom_dimension.v202411alpha1.DeleteCustomDimensionResponse)
    MergeFrom(*source);
  }
}

void DeleteCustomDimensionResponse::MergeFrom(const DeleteCustomDimensionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kentik.custom_dimension.v202411alpha1.DeleteCustomDimensionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void DeleteCustomDimensionResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kentik.custom_dimension.v202411alpha1.DeleteCustomDimensionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteCustomDimensionResponse::CopyFrom(const DeleteCustomDimensionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.custom_dimension.v202411alpha1.DeleteCustomDimensionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteCustomDimensionResponse::IsInitialized() const {
  return true;
}

void DeleteCustomDimensionResponse::InternalSwap(DeleteCustomDimensionResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteCustomDimensionResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CreatePopulatorRequest::InitAsDefaultInstance() {
  ::kentik::custom_dimension::v202411alpha1::_CreatePopulatorRequest_default_instance_._instance.get_mutable()->populator_ = const_cast< ::kentik::custom_dimension::v202411alpha1::Populator*>(
      ::kentik::custom_dimension::v202411alpha1::Populator::internal_default_instance());
}
class CreatePopulatorRequest::_Internal {
 public:
  static const ::kentik::custom_dimension::v202411alpha1::Populator& populator(const CreatePopulatorRequest* msg);
};

const ::kentik::custom_dimension::v202411alpha1::Populator&
CreatePopulatorRequest::_Internal::populator(const CreatePopulatorRequest* msg) {
  return *msg->populator_;
}
CreatePopulatorRequest::CreatePopulatorRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.custom_dimension.v202411alpha1.CreatePopulatorRequest)
}
CreatePopulatorRequest::CreatePopulatorRequest(const CreatePopulatorRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_populator()) {
    populator_ = new ::kentik::custom_dimension::v202411alpha1::Populator(*from.populator_);
  } else {
    populator_ = nullptr;
  }
  custom_dimension_id_ = from.custom_dimension_id_;
  // @@protoc_insertion_point(copy_constructor:kentik.custom_dimension.v202411alpha1.CreatePopulatorRequest)
}

void CreatePopulatorRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CreatePopulatorRequest_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto.base);
  ::memset(&populator_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&custom_dimension_id_) -
      reinterpret_cast<char*>(&populator_)) + sizeof(custom_dimension_id_));
}

CreatePopulatorRequest::~CreatePopulatorRequest() {
  // @@protoc_insertion_point(destructor:kentik.custom_dimension.v202411alpha1.CreatePopulatorRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreatePopulatorRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete populator_;
}

void CreatePopulatorRequest::ArenaDtor(void* object) {
  CreatePopulatorRequest* _this = reinterpret_cast< CreatePopulatorRequest* >(object);
  (void)_this;
}
void CreatePopulatorRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreatePopulatorRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreatePopulatorRequest& CreatePopulatorRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreatePopulatorRequest_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto.base);
  return *internal_default_instance();
}


void CreatePopulatorRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.custom_dimension.v202411alpha1.CreatePopulatorRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && populator_ != nullptr) {
    delete populator_;
  }
  populator_ = nullptr;
  custom_dimension_id_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreatePopulatorRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 custom_dimension_id = 1[json_name = "customDimensionId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          custom_dimension_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .kentik.custom_dimension.v202411alpha1.Populator populator = 2[json_name = "populator"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_populator(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreatePopulatorRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kentik.custom_dimension.v202411alpha1.CreatePopulatorRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 custom_dimension_id = 1[json_name = "customDimensionId"];
  if (this->custom_dimension_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_custom_dimension_id(), target);
  }

  // .kentik.custom_dimension.v202411alpha1.Populator populator = 2[json_name = "populator"];
  if (this->has_populator()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::populator(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kentik.custom_dimension.v202411alpha1.CreatePopulatorRequest)
  return target;
}

size_t CreatePopulatorRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kentik.custom_dimension.v202411alpha1.CreatePopulatorRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .kentik.custom_dimension.v202411alpha1.Populator populator = 2[json_name = "populator"];
  if (this->has_populator()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *populator_);
  }

  // uint32 custom_dimension_id = 1[json_name = "customDimensionId"];
  if (this->custom_dimension_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_custom_dimension_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreatePopulatorRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kentik.custom_dimension.v202411alpha1.CreatePopulatorRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreatePopulatorRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreatePopulatorRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kentik.custom_dimension.v202411alpha1.CreatePopulatorRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kentik.custom_dimension.v202411alpha1.CreatePopulatorRequest)
    MergeFrom(*source);
  }
}

void CreatePopulatorRequest::MergeFrom(const CreatePopulatorRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kentik.custom_dimension.v202411alpha1.CreatePopulatorRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_populator()) {
    _internal_mutable_populator()->::kentik::custom_dimension::v202411alpha1::Populator::MergeFrom(from._internal_populator());
  }
  if (from.custom_dimension_id() != 0) {
    _internal_set_custom_dimension_id(from._internal_custom_dimension_id());
  }
}

void CreatePopulatorRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kentik.custom_dimension.v202411alpha1.CreatePopulatorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreatePopulatorRequest::CopyFrom(const CreatePopulatorRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.custom_dimension.v202411alpha1.CreatePopulatorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreatePopulatorRequest::IsInitialized() const {
  return true;
}

void CreatePopulatorRequest::InternalSwap(CreatePopulatorRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CreatePopulatorRequest, custom_dimension_id_)
      + sizeof(CreatePopulatorRequest::custom_dimension_id_)
      - PROTOBUF_FIELD_OFFSET(CreatePopulatorRequest, populator_)>(
          reinterpret_cast<char*>(&populator_),
          reinterpret_cast<char*>(&other->populator_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CreatePopulatorRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CreatePopulatorResponse::InitAsDefaultInstance() {
  ::kentik::custom_dimension::v202411alpha1::_CreatePopulatorResponse_default_instance_._instance.get_mutable()->populator_ = const_cast< ::kentik::custom_dimension::v202411alpha1::Populator*>(
      ::kentik::custom_dimension::v202411alpha1::Populator::internal_default_instance());
}
class CreatePopulatorResponse::_Internal {
 public:
  static const ::kentik::custom_dimension::v202411alpha1::Populator& populator(const CreatePopulatorResponse* msg);
};

const ::kentik::custom_dimension::v202411alpha1::Populator&
CreatePopulatorResponse::_Internal::populator(const CreatePopulatorResponse* msg) {
  return *msg->populator_;
}
CreatePopulatorResponse::CreatePopulatorResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.custom_dimension.v202411alpha1.CreatePopulatorResponse)
}
CreatePopulatorResponse::CreatePopulatorResponse(const CreatePopulatorResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_populator()) {
    populator_ = new ::kentik::custom_dimension::v202411alpha1::Populator(*from.populator_);
  } else {
    populator_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:kentik.custom_dimension.v202411alpha1.CreatePopulatorResponse)
}

void CreatePopulatorResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CreatePopulatorResponse_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto.base);
  populator_ = nullptr;
}

CreatePopulatorResponse::~CreatePopulatorResponse() {
  // @@protoc_insertion_point(destructor:kentik.custom_dimension.v202411alpha1.CreatePopulatorResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreatePopulatorResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete populator_;
}

void CreatePopulatorResponse::ArenaDtor(void* object) {
  CreatePopulatorResponse* _this = reinterpret_cast< CreatePopulatorResponse* >(object);
  (void)_this;
}
void CreatePopulatorResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreatePopulatorResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreatePopulatorResponse& CreatePopulatorResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreatePopulatorResponse_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto.base);
  return *internal_default_instance();
}


void CreatePopulatorResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.custom_dimension.v202411alpha1.CreatePopulatorResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && populator_ != nullptr) {
    delete populator_;
  }
  populator_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreatePopulatorResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .kentik.custom_dimension.v202411alpha1.Populator populator = 1[json_name = "populator"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_populator(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreatePopulatorResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kentik.custom_dimension.v202411alpha1.CreatePopulatorResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kentik.custom_dimension.v202411alpha1.Populator populator = 1[json_name = "populator"];
  if (this->has_populator()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::populator(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kentik.custom_dimension.v202411alpha1.CreatePopulatorResponse)
  return target;
}

size_t CreatePopulatorResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kentik.custom_dimension.v202411alpha1.CreatePopulatorResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .kentik.custom_dimension.v202411alpha1.Populator populator = 1[json_name = "populator"];
  if (this->has_populator()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *populator_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreatePopulatorResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kentik.custom_dimension.v202411alpha1.CreatePopulatorResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CreatePopulatorResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreatePopulatorResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kentik.custom_dimension.v202411alpha1.CreatePopulatorResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kentik.custom_dimension.v202411alpha1.CreatePopulatorResponse)
    MergeFrom(*source);
  }
}

void CreatePopulatorResponse::MergeFrom(const CreatePopulatorResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kentik.custom_dimension.v202411alpha1.CreatePopulatorResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_populator()) {
    _internal_mutable_populator()->::kentik::custom_dimension::v202411alpha1::Populator::MergeFrom(from._internal_populator());
  }
}

void CreatePopulatorResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kentik.custom_dimension.v202411alpha1.CreatePopulatorResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreatePopulatorResponse::CopyFrom(const CreatePopulatorResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.custom_dimension.v202411alpha1.CreatePopulatorResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreatePopulatorResponse::IsInitialized() const {
  return true;
}

void CreatePopulatorResponse::InternalSwap(CreatePopulatorResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(populator_, other->populator_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreatePopulatorResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpdatePopulatorRequest::InitAsDefaultInstance() {
  ::kentik::custom_dimension::v202411alpha1::_UpdatePopulatorRequest_default_instance_._instance.get_mutable()->populator_ = const_cast< ::kentik::custom_dimension::v202411alpha1::Populator*>(
      ::kentik::custom_dimension::v202411alpha1::Populator::internal_default_instance());
}
class UpdatePopulatorRequest::_Internal {
 public:
  static const ::kentik::custom_dimension::v202411alpha1::Populator& populator(const UpdatePopulatorRequest* msg);
};

const ::kentik::custom_dimension::v202411alpha1::Populator&
UpdatePopulatorRequest::_Internal::populator(const UpdatePopulatorRequest* msg) {
  return *msg->populator_;
}
UpdatePopulatorRequest::UpdatePopulatorRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.custom_dimension.v202411alpha1.UpdatePopulatorRequest)
}
UpdatePopulatorRequest::UpdatePopulatorRequest(const UpdatePopulatorRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_populator()) {
    populator_ = new ::kentik::custom_dimension::v202411alpha1::Populator(*from.populator_);
  } else {
    populator_ = nullptr;
  }
  ::memcpy(&custom_dimension_id_, &from.custom_dimension_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&populator_id_) -
    reinterpret_cast<char*>(&custom_dimension_id_)) + sizeof(populator_id_));
  // @@protoc_insertion_point(copy_constructor:kentik.custom_dimension.v202411alpha1.UpdatePopulatorRequest)
}

void UpdatePopulatorRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UpdatePopulatorRequest_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto.base);
  ::memset(&populator_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&populator_id_) -
      reinterpret_cast<char*>(&populator_)) + sizeof(populator_id_));
}

UpdatePopulatorRequest::~UpdatePopulatorRequest() {
  // @@protoc_insertion_point(destructor:kentik.custom_dimension.v202411alpha1.UpdatePopulatorRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UpdatePopulatorRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete populator_;
}

void UpdatePopulatorRequest::ArenaDtor(void* object) {
  UpdatePopulatorRequest* _this = reinterpret_cast< UpdatePopulatorRequest* >(object);
  (void)_this;
}
void UpdatePopulatorRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdatePopulatorRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdatePopulatorRequest& UpdatePopulatorRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpdatePopulatorRequest_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto.base);
  return *internal_default_instance();
}


void UpdatePopulatorRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.custom_dimension.v202411alpha1.UpdatePopulatorRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && populator_ != nullptr) {
    delete populator_;
  }
  populator_ = nullptr;
  ::memset(&custom_dimension_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&populator_id_) -
      reinterpret_cast<char*>(&custom_dimension_id_)) + sizeof(populator_id_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdatePopulatorRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 custom_dimension_id = 1[json_name = "customDimensionId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          custom_dimension_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 populator_id = 2[json_name = "populatorId"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          populator_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .kentik.custom_dimension.v202411alpha1.Populator populator = 3[json_name = "populator"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_populator(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdatePopulatorRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kentik.custom_dimension.v202411alpha1.UpdatePopulatorRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 custom_dimension_id = 1[json_name = "customDimensionId"];
  if (this->custom_dimension_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_custom_dimension_id(), target);
  }

  // uint32 populator_id = 2[json_name = "populatorId"];
  if (this->populator_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_populator_id(), target);
  }

  // .kentik.custom_dimension.v202411alpha1.Populator populator = 3[json_name = "populator"];
  if (this->has_populator()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::populator(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kentik.custom_dimension.v202411alpha1.UpdatePopulatorRequest)
  return target;
}

size_t UpdatePopulatorRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kentik.custom_dimension.v202411alpha1.UpdatePopulatorRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .kentik.custom_dimension.v202411alpha1.Populator populator = 3[json_name = "populator"];
  if (this->has_populator()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *populator_);
  }

  // uint32 custom_dimension_id = 1[json_name = "customDimensionId"];
  if (this->custom_dimension_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_custom_dimension_id());
  }

  // uint32 populator_id = 2[json_name = "populatorId"];
  if (this->populator_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_populator_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdatePopulatorRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kentik.custom_dimension.v202411alpha1.UpdatePopulatorRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdatePopulatorRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdatePopulatorRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kentik.custom_dimension.v202411alpha1.UpdatePopulatorRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kentik.custom_dimension.v202411alpha1.UpdatePopulatorRequest)
    MergeFrom(*source);
  }
}

void UpdatePopulatorRequest::MergeFrom(const UpdatePopulatorRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kentik.custom_dimension.v202411alpha1.UpdatePopulatorRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_populator()) {
    _internal_mutable_populator()->::kentik::custom_dimension::v202411alpha1::Populator::MergeFrom(from._internal_populator());
  }
  if (from.custom_dimension_id() != 0) {
    _internal_set_custom_dimension_id(from._internal_custom_dimension_id());
  }
  if (from.populator_id() != 0) {
    _internal_set_populator_id(from._internal_populator_id());
  }
}

void UpdatePopulatorRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kentik.custom_dimension.v202411alpha1.UpdatePopulatorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdatePopulatorRequest::CopyFrom(const UpdatePopulatorRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.custom_dimension.v202411alpha1.UpdatePopulatorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdatePopulatorRequest::IsInitialized() const {
  return true;
}

void UpdatePopulatorRequest::InternalSwap(UpdatePopulatorRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UpdatePopulatorRequest, populator_id_)
      + sizeof(UpdatePopulatorRequest::populator_id_)
      - PROTOBUF_FIELD_OFFSET(UpdatePopulatorRequest, populator_)>(
          reinterpret_cast<char*>(&populator_),
          reinterpret_cast<char*>(&other->populator_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdatePopulatorRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpdatePopulatorResponse::InitAsDefaultInstance() {
  ::kentik::custom_dimension::v202411alpha1::_UpdatePopulatorResponse_default_instance_._instance.get_mutable()->populator_ = const_cast< ::kentik::custom_dimension::v202411alpha1::Populator*>(
      ::kentik::custom_dimension::v202411alpha1::Populator::internal_default_instance());
}
class UpdatePopulatorResponse::_Internal {
 public:
  static const ::kentik::custom_dimension::v202411alpha1::Populator& populator(const UpdatePopulatorResponse* msg);
};

const ::kentik::custom_dimension::v202411alpha1::Populator&
UpdatePopulatorResponse::_Internal::populator(const UpdatePopulatorResponse* msg) {
  return *msg->populator_;
}
UpdatePopulatorResponse::UpdatePopulatorResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.custom_dimension.v202411alpha1.UpdatePopulatorResponse)
}
UpdatePopulatorResponse::UpdatePopulatorResponse(const UpdatePopulatorResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_populator()) {
    populator_ = new ::kentik::custom_dimension::v202411alpha1::Populator(*from.populator_);
  } else {
    populator_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:kentik.custom_dimension.v202411alpha1.UpdatePopulatorResponse)
}

void UpdatePopulatorResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UpdatePopulatorResponse_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto.base);
  populator_ = nullptr;
}

UpdatePopulatorResponse::~UpdatePopulatorResponse() {
  // @@protoc_insertion_point(destructor:kentik.custom_dimension.v202411alpha1.UpdatePopulatorResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UpdatePopulatorResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete populator_;
}

void UpdatePopulatorResponse::ArenaDtor(void* object) {
  UpdatePopulatorResponse* _this = reinterpret_cast< UpdatePopulatorResponse* >(object);
  (void)_this;
}
void UpdatePopulatorResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdatePopulatorResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdatePopulatorResponse& UpdatePopulatorResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpdatePopulatorResponse_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto.base);
  return *internal_default_instance();
}


void UpdatePopulatorResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.custom_dimension.v202411alpha1.UpdatePopulatorResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && populator_ != nullptr) {
    delete populator_;
  }
  populator_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdatePopulatorResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .kentik.custom_dimension.v202411alpha1.Populator populator = 1[json_name = "populator"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_populator(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdatePopulatorResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kentik.custom_dimension.v202411alpha1.UpdatePopulatorResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kentik.custom_dimension.v202411alpha1.Populator populator = 1[json_name = "populator"];
  if (this->has_populator()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::populator(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kentik.custom_dimension.v202411alpha1.UpdatePopulatorResponse)
  return target;
}

size_t UpdatePopulatorResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kentik.custom_dimension.v202411alpha1.UpdatePopulatorResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .kentik.custom_dimension.v202411alpha1.Populator populator = 1[json_name = "populator"];
  if (this->has_populator()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *populator_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdatePopulatorResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kentik.custom_dimension.v202411alpha1.UpdatePopulatorResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdatePopulatorResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdatePopulatorResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kentik.custom_dimension.v202411alpha1.UpdatePopulatorResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kentik.custom_dimension.v202411alpha1.UpdatePopulatorResponse)
    MergeFrom(*source);
  }
}

void UpdatePopulatorResponse::MergeFrom(const UpdatePopulatorResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kentik.custom_dimension.v202411alpha1.UpdatePopulatorResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_populator()) {
    _internal_mutable_populator()->::kentik::custom_dimension::v202411alpha1::Populator::MergeFrom(from._internal_populator());
  }
}

void UpdatePopulatorResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kentik.custom_dimension.v202411alpha1.UpdatePopulatorResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdatePopulatorResponse::CopyFrom(const UpdatePopulatorResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.custom_dimension.v202411alpha1.UpdatePopulatorResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdatePopulatorResponse::IsInitialized() const {
  return true;
}

void UpdatePopulatorResponse::InternalSwap(UpdatePopulatorResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(populator_, other->populator_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdatePopulatorResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeletePopulatorRequest::InitAsDefaultInstance() {
}
class DeletePopulatorRequest::_Internal {
 public:
};

DeletePopulatorRequest::DeletePopulatorRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.custom_dimension.v202411alpha1.DeletePopulatorRequest)
}
DeletePopulatorRequest::DeletePopulatorRequest(const DeletePopulatorRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&custom_dimension_id_, &from.custom_dimension_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&populator_id_) -
    reinterpret_cast<char*>(&custom_dimension_id_)) + sizeof(populator_id_));
  // @@protoc_insertion_point(copy_constructor:kentik.custom_dimension.v202411alpha1.DeletePopulatorRequest)
}

void DeletePopulatorRequest::SharedCtor() {
  ::memset(&custom_dimension_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&populator_id_) -
      reinterpret_cast<char*>(&custom_dimension_id_)) + sizeof(populator_id_));
}

DeletePopulatorRequest::~DeletePopulatorRequest() {
  // @@protoc_insertion_point(destructor:kentik.custom_dimension.v202411alpha1.DeletePopulatorRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeletePopulatorRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void DeletePopulatorRequest::ArenaDtor(void* object) {
  DeletePopulatorRequest* _this = reinterpret_cast< DeletePopulatorRequest* >(object);
  (void)_this;
}
void DeletePopulatorRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeletePopulatorRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeletePopulatorRequest& DeletePopulatorRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeletePopulatorRequest_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto.base);
  return *internal_default_instance();
}


void DeletePopulatorRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.custom_dimension.v202411alpha1.DeletePopulatorRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&custom_dimension_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&populator_id_) -
      reinterpret_cast<char*>(&custom_dimension_id_)) + sizeof(populator_id_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeletePopulatorRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 custom_dimension_id = 1[json_name = "customDimensionId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          custom_dimension_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 populator_id = 2[json_name = "populatorId"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          populator_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeletePopulatorRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kentik.custom_dimension.v202411alpha1.DeletePopulatorRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 custom_dimension_id = 1[json_name = "customDimensionId"];
  if (this->custom_dimension_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_custom_dimension_id(), target);
  }

  // uint32 populator_id = 2[json_name = "populatorId"];
  if (this->populator_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_populator_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kentik.custom_dimension.v202411alpha1.DeletePopulatorRequest)
  return target;
}

size_t DeletePopulatorRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kentik.custom_dimension.v202411alpha1.DeletePopulatorRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 custom_dimension_id = 1[json_name = "customDimensionId"];
  if (this->custom_dimension_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_custom_dimension_id());
  }

  // uint32 populator_id = 2[json_name = "populatorId"];
  if (this->populator_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_populator_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeletePopulatorRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kentik.custom_dimension.v202411alpha1.DeletePopulatorRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeletePopulatorRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeletePopulatorRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kentik.custom_dimension.v202411alpha1.DeletePopulatorRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kentik.custom_dimension.v202411alpha1.DeletePopulatorRequest)
    MergeFrom(*source);
  }
}

void DeletePopulatorRequest::MergeFrom(const DeletePopulatorRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kentik.custom_dimension.v202411alpha1.DeletePopulatorRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.custom_dimension_id() != 0) {
    _internal_set_custom_dimension_id(from._internal_custom_dimension_id());
  }
  if (from.populator_id() != 0) {
    _internal_set_populator_id(from._internal_populator_id());
  }
}

void DeletePopulatorRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kentik.custom_dimension.v202411alpha1.DeletePopulatorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeletePopulatorRequest::CopyFrom(const DeletePopulatorRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.custom_dimension.v202411alpha1.DeletePopulatorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeletePopulatorRequest::IsInitialized() const {
  return true;
}

void DeletePopulatorRequest::InternalSwap(DeletePopulatorRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DeletePopulatorRequest, populator_id_)
      + sizeof(DeletePopulatorRequest::populator_id_)
      - PROTOBUF_FIELD_OFFSET(DeletePopulatorRequest, custom_dimension_id_)>(
          reinterpret_cast<char*>(&custom_dimension_id_),
          reinterpret_cast<char*>(&other->custom_dimension_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DeletePopulatorRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeletePopulatorResponse::InitAsDefaultInstance() {
}
class DeletePopulatorResponse::_Internal {
 public:
};

DeletePopulatorResponse::DeletePopulatorResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.custom_dimension.v202411alpha1.DeletePopulatorResponse)
}
DeletePopulatorResponse::DeletePopulatorResponse(const DeletePopulatorResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:kentik.custom_dimension.v202411alpha1.DeletePopulatorResponse)
}

void DeletePopulatorResponse::SharedCtor() {
}

DeletePopulatorResponse::~DeletePopulatorResponse() {
  // @@protoc_insertion_point(destructor:kentik.custom_dimension.v202411alpha1.DeletePopulatorResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeletePopulatorResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void DeletePopulatorResponse::ArenaDtor(void* object) {
  DeletePopulatorResponse* _this = reinterpret_cast< DeletePopulatorResponse* >(object);
  (void)_this;
}
void DeletePopulatorResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeletePopulatorResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeletePopulatorResponse& DeletePopulatorResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeletePopulatorResponse_kentik_2fcustom_5fdimension_2fv202411alpha1_2fcustom_5fdimension_2eproto.base);
  return *internal_default_instance();
}


void DeletePopulatorResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.custom_dimension.v202411alpha1.DeletePopulatorResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeletePopulatorResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeletePopulatorResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kentik.custom_dimension.v202411alpha1.DeletePopulatorResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kentik.custom_dimension.v202411alpha1.DeletePopulatorResponse)
  return target;
}

size_t DeletePopulatorResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kentik.custom_dimension.v202411alpha1.DeletePopulatorResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeletePopulatorResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kentik.custom_dimension.v202411alpha1.DeletePopulatorResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DeletePopulatorResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeletePopulatorResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kentik.custom_dimension.v202411alpha1.DeletePopulatorResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kentik.custom_dimension.v202411alpha1.DeletePopulatorResponse)
    MergeFrom(*source);
  }
}

void DeletePopulatorResponse::MergeFrom(const DeletePopulatorResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kentik.custom_dimension.v202411alpha1.DeletePopulatorResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void DeletePopulatorResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kentik.custom_dimension.v202411alpha1.DeletePopulatorResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeletePopulatorResponse::CopyFrom(const DeletePopulatorResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.custom_dimension.v202411alpha1.DeletePopulatorResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeletePopulatorResponse::IsInitialized() const {
  return true;
}

void DeletePopulatorResponse::InternalSwap(DeletePopulatorResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeletePopulatorResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v202411alpha1
}  // namespace custom_dimension
}  // namespace kentik
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::kentik::custom_dimension::v202411alpha1::CustomDimension* Arena::CreateMaybeMessage< ::kentik::custom_dimension::v202411alpha1::CustomDimension >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kentik::custom_dimension::v202411alpha1::CustomDimension >(arena);
}
template<> PROTOBUF_NOINLINE ::kentik::custom_dimension::v202411alpha1::Populator* Arena::CreateMaybeMessage< ::kentik::custom_dimension::v202411alpha1::Populator >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kentik::custom_dimension::v202411alpha1::Populator >(arena);
}
template<> PROTOBUF_NOINLINE ::kentik::custom_dimension::v202411alpha1::ListCustomDimensionsRequest* Arena::CreateMaybeMessage< ::kentik::custom_dimension::v202411alpha1::ListCustomDimensionsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kentik::custom_dimension::v202411alpha1::ListCustomDimensionsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::kentik::custom_dimension::v202411alpha1::ListCustomDimensionsResponse* Arena::CreateMaybeMessage< ::kentik::custom_dimension::v202411alpha1::ListCustomDimensionsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kentik::custom_dimension::v202411alpha1::ListCustomDimensionsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::kentik::custom_dimension::v202411alpha1::GetCustomDimensionInfoRequest* Arena::CreateMaybeMessage< ::kentik::custom_dimension::v202411alpha1::GetCustomDimensionInfoRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kentik::custom_dimension::v202411alpha1::GetCustomDimensionInfoRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::kentik::custom_dimension::v202411alpha1::GetCustomDimensionInfoResponse* Arena::CreateMaybeMessage< ::kentik::custom_dimension::v202411alpha1::GetCustomDimensionInfoResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kentik::custom_dimension::v202411alpha1::GetCustomDimensionInfoResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::kentik::custom_dimension::v202411alpha1::CreateCustomDimensionRequest* Arena::CreateMaybeMessage< ::kentik::custom_dimension::v202411alpha1::CreateCustomDimensionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kentik::custom_dimension::v202411alpha1::CreateCustomDimensionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::kentik::custom_dimension::v202411alpha1::CreateCustomDimensionResponse* Arena::CreateMaybeMessage< ::kentik::custom_dimension::v202411alpha1::CreateCustomDimensionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kentik::custom_dimension::v202411alpha1::CreateCustomDimensionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::kentik::custom_dimension::v202411alpha1::UpdateCustomDimensionRequest* Arena::CreateMaybeMessage< ::kentik::custom_dimension::v202411alpha1::UpdateCustomDimensionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kentik::custom_dimension::v202411alpha1::UpdateCustomDimensionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::kentik::custom_dimension::v202411alpha1::UpdateCustomDimensionResponse* Arena::CreateMaybeMessage< ::kentik::custom_dimension::v202411alpha1::UpdateCustomDimensionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kentik::custom_dimension::v202411alpha1::UpdateCustomDimensionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::kentik::custom_dimension::v202411alpha1::DeleteCustomDimensionRequest* Arena::CreateMaybeMessage< ::kentik::custom_dimension::v202411alpha1::DeleteCustomDimensionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kentik::custom_dimension::v202411alpha1::DeleteCustomDimensionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::kentik::custom_dimension::v202411alpha1::DeleteCustomDimensionResponse* Arena::CreateMaybeMessage< ::kentik::custom_dimension::v202411alpha1::DeleteCustomDimensionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kentik::custom_dimension::v202411alpha1::DeleteCustomDimensionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::kentik::custom_dimension::v202411alpha1::CreatePopulatorRequest* Arena::CreateMaybeMessage< ::kentik::custom_dimension::v202411alpha1::CreatePopulatorRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kentik::custom_dimension::v202411alpha1::CreatePopulatorRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::kentik::custom_dimension::v202411alpha1::CreatePopulatorResponse* Arena::CreateMaybeMessage< ::kentik::custom_dimension::v202411alpha1::CreatePopulatorResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kentik::custom_dimension::v202411alpha1::CreatePopulatorResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::kentik::custom_dimension::v202411alpha1::UpdatePopulatorRequest* Arena::CreateMaybeMessage< ::kentik::custom_dimension::v202411alpha1::UpdatePopulatorRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kentik::custom_dimension::v202411alpha1::UpdatePopulatorRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::kentik::custom_dimension::v202411alpha1::UpdatePopulatorResponse* Arena::CreateMaybeMessage< ::kentik::custom_dimension::v202411alpha1::UpdatePopulatorResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kentik::custom_dimension::v202411alpha1::UpdatePopulatorResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::kentik::custom_dimension::v202411alpha1::DeletePopulatorRequest* Arena::CreateMaybeMessage< ::kentik::custom_dimension::v202411alpha1::DeletePopulatorRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kentik::custom_dimension::v202411alpha1::DeletePopulatorRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::kentik::custom_dimension::v202411alpha1::DeletePopulatorResponse* Arena::CreateMaybeMessage< ::kentik::custom_dimension::v202411alpha1::DeletePopulatorResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kentik::custom_dimension::v202411alpha1::DeletePopulatorResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
