// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: kentik/vault/v202312alpha1/vault.proto
// Protobuf C++ Version: 5.29.3

#ifndef kentik_2fvault_2fv202312alpha1_2fvault_2eproto_2epb_2eh
#define kentik_2fvault_2fv202312alpha1_2fvault_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "google/api/annotations.pb.h"
#include "google/api/client.pb.h"
#include "google/api/field_behavior.pb.h"
#include "google/protobuf/timestamp.pb.h"
#include "protoc-gen-openapiv2/options/annotations.pb.h"
#include "kentik/core/v202303/annotations.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_kentik_2fvault_2fv202312alpha1_2fvault_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_kentik_2fvault_2fv202312alpha1_2fvault_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_kentik_2fvault_2fv202312alpha1_2fvault_2eproto;
namespace kentik {
namespace vault {
namespace v202312alpha1 {
class GetSecretRequest;
struct GetSecretRequestDefaultTypeInternal;
extern GetSecretRequestDefaultTypeInternal _GetSecretRequest_default_instance_;
class GetSecretResponse;
struct GetSecretResponseDefaultTypeInternal;
extern GetSecretResponseDefaultTypeInternal _GetSecretResponse_default_instance_;
class ListSecretRequest;
struct ListSecretRequestDefaultTypeInternal;
extern ListSecretRequestDefaultTypeInternal _ListSecretRequest_default_instance_;
class ListSecretResponse;
struct ListSecretResponseDefaultTypeInternal;
extern ListSecretResponseDefaultTypeInternal _ListSecretResponse_default_instance_;
class Secret;
struct SecretDefaultTypeInternal;
extern SecretDefaultTypeInternal _Secret_default_instance_;
}  // namespace v202312alpha1
}  // namespace vault
}  // namespace kentik
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace kentik {
namespace vault {
namespace v202312alpha1 {
enum SecretType : int {
  SECRET_TYPE_UNSPECIFIED = 0,
  SECRET_TYPE_BASIC_AUTH = 1,
  SECRET_TYPE_SNMP_V1 = 2,
  SECRET_TYPE_SNMP_V2C = 3,
  SECRET_TYPE_SNMP_V3 = 4,
  SECRET_TYPE_STREAMING_TELEMETRY = 5,
  SECRET_TYPE_BGP_MD5 = 6,
  SECRET_TYPE_API_TOKEN = 7,
  SECRET_TYPE_OTHER = 8,
  SecretType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  SecretType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool SecretType_IsValid(int value);
extern const uint32_t SecretType_internal_data_[];
constexpr SecretType SecretType_MIN = static_cast<SecretType>(0);
constexpr SecretType SecretType_MAX = static_cast<SecretType>(8);
constexpr int SecretType_ARRAYSIZE = 8 + 1;
const ::google::protobuf::EnumDescriptor*
SecretType_descriptor();
template <typename T>
const std::string& SecretType_Name(T value) {
  static_assert(std::is_same<T, SecretType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to SecretType_Name().");
  return SecretType_Name(static_cast<SecretType>(value));
}
template <>
inline const std::string& SecretType_Name(SecretType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<SecretType_descriptor,
                                                 0, 8>(
      static_cast<int>(value));
}
inline bool SecretType_Parse(absl::string_view name, SecretType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SecretType>(
      SecretType_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class Secret final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.vault.v202312alpha1.Secret) */ {
 public:
  inline Secret() : Secret(nullptr) {}
  ~Secret() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Secret* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Secret));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Secret(
      ::google::protobuf::internal::ConstantInitialized);

  inline Secret(const Secret& from) : Secret(nullptr, from) {}
  inline Secret(Secret&& from) noexcept
      : Secret(nullptr, std::move(from)) {}
  inline Secret& operator=(const Secret& from) {
    CopyFrom(from);
    return *this;
  }
  inline Secret& operator=(Secret&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Secret& default_instance() {
    return *internal_default_instance();
  }
  static inline const Secret* internal_default_instance() {
    return reinterpret_cast<const Secret*>(
        &_Secret_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(Secret& a, Secret& b) { a.Swap(&b); }
  inline void Swap(Secret* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Secret* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Secret* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Secret>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Secret& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Secret& from) { Secret::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Secret* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.vault.v202312alpha1.Secret"; }

 protected:
  explicit Secret(::google::protobuf::Arena* arena);
  Secret(::google::protobuf::Arena* arena, const Secret& from);
  Secret(::google::protobuf::Arena* arena, Secret&& from) noexcept
      : Secret(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNameFieldNumber = 1,
    kValueFieldNumber = 2,
    kDescriptionFieldNumber = 4,
    kIdFieldNumber = 6,
    kVersionFieldNumber = 3,
    kTypeFieldNumber = 5,
  };
  // string name = 1 [json_name = "name", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // string value = 2 [json_name = "value", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_value() ;
  const std::string& value() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_value(Arg_&& arg, Args_... args);
  std::string* mutable_value();
  PROTOBUF_NODISCARD std::string* release_value();
  void set_allocated_value(std::string* value);

  private:
  const std::string& _internal_value() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_value(
      const std::string& value);
  std::string* _internal_mutable_value();

  public:
  // string description = 4 [json_name = "description", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_description() ;
  const std::string& description() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_description(Arg_&& arg, Args_... args);
  std::string* mutable_description();
  PROTOBUF_NODISCARD std::string* release_description();
  void set_allocated_description(std::string* value);

  private:
  const std::string& _internal_description() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_description(
      const std::string& value);
  std::string* _internal_mutable_description();

  public:
  // string id = 6 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // uint32 version = 3 [json_name = "version", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_version() ;
  ::uint32_t version() const;
  void set_version(::uint32_t value);

  private:
  ::uint32_t _internal_version() const;
  void _internal_set_version(::uint32_t value);

  public:
  // .kentik.vault.v202312alpha1.SecretType type = 5 [json_name = "type", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_type() ;
  ::kentik::vault::v202312alpha1::SecretType type() const;
  void set_type(::kentik::vault::v202312alpha1::SecretType value);

  private:
  ::kentik::vault::v202312alpha1::SecretType _internal_type() const;
  void _internal_set_type(::kentik::vault::v202312alpha1::SecretType value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.vault.v202312alpha1.Secret)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 0,
      64, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Secret& from_msg);
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr value_;
    ::google::protobuf::internal::ArenaStringPtr description_;
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::uint32_t version_;
    int type_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fvault_2fv202312alpha1_2fvault_2eproto;
};
// -------------------------------------------------------------------

class ListSecretRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.vault.v202312alpha1.ListSecretRequest) */ {
 public:
  inline ListSecretRequest() : ListSecretRequest(nullptr) {}
  ~ListSecretRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ListSecretRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ListSecretRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListSecretRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListSecretRequest(const ListSecretRequest& from) : ListSecretRequest(nullptr, from) {}
  inline ListSecretRequest(ListSecretRequest&& from) noexcept
      : ListSecretRequest(nullptr, std::move(from)) {}
  inline ListSecretRequest& operator=(const ListSecretRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListSecretRequest& operator=(ListSecretRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListSecretRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListSecretRequest* internal_default_instance() {
    return reinterpret_cast<const ListSecretRequest*>(
        &_ListSecretRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(ListSecretRequest& a, ListSecretRequest& b) { a.Swap(&b); }
  inline void Swap(ListSecretRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListSecretRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListSecretRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ListSecretRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListSecretRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListSecretRequest& from) { ListSecretRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ListSecretRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.vault.v202312alpha1.ListSecretRequest"; }

 protected:
  explicit ListSecretRequest(::google::protobuf::Arena* arena);
  ListSecretRequest(::google::protobuf::Arena* arena, const ListSecretRequest& from);
  ListSecretRequest(::google::protobuf::Arena* arena, ListSecretRequest&& from) noexcept
      : ListSecretRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNamesFieldNumber = 1,
  };
  // repeated string names = 1 [json_name = "names", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int names_size() const;
  private:
  int _internal_names_size() const;

  public:
  void clear_names() ;
  const std::string& names(int index) const;
  std::string* mutable_names(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_names(int index, Arg_&& value, Args_... args);
  std::string* add_names();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_names(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& names() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_names();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_names() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_names();

  public:
  // @@protoc_insertion_point(class_scope:kentik.vault.v202312alpha1.ListSecretRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      58, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListSecretRequest& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> names_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fvault_2fv202312alpha1_2fvault_2eproto;
};
// -------------------------------------------------------------------

class GetSecretRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.vault.v202312alpha1.GetSecretRequest) */ {
 public:
  inline GetSecretRequest() : GetSecretRequest(nullptr) {}
  ~GetSecretRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetSecretRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetSecretRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetSecretRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetSecretRequest(const GetSecretRequest& from) : GetSecretRequest(nullptr, from) {}
  inline GetSecretRequest(GetSecretRequest&& from) noexcept
      : GetSecretRequest(nullptr, std::move(from)) {}
  inline GetSecretRequest& operator=(const GetSecretRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetSecretRequest& operator=(GetSecretRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetSecretRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetSecretRequest* internal_default_instance() {
    return reinterpret_cast<const GetSecretRequest*>(
        &_GetSecretRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(GetSecretRequest& a, GetSecretRequest& b) { a.Swap(&b); }
  inline void Swap(GetSecretRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetSecretRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetSecretRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetSecretRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetSecretRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetSecretRequest& from) { GetSecretRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetSecretRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.vault.v202312alpha1.GetSecretRequest"; }

 protected:
  explicit GetSecretRequest(::google::protobuf::Arena* arena);
  GetSecretRequest(::google::protobuf::Arena* arena, const GetSecretRequest& from);
  GetSecretRequest(::google::protobuf::Arena* arena, GetSecretRequest&& from) noexcept
      : GetSecretRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNameFieldNumber = 1,
  };
  // string name = 1 [json_name = "name", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // @@protoc_insertion_point(class_scope:kentik.vault.v202312alpha1.GetSecretRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      56, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetSecretRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fvault_2fv202312alpha1_2fvault_2eproto;
};
// -------------------------------------------------------------------

class ListSecretResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.vault.v202312alpha1.ListSecretResponse) */ {
 public:
  inline ListSecretResponse() : ListSecretResponse(nullptr) {}
  ~ListSecretResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ListSecretResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ListSecretResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListSecretResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListSecretResponse(const ListSecretResponse& from) : ListSecretResponse(nullptr, from) {}
  inline ListSecretResponse(ListSecretResponse&& from) noexcept
      : ListSecretResponse(nullptr, std::move(from)) {}
  inline ListSecretResponse& operator=(const ListSecretResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListSecretResponse& operator=(ListSecretResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListSecretResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListSecretResponse* internal_default_instance() {
    return reinterpret_cast<const ListSecretResponse*>(
        &_ListSecretResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(ListSecretResponse& a, ListSecretResponse& b) { a.Swap(&b); }
  inline void Swap(ListSecretResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListSecretResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListSecretResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ListSecretResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListSecretResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListSecretResponse& from) { ListSecretResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ListSecretResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.vault.v202312alpha1.ListSecretResponse"; }

 protected:
  explicit ListSecretResponse(::google::protobuf::Arena* arena);
  ListSecretResponse(::google::protobuf::Arena* arena, const ListSecretResponse& from);
  ListSecretResponse(::google::protobuf::Arena* arena, ListSecretResponse&& from) noexcept
      : ListSecretResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSecretsFieldNumber = 1,
    kInvalidCredentialCountFieldNumber = 2,
  };
  // repeated .kentik.vault.v202312alpha1.Secret secrets = 1 [json_name = "secrets", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int secrets_size() const;
  private:
  int _internal_secrets_size() const;

  public:
  void clear_secrets() ;
  ::kentik::vault::v202312alpha1::Secret* mutable_secrets(int index);
  ::google::protobuf::RepeatedPtrField<::kentik::vault::v202312alpha1::Secret>* mutable_secrets();

  private:
  const ::google::protobuf::RepeatedPtrField<::kentik::vault::v202312alpha1::Secret>& _internal_secrets() const;
  ::google::protobuf::RepeatedPtrField<::kentik::vault::v202312alpha1::Secret>* _internal_mutable_secrets();
  public:
  const ::kentik::vault::v202312alpha1::Secret& secrets(int index) const;
  ::kentik::vault::v202312alpha1::Secret* add_secrets();
  const ::google::protobuf::RepeatedPtrField<::kentik::vault::v202312alpha1::Secret>& secrets() const;
  // uint32 invalid_credential_count = 2 [json_name = "invalidCredentialCount", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_invalid_credential_count() ;
  ::uint32_t invalid_credential_count() const;
  void set_invalid_credential_count(::uint32_t value);

  private:
  ::uint32_t _internal_invalid_credential_count() const;
  void _internal_set_invalid_credential_count(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.vault.v202312alpha1.ListSecretResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListSecretResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::kentik::vault::v202312alpha1::Secret > secrets_;
    ::uint32_t invalid_credential_count_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fvault_2fv202312alpha1_2fvault_2eproto;
};
// -------------------------------------------------------------------

class GetSecretResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.vault.v202312alpha1.GetSecretResponse) */ {
 public:
  inline GetSecretResponse() : GetSecretResponse(nullptr) {}
  ~GetSecretResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetSecretResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetSecretResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetSecretResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetSecretResponse(const GetSecretResponse& from) : GetSecretResponse(nullptr, from) {}
  inline GetSecretResponse(GetSecretResponse&& from) noexcept
      : GetSecretResponse(nullptr, std::move(from)) {}
  inline GetSecretResponse& operator=(const GetSecretResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetSecretResponse& operator=(GetSecretResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetSecretResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetSecretResponse* internal_default_instance() {
    return reinterpret_cast<const GetSecretResponse*>(
        &_GetSecretResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(GetSecretResponse& a, GetSecretResponse& b) { a.Swap(&b); }
  inline void Swap(GetSecretResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetSecretResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetSecretResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetSecretResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetSecretResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetSecretResponse& from) { GetSecretResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetSecretResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.vault.v202312alpha1.GetSecretResponse"; }

 protected:
  explicit GetSecretResponse(::google::protobuf::Arena* arena);
  GetSecretResponse(::google::protobuf::Arena* arena, const GetSecretResponse& from);
  GetSecretResponse(::google::protobuf::Arena* arena, GetSecretResponse&& from) noexcept
      : GetSecretResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSecretFieldNumber = 1,
  };
  // .kentik.vault.v202312alpha1.Secret secret = 1 [json_name = "secret", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_secret() const;
  void clear_secret() ;
  const ::kentik::vault::v202312alpha1::Secret& secret() const;
  PROTOBUF_NODISCARD ::kentik::vault::v202312alpha1::Secret* release_secret();
  ::kentik::vault::v202312alpha1::Secret* mutable_secret();
  void set_allocated_secret(::kentik::vault::v202312alpha1::Secret* value);
  void unsafe_arena_set_allocated_secret(::kentik::vault::v202312alpha1::Secret* value);
  ::kentik::vault::v202312alpha1::Secret* unsafe_arena_release_secret();

  private:
  const ::kentik::vault::v202312alpha1::Secret& _internal_secret() const;
  ::kentik::vault::v202312alpha1::Secret* _internal_mutable_secret();

  public:
  // @@protoc_insertion_point(class_scope:kentik.vault.v202312alpha1.GetSecretResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetSecretResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::kentik::vault::v202312alpha1::Secret* secret_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fvault_2fv202312alpha1_2fvault_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Secret

// string name = 1 [json_name = "name", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Secret::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& Secret::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.vault.v202312alpha1.Secret.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Secret::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.vault.v202312alpha1.Secret.name)
}
inline std::string* Secret::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:kentik.vault.v202312alpha1.Secret.name)
  return _s;
}
inline const std::string& Secret::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void Secret::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* Secret::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* Secret::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.vault.v202312alpha1.Secret.name)
  return _impl_.name_.Release();
}
inline void Secret::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.vault.v202312alpha1.Secret.name)
}

// string value = 2 [json_name = "value", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Secret::clear_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_.ClearToEmpty();
}
inline const std::string& Secret::value() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.vault.v202312alpha1.Secret.value)
  return _internal_value();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Secret::set_value(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.vault.v202312alpha1.Secret.value)
}
inline std::string* Secret::mutable_value() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_value();
  // @@protoc_insertion_point(field_mutable:kentik.vault.v202312alpha1.Secret.value)
  return _s;
}
inline const std::string& Secret::_internal_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.value_.Get();
}
inline void Secret::_internal_set_value(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_.Set(value, GetArena());
}
inline std::string* Secret::_internal_mutable_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.value_.Mutable( GetArena());
}
inline std::string* Secret::release_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.vault.v202312alpha1.Secret.value)
  return _impl_.value_.Release();
}
inline void Secret::set_allocated_value(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.value_.IsDefault()) {
    _impl_.value_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.vault.v202312alpha1.Secret.value)
}

// uint32 version = 3 [json_name = "version", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Secret::clear_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_ = 0u;
}
inline ::uint32_t Secret::version() const {
  // @@protoc_insertion_point(field_get:kentik.vault.v202312alpha1.Secret.version)
  return _internal_version();
}
inline void Secret::set_version(::uint32_t value) {
  _internal_set_version(value);
  // @@protoc_insertion_point(field_set:kentik.vault.v202312alpha1.Secret.version)
}
inline ::uint32_t Secret::_internal_version() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.version_;
}
inline void Secret::_internal_set_version(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_ = value;
}

// string description = 4 [json_name = "description", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Secret::clear_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.ClearToEmpty();
}
inline const std::string& Secret::description() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.vault.v202312alpha1.Secret.description)
  return _internal_description();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Secret::set_description(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.vault.v202312alpha1.Secret.description)
}
inline std::string* Secret::mutable_description() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_description();
  // @@protoc_insertion_point(field_mutable:kentik.vault.v202312alpha1.Secret.description)
  return _s;
}
inline const std::string& Secret::_internal_description() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.description_.Get();
}
inline void Secret::_internal_set_description(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.Set(value, GetArena());
}
inline std::string* Secret::_internal_mutable_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.description_.Mutable( GetArena());
}
inline std::string* Secret::release_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.vault.v202312alpha1.Secret.description)
  return _impl_.description_.Release();
}
inline void Secret::set_allocated_description(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.description_.IsDefault()) {
    _impl_.description_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.vault.v202312alpha1.Secret.description)
}

// .kentik.vault.v202312alpha1.SecretType type = 5 [json_name = "type", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Secret::clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = 0;
}
inline ::kentik::vault::v202312alpha1::SecretType Secret::type() const {
  // @@protoc_insertion_point(field_get:kentik.vault.v202312alpha1.Secret.type)
  return _internal_type();
}
inline void Secret::set_type(::kentik::vault::v202312alpha1::SecretType value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:kentik.vault.v202312alpha1.Secret.type)
}
inline ::kentik::vault::v202312alpha1::SecretType Secret::_internal_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::kentik::vault::v202312alpha1::SecretType>(_impl_.type_);
}
inline void Secret::_internal_set_type(::kentik::vault::v202312alpha1::SecretType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = value;
}

// string id = 6 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Secret::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& Secret::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.vault.v202312alpha1.Secret.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Secret::set_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.vault.v202312alpha1.Secret.id)
}
inline std::string* Secret::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:kentik.vault.v202312alpha1.Secret.id)
  return _s;
}
inline const std::string& Secret::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void Secret::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(value, GetArena());
}
inline std::string* Secret::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* Secret::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.vault.v202312alpha1.Secret.id)
  return _impl_.id_.Release();
}
inline void Secret::set_allocated_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.id_.IsDefault()) {
    _impl_.id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.vault.v202312alpha1.Secret.id)
}

// -------------------------------------------------------------------

// GetSecretRequest

// string name = 1 [json_name = "name", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void GetSecretRequest::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& GetSecretRequest::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.vault.v202312alpha1.GetSecretRequest.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetSecretRequest::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.vault.v202312alpha1.GetSecretRequest.name)
}
inline std::string* GetSecretRequest::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:kentik.vault.v202312alpha1.GetSecretRequest.name)
  return _s;
}
inline const std::string& GetSecretRequest::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void GetSecretRequest::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* GetSecretRequest::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* GetSecretRequest::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.vault.v202312alpha1.GetSecretRequest.name)
  return _impl_.name_.Release();
}
inline void GetSecretRequest::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.vault.v202312alpha1.GetSecretRequest.name)
}

// -------------------------------------------------------------------

// GetSecretResponse

// .kentik.vault.v202312alpha1.Secret secret = 1 [json_name = "secret", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool GetSecretResponse::has_secret() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.secret_ != nullptr);
  return value;
}
inline void GetSecretResponse::clear_secret() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.secret_ != nullptr) _impl_.secret_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::kentik::vault::v202312alpha1::Secret& GetSecretResponse::_internal_secret() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::vault::v202312alpha1::Secret* p = _impl_.secret_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::vault::v202312alpha1::Secret&>(::kentik::vault::v202312alpha1::_Secret_default_instance_);
}
inline const ::kentik::vault::v202312alpha1::Secret& GetSecretResponse::secret() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.vault.v202312alpha1.GetSecretResponse.secret)
  return _internal_secret();
}
inline void GetSecretResponse::unsafe_arena_set_allocated_secret(::kentik::vault::v202312alpha1::Secret* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.secret_);
  }
  _impl_.secret_ = reinterpret_cast<::kentik::vault::v202312alpha1::Secret*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.vault.v202312alpha1.GetSecretResponse.secret)
}
inline ::kentik::vault::v202312alpha1::Secret* GetSecretResponse::release_secret() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::vault::v202312alpha1::Secret* released = _impl_.secret_;
  _impl_.secret_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::vault::v202312alpha1::Secret* GetSecretResponse::unsafe_arena_release_secret() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.vault.v202312alpha1.GetSecretResponse.secret)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::vault::v202312alpha1::Secret* temp = _impl_.secret_;
  _impl_.secret_ = nullptr;
  return temp;
}
inline ::kentik::vault::v202312alpha1::Secret* GetSecretResponse::_internal_mutable_secret() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.secret_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::vault::v202312alpha1::Secret>(GetArena());
    _impl_.secret_ = reinterpret_cast<::kentik::vault::v202312alpha1::Secret*>(p);
  }
  return _impl_.secret_;
}
inline ::kentik::vault::v202312alpha1::Secret* GetSecretResponse::mutable_secret() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::kentik::vault::v202312alpha1::Secret* _msg = _internal_mutable_secret();
  // @@protoc_insertion_point(field_mutable:kentik.vault.v202312alpha1.GetSecretResponse.secret)
  return _msg;
}
inline void GetSecretResponse::set_allocated_secret(::kentik::vault::v202312alpha1::Secret* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.secret_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.secret_ = reinterpret_cast<::kentik::vault::v202312alpha1::Secret*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.vault.v202312alpha1.GetSecretResponse.secret)
}

// -------------------------------------------------------------------

// ListSecretRequest

// repeated string names = 1 [json_name = "names", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int ListSecretRequest::_internal_names_size() const {
  return _internal_names().size();
}
inline int ListSecretRequest::names_size() const {
  return _internal_names_size();
}
inline void ListSecretRequest::clear_names() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.names_.Clear();
}
inline std::string* ListSecretRequest::add_names() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_names()->Add();
  // @@protoc_insertion_point(field_add_mutable:kentik.vault.v202312alpha1.ListSecretRequest.names)
  return _s;
}
inline const std::string& ListSecretRequest::names(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.vault.v202312alpha1.ListSecretRequest.names)
  return _internal_names().Get(index);
}
inline std::string* ListSecretRequest::mutable_names(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.vault.v202312alpha1.ListSecretRequest.names)
  return _internal_mutable_names()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void ListSecretRequest::set_names(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_names()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:kentik.vault.v202312alpha1.ListSecretRequest.names)
}
template <typename Arg_, typename... Args_>
inline void ListSecretRequest::add_names(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_names(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:kentik.vault.v202312alpha1.ListSecretRequest.names)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ListSecretRequest::names() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.vault.v202312alpha1.ListSecretRequest.names)
  return _internal_names();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ListSecretRequest::mutable_names() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.vault.v202312alpha1.ListSecretRequest.names)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_names();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ListSecretRequest::_internal_names() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.names_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ListSecretRequest::_internal_mutable_names() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.names_;
}

// -------------------------------------------------------------------

// ListSecretResponse

// repeated .kentik.vault.v202312alpha1.Secret secrets = 1 [json_name = "secrets", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int ListSecretResponse::_internal_secrets_size() const {
  return _internal_secrets().size();
}
inline int ListSecretResponse::secrets_size() const {
  return _internal_secrets_size();
}
inline void ListSecretResponse::clear_secrets() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.secrets_.Clear();
}
inline ::kentik::vault::v202312alpha1::Secret* ListSecretResponse::mutable_secrets(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.vault.v202312alpha1.ListSecretResponse.secrets)
  return _internal_mutable_secrets()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::kentik::vault::v202312alpha1::Secret>* ListSecretResponse::mutable_secrets()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.vault.v202312alpha1.ListSecretResponse.secrets)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_secrets();
}
inline const ::kentik::vault::v202312alpha1::Secret& ListSecretResponse::secrets(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.vault.v202312alpha1.ListSecretResponse.secrets)
  return _internal_secrets().Get(index);
}
inline ::kentik::vault::v202312alpha1::Secret* ListSecretResponse::add_secrets() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::kentik::vault::v202312alpha1::Secret* _add = _internal_mutable_secrets()->Add();
  // @@protoc_insertion_point(field_add:kentik.vault.v202312alpha1.ListSecretResponse.secrets)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::vault::v202312alpha1::Secret>& ListSecretResponse::secrets() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.vault.v202312alpha1.ListSecretResponse.secrets)
  return _internal_secrets();
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::vault::v202312alpha1::Secret>&
ListSecretResponse::_internal_secrets() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.secrets_;
}
inline ::google::protobuf::RepeatedPtrField<::kentik::vault::v202312alpha1::Secret>*
ListSecretResponse::_internal_mutable_secrets() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.secrets_;
}

// uint32 invalid_credential_count = 2 [json_name = "invalidCredentialCount", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void ListSecretResponse::clear_invalid_credential_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.invalid_credential_count_ = 0u;
}
inline ::uint32_t ListSecretResponse::invalid_credential_count() const {
  // @@protoc_insertion_point(field_get:kentik.vault.v202312alpha1.ListSecretResponse.invalid_credential_count)
  return _internal_invalid_credential_count();
}
inline void ListSecretResponse::set_invalid_credential_count(::uint32_t value) {
  _internal_set_invalid_credential_count(value);
  // @@protoc_insertion_point(field_set:kentik.vault.v202312alpha1.ListSecretResponse.invalid_credential_count)
}
inline ::uint32_t ListSecretResponse::_internal_invalid_credential_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.invalid_credential_count_;
}
inline void ListSecretResponse::_internal_set_invalid_credential_count(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.invalid_credential_count_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v202312alpha1
}  // namespace vault
}  // namespace kentik


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::kentik::vault::v202312alpha1::SecretType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::kentik::vault::v202312alpha1::SecretType>() {
  return ::kentik::vault::v202312alpha1::SecretType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // kentik_2fvault_2fv202312alpha1_2fvault_2eproto_2epb_2eh
