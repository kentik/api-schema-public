// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: kentik/saved_filter/v202501alpha1/saved_filter_message.proto

#include "kentik/saved_filter/v202501alpha1/saved_filter_message.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2ftimestamp_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_5fmessage_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SavedFilterFilter_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_5fmessage_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_5fmessage_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SavedFilterFilterGroup_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_5fmessage_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_5fmessage_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SavedFilterFilters_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_5fmessage_2eproto;
namespace kentik {
namespace saved_filter {
namespace v202501alpha1 {
class SavedFilterFilterDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SavedFilterFilter> _instance;
} _SavedFilterFilter_default_instance_;
class SavedFilterFilterGroupDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SavedFilterFilterGroup> _instance;
} _SavedFilterFilterGroup_default_instance_;
class SavedFilterFiltersDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SavedFilterFilters> _instance;
} _SavedFilterFilters_default_instance_;
class SavedFilterDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SavedFilter> _instance;
} _SavedFilter_default_instance_;
}  // namespace v202501alpha1
}  // namespace saved_filter
}  // namespace kentik
static void InitDefaultsscc_info_SavedFilter_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_5fmessage_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kentik::saved_filter::v202501alpha1::_SavedFilter_default_instance_;
    new (ptr) ::kentik::saved_filter::v202501alpha1::SavedFilter();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kentik::saved_filter::v202501alpha1::SavedFilter::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_SavedFilter_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_5fmessage_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_SavedFilter_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_5fmessage_2eproto}, {
      &scc_info_SavedFilterFilters_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_5fmessage_2eproto.base,
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,}};

static void InitDefaultsscc_info_SavedFilterFilter_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_5fmessage_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kentik::saved_filter::v202501alpha1::_SavedFilterFilter_default_instance_;
    new (ptr) ::kentik::saved_filter::v202501alpha1::SavedFilterFilter();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kentik::saved_filter::v202501alpha1::SavedFilterFilter::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SavedFilterFilter_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_5fmessage_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SavedFilterFilter_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_5fmessage_2eproto}, {}};

static void InitDefaultsscc_info_SavedFilterFilterGroup_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_5fmessage_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kentik::saved_filter::v202501alpha1::_SavedFilterFilterGroup_default_instance_;
    new (ptr) ::kentik::saved_filter::v202501alpha1::SavedFilterFilterGroup();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kentik::saved_filter::v202501alpha1::SavedFilterFilterGroup::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SavedFilterFilterGroup_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_5fmessage_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SavedFilterFilterGroup_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_5fmessage_2eproto}, {
      &scc_info_SavedFilterFilter_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_5fmessage_2eproto.base,}};

static void InitDefaultsscc_info_SavedFilterFilters_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_5fmessage_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kentik::saved_filter::v202501alpha1::_SavedFilterFilters_default_instance_;
    new (ptr) ::kentik::saved_filter::v202501alpha1::SavedFilterFilters();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kentik::saved_filter::v202501alpha1::SavedFilterFilters::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SavedFilterFilters_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_5fmessage_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SavedFilterFilters_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_5fmessage_2eproto}, {
      &scc_info_SavedFilterFilterGroup_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_5fmessage_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_5fmessage_2eproto[4];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_5fmessage_2eproto[3];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_5fmessage_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_5fmessage_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kentik::saved_filter::v202501alpha1::SavedFilterFilter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kentik::saved_filter::v202501alpha1::SavedFilterFilter, filter_field_),
  PROTOBUF_FIELD_OFFSET(::kentik::saved_filter::v202501alpha1::SavedFilterFilter, operator__),
  PROTOBUF_FIELD_OFFSET(::kentik::saved_filter::v202501alpha1::SavedFilterFilter, filter_value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kentik::saved_filter::v202501alpha1::SavedFilterFilterGroup, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kentik::saved_filter::v202501alpha1::SavedFilterFilterGroup, any_),
  PROTOBUF_FIELD_OFFSET(::kentik::saved_filter::v202501alpha1::SavedFilterFilterGroup, filters_),
  PROTOBUF_FIELD_OFFSET(::kentik::saved_filter::v202501alpha1::SavedFilterFilterGroup, not__),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kentik::saved_filter::v202501alpha1::SavedFilterFilters, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kentik::saved_filter::v202501alpha1::SavedFilterFilters, any_),
  PROTOBUF_FIELD_OFFSET(::kentik::saved_filter::v202501alpha1::SavedFilterFilters, filter_groups_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kentik::saved_filter::v202501alpha1::SavedFilter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kentik::saved_filter::v202501alpha1::SavedFilter, id_),
  PROTOBUF_FIELD_OFFSET(::kentik::saved_filter::v202501alpha1::SavedFilter, filter_name_),
  PROTOBUF_FIELD_OFFSET(::kentik::saved_filter::v202501alpha1::SavedFilter, filter_description_),
  PROTOBUF_FIELD_OFFSET(::kentik::saved_filter::v202501alpha1::SavedFilter, filters_),
  PROTOBUF_FIELD_OFFSET(::kentik::saved_filter::v202501alpha1::SavedFilter, filter_level_),
  PROTOBUF_FIELD_OFFSET(::kentik::saved_filter::v202501alpha1::SavedFilter, created_date_),
  PROTOBUF_FIELD_OFFSET(::kentik::saved_filter::v202501alpha1::SavedFilter, updated_date_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::kentik::saved_filter::v202501alpha1::SavedFilterFilter)},
  { 8, -1, sizeof(::kentik::saved_filter::v202501alpha1::SavedFilterFilterGroup)},
  { 16, -1, sizeof(::kentik::saved_filter::v202501alpha1::SavedFilterFilters)},
  { 23, -1, sizeof(::kentik::saved_filter::v202501alpha1::SavedFilter)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::kentik::saved_filter::v202501alpha1::_SavedFilterFilter_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::kentik::saved_filter::v202501alpha1::_SavedFilterFilterGroup_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::kentik::saved_filter::v202501alpha1::_SavedFilterFilters_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::kentik::saved_filter::v202501alpha1::_SavedFilter_default_instance_),
};

const char descriptor_table_protodef_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_5fmessage_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n<kentik/saved_filter/v202501alpha1/save"
  "d_filter_message.proto\022!kentik.saved_fil"
  "ter.v202501alpha1\032\034google/api/annotation"
  "s.proto\032\027google/api/client.proto\032\037google"
  "/api/field_behavior.proto\032.protoc-gen-op"
  "enapiv2/options/annotations.proto\032\037googl"
  "e/protobuf/timestamp.proto\"\334\002\n\021SavedFilt"
  "erFilter\022|\n\014filter_field\030\001 \001(\0162..kentik."
  "saved_filter.v202501alpha1.FilterFieldB)"
  "\222A&2$A field operand. Defaults to DST_AS"
  ".R\013filterField\022y\n\010operator\030\002 \001(\01621.kenti"
  "k.saved_filter.v202501alpha1.FilterOpera"
  "torB*\222A\'2%Equality operator. Defaults to"
  " EQUAL.R\010operator\022N\n\014filter_value\030\003 \001(\tB"
  "+\222A(2&Value to perform equality comparis"
  "ons.R\013filterValue\"\324\002\n\026SavedFilterFilterG"
  "roup\022s\n\003any\030\001 \001(\010Ba\222A^2\\Whether to requi"
  "re matches against ALL or ANY filter. De"
  "faults to requiring a match for all.R\003an"
  "y\022p\n\007filters\030\002 \003(\01324.kentik.saved_filter"
  ".v202501alpha1.SavedFilterFilterB \222A\0352\033F"
  "ilters to operate against.R\007filters\022S\n\003n"
  "ot\030\003 \001(\010BA\222A>2<Whether or not to NOT() t"
  "he filter group. Defaults to false.R\003not"
  "\"\303\002\n\022SavedFilterFilters\022s\n\003any\030\001 \001(\010Ba\222A"
  "^2\\Whether to require matches against AL"
  "L or ANY filter. Defaults to requiring a"
  " match for all.R\003any\022\267\001\n\rfilter_groups\030\002"
  " \003(\01329.kentik.saved_filter.v202501alpha1"
  ".SavedFilterFilterGroupBW\222AP2NIndividual"
  " groups of filters. This allows matches "
  "of e.g. ANY(ALL(x), ANY(y)).\342A\001\002R\014filter"
  "Groups\"\237\007\n\013SavedFilter\022@\n\002id\030\001 \001(\tB0\222A)2"
  "\'Unique identifier for the saved filter."
  "\342A\001\003R\002id\022N\n\013filter_name\030\002 \001(\tB-\222A&2$An u"
  "nique name for the saved filter.\342A\001\002R\nfi"
  "lterName\022S\n\022filter_description\030\003 \001(\tB$\222A"
  "!2\037The saved filter\'s description.R\021filt"
  "erDescription\022\214\001\n\007filters\030\004 \001(\01325.kentik"
  ".saved_filter.v202501alpha1.SavedFilterF"
  "iltersB;\222A826Configuration values for th"
  "e use of this saved filter.R\007filters\022\255\002\n"
  "\014filter_level\030\005 \001(\0162..kentik.saved_filte"
  "r.v202501alpha1.FilterLevelB\331\001\222A\325\0012\322\001The"
  " scope across which the shared filter is"
  " available: user (personal only), compan"
  "y (organization-wide), or global (Kentik"
  "-provided preset) \nNote: User and global"
  " saved filters are not yet supported by "
  "the APIR\013filterLevel\022p\n\014created_date\030\032 \001"
  "(\0132\032.google.protobuf.TimestampB1\222A*2(Dat"
  "e-time of populator creation, in UTC.\342A\001"
  "\003R\013createdDate\022x\n\014updated_date\030\007 \001(\0132\032.g"
  "oogle.protobuf.TimestampB9\222A220Date-time"
  " of most-recent populator edit, in UTC.\342"
  "A\001\003R\013updatedDate*\233\014\n\013FilterField\022\034\n\030FILT"
  "ER_FIELD_UNSPECIFIED\020\000\022\027\n\023FILTER_FIELD_D"
  "ST_AS\020\001\022\037\n\033FILTER_FIELD_DST_NEXTHOP_AS\020\002"
  "\022\037\n\033FILTER_FIELD_DST_SECOND_ASN\020\003\022\036\n\032FIL"
  "TER_FIELD_DST_THIRD_ASN\020\004\022\037\n\033FILTER_FIEL"
  "D_DST_BGP_ASPATH\020\005\022\"\n\036FILTER_FIELD_DST_B"
  "GP_COMMUNITY\020\006\022\034\n\030FILTER_FIELD_DST_ETH_M"
  "AC\020\007\022\036\n\032FILTER_FIELD_DST_FLOW_TAGS\020\010\022\030\n\024"
  "FILTER_FIELD_DST_GEO\020\t\022\037\n\033FILTER_FIELD_D"
  "ST_GEO_REGION\020\n\022\035\n\031FILTER_FIELD_DST_GEO_"
  "CITY\020\013\022!\n\035FILTER_FIELD_DST_ROUTE_LENGTH\020"
  "\014\022\036\n\032FILTER_FIELD_INET_DST_ADDR\020\r\022&\n\"FIL"
  "TER_FIELD_IPV4_DST_ROUTE_PREFIX\020\016\022\"\n\036FIL"
  "TER_FIELD_IPV4_DST_NEXT_HOP\020\017\022\034\n\030FILTER_"
  "FIELD_L4_DST_PORT\020\020\022\034\n\030FILTER_FIELD_OUTP"
  "UT_PORT\020\021\022$\n FILTER_FIELD_I_OUTPUT_SNMP_"
  "ALIAS\020\022\022/\n+FILTER_FIELD_I_OUTPUT_INTERFA"
  "CE_DESCRIPTION\020\023\022\027\n\023FILTER_FIELD_SRC_AS\020"
  "\024\022\037\n\033FILTER_FIELD_SRC_NEXTHOP_AS\020\025\022\037\n\033FI"
  "LTER_FIELD_SRC_SECOND_ASN\020\026\022\036\n\032FILTER_FI"
  "ELD_SRC_THIRD_ASN\020\027\022\037\n\033FILTER_FIELD_SRC_"
  "BGP_ASPATH\020\030\022\"\n\036FILTER_FIELD_SRC_BGP_COM"
  "MUNITY\020\031\022\034\n\030FILTER_FIELD_SRC_ETH_MAC\020\032\022\036"
  "\n\032FILTER_FIELD_SRC_FLOW_TAGS\020\033\022\030\n\024FILTER"
  "_FIELD_SRC_GEO\020\034\022\037\n\033FILTER_FIELD_SRC_GEO"
  "_REGION\020\035\022\035\n\031FILTER_FIELD_SRC_GEO_CITY\020\036"
  "\022!\n\035FILTER_FIELD_SRC_ROUTE_LENGTH\020\037\022\036\n\032F"
  "ILTER_FIELD_INET_SRC_ADDR\020 \022&\n\"FILTER_FI"
  "ELD_IPV4_SRC_ROUTE_PREFIX\020!\022\"\n\036FILTER_FI"
  "ELD_IPV4_SRC_NEXT_HOP\020\"\022\034\n\030FILTER_FIELD_"
  "L4_SRC_PORT\020#\022\033\n\027FILTER_FIELD_INPUT_PORT"
  "\020$\022#\n\037FILTER_FIELD_I_INPUT_SNMP_ALIAS\020%\022"
  ".\n*FILTER_FIELD_I_INPUT_INTERFACE_DESCRI"
  "PTION\020&\022\032\n\026FILTER_FIELD_BOTH_PKTS\020\'\022\036\n\032F"
  "ILTER_FIELD_I_DEVICE_NAME\020(\022\031\n\025FILTER_FI"
  "ELD_PROTOCOL\020)\022\032\n\026FILTER_FIELD_TCP_FLAGS"
  "\020*\022\036\n\032FILTER_FIELD_TCP_FLAGS_RAW\020+\022\037\n\033FI"
  "LTER_FIELD_TCP_RETRANSMIT\020,\022\024\n\020FILTER_FI"
  "ELD_TOS\020-\022\030\n\024FILTER_FIELD_VLAN_IN\020.\022\031\n\025F"
  "ILTER_FIELD_VLAN_OUT\020/*\331\002\n\016FilterOperato"
  "r\022\037\n\033FILTER_OPERATOR_UNSPECIFIED\020\000\022\031\n\025FI"
  "LTER_OPERATOR_EQUAL\020\001\022\035\n\031FILTER_OPERATOR"
  "_NOT_EQUAL\020\002\022\034\n\030FILTER_OPERATOR_CONTAINS"
  "\020\003\022 \n\034FILTER_OPERATOR_NOT_CONTAINS\020\004\022\"\n\036"
  "FILTER_OPERATOR_REGEX_CONTAINS\020\005\022&\n\"FILT"
  "ER_OPERATOR_REGEX_NOT_CONTAINS\020\006\022 \n\034FILT"
  "ER_OPERATOR_GREATER_THAN\020\007\022\035\n\031FILTER_OPE"
  "RATOR_LESS_THAN\020\010\022\037\n\033FILTER_OPERATOR_BIT"
  "WISE_AND\020\t*u\n\013FilterLevel\022\034\n\030FILTER_LEVE"
  "L_UNSPECIFIED\020\000\022\030\n\024FILTER_LEVEL_COMPANY\020"
  "\001\022\027\n\023FILTER_LEVEL_GLOBAL\020\002\022\025\n\021FILTER_LEV"
  "EL_USER\020\003B[ZYgithub.com/kentik/api-schem"
  "a-public/gen/go/kentik/saved_filter/v202"
  "501alpha1;saved_filterb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_5fmessage_2eproto_deps[5] = {
  &::descriptor_table_google_2fapi_2fannotations_2eproto,
  &::descriptor_table_google_2fapi_2fclient_2eproto,
  &::descriptor_table_google_2fapi_2ffield_5fbehavior_2eproto,
  &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
  &::descriptor_table_protoc_2dgen_2dopenapiv2_2foptions_2fannotations_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_5fmessage_2eproto_sccs[4] = {
  &scc_info_SavedFilter_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_5fmessage_2eproto.base,
  &scc_info_SavedFilterFilter_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_5fmessage_2eproto.base,
  &scc_info_SavedFilterFilterGroup_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_5fmessage_2eproto.base,
  &scc_info_SavedFilterFilters_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_5fmessage_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_5fmessage_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_5fmessage_2eproto = {
  false, false, descriptor_table_protodef_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_5fmessage_2eproto, "kentik/saved_filter/v202501alpha1/saved_filter_message.proto", 4350,
  &descriptor_table_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_5fmessage_2eproto_once, descriptor_table_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_5fmessage_2eproto_sccs, descriptor_table_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_5fmessage_2eproto_deps, 4, 5,
  schemas, file_default_instances, TableStruct_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_5fmessage_2eproto::offsets,
  file_level_metadata_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_5fmessage_2eproto, 4, file_level_enum_descriptors_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_5fmessage_2eproto, file_level_service_descriptors_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_5fmessage_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_5fmessage_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_5fmessage_2eproto)), true);
namespace kentik {
namespace saved_filter {
namespace v202501alpha1 {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* FilterField_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_5fmessage_2eproto);
  return file_level_enum_descriptors_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_5fmessage_2eproto[0];
}
bool FilterField_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* FilterOperator_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_5fmessage_2eproto);
  return file_level_enum_descriptors_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_5fmessage_2eproto[1];
}
bool FilterOperator_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* FilterLevel_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_5fmessage_2eproto);
  return file_level_enum_descriptors_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_5fmessage_2eproto[2];
}
bool FilterLevel_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void SavedFilterFilter::InitAsDefaultInstance() {
}
class SavedFilterFilter::_Internal {
 public:
};

SavedFilterFilter::SavedFilterFilter(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.saved_filter.v202501alpha1.SavedFilterFilter)
}
SavedFilterFilter::SavedFilterFilter(const SavedFilterFilter& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  filter_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_filter_value().empty()) {
    filter_value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_filter_value(),
      GetArena());
  }
  ::memcpy(&filter_field_, &from.filter_field_,
    static_cast<size_t>(reinterpret_cast<char*>(&operator__) -
    reinterpret_cast<char*>(&filter_field_)) + sizeof(operator__));
  // @@protoc_insertion_point(copy_constructor:kentik.saved_filter.v202501alpha1.SavedFilterFilter)
}

void SavedFilterFilter::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SavedFilterFilter_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_5fmessage_2eproto.base);
  filter_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&filter_field_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&operator__) -
      reinterpret_cast<char*>(&filter_field_)) + sizeof(operator__));
}

SavedFilterFilter::~SavedFilterFilter() {
  // @@protoc_insertion_point(destructor:kentik.saved_filter.v202501alpha1.SavedFilterFilter)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SavedFilterFilter::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  filter_value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SavedFilterFilter::ArenaDtor(void* object) {
  SavedFilterFilter* _this = reinterpret_cast< SavedFilterFilter* >(object);
  (void)_this;
}
void SavedFilterFilter::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SavedFilterFilter::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SavedFilterFilter& SavedFilterFilter::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SavedFilterFilter_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_5fmessage_2eproto.base);
  return *internal_default_instance();
}


void SavedFilterFilter::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.saved_filter.v202501alpha1.SavedFilterFilter)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  filter_value_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&filter_field_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&operator__) -
      reinterpret_cast<char*>(&filter_field_)) + sizeof(operator__));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SavedFilterFilter::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .kentik.saved_filter.v202501alpha1.FilterField filter_field = 1[json_name = "filterField", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_filter_field(static_cast<::kentik::saved_filter::v202501alpha1::FilterField>(val));
        } else goto handle_unusual;
        continue;
      // .kentik.saved_filter.v202501alpha1.FilterOperator operator = 2[json_name = "operator", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_operator_(static_cast<::kentik::saved_filter::v202501alpha1::FilterOperator>(val));
        } else goto handle_unusual;
        continue;
      // string filter_value = 3[json_name = "filterValue", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_filter_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "kentik.saved_filter.v202501alpha1.SavedFilterFilter.filter_value"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SavedFilterFilter::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kentik.saved_filter.v202501alpha1.SavedFilterFilter)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kentik.saved_filter.v202501alpha1.FilterField filter_field = 1[json_name = "filterField", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->filter_field() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_filter_field(), target);
  }

  // .kentik.saved_filter.v202501alpha1.FilterOperator operator = 2[json_name = "operator", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->operator_() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_operator_(), target);
  }

  // string filter_value = 3[json_name = "filterValue", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->filter_value().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_filter_value().data(), static_cast<int>(this->_internal_filter_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "kentik.saved_filter.v202501alpha1.SavedFilterFilter.filter_value");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_filter_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kentik.saved_filter.v202501alpha1.SavedFilterFilter)
  return target;
}

size_t SavedFilterFilter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kentik.saved_filter.v202501alpha1.SavedFilterFilter)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string filter_value = 3[json_name = "filterValue", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->filter_value().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_filter_value());
  }

  // .kentik.saved_filter.v202501alpha1.FilterField filter_field = 1[json_name = "filterField", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->filter_field() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_filter_field());
  }

  // .kentik.saved_filter.v202501alpha1.FilterOperator operator = 2[json_name = "operator", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->operator_() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_operator_());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SavedFilterFilter::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kentik.saved_filter.v202501alpha1.SavedFilterFilter)
  GOOGLE_DCHECK_NE(&from, this);
  const SavedFilterFilter* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SavedFilterFilter>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kentik.saved_filter.v202501alpha1.SavedFilterFilter)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kentik.saved_filter.v202501alpha1.SavedFilterFilter)
    MergeFrom(*source);
  }
}

void SavedFilterFilter::MergeFrom(const SavedFilterFilter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kentik.saved_filter.v202501alpha1.SavedFilterFilter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.filter_value().size() > 0) {
    _internal_set_filter_value(from._internal_filter_value());
  }
  if (from.filter_field() != 0) {
    _internal_set_filter_field(from._internal_filter_field());
  }
  if (from.operator_() != 0) {
    _internal_set_operator_(from._internal_operator_());
  }
}

void SavedFilterFilter::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kentik.saved_filter.v202501alpha1.SavedFilterFilter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SavedFilterFilter::CopyFrom(const SavedFilterFilter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.saved_filter.v202501alpha1.SavedFilterFilter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SavedFilterFilter::IsInitialized() const {
  return true;
}

void SavedFilterFilter::InternalSwap(SavedFilterFilter* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  filter_value_.Swap(&other->filter_value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SavedFilterFilter, operator__)
      + sizeof(SavedFilterFilter::operator__)
      - PROTOBUF_FIELD_OFFSET(SavedFilterFilter, filter_field_)>(
          reinterpret_cast<char*>(&filter_field_),
          reinterpret_cast<char*>(&other->filter_field_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SavedFilterFilter::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SavedFilterFilterGroup::InitAsDefaultInstance() {
}
class SavedFilterFilterGroup::_Internal {
 public:
};

SavedFilterFilterGroup::SavedFilterFilterGroup(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  filters_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.saved_filter.v202501alpha1.SavedFilterFilterGroup)
}
SavedFilterFilterGroup::SavedFilterFilterGroup(const SavedFilterFilterGroup& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      filters_(from.filters_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&any_, &from.any_,
    static_cast<size_t>(reinterpret_cast<char*>(&not__) -
    reinterpret_cast<char*>(&any_)) + sizeof(not__));
  // @@protoc_insertion_point(copy_constructor:kentik.saved_filter.v202501alpha1.SavedFilterFilterGroup)
}

void SavedFilterFilterGroup::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SavedFilterFilterGroup_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_5fmessage_2eproto.base);
  ::memset(&any_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&not__) -
      reinterpret_cast<char*>(&any_)) + sizeof(not__));
}

SavedFilterFilterGroup::~SavedFilterFilterGroup() {
  // @@protoc_insertion_point(destructor:kentik.saved_filter.v202501alpha1.SavedFilterFilterGroup)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SavedFilterFilterGroup::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SavedFilterFilterGroup::ArenaDtor(void* object) {
  SavedFilterFilterGroup* _this = reinterpret_cast< SavedFilterFilterGroup* >(object);
  (void)_this;
}
void SavedFilterFilterGroup::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SavedFilterFilterGroup::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SavedFilterFilterGroup& SavedFilterFilterGroup::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SavedFilterFilterGroup_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_5fmessage_2eproto.base);
  return *internal_default_instance();
}


void SavedFilterFilterGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.saved_filter.v202501alpha1.SavedFilterFilterGroup)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  filters_.Clear();
  ::memset(&any_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&not__) -
      reinterpret_cast<char*>(&any_)) + sizeof(not__));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SavedFilterFilterGroup::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool any = 1[json_name = "any", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          any_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .kentik.saved_filter.v202501alpha1.SavedFilterFilter filters = 2[json_name = "filters", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_filters(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // bool not = 3[json_name = "not", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          not__ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SavedFilterFilterGroup::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kentik.saved_filter.v202501alpha1.SavedFilterFilterGroup)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool any = 1[json_name = "any", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->any() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_any(), target);
  }

  // repeated .kentik.saved_filter.v202501alpha1.SavedFilterFilter filters = 2[json_name = "filters", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_filters_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_filters(i), target, stream);
  }

  // bool not = 3[json_name = "not", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->not_() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_not_(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kentik.saved_filter.v202501alpha1.SavedFilterFilterGroup)
  return target;
}

size_t SavedFilterFilterGroup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kentik.saved_filter.v202501alpha1.SavedFilterFilterGroup)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .kentik.saved_filter.v202501alpha1.SavedFilterFilter filters = 2[json_name = "filters", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  total_size += 1UL * this->_internal_filters_size();
  for (const auto& msg : this->filters_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // bool any = 1[json_name = "any", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->any() != 0) {
    total_size += 1 + 1;
  }

  // bool not = 3[json_name = "not", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->not_() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SavedFilterFilterGroup::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kentik.saved_filter.v202501alpha1.SavedFilterFilterGroup)
  GOOGLE_DCHECK_NE(&from, this);
  const SavedFilterFilterGroup* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SavedFilterFilterGroup>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kentik.saved_filter.v202501alpha1.SavedFilterFilterGroup)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kentik.saved_filter.v202501alpha1.SavedFilterFilterGroup)
    MergeFrom(*source);
  }
}

void SavedFilterFilterGroup::MergeFrom(const SavedFilterFilterGroup& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kentik.saved_filter.v202501alpha1.SavedFilterFilterGroup)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  filters_.MergeFrom(from.filters_);
  if (from.any() != 0) {
    _internal_set_any(from._internal_any());
  }
  if (from.not_() != 0) {
    _internal_set_not_(from._internal_not_());
  }
}

void SavedFilterFilterGroup::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kentik.saved_filter.v202501alpha1.SavedFilterFilterGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SavedFilterFilterGroup::CopyFrom(const SavedFilterFilterGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.saved_filter.v202501alpha1.SavedFilterFilterGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SavedFilterFilterGroup::IsInitialized() const {
  return true;
}

void SavedFilterFilterGroup::InternalSwap(SavedFilterFilterGroup* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  filters_.InternalSwap(&other->filters_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SavedFilterFilterGroup, not__)
      + sizeof(SavedFilterFilterGroup::not__)
      - PROTOBUF_FIELD_OFFSET(SavedFilterFilterGroup, any_)>(
          reinterpret_cast<char*>(&any_),
          reinterpret_cast<char*>(&other->any_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SavedFilterFilterGroup::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SavedFilterFilters::InitAsDefaultInstance() {
}
class SavedFilterFilters::_Internal {
 public:
};

SavedFilterFilters::SavedFilterFilters(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  filter_groups_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.saved_filter.v202501alpha1.SavedFilterFilters)
}
SavedFilterFilters::SavedFilterFilters(const SavedFilterFilters& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      filter_groups_(from.filter_groups_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  any_ = from.any_;
  // @@protoc_insertion_point(copy_constructor:kentik.saved_filter.v202501alpha1.SavedFilterFilters)
}

void SavedFilterFilters::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SavedFilterFilters_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_5fmessage_2eproto.base);
  any_ = false;
}

SavedFilterFilters::~SavedFilterFilters() {
  // @@protoc_insertion_point(destructor:kentik.saved_filter.v202501alpha1.SavedFilterFilters)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SavedFilterFilters::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SavedFilterFilters::ArenaDtor(void* object) {
  SavedFilterFilters* _this = reinterpret_cast< SavedFilterFilters* >(object);
  (void)_this;
}
void SavedFilterFilters::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SavedFilterFilters::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SavedFilterFilters& SavedFilterFilters::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SavedFilterFilters_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_5fmessage_2eproto.base);
  return *internal_default_instance();
}


void SavedFilterFilters::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.saved_filter.v202501alpha1.SavedFilterFilters)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  filter_groups_.Clear();
  any_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SavedFilterFilters::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool any = 1[json_name = "any", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          any_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .kentik.saved_filter.v202501alpha1.SavedFilterFilterGroup filter_groups = 2[json_name = "filterGroups", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_filter_groups(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SavedFilterFilters::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kentik.saved_filter.v202501alpha1.SavedFilterFilters)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool any = 1[json_name = "any", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->any() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_any(), target);
  }

  // repeated .kentik.saved_filter.v202501alpha1.SavedFilterFilterGroup filter_groups = 2[json_name = "filterGroups", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_filter_groups_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_filter_groups(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kentik.saved_filter.v202501alpha1.SavedFilterFilters)
  return target;
}

size_t SavedFilterFilters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kentik.saved_filter.v202501alpha1.SavedFilterFilters)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .kentik.saved_filter.v202501alpha1.SavedFilterFilterGroup filter_groups = 2[json_name = "filterGroups", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  total_size += 1UL * this->_internal_filter_groups_size();
  for (const auto& msg : this->filter_groups_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // bool any = 1[json_name = "any", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->any() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SavedFilterFilters::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kentik.saved_filter.v202501alpha1.SavedFilterFilters)
  GOOGLE_DCHECK_NE(&from, this);
  const SavedFilterFilters* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SavedFilterFilters>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kentik.saved_filter.v202501alpha1.SavedFilterFilters)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kentik.saved_filter.v202501alpha1.SavedFilterFilters)
    MergeFrom(*source);
  }
}

void SavedFilterFilters::MergeFrom(const SavedFilterFilters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kentik.saved_filter.v202501alpha1.SavedFilterFilters)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  filter_groups_.MergeFrom(from.filter_groups_);
  if (from.any() != 0) {
    _internal_set_any(from._internal_any());
  }
}

void SavedFilterFilters::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kentik.saved_filter.v202501alpha1.SavedFilterFilters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SavedFilterFilters::CopyFrom(const SavedFilterFilters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.saved_filter.v202501alpha1.SavedFilterFilters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SavedFilterFilters::IsInitialized() const {
  return true;
}

void SavedFilterFilters::InternalSwap(SavedFilterFilters* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  filter_groups_.InternalSwap(&other->filter_groups_);
  swap(any_, other->any_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SavedFilterFilters::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SavedFilter::InitAsDefaultInstance() {
  ::kentik::saved_filter::v202501alpha1::_SavedFilter_default_instance_._instance.get_mutable()->filters_ = const_cast< ::kentik::saved_filter::v202501alpha1::SavedFilterFilters*>(
      ::kentik::saved_filter::v202501alpha1::SavedFilterFilters::internal_default_instance());
  ::kentik::saved_filter::v202501alpha1::_SavedFilter_default_instance_._instance.get_mutable()->created_date_ = const_cast< PROTOBUF_NAMESPACE_ID::Timestamp*>(
      PROTOBUF_NAMESPACE_ID::Timestamp::internal_default_instance());
  ::kentik::saved_filter::v202501alpha1::_SavedFilter_default_instance_._instance.get_mutable()->updated_date_ = const_cast< PROTOBUF_NAMESPACE_ID::Timestamp*>(
      PROTOBUF_NAMESPACE_ID::Timestamp::internal_default_instance());
}
class SavedFilter::_Internal {
 public:
  static const ::kentik::saved_filter::v202501alpha1::SavedFilterFilters& filters(const SavedFilter* msg);
  static const PROTOBUF_NAMESPACE_ID::Timestamp& created_date(const SavedFilter* msg);
  static const PROTOBUF_NAMESPACE_ID::Timestamp& updated_date(const SavedFilter* msg);
};

const ::kentik::saved_filter::v202501alpha1::SavedFilterFilters&
SavedFilter::_Internal::filters(const SavedFilter* msg) {
  return *msg->filters_;
}
const PROTOBUF_NAMESPACE_ID::Timestamp&
SavedFilter::_Internal::created_date(const SavedFilter* msg) {
  return *msg->created_date_;
}
const PROTOBUF_NAMESPACE_ID::Timestamp&
SavedFilter::_Internal::updated_date(const SavedFilter* msg) {
  return *msg->updated_date_;
}
void SavedFilter::clear_created_date() {
  if (GetArena() == nullptr && created_date_ != nullptr) {
    delete created_date_;
  }
  created_date_ = nullptr;
}
void SavedFilter::clear_updated_date() {
  if (GetArena() == nullptr && updated_date_ != nullptr) {
    delete updated_date_;
  }
  updated_date_ = nullptr;
}
SavedFilter::SavedFilter(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.saved_filter.v202501alpha1.SavedFilter)
}
SavedFilter::SavedFilter(const SavedFilter& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  filter_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_filter_name().empty()) {
    filter_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_filter_name(),
      GetArena());
  }
  filter_description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_filter_description().empty()) {
    filter_description_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_filter_description(),
      GetArena());
  }
  if (from._internal_has_filters()) {
    filters_ = new ::kentik::saved_filter::v202501alpha1::SavedFilterFilters(*from.filters_);
  } else {
    filters_ = nullptr;
  }
  if (from._internal_has_updated_date()) {
    updated_date_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.updated_date_);
  } else {
    updated_date_ = nullptr;
  }
  if (from._internal_has_created_date()) {
    created_date_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.created_date_);
  } else {
    created_date_ = nullptr;
  }
  filter_level_ = from.filter_level_;
  // @@protoc_insertion_point(copy_constructor:kentik.saved_filter.v202501alpha1.SavedFilter)
}

void SavedFilter::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SavedFilter_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_5fmessage_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  filter_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  filter_description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&filters_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&filter_level_) -
      reinterpret_cast<char*>(&filters_)) + sizeof(filter_level_));
}

SavedFilter::~SavedFilter() {
  // @@protoc_insertion_point(destructor:kentik.saved_filter.v202501alpha1.SavedFilter)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SavedFilter::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  filter_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  filter_description_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete filters_;
  if (this != internal_default_instance()) delete updated_date_;
  if (this != internal_default_instance()) delete created_date_;
}

void SavedFilter::ArenaDtor(void* object) {
  SavedFilter* _this = reinterpret_cast< SavedFilter* >(object);
  (void)_this;
}
void SavedFilter::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SavedFilter::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SavedFilter& SavedFilter::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SavedFilter_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_5fmessage_2eproto.base);
  return *internal_default_instance();
}


void SavedFilter::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.saved_filter.v202501alpha1.SavedFilter)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  filter_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  filter_description_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && filters_ != nullptr) {
    delete filters_;
  }
  filters_ = nullptr;
  if (GetArena() == nullptr && updated_date_ != nullptr) {
    delete updated_date_;
  }
  updated_date_ = nullptr;
  if (GetArena() == nullptr && created_date_ != nullptr) {
    delete created_date_;
  }
  created_date_ = nullptr;
  filter_level_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SavedFilter::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1[json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "kentik.saved_filter.v202501alpha1.SavedFilter.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string filter_name = 2[json_name = "filterName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_filter_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "kentik.saved_filter.v202501alpha1.SavedFilter.filter_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string filter_description = 3[json_name = "filterDescription", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_filter_description();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "kentik.saved_filter.v202501alpha1.SavedFilter.filter_description"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .kentik.saved_filter.v202501alpha1.SavedFilterFilters filters = 4[json_name = "filters", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_filters(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .kentik.saved_filter.v202501alpha1.FilterLevel filter_level = 5[json_name = "filterLevel", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_filter_level(static_cast<::kentik::saved_filter::v202501alpha1::FilterLevel>(val));
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp updated_date = 7[json_name = "updatedDate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_updated_date(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp created_date = 26[json_name = "createdDate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 26:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 210)) {
          ptr = ctx->ParseMessage(_internal_mutable_created_date(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SavedFilter::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kentik.saved_filter.v202501alpha1.SavedFilter)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1[json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "kentik.saved_filter.v202501alpha1.SavedFilter.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string filter_name = 2[json_name = "filterName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->filter_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_filter_name().data(), static_cast<int>(this->_internal_filter_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "kentik.saved_filter.v202501alpha1.SavedFilter.filter_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_filter_name(), target);
  }

  // string filter_description = 3[json_name = "filterDescription", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->filter_description().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_filter_description().data(), static_cast<int>(this->_internal_filter_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "kentik.saved_filter.v202501alpha1.SavedFilter.filter_description");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_filter_description(), target);
  }

  // .kentik.saved_filter.v202501alpha1.SavedFilterFilters filters = 4[json_name = "filters", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->has_filters()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::filters(this), target, stream);
  }

  // .kentik.saved_filter.v202501alpha1.FilterLevel filter_level = 5[json_name = "filterLevel", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->filter_level() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      5, this->_internal_filter_level(), target);
  }

  // .google.protobuf.Timestamp updated_date = 7[json_name = "updatedDate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->has_updated_date()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        7, _Internal::updated_date(this), target, stream);
  }

  // .google.protobuf.Timestamp created_date = 26[json_name = "createdDate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->has_created_date()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        26, _Internal::created_date(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kentik.saved_filter.v202501alpha1.SavedFilter)
  return target;
}

size_t SavedFilter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kentik.saved_filter.v202501alpha1.SavedFilter)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1[json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string filter_name = 2[json_name = "filterName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->filter_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_filter_name());
  }

  // string filter_description = 3[json_name = "filterDescription", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->filter_description().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_filter_description());
  }

  // .kentik.saved_filter.v202501alpha1.SavedFilterFilters filters = 4[json_name = "filters", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->has_filters()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *filters_);
  }

  // .google.protobuf.Timestamp updated_date = 7[json_name = "updatedDate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->has_updated_date()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *updated_date_);
  }

  // .google.protobuf.Timestamp created_date = 26[json_name = "createdDate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->has_created_date()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *created_date_);
  }

  // .kentik.saved_filter.v202501alpha1.FilterLevel filter_level = 5[json_name = "filterLevel", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->filter_level() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_filter_level());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SavedFilter::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kentik.saved_filter.v202501alpha1.SavedFilter)
  GOOGLE_DCHECK_NE(&from, this);
  const SavedFilter* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SavedFilter>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kentik.saved_filter.v202501alpha1.SavedFilter)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kentik.saved_filter.v202501alpha1.SavedFilter)
    MergeFrom(*source);
  }
}

void SavedFilter::MergeFrom(const SavedFilter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kentik.saved_filter.v202501alpha1.SavedFilter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.filter_name().size() > 0) {
    _internal_set_filter_name(from._internal_filter_name());
  }
  if (from.filter_description().size() > 0) {
    _internal_set_filter_description(from._internal_filter_description());
  }
  if (from.has_filters()) {
    _internal_mutable_filters()->::kentik::saved_filter::v202501alpha1::SavedFilterFilters::MergeFrom(from._internal_filters());
  }
  if (from.has_updated_date()) {
    _internal_mutable_updated_date()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_updated_date());
  }
  if (from.has_created_date()) {
    _internal_mutable_created_date()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_created_date());
  }
  if (from.filter_level() != 0) {
    _internal_set_filter_level(from._internal_filter_level());
  }
}

void SavedFilter::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kentik.saved_filter.v202501alpha1.SavedFilter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SavedFilter::CopyFrom(const SavedFilter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.saved_filter.v202501alpha1.SavedFilter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SavedFilter::IsInitialized() const {
  return true;
}

void SavedFilter::InternalSwap(SavedFilter* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  filter_name_.Swap(&other->filter_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  filter_description_.Swap(&other->filter_description_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SavedFilter, filter_level_)
      + sizeof(SavedFilter::filter_level_)
      - PROTOBUF_FIELD_OFFSET(SavedFilter, filters_)>(
          reinterpret_cast<char*>(&filters_),
          reinterpret_cast<char*>(&other->filters_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SavedFilter::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v202501alpha1
}  // namespace saved_filter
}  // namespace kentik
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::kentik::saved_filter::v202501alpha1::SavedFilterFilter* Arena::CreateMaybeMessage< ::kentik::saved_filter::v202501alpha1::SavedFilterFilter >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kentik::saved_filter::v202501alpha1::SavedFilterFilter >(arena);
}
template<> PROTOBUF_NOINLINE ::kentik::saved_filter::v202501alpha1::SavedFilterFilterGroup* Arena::CreateMaybeMessage< ::kentik::saved_filter::v202501alpha1::SavedFilterFilterGroup >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kentik::saved_filter::v202501alpha1::SavedFilterFilterGroup >(arena);
}
template<> PROTOBUF_NOINLINE ::kentik::saved_filter::v202501alpha1::SavedFilterFilters* Arena::CreateMaybeMessage< ::kentik::saved_filter::v202501alpha1::SavedFilterFilters >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kentik::saved_filter::v202501alpha1::SavedFilterFilters >(arena);
}
template<> PROTOBUF_NOINLINE ::kentik::saved_filter::v202501alpha1::SavedFilter* Arena::CreateMaybeMessage< ::kentik::saved_filter::v202501alpha1::SavedFilter >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kentik::saved_filter::v202501alpha1::SavedFilter >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
