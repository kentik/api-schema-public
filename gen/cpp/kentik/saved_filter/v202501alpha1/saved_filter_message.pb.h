// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: kentik/saved_filter/v202501alpha1/saved_filter_message.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_5fmessage_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_5fmessage_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3012000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3012004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "google/api/annotations.pb.h"
#include "google/api/client.pb.h"
#include "google/api/field_behavior.pb.h"
#include "protoc-gen-openapiv2/options/annotations.pb.h"
#include <google/protobuf/timestamp.pb.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_5fmessage_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_5fmessage_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[4]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_5fmessage_2eproto;
namespace kentik {
namespace saved_filter {
namespace v202501alpha1 {
class SavedFilter;
class SavedFilterDefaultTypeInternal;
extern SavedFilterDefaultTypeInternal _SavedFilter_default_instance_;
class SavedFilterFilter;
class SavedFilterFilterDefaultTypeInternal;
extern SavedFilterFilterDefaultTypeInternal _SavedFilterFilter_default_instance_;
class SavedFilterFilterGroup;
class SavedFilterFilterGroupDefaultTypeInternal;
extern SavedFilterFilterGroupDefaultTypeInternal _SavedFilterFilterGroup_default_instance_;
class SavedFilterFilters;
class SavedFilterFiltersDefaultTypeInternal;
extern SavedFilterFiltersDefaultTypeInternal _SavedFilterFilters_default_instance_;
}  // namespace v202501alpha1
}  // namespace saved_filter
}  // namespace kentik
PROTOBUF_NAMESPACE_OPEN
template<> ::kentik::saved_filter::v202501alpha1::SavedFilter* Arena::CreateMaybeMessage<::kentik::saved_filter::v202501alpha1::SavedFilter>(Arena*);
template<> ::kentik::saved_filter::v202501alpha1::SavedFilterFilter* Arena::CreateMaybeMessage<::kentik::saved_filter::v202501alpha1::SavedFilterFilter>(Arena*);
template<> ::kentik::saved_filter::v202501alpha1::SavedFilterFilterGroup* Arena::CreateMaybeMessage<::kentik::saved_filter::v202501alpha1::SavedFilterFilterGroup>(Arena*);
template<> ::kentik::saved_filter::v202501alpha1::SavedFilterFilters* Arena::CreateMaybeMessage<::kentik::saved_filter::v202501alpha1::SavedFilterFilters>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace kentik {
namespace saved_filter {
namespace v202501alpha1 {

enum FilterField : int {
  FILTER_FIELD_UNSPECIFIED = 0,
  FILTER_FIELD_DST_AS = 1,
  FILTER_FIELD_DST_NEXTHOP_AS = 2,
  FILTER_FIELD_DST_SECOND_ASN = 3,
  FILTER_FIELD_DST_THIRD_ASN = 4,
  FILTER_FIELD_DST_BGP_ASPATH = 5,
  FILTER_FIELD_DST_BGP_COMMUNITY = 6,
  FILTER_FIELD_DST_ETH_MAC = 7,
  FILTER_FIELD_DST_FLOW_TAGS = 8,
  FILTER_FIELD_DST_GEO = 9,
  FILTER_FIELD_DST_GEO_REGION = 10,
  FILTER_FIELD_DST_GEO_CITY = 11,
  FILTER_FIELD_DST_ROUTE_LENGTH = 12,
  FILTER_FIELD_INET_DST_ADDR = 13,
  FILTER_FIELD_IPV4_DST_ROUTE_PREFIX = 14,
  FILTER_FIELD_IPV4_DST_NEXT_HOP = 15,
  FILTER_FIELD_L4_DST_PORT = 16,
  FILTER_FIELD_OUTPUT_PORT = 17,
  FILTER_FIELD_I_OUTPUT_SNMP_ALIAS = 18,
  FILTER_FIELD_I_OUTPUT_INTERFACE_DESCRIPTION = 19,
  FILTER_FIELD_SRC_AS = 20,
  FILTER_FIELD_SRC_NEXTHOP_AS = 21,
  FILTER_FIELD_SRC_SECOND_ASN = 22,
  FILTER_FIELD_SRC_THIRD_ASN = 23,
  FILTER_FIELD_SRC_BGP_ASPATH = 24,
  FILTER_FIELD_SRC_BGP_COMMUNITY = 25,
  FILTER_FIELD_SRC_ETH_MAC = 26,
  FILTER_FIELD_SRC_FLOW_TAGS = 27,
  FILTER_FIELD_SRC_GEO = 28,
  FILTER_FIELD_SRC_GEO_REGION = 29,
  FILTER_FIELD_SRC_GEO_CITY = 30,
  FILTER_FIELD_SRC_ROUTE_LENGTH = 31,
  FILTER_FIELD_INET_SRC_ADDR = 32,
  FILTER_FIELD_IPV4_SRC_ROUTE_PREFIX = 33,
  FILTER_FIELD_IPV4_SRC_NEXT_HOP = 34,
  FILTER_FIELD_L4_SRC_PORT = 35,
  FILTER_FIELD_INPUT_PORT = 36,
  FILTER_FIELD_I_INPUT_SNMP_ALIAS = 37,
  FILTER_FIELD_I_INPUT_INTERFACE_DESCRIPTION = 38,
  FILTER_FIELD_BOTH_PKTS = 39,
  FILTER_FIELD_I_DEVICE_NAME = 40,
  FILTER_FIELD_PROTOCOL = 41,
  FILTER_FIELD_TCP_FLAGS = 42,
  FILTER_FIELD_TCP_FLAGS_RAW = 43,
  FILTER_FIELD_TCP_RETRANSMIT = 44,
  FILTER_FIELD_TOS = 45,
  FILTER_FIELD_VLAN_IN = 46,
  FILTER_FIELD_VLAN_OUT = 47,
  FilterField_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  FilterField_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool FilterField_IsValid(int value);
constexpr FilterField FilterField_MIN = FILTER_FIELD_UNSPECIFIED;
constexpr FilterField FilterField_MAX = FILTER_FIELD_VLAN_OUT;
constexpr int FilterField_ARRAYSIZE = FilterField_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* FilterField_descriptor();
template<typename T>
inline const std::string& FilterField_Name(T enum_t_value) {
  static_assert(::std::is_same<T, FilterField>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function FilterField_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    FilterField_descriptor(), enum_t_value);
}
inline bool FilterField_Parse(
    const std::string& name, FilterField* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<FilterField>(
    FilterField_descriptor(), name, value);
}
enum FilterOperator : int {
  FILTER_OPERATOR_UNSPECIFIED = 0,
  FILTER_OPERATOR_EQUAL = 1,
  FILTER_OPERATOR_NOT_EQUAL = 2,
  FILTER_OPERATOR_CONTAINS = 3,
  FILTER_OPERATOR_NOT_CONTAINS = 4,
  FILTER_OPERATOR_REGEX_CONTAINS = 5,
  FILTER_OPERATOR_REGEX_NOT_CONTAINS = 6,
  FILTER_OPERATOR_GREATER_THAN = 7,
  FILTER_OPERATOR_LESS_THAN = 8,
  FILTER_OPERATOR_BITWISE_AND = 9,
  FilterOperator_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  FilterOperator_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool FilterOperator_IsValid(int value);
constexpr FilterOperator FilterOperator_MIN = FILTER_OPERATOR_UNSPECIFIED;
constexpr FilterOperator FilterOperator_MAX = FILTER_OPERATOR_BITWISE_AND;
constexpr int FilterOperator_ARRAYSIZE = FilterOperator_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* FilterOperator_descriptor();
template<typename T>
inline const std::string& FilterOperator_Name(T enum_t_value) {
  static_assert(::std::is_same<T, FilterOperator>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function FilterOperator_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    FilterOperator_descriptor(), enum_t_value);
}
inline bool FilterOperator_Parse(
    const std::string& name, FilterOperator* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<FilterOperator>(
    FilterOperator_descriptor(), name, value);
}
enum FilterLevel : int {
  FILTER_LEVEL_UNSPECIFIED = 0,
  FILTER_LEVEL_COMPANY = 1,
  FILTER_LEVEL_GLOBAL = 2,
  FILTER_LEVEL_USER = 3,
  FilterLevel_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  FilterLevel_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool FilterLevel_IsValid(int value);
constexpr FilterLevel FilterLevel_MIN = FILTER_LEVEL_UNSPECIFIED;
constexpr FilterLevel FilterLevel_MAX = FILTER_LEVEL_USER;
constexpr int FilterLevel_ARRAYSIZE = FilterLevel_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* FilterLevel_descriptor();
template<typename T>
inline const std::string& FilterLevel_Name(T enum_t_value) {
  static_assert(::std::is_same<T, FilterLevel>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function FilterLevel_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    FilterLevel_descriptor(), enum_t_value);
}
inline bool FilterLevel_Parse(
    const std::string& name, FilterLevel* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<FilterLevel>(
    FilterLevel_descriptor(), name, value);
}
// ===================================================================

class SavedFilterFilter PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kentik.saved_filter.v202501alpha1.SavedFilterFilter) */ {
 public:
  inline SavedFilterFilter() : SavedFilterFilter(nullptr) {};
  virtual ~SavedFilterFilter();

  SavedFilterFilter(const SavedFilterFilter& from);
  SavedFilterFilter(SavedFilterFilter&& from) noexcept
    : SavedFilterFilter() {
    *this = ::std::move(from);
  }

  inline SavedFilterFilter& operator=(const SavedFilterFilter& from) {
    CopyFrom(from);
    return *this;
  }
  inline SavedFilterFilter& operator=(SavedFilterFilter&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SavedFilterFilter& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SavedFilterFilter* internal_default_instance() {
    return reinterpret_cast<const SavedFilterFilter*>(
               &_SavedFilterFilter_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(SavedFilterFilter& a, SavedFilterFilter& b) {
    a.Swap(&b);
  }
  inline void Swap(SavedFilterFilter* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SavedFilterFilter* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SavedFilterFilter* New() const final {
    return CreateMaybeMessage<SavedFilterFilter>(nullptr);
  }

  SavedFilterFilter* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SavedFilterFilter>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SavedFilterFilter& from);
  void MergeFrom(const SavedFilterFilter& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SavedFilterFilter* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kentik.saved_filter.v202501alpha1.SavedFilterFilter";
  }
  protected:
  explicit SavedFilterFilter(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_5fmessage_2eproto);
    return ::descriptor_table_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_5fmessage_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFilterValueFieldNumber = 3,
    kFilterFieldFieldNumber = 1,
    kOperatorFieldNumber = 2,
  };
  // string filter_value = 3[json_name = "filterValue", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_filter_value();
  const std::string& filter_value() const;
  void set_filter_value(const std::string& value);
  void set_filter_value(std::string&& value);
  void set_filter_value(const char* value);
  void set_filter_value(const char* value, size_t size);
  std::string* mutable_filter_value();
  std::string* release_filter_value();
  void set_allocated_filter_value(std::string* filter_value);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_filter_value();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_filter_value(
      std::string* filter_value);
  private:
  const std::string& _internal_filter_value() const;
  void _internal_set_filter_value(const std::string& value);
  std::string* _internal_mutable_filter_value();
  public:

  // .kentik.saved_filter.v202501alpha1.FilterField filter_field = 1[json_name = "filterField", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_filter_field();
  ::kentik::saved_filter::v202501alpha1::FilterField filter_field() const;
  void set_filter_field(::kentik::saved_filter::v202501alpha1::FilterField value);
  private:
  ::kentik::saved_filter::v202501alpha1::FilterField _internal_filter_field() const;
  void _internal_set_filter_field(::kentik::saved_filter::v202501alpha1::FilterField value);
  public:

  // .kentik.saved_filter.v202501alpha1.FilterOperator operator = 2[json_name = "operator", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_operator_();
  ::kentik::saved_filter::v202501alpha1::FilterOperator operator_() const;
  void set_operator_(::kentik::saved_filter::v202501alpha1::FilterOperator value);
  private:
  ::kentik::saved_filter::v202501alpha1::FilterOperator _internal_operator_() const;
  void _internal_set_operator_(::kentik::saved_filter::v202501alpha1::FilterOperator value);
  public:

  // @@protoc_insertion_point(class_scope:kentik.saved_filter.v202501alpha1.SavedFilterFilter)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr filter_value_;
  int filter_field_;
  int operator__;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_5fmessage_2eproto;
};
// -------------------------------------------------------------------

class SavedFilterFilterGroup PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kentik.saved_filter.v202501alpha1.SavedFilterFilterGroup) */ {
 public:
  inline SavedFilterFilterGroup() : SavedFilterFilterGroup(nullptr) {};
  virtual ~SavedFilterFilterGroup();

  SavedFilterFilterGroup(const SavedFilterFilterGroup& from);
  SavedFilterFilterGroup(SavedFilterFilterGroup&& from) noexcept
    : SavedFilterFilterGroup() {
    *this = ::std::move(from);
  }

  inline SavedFilterFilterGroup& operator=(const SavedFilterFilterGroup& from) {
    CopyFrom(from);
    return *this;
  }
  inline SavedFilterFilterGroup& operator=(SavedFilterFilterGroup&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SavedFilterFilterGroup& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SavedFilterFilterGroup* internal_default_instance() {
    return reinterpret_cast<const SavedFilterFilterGroup*>(
               &_SavedFilterFilterGroup_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(SavedFilterFilterGroup& a, SavedFilterFilterGroup& b) {
    a.Swap(&b);
  }
  inline void Swap(SavedFilterFilterGroup* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SavedFilterFilterGroup* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SavedFilterFilterGroup* New() const final {
    return CreateMaybeMessage<SavedFilterFilterGroup>(nullptr);
  }

  SavedFilterFilterGroup* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SavedFilterFilterGroup>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SavedFilterFilterGroup& from);
  void MergeFrom(const SavedFilterFilterGroup& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SavedFilterFilterGroup* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kentik.saved_filter.v202501alpha1.SavedFilterFilterGroup";
  }
  protected:
  explicit SavedFilterFilterGroup(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_5fmessage_2eproto);
    return ::descriptor_table_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_5fmessage_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFiltersFieldNumber = 2,
    kAnyFieldNumber = 1,
    kNotFieldNumber = 3,
  };
  // repeated .kentik.saved_filter.v202501alpha1.SavedFilterFilter filters = 2[json_name = "filters", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int filters_size() const;
  private:
  int _internal_filters_size() const;
  public:
  void clear_filters();
  ::kentik::saved_filter::v202501alpha1::SavedFilterFilter* mutable_filters(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kentik::saved_filter::v202501alpha1::SavedFilterFilter >*
      mutable_filters();
  private:
  const ::kentik::saved_filter::v202501alpha1::SavedFilterFilter& _internal_filters(int index) const;
  ::kentik::saved_filter::v202501alpha1::SavedFilterFilter* _internal_add_filters();
  public:
  const ::kentik::saved_filter::v202501alpha1::SavedFilterFilter& filters(int index) const;
  ::kentik::saved_filter::v202501alpha1::SavedFilterFilter* add_filters();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kentik::saved_filter::v202501alpha1::SavedFilterFilter >&
      filters() const;

  // bool any = 1[json_name = "any", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_any();
  bool any() const;
  void set_any(bool value);
  private:
  bool _internal_any() const;
  void _internal_set_any(bool value);
  public:

  // bool not = 3[json_name = "not", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_not_();
  bool not_() const;
  void set_not_(bool value);
  private:
  bool _internal_not_() const;
  void _internal_set_not_(bool value);
  public:

  // @@protoc_insertion_point(class_scope:kentik.saved_filter.v202501alpha1.SavedFilterFilterGroup)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kentik::saved_filter::v202501alpha1::SavedFilterFilter > filters_;
  bool any_;
  bool not__;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_5fmessage_2eproto;
};
// -------------------------------------------------------------------

class SavedFilterFilters PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kentik.saved_filter.v202501alpha1.SavedFilterFilters) */ {
 public:
  inline SavedFilterFilters() : SavedFilterFilters(nullptr) {};
  virtual ~SavedFilterFilters();

  SavedFilterFilters(const SavedFilterFilters& from);
  SavedFilterFilters(SavedFilterFilters&& from) noexcept
    : SavedFilterFilters() {
    *this = ::std::move(from);
  }

  inline SavedFilterFilters& operator=(const SavedFilterFilters& from) {
    CopyFrom(from);
    return *this;
  }
  inline SavedFilterFilters& operator=(SavedFilterFilters&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SavedFilterFilters& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SavedFilterFilters* internal_default_instance() {
    return reinterpret_cast<const SavedFilterFilters*>(
               &_SavedFilterFilters_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(SavedFilterFilters& a, SavedFilterFilters& b) {
    a.Swap(&b);
  }
  inline void Swap(SavedFilterFilters* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SavedFilterFilters* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SavedFilterFilters* New() const final {
    return CreateMaybeMessage<SavedFilterFilters>(nullptr);
  }

  SavedFilterFilters* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SavedFilterFilters>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SavedFilterFilters& from);
  void MergeFrom(const SavedFilterFilters& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SavedFilterFilters* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kentik.saved_filter.v202501alpha1.SavedFilterFilters";
  }
  protected:
  explicit SavedFilterFilters(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_5fmessage_2eproto);
    return ::descriptor_table_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_5fmessage_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFilterGroupsFieldNumber = 2,
    kAnyFieldNumber = 1,
  };
  // repeated .kentik.saved_filter.v202501alpha1.SavedFilterFilterGroup filter_groups = 2[json_name = "filterGroups", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int filter_groups_size() const;
  private:
  int _internal_filter_groups_size() const;
  public:
  void clear_filter_groups();
  ::kentik::saved_filter::v202501alpha1::SavedFilterFilterGroup* mutable_filter_groups(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kentik::saved_filter::v202501alpha1::SavedFilterFilterGroup >*
      mutable_filter_groups();
  private:
  const ::kentik::saved_filter::v202501alpha1::SavedFilterFilterGroup& _internal_filter_groups(int index) const;
  ::kentik::saved_filter::v202501alpha1::SavedFilterFilterGroup* _internal_add_filter_groups();
  public:
  const ::kentik::saved_filter::v202501alpha1::SavedFilterFilterGroup& filter_groups(int index) const;
  ::kentik::saved_filter::v202501alpha1::SavedFilterFilterGroup* add_filter_groups();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kentik::saved_filter::v202501alpha1::SavedFilterFilterGroup >&
      filter_groups() const;

  // bool any = 1[json_name = "any", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_any();
  bool any() const;
  void set_any(bool value);
  private:
  bool _internal_any() const;
  void _internal_set_any(bool value);
  public:

  // @@protoc_insertion_point(class_scope:kentik.saved_filter.v202501alpha1.SavedFilterFilters)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kentik::saved_filter::v202501alpha1::SavedFilterFilterGroup > filter_groups_;
  bool any_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_5fmessage_2eproto;
};
// -------------------------------------------------------------------

class SavedFilter PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kentik.saved_filter.v202501alpha1.SavedFilter) */ {
 public:
  inline SavedFilter() : SavedFilter(nullptr) {};
  virtual ~SavedFilter();

  SavedFilter(const SavedFilter& from);
  SavedFilter(SavedFilter&& from) noexcept
    : SavedFilter() {
    *this = ::std::move(from);
  }

  inline SavedFilter& operator=(const SavedFilter& from) {
    CopyFrom(from);
    return *this;
  }
  inline SavedFilter& operator=(SavedFilter&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SavedFilter& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SavedFilter* internal_default_instance() {
    return reinterpret_cast<const SavedFilter*>(
               &_SavedFilter_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(SavedFilter& a, SavedFilter& b) {
    a.Swap(&b);
  }
  inline void Swap(SavedFilter* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SavedFilter* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SavedFilter* New() const final {
    return CreateMaybeMessage<SavedFilter>(nullptr);
  }

  SavedFilter* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SavedFilter>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SavedFilter& from);
  void MergeFrom(const SavedFilter& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SavedFilter* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kentik.saved_filter.v202501alpha1.SavedFilter";
  }
  protected:
  explicit SavedFilter(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_5fmessage_2eproto);
    return ::descriptor_table_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_5fmessage_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
    kFilterNameFieldNumber = 2,
    kFilterDescriptionFieldNumber = 3,
    kFiltersFieldNumber = 4,
    kUpdatedDateFieldNumber = 7,
    kCreatedDateFieldNumber = 26,
    kFilterLevelFieldNumber = 5,
  };
  // string id = 1[json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_id();
  const std::string& id() const;
  void set_id(const std::string& value);
  void set_id(std::string&& value);
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  std::string* mutable_id();
  std::string* release_id();
  void set_allocated_id(std::string* id);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_id();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_id(
      std::string* id);
  private:
  const std::string& _internal_id() const;
  void _internal_set_id(const std::string& value);
  std::string* _internal_mutable_id();
  public:

  // string filter_name = 2[json_name = "filterName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_filter_name();
  const std::string& filter_name() const;
  void set_filter_name(const std::string& value);
  void set_filter_name(std::string&& value);
  void set_filter_name(const char* value);
  void set_filter_name(const char* value, size_t size);
  std::string* mutable_filter_name();
  std::string* release_filter_name();
  void set_allocated_filter_name(std::string* filter_name);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_filter_name();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_filter_name(
      std::string* filter_name);
  private:
  const std::string& _internal_filter_name() const;
  void _internal_set_filter_name(const std::string& value);
  std::string* _internal_mutable_filter_name();
  public:

  // string filter_description = 3[json_name = "filterDescription", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_filter_description();
  const std::string& filter_description() const;
  void set_filter_description(const std::string& value);
  void set_filter_description(std::string&& value);
  void set_filter_description(const char* value);
  void set_filter_description(const char* value, size_t size);
  std::string* mutable_filter_description();
  std::string* release_filter_description();
  void set_allocated_filter_description(std::string* filter_description);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_filter_description();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_filter_description(
      std::string* filter_description);
  private:
  const std::string& _internal_filter_description() const;
  void _internal_set_filter_description(const std::string& value);
  std::string* _internal_mutable_filter_description();
  public:

  // .kentik.saved_filter.v202501alpha1.SavedFilterFilters filters = 4[json_name = "filters", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_filters() const;
  private:
  bool _internal_has_filters() const;
  public:
  void clear_filters();
  const ::kentik::saved_filter::v202501alpha1::SavedFilterFilters& filters() const;
  ::kentik::saved_filter::v202501alpha1::SavedFilterFilters* release_filters();
  ::kentik::saved_filter::v202501alpha1::SavedFilterFilters* mutable_filters();
  void set_allocated_filters(::kentik::saved_filter::v202501alpha1::SavedFilterFilters* filters);
  private:
  const ::kentik::saved_filter::v202501alpha1::SavedFilterFilters& _internal_filters() const;
  ::kentik::saved_filter::v202501alpha1::SavedFilterFilters* _internal_mutable_filters();
  public:
  void unsafe_arena_set_allocated_filters(
      ::kentik::saved_filter::v202501alpha1::SavedFilterFilters* filters);
  ::kentik::saved_filter::v202501alpha1::SavedFilterFilters* unsafe_arena_release_filters();

  // .google.protobuf.Timestamp updated_date = 7[json_name = "updatedDate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_updated_date() const;
  private:
  bool _internal_has_updated_date() const;
  public:
  void clear_updated_date();
  const PROTOBUF_NAMESPACE_ID::Timestamp& updated_date() const;
  PROTOBUF_NAMESPACE_ID::Timestamp* release_updated_date();
  PROTOBUF_NAMESPACE_ID::Timestamp* mutable_updated_date();
  void set_allocated_updated_date(PROTOBUF_NAMESPACE_ID::Timestamp* updated_date);
  private:
  const PROTOBUF_NAMESPACE_ID::Timestamp& _internal_updated_date() const;
  PROTOBUF_NAMESPACE_ID::Timestamp* _internal_mutable_updated_date();
  public:
  void unsafe_arena_set_allocated_updated_date(
      PROTOBUF_NAMESPACE_ID::Timestamp* updated_date);
  PROTOBUF_NAMESPACE_ID::Timestamp* unsafe_arena_release_updated_date();

  // .google.protobuf.Timestamp created_date = 26[json_name = "createdDate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_created_date() const;
  private:
  bool _internal_has_created_date() const;
  public:
  void clear_created_date();
  const PROTOBUF_NAMESPACE_ID::Timestamp& created_date() const;
  PROTOBUF_NAMESPACE_ID::Timestamp* release_created_date();
  PROTOBUF_NAMESPACE_ID::Timestamp* mutable_created_date();
  void set_allocated_created_date(PROTOBUF_NAMESPACE_ID::Timestamp* created_date);
  private:
  const PROTOBUF_NAMESPACE_ID::Timestamp& _internal_created_date() const;
  PROTOBUF_NAMESPACE_ID::Timestamp* _internal_mutable_created_date();
  public:
  void unsafe_arena_set_allocated_created_date(
      PROTOBUF_NAMESPACE_ID::Timestamp* created_date);
  PROTOBUF_NAMESPACE_ID::Timestamp* unsafe_arena_release_created_date();

  // .kentik.saved_filter.v202501alpha1.FilterLevel filter_level = 5[json_name = "filterLevel", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_filter_level();
  ::kentik::saved_filter::v202501alpha1::FilterLevel filter_level() const;
  void set_filter_level(::kentik::saved_filter::v202501alpha1::FilterLevel value);
  private:
  ::kentik::saved_filter::v202501alpha1::FilterLevel _internal_filter_level() const;
  void _internal_set_filter_level(::kentik::saved_filter::v202501alpha1::FilterLevel value);
  public:

  // @@protoc_insertion_point(class_scope:kentik.saved_filter.v202501alpha1.SavedFilter)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr id_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr filter_name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr filter_description_;
  ::kentik::saved_filter::v202501alpha1::SavedFilterFilters* filters_;
  PROTOBUF_NAMESPACE_ID::Timestamp* updated_date_;
  PROTOBUF_NAMESPACE_ID::Timestamp* created_date_;
  int filter_level_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_5fmessage_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SavedFilterFilter

// .kentik.saved_filter.v202501alpha1.FilterField filter_field = 1[json_name = "filterField", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void SavedFilterFilter::clear_filter_field() {
  filter_field_ = 0;
}
inline ::kentik::saved_filter::v202501alpha1::FilterField SavedFilterFilter::_internal_filter_field() const {
  return static_cast< ::kentik::saved_filter::v202501alpha1::FilterField >(filter_field_);
}
inline ::kentik::saved_filter::v202501alpha1::FilterField SavedFilterFilter::filter_field() const {
  // @@protoc_insertion_point(field_get:kentik.saved_filter.v202501alpha1.SavedFilterFilter.filter_field)
  return _internal_filter_field();
}
inline void SavedFilterFilter::_internal_set_filter_field(::kentik::saved_filter::v202501alpha1::FilterField value) {
  
  filter_field_ = value;
}
inline void SavedFilterFilter::set_filter_field(::kentik::saved_filter::v202501alpha1::FilterField value) {
  _internal_set_filter_field(value);
  // @@protoc_insertion_point(field_set:kentik.saved_filter.v202501alpha1.SavedFilterFilter.filter_field)
}

// .kentik.saved_filter.v202501alpha1.FilterOperator operator = 2[json_name = "operator", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void SavedFilterFilter::clear_operator_() {
  operator__ = 0;
}
inline ::kentik::saved_filter::v202501alpha1::FilterOperator SavedFilterFilter::_internal_operator_() const {
  return static_cast< ::kentik::saved_filter::v202501alpha1::FilterOperator >(operator__);
}
inline ::kentik::saved_filter::v202501alpha1::FilterOperator SavedFilterFilter::operator_() const {
  // @@protoc_insertion_point(field_get:kentik.saved_filter.v202501alpha1.SavedFilterFilter.operator)
  return _internal_operator_();
}
inline void SavedFilterFilter::_internal_set_operator_(::kentik::saved_filter::v202501alpha1::FilterOperator value) {
  
  operator__ = value;
}
inline void SavedFilterFilter::set_operator_(::kentik::saved_filter::v202501alpha1::FilterOperator value) {
  _internal_set_operator_(value);
  // @@protoc_insertion_point(field_set:kentik.saved_filter.v202501alpha1.SavedFilterFilter.operator)
}

// string filter_value = 3[json_name = "filterValue", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void SavedFilterFilter::clear_filter_value() {
  filter_value_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& SavedFilterFilter::filter_value() const {
  // @@protoc_insertion_point(field_get:kentik.saved_filter.v202501alpha1.SavedFilterFilter.filter_value)
  return _internal_filter_value();
}
inline void SavedFilterFilter::set_filter_value(const std::string& value) {
  _internal_set_filter_value(value);
  // @@protoc_insertion_point(field_set:kentik.saved_filter.v202501alpha1.SavedFilterFilter.filter_value)
}
inline std::string* SavedFilterFilter::mutable_filter_value() {
  // @@protoc_insertion_point(field_mutable:kentik.saved_filter.v202501alpha1.SavedFilterFilter.filter_value)
  return _internal_mutable_filter_value();
}
inline const std::string& SavedFilterFilter::_internal_filter_value() const {
  return filter_value_.Get();
}
inline void SavedFilterFilter::_internal_set_filter_value(const std::string& value) {
  
  filter_value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void SavedFilterFilter::set_filter_value(std::string&& value) {
  
  filter_value_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:kentik.saved_filter.v202501alpha1.SavedFilterFilter.filter_value)
}
inline void SavedFilterFilter::set_filter_value(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  filter_value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:kentik.saved_filter.v202501alpha1.SavedFilterFilter.filter_value)
}
inline void SavedFilterFilter::set_filter_value(const char* value,
    size_t size) {
  
  filter_value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:kentik.saved_filter.v202501alpha1.SavedFilterFilter.filter_value)
}
inline std::string* SavedFilterFilter::_internal_mutable_filter_value() {
  
  return filter_value_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* SavedFilterFilter::release_filter_value() {
  // @@protoc_insertion_point(field_release:kentik.saved_filter.v202501alpha1.SavedFilterFilter.filter_value)
  return filter_value_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void SavedFilterFilter::set_allocated_filter_value(std::string* filter_value) {
  if (filter_value != nullptr) {
    
  } else {
    
  }
  filter_value_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), filter_value,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:kentik.saved_filter.v202501alpha1.SavedFilterFilter.filter_value)
}
inline std::string* SavedFilterFilter::unsafe_arena_release_filter_value() {
  // @@protoc_insertion_point(field_unsafe_arena_release:kentik.saved_filter.v202501alpha1.SavedFilterFilter.filter_value)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return filter_value_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void SavedFilterFilter::unsafe_arena_set_allocated_filter_value(
    std::string* filter_value) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (filter_value != nullptr) {
    
  } else {
    
  }
  filter_value_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      filter_value, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.saved_filter.v202501alpha1.SavedFilterFilter.filter_value)
}

// -------------------------------------------------------------------

// SavedFilterFilterGroup

// bool any = 1[json_name = "any", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void SavedFilterFilterGroup::clear_any() {
  any_ = false;
}
inline bool SavedFilterFilterGroup::_internal_any() const {
  return any_;
}
inline bool SavedFilterFilterGroup::any() const {
  // @@protoc_insertion_point(field_get:kentik.saved_filter.v202501alpha1.SavedFilterFilterGroup.any)
  return _internal_any();
}
inline void SavedFilterFilterGroup::_internal_set_any(bool value) {
  
  any_ = value;
}
inline void SavedFilterFilterGroup::set_any(bool value) {
  _internal_set_any(value);
  // @@protoc_insertion_point(field_set:kentik.saved_filter.v202501alpha1.SavedFilterFilterGroup.any)
}

// repeated .kentik.saved_filter.v202501alpha1.SavedFilterFilter filters = 2[json_name = "filters", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int SavedFilterFilterGroup::_internal_filters_size() const {
  return filters_.size();
}
inline int SavedFilterFilterGroup::filters_size() const {
  return _internal_filters_size();
}
inline void SavedFilterFilterGroup::clear_filters() {
  filters_.Clear();
}
inline ::kentik::saved_filter::v202501alpha1::SavedFilterFilter* SavedFilterFilterGroup::mutable_filters(int index) {
  // @@protoc_insertion_point(field_mutable:kentik.saved_filter.v202501alpha1.SavedFilterFilterGroup.filters)
  return filters_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kentik::saved_filter::v202501alpha1::SavedFilterFilter >*
SavedFilterFilterGroup::mutable_filters() {
  // @@protoc_insertion_point(field_mutable_list:kentik.saved_filter.v202501alpha1.SavedFilterFilterGroup.filters)
  return &filters_;
}
inline const ::kentik::saved_filter::v202501alpha1::SavedFilterFilter& SavedFilterFilterGroup::_internal_filters(int index) const {
  return filters_.Get(index);
}
inline const ::kentik::saved_filter::v202501alpha1::SavedFilterFilter& SavedFilterFilterGroup::filters(int index) const {
  // @@protoc_insertion_point(field_get:kentik.saved_filter.v202501alpha1.SavedFilterFilterGroup.filters)
  return _internal_filters(index);
}
inline ::kentik::saved_filter::v202501alpha1::SavedFilterFilter* SavedFilterFilterGroup::_internal_add_filters() {
  return filters_.Add();
}
inline ::kentik::saved_filter::v202501alpha1::SavedFilterFilter* SavedFilterFilterGroup::add_filters() {
  // @@protoc_insertion_point(field_add:kentik.saved_filter.v202501alpha1.SavedFilterFilterGroup.filters)
  return _internal_add_filters();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kentik::saved_filter::v202501alpha1::SavedFilterFilter >&
SavedFilterFilterGroup::filters() const {
  // @@protoc_insertion_point(field_list:kentik.saved_filter.v202501alpha1.SavedFilterFilterGroup.filters)
  return filters_;
}

// bool not = 3[json_name = "not", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void SavedFilterFilterGroup::clear_not_() {
  not__ = false;
}
inline bool SavedFilterFilterGroup::_internal_not_() const {
  return not__;
}
inline bool SavedFilterFilterGroup::not_() const {
  // @@protoc_insertion_point(field_get:kentik.saved_filter.v202501alpha1.SavedFilterFilterGroup.not)
  return _internal_not_();
}
inline void SavedFilterFilterGroup::_internal_set_not_(bool value) {
  
  not__ = value;
}
inline void SavedFilterFilterGroup::set_not_(bool value) {
  _internal_set_not_(value);
  // @@protoc_insertion_point(field_set:kentik.saved_filter.v202501alpha1.SavedFilterFilterGroup.not)
}

// -------------------------------------------------------------------

// SavedFilterFilters

// bool any = 1[json_name = "any", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void SavedFilterFilters::clear_any() {
  any_ = false;
}
inline bool SavedFilterFilters::_internal_any() const {
  return any_;
}
inline bool SavedFilterFilters::any() const {
  // @@protoc_insertion_point(field_get:kentik.saved_filter.v202501alpha1.SavedFilterFilters.any)
  return _internal_any();
}
inline void SavedFilterFilters::_internal_set_any(bool value) {
  
  any_ = value;
}
inline void SavedFilterFilters::set_any(bool value) {
  _internal_set_any(value);
  // @@protoc_insertion_point(field_set:kentik.saved_filter.v202501alpha1.SavedFilterFilters.any)
}

// repeated .kentik.saved_filter.v202501alpha1.SavedFilterFilterGroup filter_groups = 2[json_name = "filterGroups", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int SavedFilterFilters::_internal_filter_groups_size() const {
  return filter_groups_.size();
}
inline int SavedFilterFilters::filter_groups_size() const {
  return _internal_filter_groups_size();
}
inline void SavedFilterFilters::clear_filter_groups() {
  filter_groups_.Clear();
}
inline ::kentik::saved_filter::v202501alpha1::SavedFilterFilterGroup* SavedFilterFilters::mutable_filter_groups(int index) {
  // @@protoc_insertion_point(field_mutable:kentik.saved_filter.v202501alpha1.SavedFilterFilters.filter_groups)
  return filter_groups_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kentik::saved_filter::v202501alpha1::SavedFilterFilterGroup >*
SavedFilterFilters::mutable_filter_groups() {
  // @@protoc_insertion_point(field_mutable_list:kentik.saved_filter.v202501alpha1.SavedFilterFilters.filter_groups)
  return &filter_groups_;
}
inline const ::kentik::saved_filter::v202501alpha1::SavedFilterFilterGroup& SavedFilterFilters::_internal_filter_groups(int index) const {
  return filter_groups_.Get(index);
}
inline const ::kentik::saved_filter::v202501alpha1::SavedFilterFilterGroup& SavedFilterFilters::filter_groups(int index) const {
  // @@protoc_insertion_point(field_get:kentik.saved_filter.v202501alpha1.SavedFilterFilters.filter_groups)
  return _internal_filter_groups(index);
}
inline ::kentik::saved_filter::v202501alpha1::SavedFilterFilterGroup* SavedFilterFilters::_internal_add_filter_groups() {
  return filter_groups_.Add();
}
inline ::kentik::saved_filter::v202501alpha1::SavedFilterFilterGroup* SavedFilterFilters::add_filter_groups() {
  // @@protoc_insertion_point(field_add:kentik.saved_filter.v202501alpha1.SavedFilterFilters.filter_groups)
  return _internal_add_filter_groups();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kentik::saved_filter::v202501alpha1::SavedFilterFilterGroup >&
SavedFilterFilters::filter_groups() const {
  // @@protoc_insertion_point(field_list:kentik.saved_filter.v202501alpha1.SavedFilterFilters.filter_groups)
  return filter_groups_;
}

// -------------------------------------------------------------------

// SavedFilter

// string id = 1[json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void SavedFilter::clear_id() {
  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& SavedFilter::id() const {
  // @@protoc_insertion_point(field_get:kentik.saved_filter.v202501alpha1.SavedFilter.id)
  return _internal_id();
}
inline void SavedFilter::set_id(const std::string& value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:kentik.saved_filter.v202501alpha1.SavedFilter.id)
}
inline std::string* SavedFilter::mutable_id() {
  // @@protoc_insertion_point(field_mutable:kentik.saved_filter.v202501alpha1.SavedFilter.id)
  return _internal_mutable_id();
}
inline const std::string& SavedFilter::_internal_id() const {
  return id_.Get();
}
inline void SavedFilter::_internal_set_id(const std::string& value) {
  
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void SavedFilter::set_id(std::string&& value) {
  
  id_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:kentik.saved_filter.v202501alpha1.SavedFilter.id)
}
inline void SavedFilter::set_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:kentik.saved_filter.v202501alpha1.SavedFilter.id)
}
inline void SavedFilter::set_id(const char* value,
    size_t size) {
  
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:kentik.saved_filter.v202501alpha1.SavedFilter.id)
}
inline std::string* SavedFilter::_internal_mutable_id() {
  
  return id_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* SavedFilter::release_id() {
  // @@protoc_insertion_point(field_release:kentik.saved_filter.v202501alpha1.SavedFilter.id)
  return id_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void SavedFilter::set_allocated_id(std::string* id) {
  if (id != nullptr) {
    
  } else {
    
  }
  id_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), id,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:kentik.saved_filter.v202501alpha1.SavedFilter.id)
}
inline std::string* SavedFilter::unsafe_arena_release_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:kentik.saved_filter.v202501alpha1.SavedFilter.id)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return id_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void SavedFilter::unsafe_arena_set_allocated_id(
    std::string* id) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (id != nullptr) {
    
  } else {
    
  }
  id_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      id, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.saved_filter.v202501alpha1.SavedFilter.id)
}

// string filter_name = 2[json_name = "filterName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void SavedFilter::clear_filter_name() {
  filter_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& SavedFilter::filter_name() const {
  // @@protoc_insertion_point(field_get:kentik.saved_filter.v202501alpha1.SavedFilter.filter_name)
  return _internal_filter_name();
}
inline void SavedFilter::set_filter_name(const std::string& value) {
  _internal_set_filter_name(value);
  // @@protoc_insertion_point(field_set:kentik.saved_filter.v202501alpha1.SavedFilter.filter_name)
}
inline std::string* SavedFilter::mutable_filter_name() {
  // @@protoc_insertion_point(field_mutable:kentik.saved_filter.v202501alpha1.SavedFilter.filter_name)
  return _internal_mutable_filter_name();
}
inline const std::string& SavedFilter::_internal_filter_name() const {
  return filter_name_.Get();
}
inline void SavedFilter::_internal_set_filter_name(const std::string& value) {
  
  filter_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void SavedFilter::set_filter_name(std::string&& value) {
  
  filter_name_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:kentik.saved_filter.v202501alpha1.SavedFilter.filter_name)
}
inline void SavedFilter::set_filter_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  filter_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:kentik.saved_filter.v202501alpha1.SavedFilter.filter_name)
}
inline void SavedFilter::set_filter_name(const char* value,
    size_t size) {
  
  filter_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:kentik.saved_filter.v202501alpha1.SavedFilter.filter_name)
}
inline std::string* SavedFilter::_internal_mutable_filter_name() {
  
  return filter_name_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* SavedFilter::release_filter_name() {
  // @@protoc_insertion_point(field_release:kentik.saved_filter.v202501alpha1.SavedFilter.filter_name)
  return filter_name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void SavedFilter::set_allocated_filter_name(std::string* filter_name) {
  if (filter_name != nullptr) {
    
  } else {
    
  }
  filter_name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), filter_name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:kentik.saved_filter.v202501alpha1.SavedFilter.filter_name)
}
inline std::string* SavedFilter::unsafe_arena_release_filter_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:kentik.saved_filter.v202501alpha1.SavedFilter.filter_name)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return filter_name_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void SavedFilter::unsafe_arena_set_allocated_filter_name(
    std::string* filter_name) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (filter_name != nullptr) {
    
  } else {
    
  }
  filter_name_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      filter_name, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.saved_filter.v202501alpha1.SavedFilter.filter_name)
}

// string filter_description = 3[json_name = "filterDescription", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void SavedFilter::clear_filter_description() {
  filter_description_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& SavedFilter::filter_description() const {
  // @@protoc_insertion_point(field_get:kentik.saved_filter.v202501alpha1.SavedFilter.filter_description)
  return _internal_filter_description();
}
inline void SavedFilter::set_filter_description(const std::string& value) {
  _internal_set_filter_description(value);
  // @@protoc_insertion_point(field_set:kentik.saved_filter.v202501alpha1.SavedFilter.filter_description)
}
inline std::string* SavedFilter::mutable_filter_description() {
  // @@protoc_insertion_point(field_mutable:kentik.saved_filter.v202501alpha1.SavedFilter.filter_description)
  return _internal_mutable_filter_description();
}
inline const std::string& SavedFilter::_internal_filter_description() const {
  return filter_description_.Get();
}
inline void SavedFilter::_internal_set_filter_description(const std::string& value) {
  
  filter_description_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void SavedFilter::set_filter_description(std::string&& value) {
  
  filter_description_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:kentik.saved_filter.v202501alpha1.SavedFilter.filter_description)
}
inline void SavedFilter::set_filter_description(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  filter_description_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:kentik.saved_filter.v202501alpha1.SavedFilter.filter_description)
}
inline void SavedFilter::set_filter_description(const char* value,
    size_t size) {
  
  filter_description_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:kentik.saved_filter.v202501alpha1.SavedFilter.filter_description)
}
inline std::string* SavedFilter::_internal_mutable_filter_description() {
  
  return filter_description_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* SavedFilter::release_filter_description() {
  // @@protoc_insertion_point(field_release:kentik.saved_filter.v202501alpha1.SavedFilter.filter_description)
  return filter_description_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void SavedFilter::set_allocated_filter_description(std::string* filter_description) {
  if (filter_description != nullptr) {
    
  } else {
    
  }
  filter_description_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), filter_description,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:kentik.saved_filter.v202501alpha1.SavedFilter.filter_description)
}
inline std::string* SavedFilter::unsafe_arena_release_filter_description() {
  // @@protoc_insertion_point(field_unsafe_arena_release:kentik.saved_filter.v202501alpha1.SavedFilter.filter_description)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return filter_description_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void SavedFilter::unsafe_arena_set_allocated_filter_description(
    std::string* filter_description) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (filter_description != nullptr) {
    
  } else {
    
  }
  filter_description_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      filter_description, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.saved_filter.v202501alpha1.SavedFilter.filter_description)
}

// .kentik.saved_filter.v202501alpha1.SavedFilterFilters filters = 4[json_name = "filters", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool SavedFilter::_internal_has_filters() const {
  return this != internal_default_instance() && filters_ != nullptr;
}
inline bool SavedFilter::has_filters() const {
  return _internal_has_filters();
}
inline void SavedFilter::clear_filters() {
  if (GetArena() == nullptr && filters_ != nullptr) {
    delete filters_;
  }
  filters_ = nullptr;
}
inline const ::kentik::saved_filter::v202501alpha1::SavedFilterFilters& SavedFilter::_internal_filters() const {
  const ::kentik::saved_filter::v202501alpha1::SavedFilterFilters* p = filters_;
  return p != nullptr ? *p : *reinterpret_cast<const ::kentik::saved_filter::v202501alpha1::SavedFilterFilters*>(
      &::kentik::saved_filter::v202501alpha1::_SavedFilterFilters_default_instance_);
}
inline const ::kentik::saved_filter::v202501alpha1::SavedFilterFilters& SavedFilter::filters() const {
  // @@protoc_insertion_point(field_get:kentik.saved_filter.v202501alpha1.SavedFilter.filters)
  return _internal_filters();
}
inline void SavedFilter::unsafe_arena_set_allocated_filters(
    ::kentik::saved_filter::v202501alpha1::SavedFilterFilters* filters) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(filters_);
  }
  filters_ = filters;
  if (filters) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.saved_filter.v202501alpha1.SavedFilter.filters)
}
inline ::kentik::saved_filter::v202501alpha1::SavedFilterFilters* SavedFilter::release_filters() {
  auto temp = unsafe_arena_release_filters();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::kentik::saved_filter::v202501alpha1::SavedFilterFilters* SavedFilter::unsafe_arena_release_filters() {
  // @@protoc_insertion_point(field_release:kentik.saved_filter.v202501alpha1.SavedFilter.filters)
  
  ::kentik::saved_filter::v202501alpha1::SavedFilterFilters* temp = filters_;
  filters_ = nullptr;
  return temp;
}
inline ::kentik::saved_filter::v202501alpha1::SavedFilterFilters* SavedFilter::_internal_mutable_filters() {
  
  if (filters_ == nullptr) {
    auto* p = CreateMaybeMessage<::kentik::saved_filter::v202501alpha1::SavedFilterFilters>(GetArena());
    filters_ = p;
  }
  return filters_;
}
inline ::kentik::saved_filter::v202501alpha1::SavedFilterFilters* SavedFilter::mutable_filters() {
  // @@protoc_insertion_point(field_mutable:kentik.saved_filter.v202501alpha1.SavedFilter.filters)
  return _internal_mutable_filters();
}
inline void SavedFilter::set_allocated_filters(::kentik::saved_filter::v202501alpha1::SavedFilterFilters* filters) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete filters_;
  }
  if (filters) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(filters);
    if (message_arena != submessage_arena) {
      filters = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, filters, submessage_arena);
    }
    
  } else {
    
  }
  filters_ = filters;
  // @@protoc_insertion_point(field_set_allocated:kentik.saved_filter.v202501alpha1.SavedFilter.filters)
}

// .kentik.saved_filter.v202501alpha1.FilterLevel filter_level = 5[json_name = "filterLevel", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void SavedFilter::clear_filter_level() {
  filter_level_ = 0;
}
inline ::kentik::saved_filter::v202501alpha1::FilterLevel SavedFilter::_internal_filter_level() const {
  return static_cast< ::kentik::saved_filter::v202501alpha1::FilterLevel >(filter_level_);
}
inline ::kentik::saved_filter::v202501alpha1::FilterLevel SavedFilter::filter_level() const {
  // @@protoc_insertion_point(field_get:kentik.saved_filter.v202501alpha1.SavedFilter.filter_level)
  return _internal_filter_level();
}
inline void SavedFilter::_internal_set_filter_level(::kentik::saved_filter::v202501alpha1::FilterLevel value) {
  
  filter_level_ = value;
}
inline void SavedFilter::set_filter_level(::kentik::saved_filter::v202501alpha1::FilterLevel value) {
  _internal_set_filter_level(value);
  // @@protoc_insertion_point(field_set:kentik.saved_filter.v202501alpha1.SavedFilter.filter_level)
}

// .google.protobuf.Timestamp created_date = 26[json_name = "createdDate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool SavedFilter::_internal_has_created_date() const {
  return this != internal_default_instance() && created_date_ != nullptr;
}
inline bool SavedFilter::has_created_date() const {
  return _internal_has_created_date();
}
inline const PROTOBUF_NAMESPACE_ID::Timestamp& SavedFilter::_internal_created_date() const {
  const PROTOBUF_NAMESPACE_ID::Timestamp* p = created_date_;
  return p != nullptr ? *p : *reinterpret_cast<const PROTOBUF_NAMESPACE_ID::Timestamp*>(
      &PROTOBUF_NAMESPACE_ID::_Timestamp_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::Timestamp& SavedFilter::created_date() const {
  // @@protoc_insertion_point(field_get:kentik.saved_filter.v202501alpha1.SavedFilter.created_date)
  return _internal_created_date();
}
inline void SavedFilter::unsafe_arena_set_allocated_created_date(
    PROTOBUF_NAMESPACE_ID::Timestamp* created_date) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(created_date_);
  }
  created_date_ = created_date;
  if (created_date) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.saved_filter.v202501alpha1.SavedFilter.created_date)
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* SavedFilter::release_created_date() {
  auto temp = unsafe_arena_release_created_date();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* SavedFilter::unsafe_arena_release_created_date() {
  // @@protoc_insertion_point(field_release:kentik.saved_filter.v202501alpha1.SavedFilter.created_date)
  
  PROTOBUF_NAMESPACE_ID::Timestamp* temp = created_date_;
  created_date_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* SavedFilter::_internal_mutable_created_date() {
  
  if (created_date_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::Timestamp>(GetArena());
    created_date_ = p;
  }
  return created_date_;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* SavedFilter::mutable_created_date() {
  // @@protoc_insertion_point(field_mutable:kentik.saved_filter.v202501alpha1.SavedFilter.created_date)
  return _internal_mutable_created_date();
}
inline void SavedFilter::set_allocated_created_date(PROTOBUF_NAMESPACE_ID::Timestamp* created_date) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(created_date_);
  }
  if (created_date) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(created_date)->GetArena();
    if (message_arena != submessage_arena) {
      created_date = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, created_date, submessage_arena);
    }
    
  } else {
    
  }
  created_date_ = created_date;
  // @@protoc_insertion_point(field_set_allocated:kentik.saved_filter.v202501alpha1.SavedFilter.created_date)
}

// .google.protobuf.Timestamp updated_date = 7[json_name = "updatedDate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool SavedFilter::_internal_has_updated_date() const {
  return this != internal_default_instance() && updated_date_ != nullptr;
}
inline bool SavedFilter::has_updated_date() const {
  return _internal_has_updated_date();
}
inline const PROTOBUF_NAMESPACE_ID::Timestamp& SavedFilter::_internal_updated_date() const {
  const PROTOBUF_NAMESPACE_ID::Timestamp* p = updated_date_;
  return p != nullptr ? *p : *reinterpret_cast<const PROTOBUF_NAMESPACE_ID::Timestamp*>(
      &PROTOBUF_NAMESPACE_ID::_Timestamp_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::Timestamp& SavedFilter::updated_date() const {
  // @@protoc_insertion_point(field_get:kentik.saved_filter.v202501alpha1.SavedFilter.updated_date)
  return _internal_updated_date();
}
inline void SavedFilter::unsafe_arena_set_allocated_updated_date(
    PROTOBUF_NAMESPACE_ID::Timestamp* updated_date) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(updated_date_);
  }
  updated_date_ = updated_date;
  if (updated_date) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.saved_filter.v202501alpha1.SavedFilter.updated_date)
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* SavedFilter::release_updated_date() {
  auto temp = unsafe_arena_release_updated_date();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* SavedFilter::unsafe_arena_release_updated_date() {
  // @@protoc_insertion_point(field_release:kentik.saved_filter.v202501alpha1.SavedFilter.updated_date)
  
  PROTOBUF_NAMESPACE_ID::Timestamp* temp = updated_date_;
  updated_date_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* SavedFilter::_internal_mutable_updated_date() {
  
  if (updated_date_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::Timestamp>(GetArena());
    updated_date_ = p;
  }
  return updated_date_;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* SavedFilter::mutable_updated_date() {
  // @@protoc_insertion_point(field_mutable:kentik.saved_filter.v202501alpha1.SavedFilter.updated_date)
  return _internal_mutable_updated_date();
}
inline void SavedFilter::set_allocated_updated_date(PROTOBUF_NAMESPACE_ID::Timestamp* updated_date) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(updated_date_);
  }
  if (updated_date) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(updated_date)->GetArena();
    if (message_arena != submessage_arena) {
      updated_date = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, updated_date, submessage_arena);
    }
    
  } else {
    
  }
  updated_date_ = updated_date;
  // @@protoc_insertion_point(field_set_allocated:kentik.saved_filter.v202501alpha1.SavedFilter.updated_date)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v202501alpha1
}  // namespace saved_filter
}  // namespace kentik

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::kentik::saved_filter::v202501alpha1::FilterField> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::kentik::saved_filter::v202501alpha1::FilterField>() {
  return ::kentik::saved_filter::v202501alpha1::FilterField_descriptor();
}
template <> struct is_proto_enum< ::kentik::saved_filter::v202501alpha1::FilterOperator> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::kentik::saved_filter::v202501alpha1::FilterOperator>() {
  return ::kentik::saved_filter::v202501alpha1::FilterOperator_descriptor();
}
template <> struct is_proto_enum< ::kentik::saved_filter::v202501alpha1::FilterLevel> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::kentik::saved_filter::v202501alpha1::FilterLevel>() {
  return ::kentik::saved_filter::v202501alpha1::FilterLevel_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_5fmessage_2eproto
