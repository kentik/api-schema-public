// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: kentik/saved_filter/v202501alpha1/saved_filter.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3012000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3012004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "google/api/annotations.pb.h"
#include "google/api/client.pb.h"
#include "google/api/field_behavior.pb.h"
#include "protoc-gen-openapiv2/options/annotations.pb.h"
#include "kentik/core/v202303/annotations.pb.h"
#include "kentik/saved_filter/v202501alpha1/saved_filter_message.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[12]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_2eproto;
namespace kentik {
namespace saved_filter {
namespace v202501alpha1 {
class CreateSavedFilterRequest;
class CreateSavedFilterRequestDefaultTypeInternal;
extern CreateSavedFilterRequestDefaultTypeInternal _CreateSavedFilterRequest_default_instance_;
class CreateSavedFilterResponse;
class CreateSavedFilterResponseDefaultTypeInternal;
extern CreateSavedFilterResponseDefaultTypeInternal _CreateSavedFilterResponse_default_instance_;
class DeleteSavedFilterRequest;
class DeleteSavedFilterRequestDefaultTypeInternal;
extern DeleteSavedFilterRequestDefaultTypeInternal _DeleteSavedFilterRequest_default_instance_;
class DeleteSavedFilterResponse;
class DeleteSavedFilterResponseDefaultTypeInternal;
extern DeleteSavedFilterResponseDefaultTypeInternal _DeleteSavedFilterResponse_default_instance_;
class GetSavedFilterRequest;
class GetSavedFilterRequestDefaultTypeInternal;
extern GetSavedFilterRequestDefaultTypeInternal _GetSavedFilterRequest_default_instance_;
class GetSavedFilterResponse;
class GetSavedFilterResponseDefaultTypeInternal;
extern GetSavedFilterResponseDefaultTypeInternal _GetSavedFilterResponse_default_instance_;
class ListSavedFiltersAllRequest;
class ListSavedFiltersAllRequestDefaultTypeInternal;
extern ListSavedFiltersAllRequestDefaultTypeInternal _ListSavedFiltersAllRequest_default_instance_;
class ListSavedFiltersAllResponse;
class ListSavedFiltersAllResponseDefaultTypeInternal;
extern ListSavedFiltersAllResponseDefaultTypeInternal _ListSavedFiltersAllResponse_default_instance_;
class ListSavedFiltersRequest;
class ListSavedFiltersRequestDefaultTypeInternal;
extern ListSavedFiltersRequestDefaultTypeInternal _ListSavedFiltersRequest_default_instance_;
class ListSavedFiltersResponse;
class ListSavedFiltersResponseDefaultTypeInternal;
extern ListSavedFiltersResponseDefaultTypeInternal _ListSavedFiltersResponse_default_instance_;
class UpdateSavedFilterRequest;
class UpdateSavedFilterRequestDefaultTypeInternal;
extern UpdateSavedFilterRequestDefaultTypeInternal _UpdateSavedFilterRequest_default_instance_;
class UpdateSavedFilterResponse;
class UpdateSavedFilterResponseDefaultTypeInternal;
extern UpdateSavedFilterResponseDefaultTypeInternal _UpdateSavedFilterResponse_default_instance_;
}  // namespace v202501alpha1
}  // namespace saved_filter
}  // namespace kentik
PROTOBUF_NAMESPACE_OPEN
template<> ::kentik::saved_filter::v202501alpha1::CreateSavedFilterRequest* Arena::CreateMaybeMessage<::kentik::saved_filter::v202501alpha1::CreateSavedFilterRequest>(Arena*);
template<> ::kentik::saved_filter::v202501alpha1::CreateSavedFilterResponse* Arena::CreateMaybeMessage<::kentik::saved_filter::v202501alpha1::CreateSavedFilterResponse>(Arena*);
template<> ::kentik::saved_filter::v202501alpha1::DeleteSavedFilterRequest* Arena::CreateMaybeMessage<::kentik::saved_filter::v202501alpha1::DeleteSavedFilterRequest>(Arena*);
template<> ::kentik::saved_filter::v202501alpha1::DeleteSavedFilterResponse* Arena::CreateMaybeMessage<::kentik::saved_filter::v202501alpha1::DeleteSavedFilterResponse>(Arena*);
template<> ::kentik::saved_filter::v202501alpha1::GetSavedFilterRequest* Arena::CreateMaybeMessage<::kentik::saved_filter::v202501alpha1::GetSavedFilterRequest>(Arena*);
template<> ::kentik::saved_filter::v202501alpha1::GetSavedFilterResponse* Arena::CreateMaybeMessage<::kentik::saved_filter::v202501alpha1::GetSavedFilterResponse>(Arena*);
template<> ::kentik::saved_filter::v202501alpha1::ListSavedFiltersAllRequest* Arena::CreateMaybeMessage<::kentik::saved_filter::v202501alpha1::ListSavedFiltersAllRequest>(Arena*);
template<> ::kentik::saved_filter::v202501alpha1::ListSavedFiltersAllResponse* Arena::CreateMaybeMessage<::kentik::saved_filter::v202501alpha1::ListSavedFiltersAllResponse>(Arena*);
template<> ::kentik::saved_filter::v202501alpha1::ListSavedFiltersRequest* Arena::CreateMaybeMessage<::kentik::saved_filter::v202501alpha1::ListSavedFiltersRequest>(Arena*);
template<> ::kentik::saved_filter::v202501alpha1::ListSavedFiltersResponse* Arena::CreateMaybeMessage<::kentik::saved_filter::v202501alpha1::ListSavedFiltersResponse>(Arena*);
template<> ::kentik::saved_filter::v202501alpha1::UpdateSavedFilterRequest* Arena::CreateMaybeMessage<::kentik::saved_filter::v202501alpha1::UpdateSavedFilterRequest>(Arena*);
template<> ::kentik::saved_filter::v202501alpha1::UpdateSavedFilterResponse* Arena::CreateMaybeMessage<::kentik::saved_filter::v202501alpha1::UpdateSavedFilterResponse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace kentik {
namespace saved_filter {
namespace v202501alpha1 {

// ===================================================================

class CreateSavedFilterRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kentik.saved_filter.v202501alpha1.CreateSavedFilterRequest) */ {
 public:
  inline CreateSavedFilterRequest() : CreateSavedFilterRequest(nullptr) {};
  virtual ~CreateSavedFilterRequest();

  CreateSavedFilterRequest(const CreateSavedFilterRequest& from);
  CreateSavedFilterRequest(CreateSavedFilterRequest&& from) noexcept
    : CreateSavedFilterRequest() {
    *this = ::std::move(from);
  }

  inline CreateSavedFilterRequest& operator=(const CreateSavedFilterRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateSavedFilterRequest& operator=(CreateSavedFilterRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CreateSavedFilterRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateSavedFilterRequest* internal_default_instance() {
    return reinterpret_cast<const CreateSavedFilterRequest*>(
               &_CreateSavedFilterRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(CreateSavedFilterRequest& a, CreateSavedFilterRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(CreateSavedFilterRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateSavedFilterRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CreateSavedFilterRequest* New() const final {
    return CreateMaybeMessage<CreateSavedFilterRequest>(nullptr);
  }

  CreateSavedFilterRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CreateSavedFilterRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CreateSavedFilterRequest& from);
  void MergeFrom(const CreateSavedFilterRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreateSavedFilterRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kentik.saved_filter.v202501alpha1.CreateSavedFilterRequest";
  }
  protected:
  explicit CreateSavedFilterRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_2eproto);
    return ::descriptor_table_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFilterFieldNumber = 1,
  };
  // .kentik.saved_filter.v202501alpha1.SavedFilter filter = 1[json_name = "filter"];
  bool has_filter() const;
  private:
  bool _internal_has_filter() const;
  public:
  void clear_filter();
  const ::kentik::saved_filter::v202501alpha1::SavedFilter& filter() const;
  ::kentik::saved_filter::v202501alpha1::SavedFilter* release_filter();
  ::kentik::saved_filter::v202501alpha1::SavedFilter* mutable_filter();
  void set_allocated_filter(::kentik::saved_filter::v202501alpha1::SavedFilter* filter);
  private:
  const ::kentik::saved_filter::v202501alpha1::SavedFilter& _internal_filter() const;
  ::kentik::saved_filter::v202501alpha1::SavedFilter* _internal_mutable_filter();
  public:
  void unsafe_arena_set_allocated_filter(
      ::kentik::saved_filter::v202501alpha1::SavedFilter* filter);
  ::kentik::saved_filter::v202501alpha1::SavedFilter* unsafe_arena_release_filter();

  // @@protoc_insertion_point(class_scope:kentik.saved_filter.v202501alpha1.CreateSavedFilterRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::kentik::saved_filter::v202501alpha1::SavedFilter* filter_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_2eproto;
};
// -------------------------------------------------------------------

class CreateSavedFilterResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kentik.saved_filter.v202501alpha1.CreateSavedFilterResponse) */ {
 public:
  inline CreateSavedFilterResponse() : CreateSavedFilterResponse(nullptr) {};
  virtual ~CreateSavedFilterResponse();

  CreateSavedFilterResponse(const CreateSavedFilterResponse& from);
  CreateSavedFilterResponse(CreateSavedFilterResponse&& from) noexcept
    : CreateSavedFilterResponse() {
    *this = ::std::move(from);
  }

  inline CreateSavedFilterResponse& operator=(const CreateSavedFilterResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateSavedFilterResponse& operator=(CreateSavedFilterResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CreateSavedFilterResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateSavedFilterResponse* internal_default_instance() {
    return reinterpret_cast<const CreateSavedFilterResponse*>(
               &_CreateSavedFilterResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(CreateSavedFilterResponse& a, CreateSavedFilterResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CreateSavedFilterResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateSavedFilterResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CreateSavedFilterResponse* New() const final {
    return CreateMaybeMessage<CreateSavedFilterResponse>(nullptr);
  }

  CreateSavedFilterResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CreateSavedFilterResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CreateSavedFilterResponse& from);
  void MergeFrom(const CreateSavedFilterResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreateSavedFilterResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kentik.saved_filter.v202501alpha1.CreateSavedFilterResponse";
  }
  protected:
  explicit CreateSavedFilterResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_2eproto);
    return ::descriptor_table_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFilterFieldNumber = 1,
  };
  // .kentik.saved_filter.v202501alpha1.SavedFilter filter = 1[json_name = "filter"];
  bool has_filter() const;
  private:
  bool _internal_has_filter() const;
  public:
  void clear_filter();
  const ::kentik::saved_filter::v202501alpha1::SavedFilter& filter() const;
  ::kentik::saved_filter::v202501alpha1::SavedFilter* release_filter();
  ::kentik::saved_filter::v202501alpha1::SavedFilter* mutable_filter();
  void set_allocated_filter(::kentik::saved_filter::v202501alpha1::SavedFilter* filter);
  private:
  const ::kentik::saved_filter::v202501alpha1::SavedFilter& _internal_filter() const;
  ::kentik::saved_filter::v202501alpha1::SavedFilter* _internal_mutable_filter();
  public:
  void unsafe_arena_set_allocated_filter(
      ::kentik::saved_filter::v202501alpha1::SavedFilter* filter);
  ::kentik::saved_filter::v202501alpha1::SavedFilter* unsafe_arena_release_filter();

  // @@protoc_insertion_point(class_scope:kentik.saved_filter.v202501alpha1.CreateSavedFilterResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::kentik::saved_filter::v202501alpha1::SavedFilter* filter_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_2eproto;
};
// -------------------------------------------------------------------

class UpdateSavedFilterRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kentik.saved_filter.v202501alpha1.UpdateSavedFilterRequest) */ {
 public:
  inline UpdateSavedFilterRequest() : UpdateSavedFilterRequest(nullptr) {};
  virtual ~UpdateSavedFilterRequest();

  UpdateSavedFilterRequest(const UpdateSavedFilterRequest& from);
  UpdateSavedFilterRequest(UpdateSavedFilterRequest&& from) noexcept
    : UpdateSavedFilterRequest() {
    *this = ::std::move(from);
  }

  inline UpdateSavedFilterRequest& operator=(const UpdateSavedFilterRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateSavedFilterRequest& operator=(UpdateSavedFilterRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const UpdateSavedFilterRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UpdateSavedFilterRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateSavedFilterRequest*>(
               &_UpdateSavedFilterRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(UpdateSavedFilterRequest& a, UpdateSavedFilterRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(UpdateSavedFilterRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateSavedFilterRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UpdateSavedFilterRequest* New() const final {
    return CreateMaybeMessage<UpdateSavedFilterRequest>(nullptr);
  }

  UpdateSavedFilterRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UpdateSavedFilterRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const UpdateSavedFilterRequest& from);
  void MergeFrom(const UpdateSavedFilterRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UpdateSavedFilterRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kentik.saved_filter.v202501alpha1.UpdateSavedFilterRequest";
  }
  protected:
  explicit UpdateSavedFilterRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_2eproto);
    return ::descriptor_table_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
    kFilterFieldNumber = 2,
  };
  // string id = 1[json_name = "id"];
  void clear_id();
  const std::string& id() const;
  void set_id(const std::string& value);
  void set_id(std::string&& value);
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  std::string* mutable_id();
  std::string* release_id();
  void set_allocated_id(std::string* id);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_id();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_id(
      std::string* id);
  private:
  const std::string& _internal_id() const;
  void _internal_set_id(const std::string& value);
  std::string* _internal_mutable_id();
  public:

  // .kentik.saved_filter.v202501alpha1.SavedFilter filter = 2[json_name = "filter"];
  bool has_filter() const;
  private:
  bool _internal_has_filter() const;
  public:
  void clear_filter();
  const ::kentik::saved_filter::v202501alpha1::SavedFilter& filter() const;
  ::kentik::saved_filter::v202501alpha1::SavedFilter* release_filter();
  ::kentik::saved_filter::v202501alpha1::SavedFilter* mutable_filter();
  void set_allocated_filter(::kentik::saved_filter::v202501alpha1::SavedFilter* filter);
  private:
  const ::kentik::saved_filter::v202501alpha1::SavedFilter& _internal_filter() const;
  ::kentik::saved_filter::v202501alpha1::SavedFilter* _internal_mutable_filter();
  public:
  void unsafe_arena_set_allocated_filter(
      ::kentik::saved_filter::v202501alpha1::SavedFilter* filter);
  ::kentik::saved_filter::v202501alpha1::SavedFilter* unsafe_arena_release_filter();

  // @@protoc_insertion_point(class_scope:kentik.saved_filter.v202501alpha1.UpdateSavedFilterRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr id_;
  ::kentik::saved_filter::v202501alpha1::SavedFilter* filter_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_2eproto;
};
// -------------------------------------------------------------------

class UpdateSavedFilterResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kentik.saved_filter.v202501alpha1.UpdateSavedFilterResponse) */ {
 public:
  inline UpdateSavedFilterResponse() : UpdateSavedFilterResponse(nullptr) {};
  virtual ~UpdateSavedFilterResponse();

  UpdateSavedFilterResponse(const UpdateSavedFilterResponse& from);
  UpdateSavedFilterResponse(UpdateSavedFilterResponse&& from) noexcept
    : UpdateSavedFilterResponse() {
    *this = ::std::move(from);
  }

  inline UpdateSavedFilterResponse& operator=(const UpdateSavedFilterResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateSavedFilterResponse& operator=(UpdateSavedFilterResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const UpdateSavedFilterResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UpdateSavedFilterResponse* internal_default_instance() {
    return reinterpret_cast<const UpdateSavedFilterResponse*>(
               &_UpdateSavedFilterResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(UpdateSavedFilterResponse& a, UpdateSavedFilterResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(UpdateSavedFilterResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateSavedFilterResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UpdateSavedFilterResponse* New() const final {
    return CreateMaybeMessage<UpdateSavedFilterResponse>(nullptr);
  }

  UpdateSavedFilterResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UpdateSavedFilterResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const UpdateSavedFilterResponse& from);
  void MergeFrom(const UpdateSavedFilterResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UpdateSavedFilterResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kentik.saved_filter.v202501alpha1.UpdateSavedFilterResponse";
  }
  protected:
  explicit UpdateSavedFilterResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_2eproto);
    return ::descriptor_table_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFilterFieldNumber = 1,
  };
  // .kentik.saved_filter.v202501alpha1.SavedFilter filter = 1[json_name = "filter"];
  bool has_filter() const;
  private:
  bool _internal_has_filter() const;
  public:
  void clear_filter();
  const ::kentik::saved_filter::v202501alpha1::SavedFilter& filter() const;
  ::kentik::saved_filter::v202501alpha1::SavedFilter* release_filter();
  ::kentik::saved_filter::v202501alpha1::SavedFilter* mutable_filter();
  void set_allocated_filter(::kentik::saved_filter::v202501alpha1::SavedFilter* filter);
  private:
  const ::kentik::saved_filter::v202501alpha1::SavedFilter& _internal_filter() const;
  ::kentik::saved_filter::v202501alpha1::SavedFilter* _internal_mutable_filter();
  public:
  void unsafe_arena_set_allocated_filter(
      ::kentik::saved_filter::v202501alpha1::SavedFilter* filter);
  ::kentik::saved_filter::v202501alpha1::SavedFilter* unsafe_arena_release_filter();

  // @@protoc_insertion_point(class_scope:kentik.saved_filter.v202501alpha1.UpdateSavedFilterResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::kentik::saved_filter::v202501alpha1::SavedFilter* filter_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_2eproto;
};
// -------------------------------------------------------------------

class ListSavedFiltersRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kentik.saved_filter.v202501alpha1.ListSavedFiltersRequest) */ {
 public:
  inline ListSavedFiltersRequest() : ListSavedFiltersRequest(nullptr) {};
  virtual ~ListSavedFiltersRequest();

  ListSavedFiltersRequest(const ListSavedFiltersRequest& from);
  ListSavedFiltersRequest(ListSavedFiltersRequest&& from) noexcept
    : ListSavedFiltersRequest() {
    *this = ::std::move(from);
  }

  inline ListSavedFiltersRequest& operator=(const ListSavedFiltersRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListSavedFiltersRequest& operator=(ListSavedFiltersRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ListSavedFiltersRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListSavedFiltersRequest* internal_default_instance() {
    return reinterpret_cast<const ListSavedFiltersRequest*>(
               &_ListSavedFiltersRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(ListSavedFiltersRequest& a, ListSavedFiltersRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ListSavedFiltersRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListSavedFiltersRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ListSavedFiltersRequest* New() const final {
    return CreateMaybeMessage<ListSavedFiltersRequest>(nullptr);
  }

  ListSavedFiltersRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ListSavedFiltersRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ListSavedFiltersRequest& from);
  void MergeFrom(const ListSavedFiltersRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListSavedFiltersRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kentik.saved_filter.v202501alpha1.ListSavedFiltersRequest";
  }
  protected:
  explicit ListSavedFiltersRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_2eproto);
    return ::descriptor_table_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:kentik.saved_filter.v202501alpha1.ListSavedFiltersRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_2eproto;
};
// -------------------------------------------------------------------

class ListSavedFiltersAllRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kentik.saved_filter.v202501alpha1.ListSavedFiltersAllRequest) */ {
 public:
  inline ListSavedFiltersAllRequest() : ListSavedFiltersAllRequest(nullptr) {};
  virtual ~ListSavedFiltersAllRequest();

  ListSavedFiltersAllRequest(const ListSavedFiltersAllRequest& from);
  ListSavedFiltersAllRequest(ListSavedFiltersAllRequest&& from) noexcept
    : ListSavedFiltersAllRequest() {
    *this = ::std::move(from);
  }

  inline ListSavedFiltersAllRequest& operator=(const ListSavedFiltersAllRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListSavedFiltersAllRequest& operator=(ListSavedFiltersAllRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ListSavedFiltersAllRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListSavedFiltersAllRequest* internal_default_instance() {
    return reinterpret_cast<const ListSavedFiltersAllRequest*>(
               &_ListSavedFiltersAllRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(ListSavedFiltersAllRequest& a, ListSavedFiltersAllRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ListSavedFiltersAllRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListSavedFiltersAllRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ListSavedFiltersAllRequest* New() const final {
    return CreateMaybeMessage<ListSavedFiltersAllRequest>(nullptr);
  }

  ListSavedFiltersAllRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ListSavedFiltersAllRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ListSavedFiltersAllRequest& from);
  void MergeFrom(const ListSavedFiltersAllRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListSavedFiltersAllRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kentik.saved_filter.v202501alpha1.ListSavedFiltersAllRequest";
  }
  protected:
  explicit ListSavedFiltersAllRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_2eproto);
    return ::descriptor_table_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:kentik.saved_filter.v202501alpha1.ListSavedFiltersAllRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_2eproto;
};
// -------------------------------------------------------------------

class ListSavedFiltersResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kentik.saved_filter.v202501alpha1.ListSavedFiltersResponse) */ {
 public:
  inline ListSavedFiltersResponse() : ListSavedFiltersResponse(nullptr) {};
  virtual ~ListSavedFiltersResponse();

  ListSavedFiltersResponse(const ListSavedFiltersResponse& from);
  ListSavedFiltersResponse(ListSavedFiltersResponse&& from) noexcept
    : ListSavedFiltersResponse() {
    *this = ::std::move(from);
  }

  inline ListSavedFiltersResponse& operator=(const ListSavedFiltersResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListSavedFiltersResponse& operator=(ListSavedFiltersResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ListSavedFiltersResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListSavedFiltersResponse* internal_default_instance() {
    return reinterpret_cast<const ListSavedFiltersResponse*>(
               &_ListSavedFiltersResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(ListSavedFiltersResponse& a, ListSavedFiltersResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ListSavedFiltersResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListSavedFiltersResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ListSavedFiltersResponse* New() const final {
    return CreateMaybeMessage<ListSavedFiltersResponse>(nullptr);
  }

  ListSavedFiltersResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ListSavedFiltersResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ListSavedFiltersResponse& from);
  void MergeFrom(const ListSavedFiltersResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListSavedFiltersResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kentik.saved_filter.v202501alpha1.ListSavedFiltersResponse";
  }
  protected:
  explicit ListSavedFiltersResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_2eproto);
    return ::descriptor_table_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFiltersFieldNumber = 1,
  };
  // repeated .kentik.saved_filter.v202501alpha1.SavedFilter filters = 1[json_name = "filters"];
  int filters_size() const;
  private:
  int _internal_filters_size() const;
  public:
  void clear_filters();
  ::kentik::saved_filter::v202501alpha1::SavedFilter* mutable_filters(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kentik::saved_filter::v202501alpha1::SavedFilter >*
      mutable_filters();
  private:
  const ::kentik::saved_filter::v202501alpha1::SavedFilter& _internal_filters(int index) const;
  ::kentik::saved_filter::v202501alpha1::SavedFilter* _internal_add_filters();
  public:
  const ::kentik::saved_filter::v202501alpha1::SavedFilter& filters(int index) const;
  ::kentik::saved_filter::v202501alpha1::SavedFilter* add_filters();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kentik::saved_filter::v202501alpha1::SavedFilter >&
      filters() const;

  // @@protoc_insertion_point(class_scope:kentik.saved_filter.v202501alpha1.ListSavedFiltersResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kentik::saved_filter::v202501alpha1::SavedFilter > filters_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_2eproto;
};
// -------------------------------------------------------------------

class ListSavedFiltersAllResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kentik.saved_filter.v202501alpha1.ListSavedFiltersAllResponse) */ {
 public:
  inline ListSavedFiltersAllResponse() : ListSavedFiltersAllResponse(nullptr) {};
  virtual ~ListSavedFiltersAllResponse();

  ListSavedFiltersAllResponse(const ListSavedFiltersAllResponse& from);
  ListSavedFiltersAllResponse(ListSavedFiltersAllResponse&& from) noexcept
    : ListSavedFiltersAllResponse() {
    *this = ::std::move(from);
  }

  inline ListSavedFiltersAllResponse& operator=(const ListSavedFiltersAllResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListSavedFiltersAllResponse& operator=(ListSavedFiltersAllResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ListSavedFiltersAllResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListSavedFiltersAllResponse* internal_default_instance() {
    return reinterpret_cast<const ListSavedFiltersAllResponse*>(
               &_ListSavedFiltersAllResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(ListSavedFiltersAllResponse& a, ListSavedFiltersAllResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ListSavedFiltersAllResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListSavedFiltersAllResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ListSavedFiltersAllResponse* New() const final {
    return CreateMaybeMessage<ListSavedFiltersAllResponse>(nullptr);
  }

  ListSavedFiltersAllResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ListSavedFiltersAllResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ListSavedFiltersAllResponse& from);
  void MergeFrom(const ListSavedFiltersAllResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListSavedFiltersAllResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kentik.saved_filter.v202501alpha1.ListSavedFiltersAllResponse";
  }
  protected:
  explicit ListSavedFiltersAllResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_2eproto);
    return ::descriptor_table_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFiltersFieldNumber = 1,
  };
  // repeated .kentik.saved_filter.v202501alpha1.SavedFilter filters = 1[json_name = "filters"];
  int filters_size() const;
  private:
  int _internal_filters_size() const;
  public:
  void clear_filters();
  ::kentik::saved_filter::v202501alpha1::SavedFilter* mutable_filters(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kentik::saved_filter::v202501alpha1::SavedFilter >*
      mutable_filters();
  private:
  const ::kentik::saved_filter::v202501alpha1::SavedFilter& _internal_filters(int index) const;
  ::kentik::saved_filter::v202501alpha1::SavedFilter* _internal_add_filters();
  public:
  const ::kentik::saved_filter::v202501alpha1::SavedFilter& filters(int index) const;
  ::kentik::saved_filter::v202501alpha1::SavedFilter* add_filters();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kentik::saved_filter::v202501alpha1::SavedFilter >&
      filters() const;

  // @@protoc_insertion_point(class_scope:kentik.saved_filter.v202501alpha1.ListSavedFiltersAllResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kentik::saved_filter::v202501alpha1::SavedFilter > filters_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_2eproto;
};
// -------------------------------------------------------------------

class GetSavedFilterRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kentik.saved_filter.v202501alpha1.GetSavedFilterRequest) */ {
 public:
  inline GetSavedFilterRequest() : GetSavedFilterRequest(nullptr) {};
  virtual ~GetSavedFilterRequest();

  GetSavedFilterRequest(const GetSavedFilterRequest& from);
  GetSavedFilterRequest(GetSavedFilterRequest&& from) noexcept
    : GetSavedFilterRequest() {
    *this = ::std::move(from);
  }

  inline GetSavedFilterRequest& operator=(const GetSavedFilterRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetSavedFilterRequest& operator=(GetSavedFilterRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GetSavedFilterRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetSavedFilterRequest* internal_default_instance() {
    return reinterpret_cast<const GetSavedFilterRequest*>(
               &_GetSavedFilterRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(GetSavedFilterRequest& a, GetSavedFilterRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetSavedFilterRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetSavedFilterRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetSavedFilterRequest* New() const final {
    return CreateMaybeMessage<GetSavedFilterRequest>(nullptr);
  }

  GetSavedFilterRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetSavedFilterRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GetSavedFilterRequest& from);
  void MergeFrom(const GetSavedFilterRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetSavedFilterRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kentik.saved_filter.v202501alpha1.GetSavedFilterRequest";
  }
  protected:
  explicit GetSavedFilterRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_2eproto);
    return ::descriptor_table_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
  };
  // string id = 1[json_name = "id"];
  void clear_id();
  const std::string& id() const;
  void set_id(const std::string& value);
  void set_id(std::string&& value);
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  std::string* mutable_id();
  std::string* release_id();
  void set_allocated_id(std::string* id);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_id();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_id(
      std::string* id);
  private:
  const std::string& _internal_id() const;
  void _internal_set_id(const std::string& value);
  std::string* _internal_mutable_id();
  public:

  // @@protoc_insertion_point(class_scope:kentik.saved_filter.v202501alpha1.GetSavedFilterRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_2eproto;
};
// -------------------------------------------------------------------

class GetSavedFilterResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kentik.saved_filter.v202501alpha1.GetSavedFilterResponse) */ {
 public:
  inline GetSavedFilterResponse() : GetSavedFilterResponse(nullptr) {};
  virtual ~GetSavedFilterResponse();

  GetSavedFilterResponse(const GetSavedFilterResponse& from);
  GetSavedFilterResponse(GetSavedFilterResponse&& from) noexcept
    : GetSavedFilterResponse() {
    *this = ::std::move(from);
  }

  inline GetSavedFilterResponse& operator=(const GetSavedFilterResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetSavedFilterResponse& operator=(GetSavedFilterResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GetSavedFilterResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetSavedFilterResponse* internal_default_instance() {
    return reinterpret_cast<const GetSavedFilterResponse*>(
               &_GetSavedFilterResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(GetSavedFilterResponse& a, GetSavedFilterResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetSavedFilterResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetSavedFilterResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetSavedFilterResponse* New() const final {
    return CreateMaybeMessage<GetSavedFilterResponse>(nullptr);
  }

  GetSavedFilterResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetSavedFilterResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GetSavedFilterResponse& from);
  void MergeFrom(const GetSavedFilterResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetSavedFilterResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kentik.saved_filter.v202501alpha1.GetSavedFilterResponse";
  }
  protected:
  explicit GetSavedFilterResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_2eproto);
    return ::descriptor_table_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFilterFieldNumber = 1,
  };
  // .kentik.saved_filter.v202501alpha1.SavedFilter filter = 1[json_name = "filter"];
  bool has_filter() const;
  private:
  bool _internal_has_filter() const;
  public:
  void clear_filter();
  const ::kentik::saved_filter::v202501alpha1::SavedFilter& filter() const;
  ::kentik::saved_filter::v202501alpha1::SavedFilter* release_filter();
  ::kentik::saved_filter::v202501alpha1::SavedFilter* mutable_filter();
  void set_allocated_filter(::kentik::saved_filter::v202501alpha1::SavedFilter* filter);
  private:
  const ::kentik::saved_filter::v202501alpha1::SavedFilter& _internal_filter() const;
  ::kentik::saved_filter::v202501alpha1::SavedFilter* _internal_mutable_filter();
  public:
  void unsafe_arena_set_allocated_filter(
      ::kentik::saved_filter::v202501alpha1::SavedFilter* filter);
  ::kentik::saved_filter::v202501alpha1::SavedFilter* unsafe_arena_release_filter();

  // @@protoc_insertion_point(class_scope:kentik.saved_filter.v202501alpha1.GetSavedFilterResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::kentik::saved_filter::v202501alpha1::SavedFilter* filter_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_2eproto;
};
// -------------------------------------------------------------------

class DeleteSavedFilterRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kentik.saved_filter.v202501alpha1.DeleteSavedFilterRequest) */ {
 public:
  inline DeleteSavedFilterRequest() : DeleteSavedFilterRequest(nullptr) {};
  virtual ~DeleteSavedFilterRequest();

  DeleteSavedFilterRequest(const DeleteSavedFilterRequest& from);
  DeleteSavedFilterRequest(DeleteSavedFilterRequest&& from) noexcept
    : DeleteSavedFilterRequest() {
    *this = ::std::move(from);
  }

  inline DeleteSavedFilterRequest& operator=(const DeleteSavedFilterRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteSavedFilterRequest& operator=(DeleteSavedFilterRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DeleteSavedFilterRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeleteSavedFilterRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteSavedFilterRequest*>(
               &_DeleteSavedFilterRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(DeleteSavedFilterRequest& a, DeleteSavedFilterRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(DeleteSavedFilterRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteSavedFilterRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DeleteSavedFilterRequest* New() const final {
    return CreateMaybeMessage<DeleteSavedFilterRequest>(nullptr);
  }

  DeleteSavedFilterRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DeleteSavedFilterRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DeleteSavedFilterRequest& from);
  void MergeFrom(const DeleteSavedFilterRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeleteSavedFilterRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kentik.saved_filter.v202501alpha1.DeleteSavedFilterRequest";
  }
  protected:
  explicit DeleteSavedFilterRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_2eproto);
    return ::descriptor_table_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
  };
  // string id = 1[json_name = "id"];
  void clear_id();
  const std::string& id() const;
  void set_id(const std::string& value);
  void set_id(std::string&& value);
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  std::string* mutable_id();
  std::string* release_id();
  void set_allocated_id(std::string* id);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_id();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_id(
      std::string* id);
  private:
  const std::string& _internal_id() const;
  void _internal_set_id(const std::string& value);
  std::string* _internal_mutable_id();
  public:

  // @@protoc_insertion_point(class_scope:kentik.saved_filter.v202501alpha1.DeleteSavedFilterRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_2eproto;
};
// -------------------------------------------------------------------

class DeleteSavedFilterResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kentik.saved_filter.v202501alpha1.DeleteSavedFilterResponse) */ {
 public:
  inline DeleteSavedFilterResponse() : DeleteSavedFilterResponse(nullptr) {};
  virtual ~DeleteSavedFilterResponse();

  DeleteSavedFilterResponse(const DeleteSavedFilterResponse& from);
  DeleteSavedFilterResponse(DeleteSavedFilterResponse&& from) noexcept
    : DeleteSavedFilterResponse() {
    *this = ::std::move(from);
  }

  inline DeleteSavedFilterResponse& operator=(const DeleteSavedFilterResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteSavedFilterResponse& operator=(DeleteSavedFilterResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DeleteSavedFilterResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeleteSavedFilterResponse* internal_default_instance() {
    return reinterpret_cast<const DeleteSavedFilterResponse*>(
               &_DeleteSavedFilterResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(DeleteSavedFilterResponse& a, DeleteSavedFilterResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(DeleteSavedFilterResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteSavedFilterResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DeleteSavedFilterResponse* New() const final {
    return CreateMaybeMessage<DeleteSavedFilterResponse>(nullptr);
  }

  DeleteSavedFilterResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DeleteSavedFilterResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DeleteSavedFilterResponse& from);
  void MergeFrom(const DeleteSavedFilterResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeleteSavedFilterResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kentik.saved_filter.v202501alpha1.DeleteSavedFilterResponse";
  }
  protected:
  explicit DeleteSavedFilterResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_2eproto);
    return ::descriptor_table_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:kentik.saved_filter.v202501alpha1.DeleteSavedFilterResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CreateSavedFilterRequest

// .kentik.saved_filter.v202501alpha1.SavedFilter filter = 1[json_name = "filter"];
inline bool CreateSavedFilterRequest::_internal_has_filter() const {
  return this != internal_default_instance() && filter_ != nullptr;
}
inline bool CreateSavedFilterRequest::has_filter() const {
  return _internal_has_filter();
}
inline const ::kentik::saved_filter::v202501alpha1::SavedFilter& CreateSavedFilterRequest::_internal_filter() const {
  const ::kentik::saved_filter::v202501alpha1::SavedFilter* p = filter_;
  return p != nullptr ? *p : *reinterpret_cast<const ::kentik::saved_filter::v202501alpha1::SavedFilter*>(
      &::kentik::saved_filter::v202501alpha1::_SavedFilter_default_instance_);
}
inline const ::kentik::saved_filter::v202501alpha1::SavedFilter& CreateSavedFilterRequest::filter() const {
  // @@protoc_insertion_point(field_get:kentik.saved_filter.v202501alpha1.CreateSavedFilterRequest.filter)
  return _internal_filter();
}
inline void CreateSavedFilterRequest::unsafe_arena_set_allocated_filter(
    ::kentik::saved_filter::v202501alpha1::SavedFilter* filter) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(filter_);
  }
  filter_ = filter;
  if (filter) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.saved_filter.v202501alpha1.CreateSavedFilterRequest.filter)
}
inline ::kentik::saved_filter::v202501alpha1::SavedFilter* CreateSavedFilterRequest::release_filter() {
  auto temp = unsafe_arena_release_filter();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::kentik::saved_filter::v202501alpha1::SavedFilter* CreateSavedFilterRequest::unsafe_arena_release_filter() {
  // @@protoc_insertion_point(field_release:kentik.saved_filter.v202501alpha1.CreateSavedFilterRequest.filter)
  
  ::kentik::saved_filter::v202501alpha1::SavedFilter* temp = filter_;
  filter_ = nullptr;
  return temp;
}
inline ::kentik::saved_filter::v202501alpha1::SavedFilter* CreateSavedFilterRequest::_internal_mutable_filter() {
  
  if (filter_ == nullptr) {
    auto* p = CreateMaybeMessage<::kentik::saved_filter::v202501alpha1::SavedFilter>(GetArena());
    filter_ = p;
  }
  return filter_;
}
inline ::kentik::saved_filter::v202501alpha1::SavedFilter* CreateSavedFilterRequest::mutable_filter() {
  // @@protoc_insertion_point(field_mutable:kentik.saved_filter.v202501alpha1.CreateSavedFilterRequest.filter)
  return _internal_mutable_filter();
}
inline void CreateSavedFilterRequest::set_allocated_filter(::kentik::saved_filter::v202501alpha1::SavedFilter* filter) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(filter_);
  }
  if (filter) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(filter)->GetArena();
    if (message_arena != submessage_arena) {
      filter = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, filter, submessage_arena);
    }
    
  } else {
    
  }
  filter_ = filter;
  // @@protoc_insertion_point(field_set_allocated:kentik.saved_filter.v202501alpha1.CreateSavedFilterRequest.filter)
}

// -------------------------------------------------------------------

// CreateSavedFilterResponse

// .kentik.saved_filter.v202501alpha1.SavedFilter filter = 1[json_name = "filter"];
inline bool CreateSavedFilterResponse::_internal_has_filter() const {
  return this != internal_default_instance() && filter_ != nullptr;
}
inline bool CreateSavedFilterResponse::has_filter() const {
  return _internal_has_filter();
}
inline const ::kentik::saved_filter::v202501alpha1::SavedFilter& CreateSavedFilterResponse::_internal_filter() const {
  const ::kentik::saved_filter::v202501alpha1::SavedFilter* p = filter_;
  return p != nullptr ? *p : *reinterpret_cast<const ::kentik::saved_filter::v202501alpha1::SavedFilter*>(
      &::kentik::saved_filter::v202501alpha1::_SavedFilter_default_instance_);
}
inline const ::kentik::saved_filter::v202501alpha1::SavedFilter& CreateSavedFilterResponse::filter() const {
  // @@protoc_insertion_point(field_get:kentik.saved_filter.v202501alpha1.CreateSavedFilterResponse.filter)
  return _internal_filter();
}
inline void CreateSavedFilterResponse::unsafe_arena_set_allocated_filter(
    ::kentik::saved_filter::v202501alpha1::SavedFilter* filter) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(filter_);
  }
  filter_ = filter;
  if (filter) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.saved_filter.v202501alpha1.CreateSavedFilterResponse.filter)
}
inline ::kentik::saved_filter::v202501alpha1::SavedFilter* CreateSavedFilterResponse::release_filter() {
  auto temp = unsafe_arena_release_filter();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::kentik::saved_filter::v202501alpha1::SavedFilter* CreateSavedFilterResponse::unsafe_arena_release_filter() {
  // @@protoc_insertion_point(field_release:kentik.saved_filter.v202501alpha1.CreateSavedFilterResponse.filter)
  
  ::kentik::saved_filter::v202501alpha1::SavedFilter* temp = filter_;
  filter_ = nullptr;
  return temp;
}
inline ::kentik::saved_filter::v202501alpha1::SavedFilter* CreateSavedFilterResponse::_internal_mutable_filter() {
  
  if (filter_ == nullptr) {
    auto* p = CreateMaybeMessage<::kentik::saved_filter::v202501alpha1::SavedFilter>(GetArena());
    filter_ = p;
  }
  return filter_;
}
inline ::kentik::saved_filter::v202501alpha1::SavedFilter* CreateSavedFilterResponse::mutable_filter() {
  // @@protoc_insertion_point(field_mutable:kentik.saved_filter.v202501alpha1.CreateSavedFilterResponse.filter)
  return _internal_mutable_filter();
}
inline void CreateSavedFilterResponse::set_allocated_filter(::kentik::saved_filter::v202501alpha1::SavedFilter* filter) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(filter_);
  }
  if (filter) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(filter)->GetArena();
    if (message_arena != submessage_arena) {
      filter = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, filter, submessage_arena);
    }
    
  } else {
    
  }
  filter_ = filter;
  // @@protoc_insertion_point(field_set_allocated:kentik.saved_filter.v202501alpha1.CreateSavedFilterResponse.filter)
}

// -------------------------------------------------------------------

// UpdateSavedFilterRequest

// string id = 1[json_name = "id"];
inline void UpdateSavedFilterRequest::clear_id() {
  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& UpdateSavedFilterRequest::id() const {
  // @@protoc_insertion_point(field_get:kentik.saved_filter.v202501alpha1.UpdateSavedFilterRequest.id)
  return _internal_id();
}
inline void UpdateSavedFilterRequest::set_id(const std::string& value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:kentik.saved_filter.v202501alpha1.UpdateSavedFilterRequest.id)
}
inline std::string* UpdateSavedFilterRequest::mutable_id() {
  // @@protoc_insertion_point(field_mutable:kentik.saved_filter.v202501alpha1.UpdateSavedFilterRequest.id)
  return _internal_mutable_id();
}
inline const std::string& UpdateSavedFilterRequest::_internal_id() const {
  return id_.Get();
}
inline void UpdateSavedFilterRequest::_internal_set_id(const std::string& value) {
  
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void UpdateSavedFilterRequest::set_id(std::string&& value) {
  
  id_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:kentik.saved_filter.v202501alpha1.UpdateSavedFilterRequest.id)
}
inline void UpdateSavedFilterRequest::set_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:kentik.saved_filter.v202501alpha1.UpdateSavedFilterRequest.id)
}
inline void UpdateSavedFilterRequest::set_id(const char* value,
    size_t size) {
  
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:kentik.saved_filter.v202501alpha1.UpdateSavedFilterRequest.id)
}
inline std::string* UpdateSavedFilterRequest::_internal_mutable_id() {
  
  return id_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* UpdateSavedFilterRequest::release_id() {
  // @@protoc_insertion_point(field_release:kentik.saved_filter.v202501alpha1.UpdateSavedFilterRequest.id)
  return id_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void UpdateSavedFilterRequest::set_allocated_id(std::string* id) {
  if (id != nullptr) {
    
  } else {
    
  }
  id_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), id,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:kentik.saved_filter.v202501alpha1.UpdateSavedFilterRequest.id)
}
inline std::string* UpdateSavedFilterRequest::unsafe_arena_release_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:kentik.saved_filter.v202501alpha1.UpdateSavedFilterRequest.id)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return id_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void UpdateSavedFilterRequest::unsafe_arena_set_allocated_id(
    std::string* id) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (id != nullptr) {
    
  } else {
    
  }
  id_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      id, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.saved_filter.v202501alpha1.UpdateSavedFilterRequest.id)
}

// .kentik.saved_filter.v202501alpha1.SavedFilter filter = 2[json_name = "filter"];
inline bool UpdateSavedFilterRequest::_internal_has_filter() const {
  return this != internal_default_instance() && filter_ != nullptr;
}
inline bool UpdateSavedFilterRequest::has_filter() const {
  return _internal_has_filter();
}
inline const ::kentik::saved_filter::v202501alpha1::SavedFilter& UpdateSavedFilterRequest::_internal_filter() const {
  const ::kentik::saved_filter::v202501alpha1::SavedFilter* p = filter_;
  return p != nullptr ? *p : *reinterpret_cast<const ::kentik::saved_filter::v202501alpha1::SavedFilter*>(
      &::kentik::saved_filter::v202501alpha1::_SavedFilter_default_instance_);
}
inline const ::kentik::saved_filter::v202501alpha1::SavedFilter& UpdateSavedFilterRequest::filter() const {
  // @@protoc_insertion_point(field_get:kentik.saved_filter.v202501alpha1.UpdateSavedFilterRequest.filter)
  return _internal_filter();
}
inline void UpdateSavedFilterRequest::unsafe_arena_set_allocated_filter(
    ::kentik::saved_filter::v202501alpha1::SavedFilter* filter) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(filter_);
  }
  filter_ = filter;
  if (filter) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.saved_filter.v202501alpha1.UpdateSavedFilterRequest.filter)
}
inline ::kentik::saved_filter::v202501alpha1::SavedFilter* UpdateSavedFilterRequest::release_filter() {
  auto temp = unsafe_arena_release_filter();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::kentik::saved_filter::v202501alpha1::SavedFilter* UpdateSavedFilterRequest::unsafe_arena_release_filter() {
  // @@protoc_insertion_point(field_release:kentik.saved_filter.v202501alpha1.UpdateSavedFilterRequest.filter)
  
  ::kentik::saved_filter::v202501alpha1::SavedFilter* temp = filter_;
  filter_ = nullptr;
  return temp;
}
inline ::kentik::saved_filter::v202501alpha1::SavedFilter* UpdateSavedFilterRequest::_internal_mutable_filter() {
  
  if (filter_ == nullptr) {
    auto* p = CreateMaybeMessage<::kentik::saved_filter::v202501alpha1::SavedFilter>(GetArena());
    filter_ = p;
  }
  return filter_;
}
inline ::kentik::saved_filter::v202501alpha1::SavedFilter* UpdateSavedFilterRequest::mutable_filter() {
  // @@protoc_insertion_point(field_mutable:kentik.saved_filter.v202501alpha1.UpdateSavedFilterRequest.filter)
  return _internal_mutable_filter();
}
inline void UpdateSavedFilterRequest::set_allocated_filter(::kentik::saved_filter::v202501alpha1::SavedFilter* filter) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(filter_);
  }
  if (filter) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(filter)->GetArena();
    if (message_arena != submessage_arena) {
      filter = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, filter, submessage_arena);
    }
    
  } else {
    
  }
  filter_ = filter;
  // @@protoc_insertion_point(field_set_allocated:kentik.saved_filter.v202501alpha1.UpdateSavedFilterRequest.filter)
}

// -------------------------------------------------------------------

// UpdateSavedFilterResponse

// .kentik.saved_filter.v202501alpha1.SavedFilter filter = 1[json_name = "filter"];
inline bool UpdateSavedFilterResponse::_internal_has_filter() const {
  return this != internal_default_instance() && filter_ != nullptr;
}
inline bool UpdateSavedFilterResponse::has_filter() const {
  return _internal_has_filter();
}
inline const ::kentik::saved_filter::v202501alpha1::SavedFilter& UpdateSavedFilterResponse::_internal_filter() const {
  const ::kentik::saved_filter::v202501alpha1::SavedFilter* p = filter_;
  return p != nullptr ? *p : *reinterpret_cast<const ::kentik::saved_filter::v202501alpha1::SavedFilter*>(
      &::kentik::saved_filter::v202501alpha1::_SavedFilter_default_instance_);
}
inline const ::kentik::saved_filter::v202501alpha1::SavedFilter& UpdateSavedFilterResponse::filter() const {
  // @@protoc_insertion_point(field_get:kentik.saved_filter.v202501alpha1.UpdateSavedFilterResponse.filter)
  return _internal_filter();
}
inline void UpdateSavedFilterResponse::unsafe_arena_set_allocated_filter(
    ::kentik::saved_filter::v202501alpha1::SavedFilter* filter) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(filter_);
  }
  filter_ = filter;
  if (filter) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.saved_filter.v202501alpha1.UpdateSavedFilterResponse.filter)
}
inline ::kentik::saved_filter::v202501alpha1::SavedFilter* UpdateSavedFilterResponse::release_filter() {
  auto temp = unsafe_arena_release_filter();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::kentik::saved_filter::v202501alpha1::SavedFilter* UpdateSavedFilterResponse::unsafe_arena_release_filter() {
  // @@protoc_insertion_point(field_release:kentik.saved_filter.v202501alpha1.UpdateSavedFilterResponse.filter)
  
  ::kentik::saved_filter::v202501alpha1::SavedFilter* temp = filter_;
  filter_ = nullptr;
  return temp;
}
inline ::kentik::saved_filter::v202501alpha1::SavedFilter* UpdateSavedFilterResponse::_internal_mutable_filter() {
  
  if (filter_ == nullptr) {
    auto* p = CreateMaybeMessage<::kentik::saved_filter::v202501alpha1::SavedFilter>(GetArena());
    filter_ = p;
  }
  return filter_;
}
inline ::kentik::saved_filter::v202501alpha1::SavedFilter* UpdateSavedFilterResponse::mutable_filter() {
  // @@protoc_insertion_point(field_mutable:kentik.saved_filter.v202501alpha1.UpdateSavedFilterResponse.filter)
  return _internal_mutable_filter();
}
inline void UpdateSavedFilterResponse::set_allocated_filter(::kentik::saved_filter::v202501alpha1::SavedFilter* filter) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(filter_);
  }
  if (filter) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(filter)->GetArena();
    if (message_arena != submessage_arena) {
      filter = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, filter, submessage_arena);
    }
    
  } else {
    
  }
  filter_ = filter;
  // @@protoc_insertion_point(field_set_allocated:kentik.saved_filter.v202501alpha1.UpdateSavedFilterResponse.filter)
}

// -------------------------------------------------------------------

// ListSavedFiltersRequest

// -------------------------------------------------------------------

// ListSavedFiltersAllRequest

// -------------------------------------------------------------------

// ListSavedFiltersResponse

// repeated .kentik.saved_filter.v202501alpha1.SavedFilter filters = 1[json_name = "filters"];
inline int ListSavedFiltersResponse::_internal_filters_size() const {
  return filters_.size();
}
inline int ListSavedFiltersResponse::filters_size() const {
  return _internal_filters_size();
}
inline ::kentik::saved_filter::v202501alpha1::SavedFilter* ListSavedFiltersResponse::mutable_filters(int index) {
  // @@protoc_insertion_point(field_mutable:kentik.saved_filter.v202501alpha1.ListSavedFiltersResponse.filters)
  return filters_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kentik::saved_filter::v202501alpha1::SavedFilter >*
ListSavedFiltersResponse::mutable_filters() {
  // @@protoc_insertion_point(field_mutable_list:kentik.saved_filter.v202501alpha1.ListSavedFiltersResponse.filters)
  return &filters_;
}
inline const ::kentik::saved_filter::v202501alpha1::SavedFilter& ListSavedFiltersResponse::_internal_filters(int index) const {
  return filters_.Get(index);
}
inline const ::kentik::saved_filter::v202501alpha1::SavedFilter& ListSavedFiltersResponse::filters(int index) const {
  // @@protoc_insertion_point(field_get:kentik.saved_filter.v202501alpha1.ListSavedFiltersResponse.filters)
  return _internal_filters(index);
}
inline ::kentik::saved_filter::v202501alpha1::SavedFilter* ListSavedFiltersResponse::_internal_add_filters() {
  return filters_.Add();
}
inline ::kentik::saved_filter::v202501alpha1::SavedFilter* ListSavedFiltersResponse::add_filters() {
  // @@protoc_insertion_point(field_add:kentik.saved_filter.v202501alpha1.ListSavedFiltersResponse.filters)
  return _internal_add_filters();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kentik::saved_filter::v202501alpha1::SavedFilter >&
ListSavedFiltersResponse::filters() const {
  // @@protoc_insertion_point(field_list:kentik.saved_filter.v202501alpha1.ListSavedFiltersResponse.filters)
  return filters_;
}

// -------------------------------------------------------------------

// ListSavedFiltersAllResponse

// repeated .kentik.saved_filter.v202501alpha1.SavedFilter filters = 1[json_name = "filters"];
inline int ListSavedFiltersAllResponse::_internal_filters_size() const {
  return filters_.size();
}
inline int ListSavedFiltersAllResponse::filters_size() const {
  return _internal_filters_size();
}
inline ::kentik::saved_filter::v202501alpha1::SavedFilter* ListSavedFiltersAllResponse::mutable_filters(int index) {
  // @@protoc_insertion_point(field_mutable:kentik.saved_filter.v202501alpha1.ListSavedFiltersAllResponse.filters)
  return filters_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kentik::saved_filter::v202501alpha1::SavedFilter >*
ListSavedFiltersAllResponse::mutable_filters() {
  // @@protoc_insertion_point(field_mutable_list:kentik.saved_filter.v202501alpha1.ListSavedFiltersAllResponse.filters)
  return &filters_;
}
inline const ::kentik::saved_filter::v202501alpha1::SavedFilter& ListSavedFiltersAllResponse::_internal_filters(int index) const {
  return filters_.Get(index);
}
inline const ::kentik::saved_filter::v202501alpha1::SavedFilter& ListSavedFiltersAllResponse::filters(int index) const {
  // @@protoc_insertion_point(field_get:kentik.saved_filter.v202501alpha1.ListSavedFiltersAllResponse.filters)
  return _internal_filters(index);
}
inline ::kentik::saved_filter::v202501alpha1::SavedFilter* ListSavedFiltersAllResponse::_internal_add_filters() {
  return filters_.Add();
}
inline ::kentik::saved_filter::v202501alpha1::SavedFilter* ListSavedFiltersAllResponse::add_filters() {
  // @@protoc_insertion_point(field_add:kentik.saved_filter.v202501alpha1.ListSavedFiltersAllResponse.filters)
  return _internal_add_filters();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kentik::saved_filter::v202501alpha1::SavedFilter >&
ListSavedFiltersAllResponse::filters() const {
  // @@protoc_insertion_point(field_list:kentik.saved_filter.v202501alpha1.ListSavedFiltersAllResponse.filters)
  return filters_;
}

// -------------------------------------------------------------------

// GetSavedFilterRequest

// string id = 1[json_name = "id"];
inline void GetSavedFilterRequest::clear_id() {
  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& GetSavedFilterRequest::id() const {
  // @@protoc_insertion_point(field_get:kentik.saved_filter.v202501alpha1.GetSavedFilterRequest.id)
  return _internal_id();
}
inline void GetSavedFilterRequest::set_id(const std::string& value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:kentik.saved_filter.v202501alpha1.GetSavedFilterRequest.id)
}
inline std::string* GetSavedFilterRequest::mutable_id() {
  // @@protoc_insertion_point(field_mutable:kentik.saved_filter.v202501alpha1.GetSavedFilterRequest.id)
  return _internal_mutable_id();
}
inline const std::string& GetSavedFilterRequest::_internal_id() const {
  return id_.Get();
}
inline void GetSavedFilterRequest::_internal_set_id(const std::string& value) {
  
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void GetSavedFilterRequest::set_id(std::string&& value) {
  
  id_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:kentik.saved_filter.v202501alpha1.GetSavedFilterRequest.id)
}
inline void GetSavedFilterRequest::set_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:kentik.saved_filter.v202501alpha1.GetSavedFilterRequest.id)
}
inline void GetSavedFilterRequest::set_id(const char* value,
    size_t size) {
  
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:kentik.saved_filter.v202501alpha1.GetSavedFilterRequest.id)
}
inline std::string* GetSavedFilterRequest::_internal_mutable_id() {
  
  return id_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* GetSavedFilterRequest::release_id() {
  // @@protoc_insertion_point(field_release:kentik.saved_filter.v202501alpha1.GetSavedFilterRequest.id)
  return id_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void GetSavedFilterRequest::set_allocated_id(std::string* id) {
  if (id != nullptr) {
    
  } else {
    
  }
  id_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), id,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:kentik.saved_filter.v202501alpha1.GetSavedFilterRequest.id)
}
inline std::string* GetSavedFilterRequest::unsafe_arena_release_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:kentik.saved_filter.v202501alpha1.GetSavedFilterRequest.id)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return id_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void GetSavedFilterRequest::unsafe_arena_set_allocated_id(
    std::string* id) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (id != nullptr) {
    
  } else {
    
  }
  id_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      id, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.saved_filter.v202501alpha1.GetSavedFilterRequest.id)
}

// -------------------------------------------------------------------

// GetSavedFilterResponse

// .kentik.saved_filter.v202501alpha1.SavedFilter filter = 1[json_name = "filter"];
inline bool GetSavedFilterResponse::_internal_has_filter() const {
  return this != internal_default_instance() && filter_ != nullptr;
}
inline bool GetSavedFilterResponse::has_filter() const {
  return _internal_has_filter();
}
inline const ::kentik::saved_filter::v202501alpha1::SavedFilter& GetSavedFilterResponse::_internal_filter() const {
  const ::kentik::saved_filter::v202501alpha1::SavedFilter* p = filter_;
  return p != nullptr ? *p : *reinterpret_cast<const ::kentik::saved_filter::v202501alpha1::SavedFilter*>(
      &::kentik::saved_filter::v202501alpha1::_SavedFilter_default_instance_);
}
inline const ::kentik::saved_filter::v202501alpha1::SavedFilter& GetSavedFilterResponse::filter() const {
  // @@protoc_insertion_point(field_get:kentik.saved_filter.v202501alpha1.GetSavedFilterResponse.filter)
  return _internal_filter();
}
inline void GetSavedFilterResponse::unsafe_arena_set_allocated_filter(
    ::kentik::saved_filter::v202501alpha1::SavedFilter* filter) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(filter_);
  }
  filter_ = filter;
  if (filter) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.saved_filter.v202501alpha1.GetSavedFilterResponse.filter)
}
inline ::kentik::saved_filter::v202501alpha1::SavedFilter* GetSavedFilterResponse::release_filter() {
  auto temp = unsafe_arena_release_filter();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::kentik::saved_filter::v202501alpha1::SavedFilter* GetSavedFilterResponse::unsafe_arena_release_filter() {
  // @@protoc_insertion_point(field_release:kentik.saved_filter.v202501alpha1.GetSavedFilterResponse.filter)
  
  ::kentik::saved_filter::v202501alpha1::SavedFilter* temp = filter_;
  filter_ = nullptr;
  return temp;
}
inline ::kentik::saved_filter::v202501alpha1::SavedFilter* GetSavedFilterResponse::_internal_mutable_filter() {
  
  if (filter_ == nullptr) {
    auto* p = CreateMaybeMessage<::kentik::saved_filter::v202501alpha1::SavedFilter>(GetArena());
    filter_ = p;
  }
  return filter_;
}
inline ::kentik::saved_filter::v202501alpha1::SavedFilter* GetSavedFilterResponse::mutable_filter() {
  // @@protoc_insertion_point(field_mutable:kentik.saved_filter.v202501alpha1.GetSavedFilterResponse.filter)
  return _internal_mutable_filter();
}
inline void GetSavedFilterResponse::set_allocated_filter(::kentik::saved_filter::v202501alpha1::SavedFilter* filter) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(filter_);
  }
  if (filter) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(filter)->GetArena();
    if (message_arena != submessage_arena) {
      filter = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, filter, submessage_arena);
    }
    
  } else {
    
  }
  filter_ = filter;
  // @@protoc_insertion_point(field_set_allocated:kentik.saved_filter.v202501alpha1.GetSavedFilterResponse.filter)
}

// -------------------------------------------------------------------

// DeleteSavedFilterRequest

// string id = 1[json_name = "id"];
inline void DeleteSavedFilterRequest::clear_id() {
  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& DeleteSavedFilterRequest::id() const {
  // @@protoc_insertion_point(field_get:kentik.saved_filter.v202501alpha1.DeleteSavedFilterRequest.id)
  return _internal_id();
}
inline void DeleteSavedFilterRequest::set_id(const std::string& value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:kentik.saved_filter.v202501alpha1.DeleteSavedFilterRequest.id)
}
inline std::string* DeleteSavedFilterRequest::mutable_id() {
  // @@protoc_insertion_point(field_mutable:kentik.saved_filter.v202501alpha1.DeleteSavedFilterRequest.id)
  return _internal_mutable_id();
}
inline const std::string& DeleteSavedFilterRequest::_internal_id() const {
  return id_.Get();
}
inline void DeleteSavedFilterRequest::_internal_set_id(const std::string& value) {
  
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void DeleteSavedFilterRequest::set_id(std::string&& value) {
  
  id_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:kentik.saved_filter.v202501alpha1.DeleteSavedFilterRequest.id)
}
inline void DeleteSavedFilterRequest::set_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:kentik.saved_filter.v202501alpha1.DeleteSavedFilterRequest.id)
}
inline void DeleteSavedFilterRequest::set_id(const char* value,
    size_t size) {
  
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:kentik.saved_filter.v202501alpha1.DeleteSavedFilterRequest.id)
}
inline std::string* DeleteSavedFilterRequest::_internal_mutable_id() {
  
  return id_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* DeleteSavedFilterRequest::release_id() {
  // @@protoc_insertion_point(field_release:kentik.saved_filter.v202501alpha1.DeleteSavedFilterRequest.id)
  return id_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void DeleteSavedFilterRequest::set_allocated_id(std::string* id) {
  if (id != nullptr) {
    
  } else {
    
  }
  id_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), id,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:kentik.saved_filter.v202501alpha1.DeleteSavedFilterRequest.id)
}
inline std::string* DeleteSavedFilterRequest::unsafe_arena_release_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:kentik.saved_filter.v202501alpha1.DeleteSavedFilterRequest.id)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return id_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void DeleteSavedFilterRequest::unsafe_arena_set_allocated_id(
    std::string* id) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (id != nullptr) {
    
  } else {
    
  }
  id_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      id, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.saved_filter.v202501alpha1.DeleteSavedFilterRequest.id)
}

// -------------------------------------------------------------------

// DeleteSavedFilterResponse

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v202501alpha1
}  // namespace saved_filter
}  // namespace kentik

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_kentik_2fsaved_5ffilter_2fv202501alpha1_2fsaved_5ffilter_2eproto
