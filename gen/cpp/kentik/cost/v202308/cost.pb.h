// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: kentik/cost/v202308/cost.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_kentik_2fcost_2fv202308_2fcost_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_kentik_2fcost_2fv202308_2fcost_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3012000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3012004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "google/api/annotations.pb.h"
#include "google/api/client.pb.h"
#include "google/api/field_behavior.pb.h"
#include <google/protobuf/timestamp.pb.h>
#include "protoc-gen-openapiv2/options/annotations.pb.h"
#include "kentik/core/v202303/annotations.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_kentik_2fcost_2fv202308_2fcost_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_kentik_2fcost_2fv202308_2fcost_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[8]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_kentik_2fcost_2fv202308_2fcost_2eproto;
namespace kentik {
namespace cost {
namespace v202308 {
class CostProviderConcise;
class CostProviderConciseDefaultTypeInternal;
extern CostProviderConciseDefaultTypeInternal _CostProviderConcise_default_instance_;
class CostProviderSummary;
class CostProviderSummaryDefaultTypeInternal;
extern CostProviderSummaryDefaultTypeInternal _CostProviderSummary_default_instance_;
class GetCostProviderSummaryRequest;
class GetCostProviderSummaryRequestDefaultTypeInternal;
extern GetCostProviderSummaryRequestDefaultTypeInternal _GetCostProviderSummaryRequest_default_instance_;
class GetCostProviderSummaryResponse;
class GetCostProviderSummaryResponseDefaultTypeInternal;
extern GetCostProviderSummaryResponseDefaultTypeInternal _GetCostProviderSummaryResponse_default_instance_;
class ListCostProviderSummariesRequest;
class ListCostProviderSummariesRequestDefaultTypeInternal;
extern ListCostProviderSummariesRequestDefaultTypeInternal _ListCostProviderSummariesRequest_default_instance_;
class ListCostProviderSummariesResponse;
class ListCostProviderSummariesResponseDefaultTypeInternal;
extern ListCostProviderSummariesResponseDefaultTypeInternal _ListCostProviderSummariesResponse_default_instance_;
class ListCostProvidersRequest;
class ListCostProvidersRequestDefaultTypeInternal;
extern ListCostProvidersRequestDefaultTypeInternal _ListCostProvidersRequest_default_instance_;
class ListCostProvidersResponse;
class ListCostProvidersResponseDefaultTypeInternal;
extern ListCostProvidersResponseDefaultTypeInternal _ListCostProvidersResponse_default_instance_;
}  // namespace v202308
}  // namespace cost
}  // namespace kentik
PROTOBUF_NAMESPACE_OPEN
template<> ::kentik::cost::v202308::CostProviderConcise* Arena::CreateMaybeMessage<::kentik::cost::v202308::CostProviderConcise>(Arena*);
template<> ::kentik::cost::v202308::CostProviderSummary* Arena::CreateMaybeMessage<::kentik::cost::v202308::CostProviderSummary>(Arena*);
template<> ::kentik::cost::v202308::GetCostProviderSummaryRequest* Arena::CreateMaybeMessage<::kentik::cost::v202308::GetCostProviderSummaryRequest>(Arena*);
template<> ::kentik::cost::v202308::GetCostProviderSummaryResponse* Arena::CreateMaybeMessage<::kentik::cost::v202308::GetCostProviderSummaryResponse>(Arena*);
template<> ::kentik::cost::v202308::ListCostProviderSummariesRequest* Arena::CreateMaybeMessage<::kentik::cost::v202308::ListCostProviderSummariesRequest>(Arena*);
template<> ::kentik::cost::v202308::ListCostProviderSummariesResponse* Arena::CreateMaybeMessage<::kentik::cost::v202308::ListCostProviderSummariesResponse>(Arena*);
template<> ::kentik::cost::v202308::ListCostProvidersRequest* Arena::CreateMaybeMessage<::kentik::cost::v202308::ListCostProvidersRequest>(Arena*);
template<> ::kentik::cost::v202308::ListCostProvidersResponse* Arena::CreateMaybeMessage<::kentik::cost::v202308::ListCostProvidersResponse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace kentik {
namespace cost {
namespace v202308 {

enum Status : int {
  STATUS_UNSPECIFIED = 0,
  STATUS_INCOMPLETE = 1,
  STATUS_COMPLETE = 2,
  Status_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  Status_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool Status_IsValid(int value);
constexpr Status Status_MIN = STATUS_UNSPECIFIED;
constexpr Status Status_MAX = STATUS_COMPLETE;
constexpr int Status_ARRAYSIZE = Status_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Status_descriptor();
template<typename T>
inline const std::string& Status_Name(T enum_t_value) {
  static_assert(::std::is_same<T, Status>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function Status_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    Status_descriptor(), enum_t_value);
}
inline bool Status_Parse(
    const std::string& name, Status* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<Status>(
    Status_descriptor(), name, value);
}
// ===================================================================

class CostProviderSummary PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kentik.cost.v202308.CostProviderSummary) */ {
 public:
  inline CostProviderSummary() : CostProviderSummary(nullptr) {};
  virtual ~CostProviderSummary();

  CostProviderSummary(const CostProviderSummary& from);
  CostProviderSummary(CostProviderSummary&& from) noexcept
    : CostProviderSummary() {
    *this = ::std::move(from);
  }

  inline CostProviderSummary& operator=(const CostProviderSummary& from) {
    CopyFrom(from);
    return *this;
  }
  inline CostProviderSummary& operator=(CostProviderSummary&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CostProviderSummary& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CostProviderSummary* internal_default_instance() {
    return reinterpret_cast<const CostProviderSummary*>(
               &_CostProviderSummary_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(CostProviderSummary& a, CostProviderSummary& b) {
    a.Swap(&b);
  }
  inline void Swap(CostProviderSummary* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CostProviderSummary* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CostProviderSummary* New() const final {
    return CreateMaybeMessage<CostProviderSummary>(nullptr);
  }

  CostProviderSummary* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CostProviderSummary>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CostProviderSummary& from);
  void MergeFrom(const CostProviderSummary& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CostProviderSummary* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kentik.cost.v202308.CostProviderSummary";
  }
  protected:
  explicit CostProviderSummary(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_kentik_2fcost_2fv202308_2fcost_2eproto);
    return ::descriptor_table_kentik_2fcost_2fv202308_2fcost_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDateFieldNumber = 1,
    kTotalCostVariationFieldNumber = 4,
    kCurrencyFieldNumber = 7,
    kCostPerMbpsVariationFieldNumber = 9,
    kProviderNameFieldNumber = 10,
    kCostGroupNameFieldNumber = 11,
    kCostGroupConnTypeFieldNumber = 12,
    kSiteNameFieldNumber = 13,
    kSiteMarketFieldNumber = 14,
    kIngressTrafficVariationFieldNumber = 16,
    kEgressTrafficVariationFieldNumber = 18,
    kStatusFieldNumber = 2,
    kTotalCostFieldNumber = 3,
    kTotalCostGroupAdditionalCostFieldNumber = 5,
    kTotalCostGroupAdditionalInterfaceCostFieldNumber = 6,
    kCostPerMbpsFieldNumber = 8,
    kIngressTrafficMbpsFieldNumber = 15,
    kEgressTrafficMbpsFieldNumber = 17,
  };
  // string date = 1[json_name = "date", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_date();
  const std::string& date() const;
  void set_date(const std::string& value);
  void set_date(std::string&& value);
  void set_date(const char* value);
  void set_date(const char* value, size_t size);
  std::string* mutable_date();
  std::string* release_date();
  void set_allocated_date(std::string* date);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_date();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_date(
      std::string* date);
  private:
  const std::string& _internal_date() const;
  void _internal_set_date(const std::string& value);
  std::string* _internal_mutable_date();
  public:

  // string total_cost_variation = 4[json_name = "totalCostVariation", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_total_cost_variation();
  const std::string& total_cost_variation() const;
  void set_total_cost_variation(const std::string& value);
  void set_total_cost_variation(std::string&& value);
  void set_total_cost_variation(const char* value);
  void set_total_cost_variation(const char* value, size_t size);
  std::string* mutable_total_cost_variation();
  std::string* release_total_cost_variation();
  void set_allocated_total_cost_variation(std::string* total_cost_variation);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_total_cost_variation();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_total_cost_variation(
      std::string* total_cost_variation);
  private:
  const std::string& _internal_total_cost_variation() const;
  void _internal_set_total_cost_variation(const std::string& value);
  std::string* _internal_mutable_total_cost_variation();
  public:

  // string currency = 7[json_name = "currency", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_currency();
  const std::string& currency() const;
  void set_currency(const std::string& value);
  void set_currency(std::string&& value);
  void set_currency(const char* value);
  void set_currency(const char* value, size_t size);
  std::string* mutable_currency();
  std::string* release_currency();
  void set_allocated_currency(std::string* currency);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_currency();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_currency(
      std::string* currency);
  private:
  const std::string& _internal_currency() const;
  void _internal_set_currency(const std::string& value);
  std::string* _internal_mutable_currency();
  public:

  // string cost_per_mbps_variation = 9[json_name = "costPerMbpsVariation", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_cost_per_mbps_variation();
  const std::string& cost_per_mbps_variation() const;
  void set_cost_per_mbps_variation(const std::string& value);
  void set_cost_per_mbps_variation(std::string&& value);
  void set_cost_per_mbps_variation(const char* value);
  void set_cost_per_mbps_variation(const char* value, size_t size);
  std::string* mutable_cost_per_mbps_variation();
  std::string* release_cost_per_mbps_variation();
  void set_allocated_cost_per_mbps_variation(std::string* cost_per_mbps_variation);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_cost_per_mbps_variation();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_cost_per_mbps_variation(
      std::string* cost_per_mbps_variation);
  private:
  const std::string& _internal_cost_per_mbps_variation() const;
  void _internal_set_cost_per_mbps_variation(const std::string& value);
  std::string* _internal_mutable_cost_per_mbps_variation();
  public:

  // string provider_name = 10[json_name = "providerName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_provider_name();
  const std::string& provider_name() const;
  void set_provider_name(const std::string& value);
  void set_provider_name(std::string&& value);
  void set_provider_name(const char* value);
  void set_provider_name(const char* value, size_t size);
  std::string* mutable_provider_name();
  std::string* release_provider_name();
  void set_allocated_provider_name(std::string* provider_name);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_provider_name();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_provider_name(
      std::string* provider_name);
  private:
  const std::string& _internal_provider_name() const;
  void _internal_set_provider_name(const std::string& value);
  std::string* _internal_mutable_provider_name();
  public:

  // string cost_group_name = 11[json_name = "costGroupName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_cost_group_name();
  const std::string& cost_group_name() const;
  void set_cost_group_name(const std::string& value);
  void set_cost_group_name(std::string&& value);
  void set_cost_group_name(const char* value);
  void set_cost_group_name(const char* value, size_t size);
  std::string* mutable_cost_group_name();
  std::string* release_cost_group_name();
  void set_allocated_cost_group_name(std::string* cost_group_name);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_cost_group_name();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_cost_group_name(
      std::string* cost_group_name);
  private:
  const std::string& _internal_cost_group_name() const;
  void _internal_set_cost_group_name(const std::string& value);
  std::string* _internal_mutable_cost_group_name();
  public:

  // string cost_group_conn_type = 12[json_name = "costGroupConnType", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_cost_group_conn_type();
  const std::string& cost_group_conn_type() const;
  void set_cost_group_conn_type(const std::string& value);
  void set_cost_group_conn_type(std::string&& value);
  void set_cost_group_conn_type(const char* value);
  void set_cost_group_conn_type(const char* value, size_t size);
  std::string* mutable_cost_group_conn_type();
  std::string* release_cost_group_conn_type();
  void set_allocated_cost_group_conn_type(std::string* cost_group_conn_type);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_cost_group_conn_type();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_cost_group_conn_type(
      std::string* cost_group_conn_type);
  private:
  const std::string& _internal_cost_group_conn_type() const;
  void _internal_set_cost_group_conn_type(const std::string& value);
  std::string* _internal_mutable_cost_group_conn_type();
  public:

  // string site_name = 13[json_name = "siteName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_site_name();
  const std::string& site_name() const;
  void set_site_name(const std::string& value);
  void set_site_name(std::string&& value);
  void set_site_name(const char* value);
  void set_site_name(const char* value, size_t size);
  std::string* mutable_site_name();
  std::string* release_site_name();
  void set_allocated_site_name(std::string* site_name);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_site_name();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_site_name(
      std::string* site_name);
  private:
  const std::string& _internal_site_name() const;
  void _internal_set_site_name(const std::string& value);
  std::string* _internal_mutable_site_name();
  public:

  // string site_market = 14[json_name = "siteMarket", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_site_market();
  const std::string& site_market() const;
  void set_site_market(const std::string& value);
  void set_site_market(std::string&& value);
  void set_site_market(const char* value);
  void set_site_market(const char* value, size_t size);
  std::string* mutable_site_market();
  std::string* release_site_market();
  void set_allocated_site_market(std::string* site_market);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_site_market();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_site_market(
      std::string* site_market);
  private:
  const std::string& _internal_site_market() const;
  void _internal_set_site_market(const std::string& value);
  std::string* _internal_mutable_site_market();
  public:

  // string ingress_traffic_variation = 16[json_name = "ingressTrafficVariation", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_ingress_traffic_variation();
  const std::string& ingress_traffic_variation() const;
  void set_ingress_traffic_variation(const std::string& value);
  void set_ingress_traffic_variation(std::string&& value);
  void set_ingress_traffic_variation(const char* value);
  void set_ingress_traffic_variation(const char* value, size_t size);
  std::string* mutable_ingress_traffic_variation();
  std::string* release_ingress_traffic_variation();
  void set_allocated_ingress_traffic_variation(std::string* ingress_traffic_variation);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_ingress_traffic_variation();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_ingress_traffic_variation(
      std::string* ingress_traffic_variation);
  private:
  const std::string& _internal_ingress_traffic_variation() const;
  void _internal_set_ingress_traffic_variation(const std::string& value);
  std::string* _internal_mutable_ingress_traffic_variation();
  public:

  // string egress_traffic_variation = 18[json_name = "egressTrafficVariation", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_egress_traffic_variation();
  const std::string& egress_traffic_variation() const;
  void set_egress_traffic_variation(const std::string& value);
  void set_egress_traffic_variation(std::string&& value);
  void set_egress_traffic_variation(const char* value);
  void set_egress_traffic_variation(const char* value, size_t size);
  std::string* mutable_egress_traffic_variation();
  std::string* release_egress_traffic_variation();
  void set_allocated_egress_traffic_variation(std::string* egress_traffic_variation);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_egress_traffic_variation();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_egress_traffic_variation(
      std::string* egress_traffic_variation);
  private:
  const std::string& _internal_egress_traffic_variation() const;
  void _internal_set_egress_traffic_variation(const std::string& value);
  std::string* _internal_mutable_egress_traffic_variation();
  public:

  // .kentik.cost.v202308.Status status = 2[json_name = "status", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_status();
  ::kentik::cost::v202308::Status status() const;
  void set_status(::kentik::cost::v202308::Status value);
  private:
  ::kentik::cost::v202308::Status _internal_status() const;
  void _internal_set_status(::kentik::cost::v202308::Status value);
  public:

  // float total_cost = 3[json_name = "totalCost", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_total_cost();
  float total_cost() const;
  void set_total_cost(float value);
  private:
  float _internal_total_cost() const;
  void _internal_set_total_cost(float value);
  public:

  // float total_cost_group_additional_cost = 5[json_name = "totalCostGroupAdditionalCost", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_total_cost_group_additional_cost();
  float total_cost_group_additional_cost() const;
  void set_total_cost_group_additional_cost(float value);
  private:
  float _internal_total_cost_group_additional_cost() const;
  void _internal_set_total_cost_group_additional_cost(float value);
  public:

  // float total_cost_group_additional_interface_cost = 6[json_name = "totalCostGroupAdditionalInterfaceCost", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_total_cost_group_additional_interface_cost();
  float total_cost_group_additional_interface_cost() const;
  void set_total_cost_group_additional_interface_cost(float value);
  private:
  float _internal_total_cost_group_additional_interface_cost() const;
  void _internal_set_total_cost_group_additional_interface_cost(float value);
  public:

  // float cost_per_mbps = 8[json_name = "costPerMbps", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_cost_per_mbps();
  float cost_per_mbps() const;
  void set_cost_per_mbps(float value);
  private:
  float _internal_cost_per_mbps() const;
  void _internal_set_cost_per_mbps(float value);
  public:

  // float ingress_traffic_mbps = 15[json_name = "ingressTrafficMbps", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_ingress_traffic_mbps();
  float ingress_traffic_mbps() const;
  void set_ingress_traffic_mbps(float value);
  private:
  float _internal_ingress_traffic_mbps() const;
  void _internal_set_ingress_traffic_mbps(float value);
  public:

  // float egress_traffic_mbps = 17[json_name = "egressTrafficMbps", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_egress_traffic_mbps();
  float egress_traffic_mbps() const;
  void set_egress_traffic_mbps(float value);
  private:
  float _internal_egress_traffic_mbps() const;
  void _internal_set_egress_traffic_mbps(float value);
  public:

  // @@protoc_insertion_point(class_scope:kentik.cost.v202308.CostProviderSummary)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr date_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr total_cost_variation_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr currency_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr cost_per_mbps_variation_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr provider_name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr cost_group_name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr cost_group_conn_type_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr site_name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr site_market_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr ingress_traffic_variation_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr egress_traffic_variation_;
  int status_;
  float total_cost_;
  float total_cost_group_additional_cost_;
  float total_cost_group_additional_interface_cost_;
  float cost_per_mbps_;
  float ingress_traffic_mbps_;
  float egress_traffic_mbps_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_kentik_2fcost_2fv202308_2fcost_2eproto;
};
// -------------------------------------------------------------------

class CostProviderConcise PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kentik.cost.v202308.CostProviderConcise) */ {
 public:
  inline CostProviderConcise() : CostProviderConcise(nullptr) {};
  virtual ~CostProviderConcise();

  CostProviderConcise(const CostProviderConcise& from);
  CostProviderConcise(CostProviderConcise&& from) noexcept
    : CostProviderConcise() {
    *this = ::std::move(from);
  }

  inline CostProviderConcise& operator=(const CostProviderConcise& from) {
    CopyFrom(from);
    return *this;
  }
  inline CostProviderConcise& operator=(CostProviderConcise&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CostProviderConcise& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CostProviderConcise* internal_default_instance() {
    return reinterpret_cast<const CostProviderConcise*>(
               &_CostProviderConcise_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(CostProviderConcise& a, CostProviderConcise& b) {
    a.Swap(&b);
  }
  inline void Swap(CostProviderConcise* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CostProviderConcise* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CostProviderConcise* New() const final {
    return CreateMaybeMessage<CostProviderConcise>(nullptr);
  }

  CostProviderConcise* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CostProviderConcise>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CostProviderConcise& from);
  void MergeFrom(const CostProviderConcise& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CostProviderConcise* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kentik.cost.v202308.CostProviderConcise";
  }
  protected:
  explicit CostProviderConcise(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_kentik_2fcost_2fv202308_2fcost_2eproto);
    return ::descriptor_table_kentik_2fcost_2fv202308_2fcost_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
    kNameFieldNumber = 2,
  };
  // string id = 1[json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_id();
  const std::string& id() const;
  void set_id(const std::string& value);
  void set_id(std::string&& value);
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  std::string* mutable_id();
  std::string* release_id();
  void set_allocated_id(std::string* id);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_id();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_id(
      std::string* id);
  private:
  const std::string& _internal_id() const;
  void _internal_set_id(const std::string& value);
  std::string* _internal_mutable_id();
  public:

  // string name = 2[json_name = "name", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_name();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_name(
      std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // @@protoc_insertion_point(class_scope:kentik.cost.v202308.CostProviderConcise)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr id_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_kentik_2fcost_2fv202308_2fcost_2eproto;
};
// -------------------------------------------------------------------

class ListCostProvidersRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kentik.cost.v202308.ListCostProvidersRequest) */ {
 public:
  inline ListCostProvidersRequest() : ListCostProvidersRequest(nullptr) {};
  virtual ~ListCostProvidersRequest();

  ListCostProvidersRequest(const ListCostProvidersRequest& from);
  ListCostProvidersRequest(ListCostProvidersRequest&& from) noexcept
    : ListCostProvidersRequest() {
    *this = ::std::move(from);
  }

  inline ListCostProvidersRequest& operator=(const ListCostProvidersRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListCostProvidersRequest& operator=(ListCostProvidersRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ListCostProvidersRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListCostProvidersRequest* internal_default_instance() {
    return reinterpret_cast<const ListCostProvidersRequest*>(
               &_ListCostProvidersRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(ListCostProvidersRequest& a, ListCostProvidersRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ListCostProvidersRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListCostProvidersRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ListCostProvidersRequest* New() const final {
    return CreateMaybeMessage<ListCostProvidersRequest>(nullptr);
  }

  ListCostProvidersRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ListCostProvidersRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ListCostProvidersRequest& from);
  void MergeFrom(const ListCostProvidersRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListCostProvidersRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kentik.cost.v202308.ListCostProvidersRequest";
  }
  protected:
  explicit ListCostProvidersRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_kentik_2fcost_2fv202308_2fcost_2eproto);
    return ::descriptor_table_kentik_2fcost_2fv202308_2fcost_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:kentik.cost.v202308.ListCostProvidersRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_kentik_2fcost_2fv202308_2fcost_2eproto;
};
// -------------------------------------------------------------------

class ListCostProvidersResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kentik.cost.v202308.ListCostProvidersResponse) */ {
 public:
  inline ListCostProvidersResponse() : ListCostProvidersResponse(nullptr) {};
  virtual ~ListCostProvidersResponse();

  ListCostProvidersResponse(const ListCostProvidersResponse& from);
  ListCostProvidersResponse(ListCostProvidersResponse&& from) noexcept
    : ListCostProvidersResponse() {
    *this = ::std::move(from);
  }

  inline ListCostProvidersResponse& operator=(const ListCostProvidersResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListCostProvidersResponse& operator=(ListCostProvidersResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ListCostProvidersResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListCostProvidersResponse* internal_default_instance() {
    return reinterpret_cast<const ListCostProvidersResponse*>(
               &_ListCostProvidersResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(ListCostProvidersResponse& a, ListCostProvidersResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ListCostProvidersResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListCostProvidersResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ListCostProvidersResponse* New() const final {
    return CreateMaybeMessage<ListCostProvidersResponse>(nullptr);
  }

  ListCostProvidersResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ListCostProvidersResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ListCostProvidersResponse& from);
  void MergeFrom(const ListCostProvidersResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListCostProvidersResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kentik.cost.v202308.ListCostProvidersResponse";
  }
  protected:
  explicit ListCostProvidersResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_kentik_2fcost_2fv202308_2fcost_2eproto);
    return ::descriptor_table_kentik_2fcost_2fv202308_2fcost_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kProvidersFieldNumber = 1,
    kInvalidCountFieldNumber = 2,
  };
  // repeated .kentik.cost.v202308.CostProviderConcise providers = 1[json_name = "providers", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int providers_size() const;
  private:
  int _internal_providers_size() const;
  public:
  void clear_providers();
  ::kentik::cost::v202308::CostProviderConcise* mutable_providers(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kentik::cost::v202308::CostProviderConcise >*
      mutable_providers();
  private:
  const ::kentik::cost::v202308::CostProviderConcise& _internal_providers(int index) const;
  ::kentik::cost::v202308::CostProviderConcise* _internal_add_providers();
  public:
  const ::kentik::cost::v202308::CostProviderConcise& providers(int index) const;
  ::kentik::cost::v202308::CostProviderConcise* add_providers();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kentik::cost::v202308::CostProviderConcise >&
      providers() const;

  // uint32 invalid_count = 2[json_name = "invalidCount", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_invalid_count();
  ::PROTOBUF_NAMESPACE_ID::uint32 invalid_count() const;
  void set_invalid_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_invalid_count() const;
  void _internal_set_invalid_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:kentik.cost.v202308.ListCostProvidersResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kentik::cost::v202308::CostProviderConcise > providers_;
  ::PROTOBUF_NAMESPACE_ID::uint32 invalid_count_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_kentik_2fcost_2fv202308_2fcost_2eproto;
};
// -------------------------------------------------------------------

class ListCostProviderSummariesRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kentik.cost.v202308.ListCostProviderSummariesRequest) */ {
 public:
  inline ListCostProviderSummariesRequest() : ListCostProviderSummariesRequest(nullptr) {};
  virtual ~ListCostProviderSummariesRequest();

  ListCostProviderSummariesRequest(const ListCostProviderSummariesRequest& from);
  ListCostProviderSummariesRequest(ListCostProviderSummariesRequest&& from) noexcept
    : ListCostProviderSummariesRequest() {
    *this = ::std::move(from);
  }

  inline ListCostProviderSummariesRequest& operator=(const ListCostProviderSummariesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListCostProviderSummariesRequest& operator=(ListCostProviderSummariesRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ListCostProviderSummariesRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListCostProviderSummariesRequest* internal_default_instance() {
    return reinterpret_cast<const ListCostProviderSummariesRequest*>(
               &_ListCostProviderSummariesRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(ListCostProviderSummariesRequest& a, ListCostProviderSummariesRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ListCostProviderSummariesRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListCostProviderSummariesRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ListCostProviderSummariesRequest* New() const final {
    return CreateMaybeMessage<ListCostProviderSummariesRequest>(nullptr);
  }

  ListCostProviderSummariesRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ListCostProviderSummariesRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ListCostProviderSummariesRequest& from);
  void MergeFrom(const ListCostProviderSummariesRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListCostProviderSummariesRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kentik.cost.v202308.ListCostProviderSummariesRequest";
  }
  protected:
  explicit ListCostProviderSummariesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_kentik_2fcost_2fv202308_2fcost_2eproto);
    return ::descriptor_table_kentik_2fcost_2fv202308_2fcost_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDateFieldNumber = 1,
  };
  // string date = 1[json_name = "date", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_date();
  const std::string& date() const;
  void set_date(const std::string& value);
  void set_date(std::string&& value);
  void set_date(const char* value);
  void set_date(const char* value, size_t size);
  std::string* mutable_date();
  std::string* release_date();
  void set_allocated_date(std::string* date);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_date();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_date(
      std::string* date);
  private:
  const std::string& _internal_date() const;
  void _internal_set_date(const std::string& value);
  std::string* _internal_mutable_date();
  public:

  // @@protoc_insertion_point(class_scope:kentik.cost.v202308.ListCostProviderSummariesRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr date_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_kentik_2fcost_2fv202308_2fcost_2eproto;
};
// -------------------------------------------------------------------

class ListCostProviderSummariesResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kentik.cost.v202308.ListCostProviderSummariesResponse) */ {
 public:
  inline ListCostProviderSummariesResponse() : ListCostProviderSummariesResponse(nullptr) {};
  virtual ~ListCostProviderSummariesResponse();

  ListCostProviderSummariesResponse(const ListCostProviderSummariesResponse& from);
  ListCostProviderSummariesResponse(ListCostProviderSummariesResponse&& from) noexcept
    : ListCostProviderSummariesResponse() {
    *this = ::std::move(from);
  }

  inline ListCostProviderSummariesResponse& operator=(const ListCostProviderSummariesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListCostProviderSummariesResponse& operator=(ListCostProviderSummariesResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ListCostProviderSummariesResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListCostProviderSummariesResponse* internal_default_instance() {
    return reinterpret_cast<const ListCostProviderSummariesResponse*>(
               &_ListCostProviderSummariesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(ListCostProviderSummariesResponse& a, ListCostProviderSummariesResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ListCostProviderSummariesResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListCostProviderSummariesResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ListCostProviderSummariesResponse* New() const final {
    return CreateMaybeMessage<ListCostProviderSummariesResponse>(nullptr);
  }

  ListCostProviderSummariesResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ListCostProviderSummariesResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ListCostProviderSummariesResponse& from);
  void MergeFrom(const ListCostProviderSummariesResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListCostProviderSummariesResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kentik.cost.v202308.ListCostProviderSummariesResponse";
  }
  protected:
  explicit ListCostProviderSummariesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_kentik_2fcost_2fv202308_2fcost_2eproto);
    return ::descriptor_table_kentik_2fcost_2fv202308_2fcost_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kProvidersFieldNumber = 1,
    kInvalidCountFieldNumber = 2,
  };
  // repeated .kentik.cost.v202308.CostProviderSummary providers = 1[json_name = "providers", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int providers_size() const;
  private:
  int _internal_providers_size() const;
  public:
  void clear_providers();
  ::kentik::cost::v202308::CostProviderSummary* mutable_providers(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kentik::cost::v202308::CostProviderSummary >*
      mutable_providers();
  private:
  const ::kentik::cost::v202308::CostProviderSummary& _internal_providers(int index) const;
  ::kentik::cost::v202308::CostProviderSummary* _internal_add_providers();
  public:
  const ::kentik::cost::v202308::CostProviderSummary& providers(int index) const;
  ::kentik::cost::v202308::CostProviderSummary* add_providers();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kentik::cost::v202308::CostProviderSummary >&
      providers() const;

  // uint32 invalid_count = 2[json_name = "invalidCount", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_invalid_count();
  ::PROTOBUF_NAMESPACE_ID::uint32 invalid_count() const;
  void set_invalid_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_invalid_count() const;
  void _internal_set_invalid_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:kentik.cost.v202308.ListCostProviderSummariesResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kentik::cost::v202308::CostProviderSummary > providers_;
  ::PROTOBUF_NAMESPACE_ID::uint32 invalid_count_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_kentik_2fcost_2fv202308_2fcost_2eproto;
};
// -------------------------------------------------------------------

class GetCostProviderSummaryRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kentik.cost.v202308.GetCostProviderSummaryRequest) */ {
 public:
  inline GetCostProviderSummaryRequest() : GetCostProviderSummaryRequest(nullptr) {};
  virtual ~GetCostProviderSummaryRequest();

  GetCostProviderSummaryRequest(const GetCostProviderSummaryRequest& from);
  GetCostProviderSummaryRequest(GetCostProviderSummaryRequest&& from) noexcept
    : GetCostProviderSummaryRequest() {
    *this = ::std::move(from);
  }

  inline GetCostProviderSummaryRequest& operator=(const GetCostProviderSummaryRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetCostProviderSummaryRequest& operator=(GetCostProviderSummaryRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GetCostProviderSummaryRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetCostProviderSummaryRequest* internal_default_instance() {
    return reinterpret_cast<const GetCostProviderSummaryRequest*>(
               &_GetCostProviderSummaryRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(GetCostProviderSummaryRequest& a, GetCostProviderSummaryRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetCostProviderSummaryRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetCostProviderSummaryRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetCostProviderSummaryRequest* New() const final {
    return CreateMaybeMessage<GetCostProviderSummaryRequest>(nullptr);
  }

  GetCostProviderSummaryRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetCostProviderSummaryRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GetCostProviderSummaryRequest& from);
  void MergeFrom(const GetCostProviderSummaryRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetCostProviderSummaryRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kentik.cost.v202308.GetCostProviderSummaryRequest";
  }
  protected:
  explicit GetCostProviderSummaryRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_kentik_2fcost_2fv202308_2fcost_2eproto);
    return ::descriptor_table_kentik_2fcost_2fv202308_2fcost_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
    kDateFieldNumber = 2,
  };
  // string id = 1[json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_id();
  const std::string& id() const;
  void set_id(const std::string& value);
  void set_id(std::string&& value);
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  std::string* mutable_id();
  std::string* release_id();
  void set_allocated_id(std::string* id);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_id();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_id(
      std::string* id);
  private:
  const std::string& _internal_id() const;
  void _internal_set_id(const std::string& value);
  std::string* _internal_mutable_id();
  public:

  // string date = 2[json_name = "date", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_date();
  const std::string& date() const;
  void set_date(const std::string& value);
  void set_date(std::string&& value);
  void set_date(const char* value);
  void set_date(const char* value, size_t size);
  std::string* mutable_date();
  std::string* release_date();
  void set_allocated_date(std::string* date);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_date();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_date(
      std::string* date);
  private:
  const std::string& _internal_date() const;
  void _internal_set_date(const std::string& value);
  std::string* _internal_mutable_date();
  public:

  // @@protoc_insertion_point(class_scope:kentik.cost.v202308.GetCostProviderSummaryRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr id_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr date_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_kentik_2fcost_2fv202308_2fcost_2eproto;
};
// -------------------------------------------------------------------

class GetCostProviderSummaryResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kentik.cost.v202308.GetCostProviderSummaryResponse) */ {
 public:
  inline GetCostProviderSummaryResponse() : GetCostProviderSummaryResponse(nullptr) {};
  virtual ~GetCostProviderSummaryResponse();

  GetCostProviderSummaryResponse(const GetCostProviderSummaryResponse& from);
  GetCostProviderSummaryResponse(GetCostProviderSummaryResponse&& from) noexcept
    : GetCostProviderSummaryResponse() {
    *this = ::std::move(from);
  }

  inline GetCostProviderSummaryResponse& operator=(const GetCostProviderSummaryResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetCostProviderSummaryResponse& operator=(GetCostProviderSummaryResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GetCostProviderSummaryResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetCostProviderSummaryResponse* internal_default_instance() {
    return reinterpret_cast<const GetCostProviderSummaryResponse*>(
               &_GetCostProviderSummaryResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(GetCostProviderSummaryResponse& a, GetCostProviderSummaryResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetCostProviderSummaryResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetCostProviderSummaryResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetCostProviderSummaryResponse* New() const final {
    return CreateMaybeMessage<GetCostProviderSummaryResponse>(nullptr);
  }

  GetCostProviderSummaryResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetCostProviderSummaryResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GetCostProviderSummaryResponse& from);
  void MergeFrom(const GetCostProviderSummaryResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetCostProviderSummaryResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kentik.cost.v202308.GetCostProviderSummaryResponse";
  }
  protected:
  explicit GetCostProviderSummaryResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_kentik_2fcost_2fv202308_2fcost_2eproto);
    return ::descriptor_table_kentik_2fcost_2fv202308_2fcost_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kProvidersFieldNumber = 1,
    kInvalidCountFieldNumber = 2,
  };
  // repeated .kentik.cost.v202308.CostProviderSummary providers = 1[json_name = "providers", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int providers_size() const;
  private:
  int _internal_providers_size() const;
  public:
  void clear_providers();
  ::kentik::cost::v202308::CostProviderSummary* mutable_providers(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kentik::cost::v202308::CostProviderSummary >*
      mutable_providers();
  private:
  const ::kentik::cost::v202308::CostProviderSummary& _internal_providers(int index) const;
  ::kentik::cost::v202308::CostProviderSummary* _internal_add_providers();
  public:
  const ::kentik::cost::v202308::CostProviderSummary& providers(int index) const;
  ::kentik::cost::v202308::CostProviderSummary* add_providers();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kentik::cost::v202308::CostProviderSummary >&
      providers() const;

  // uint32 invalid_count = 2[json_name = "invalidCount", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_invalid_count();
  ::PROTOBUF_NAMESPACE_ID::uint32 invalid_count() const;
  void set_invalid_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_invalid_count() const;
  void _internal_set_invalid_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:kentik.cost.v202308.GetCostProviderSummaryResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kentik::cost::v202308::CostProviderSummary > providers_;
  ::PROTOBUF_NAMESPACE_ID::uint32 invalid_count_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_kentik_2fcost_2fv202308_2fcost_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CostProviderSummary

// string date = 1[json_name = "date", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void CostProviderSummary::clear_date() {
  date_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& CostProviderSummary::date() const {
  // @@protoc_insertion_point(field_get:kentik.cost.v202308.CostProviderSummary.date)
  return _internal_date();
}
inline void CostProviderSummary::set_date(const std::string& value) {
  _internal_set_date(value);
  // @@protoc_insertion_point(field_set:kentik.cost.v202308.CostProviderSummary.date)
}
inline std::string* CostProviderSummary::mutable_date() {
  // @@protoc_insertion_point(field_mutable:kentik.cost.v202308.CostProviderSummary.date)
  return _internal_mutable_date();
}
inline const std::string& CostProviderSummary::_internal_date() const {
  return date_.Get();
}
inline void CostProviderSummary::_internal_set_date(const std::string& value) {
  
  date_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void CostProviderSummary::set_date(std::string&& value) {
  
  date_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:kentik.cost.v202308.CostProviderSummary.date)
}
inline void CostProviderSummary::set_date(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  date_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:kentik.cost.v202308.CostProviderSummary.date)
}
inline void CostProviderSummary::set_date(const char* value,
    size_t size) {
  
  date_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:kentik.cost.v202308.CostProviderSummary.date)
}
inline std::string* CostProviderSummary::_internal_mutable_date() {
  
  return date_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* CostProviderSummary::release_date() {
  // @@protoc_insertion_point(field_release:kentik.cost.v202308.CostProviderSummary.date)
  return date_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CostProviderSummary::set_allocated_date(std::string* date) {
  if (date != nullptr) {
    
  } else {
    
  }
  date_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), date,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:kentik.cost.v202308.CostProviderSummary.date)
}
inline std::string* CostProviderSummary::unsafe_arena_release_date() {
  // @@protoc_insertion_point(field_unsafe_arena_release:kentik.cost.v202308.CostProviderSummary.date)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return date_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void CostProviderSummary::unsafe_arena_set_allocated_date(
    std::string* date) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (date != nullptr) {
    
  } else {
    
  }
  date_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      date, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.cost.v202308.CostProviderSummary.date)
}

// .kentik.cost.v202308.Status status = 2[json_name = "status", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void CostProviderSummary::clear_status() {
  status_ = 0;
}
inline ::kentik::cost::v202308::Status CostProviderSummary::_internal_status() const {
  return static_cast< ::kentik::cost::v202308::Status >(status_);
}
inline ::kentik::cost::v202308::Status CostProviderSummary::status() const {
  // @@protoc_insertion_point(field_get:kentik.cost.v202308.CostProviderSummary.status)
  return _internal_status();
}
inline void CostProviderSummary::_internal_set_status(::kentik::cost::v202308::Status value) {
  
  status_ = value;
}
inline void CostProviderSummary::set_status(::kentik::cost::v202308::Status value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:kentik.cost.v202308.CostProviderSummary.status)
}

// float total_cost = 3[json_name = "totalCost", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void CostProviderSummary::clear_total_cost() {
  total_cost_ = 0;
}
inline float CostProviderSummary::_internal_total_cost() const {
  return total_cost_;
}
inline float CostProviderSummary::total_cost() const {
  // @@protoc_insertion_point(field_get:kentik.cost.v202308.CostProviderSummary.total_cost)
  return _internal_total_cost();
}
inline void CostProviderSummary::_internal_set_total_cost(float value) {
  
  total_cost_ = value;
}
inline void CostProviderSummary::set_total_cost(float value) {
  _internal_set_total_cost(value);
  // @@protoc_insertion_point(field_set:kentik.cost.v202308.CostProviderSummary.total_cost)
}

// string total_cost_variation = 4[json_name = "totalCostVariation", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void CostProviderSummary::clear_total_cost_variation() {
  total_cost_variation_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& CostProviderSummary::total_cost_variation() const {
  // @@protoc_insertion_point(field_get:kentik.cost.v202308.CostProviderSummary.total_cost_variation)
  return _internal_total_cost_variation();
}
inline void CostProviderSummary::set_total_cost_variation(const std::string& value) {
  _internal_set_total_cost_variation(value);
  // @@protoc_insertion_point(field_set:kentik.cost.v202308.CostProviderSummary.total_cost_variation)
}
inline std::string* CostProviderSummary::mutable_total_cost_variation() {
  // @@protoc_insertion_point(field_mutable:kentik.cost.v202308.CostProviderSummary.total_cost_variation)
  return _internal_mutable_total_cost_variation();
}
inline const std::string& CostProviderSummary::_internal_total_cost_variation() const {
  return total_cost_variation_.Get();
}
inline void CostProviderSummary::_internal_set_total_cost_variation(const std::string& value) {
  
  total_cost_variation_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void CostProviderSummary::set_total_cost_variation(std::string&& value) {
  
  total_cost_variation_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:kentik.cost.v202308.CostProviderSummary.total_cost_variation)
}
inline void CostProviderSummary::set_total_cost_variation(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  total_cost_variation_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:kentik.cost.v202308.CostProviderSummary.total_cost_variation)
}
inline void CostProviderSummary::set_total_cost_variation(const char* value,
    size_t size) {
  
  total_cost_variation_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:kentik.cost.v202308.CostProviderSummary.total_cost_variation)
}
inline std::string* CostProviderSummary::_internal_mutable_total_cost_variation() {
  
  return total_cost_variation_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* CostProviderSummary::release_total_cost_variation() {
  // @@protoc_insertion_point(field_release:kentik.cost.v202308.CostProviderSummary.total_cost_variation)
  return total_cost_variation_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CostProviderSummary::set_allocated_total_cost_variation(std::string* total_cost_variation) {
  if (total_cost_variation != nullptr) {
    
  } else {
    
  }
  total_cost_variation_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), total_cost_variation,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:kentik.cost.v202308.CostProviderSummary.total_cost_variation)
}
inline std::string* CostProviderSummary::unsafe_arena_release_total_cost_variation() {
  // @@protoc_insertion_point(field_unsafe_arena_release:kentik.cost.v202308.CostProviderSummary.total_cost_variation)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return total_cost_variation_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void CostProviderSummary::unsafe_arena_set_allocated_total_cost_variation(
    std::string* total_cost_variation) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (total_cost_variation != nullptr) {
    
  } else {
    
  }
  total_cost_variation_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      total_cost_variation, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.cost.v202308.CostProviderSummary.total_cost_variation)
}

// float total_cost_group_additional_cost = 5[json_name = "totalCostGroupAdditionalCost", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void CostProviderSummary::clear_total_cost_group_additional_cost() {
  total_cost_group_additional_cost_ = 0;
}
inline float CostProviderSummary::_internal_total_cost_group_additional_cost() const {
  return total_cost_group_additional_cost_;
}
inline float CostProviderSummary::total_cost_group_additional_cost() const {
  // @@protoc_insertion_point(field_get:kentik.cost.v202308.CostProviderSummary.total_cost_group_additional_cost)
  return _internal_total_cost_group_additional_cost();
}
inline void CostProviderSummary::_internal_set_total_cost_group_additional_cost(float value) {
  
  total_cost_group_additional_cost_ = value;
}
inline void CostProviderSummary::set_total_cost_group_additional_cost(float value) {
  _internal_set_total_cost_group_additional_cost(value);
  // @@protoc_insertion_point(field_set:kentik.cost.v202308.CostProviderSummary.total_cost_group_additional_cost)
}

// float total_cost_group_additional_interface_cost = 6[json_name = "totalCostGroupAdditionalInterfaceCost", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void CostProviderSummary::clear_total_cost_group_additional_interface_cost() {
  total_cost_group_additional_interface_cost_ = 0;
}
inline float CostProviderSummary::_internal_total_cost_group_additional_interface_cost() const {
  return total_cost_group_additional_interface_cost_;
}
inline float CostProviderSummary::total_cost_group_additional_interface_cost() const {
  // @@protoc_insertion_point(field_get:kentik.cost.v202308.CostProviderSummary.total_cost_group_additional_interface_cost)
  return _internal_total_cost_group_additional_interface_cost();
}
inline void CostProviderSummary::_internal_set_total_cost_group_additional_interface_cost(float value) {
  
  total_cost_group_additional_interface_cost_ = value;
}
inline void CostProviderSummary::set_total_cost_group_additional_interface_cost(float value) {
  _internal_set_total_cost_group_additional_interface_cost(value);
  // @@protoc_insertion_point(field_set:kentik.cost.v202308.CostProviderSummary.total_cost_group_additional_interface_cost)
}

// string currency = 7[json_name = "currency", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void CostProviderSummary::clear_currency() {
  currency_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& CostProviderSummary::currency() const {
  // @@protoc_insertion_point(field_get:kentik.cost.v202308.CostProviderSummary.currency)
  return _internal_currency();
}
inline void CostProviderSummary::set_currency(const std::string& value) {
  _internal_set_currency(value);
  // @@protoc_insertion_point(field_set:kentik.cost.v202308.CostProviderSummary.currency)
}
inline std::string* CostProviderSummary::mutable_currency() {
  // @@protoc_insertion_point(field_mutable:kentik.cost.v202308.CostProviderSummary.currency)
  return _internal_mutable_currency();
}
inline const std::string& CostProviderSummary::_internal_currency() const {
  return currency_.Get();
}
inline void CostProviderSummary::_internal_set_currency(const std::string& value) {
  
  currency_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void CostProviderSummary::set_currency(std::string&& value) {
  
  currency_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:kentik.cost.v202308.CostProviderSummary.currency)
}
inline void CostProviderSummary::set_currency(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  currency_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:kentik.cost.v202308.CostProviderSummary.currency)
}
inline void CostProviderSummary::set_currency(const char* value,
    size_t size) {
  
  currency_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:kentik.cost.v202308.CostProviderSummary.currency)
}
inline std::string* CostProviderSummary::_internal_mutable_currency() {
  
  return currency_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* CostProviderSummary::release_currency() {
  // @@protoc_insertion_point(field_release:kentik.cost.v202308.CostProviderSummary.currency)
  return currency_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CostProviderSummary::set_allocated_currency(std::string* currency) {
  if (currency != nullptr) {
    
  } else {
    
  }
  currency_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), currency,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:kentik.cost.v202308.CostProviderSummary.currency)
}
inline std::string* CostProviderSummary::unsafe_arena_release_currency() {
  // @@protoc_insertion_point(field_unsafe_arena_release:kentik.cost.v202308.CostProviderSummary.currency)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return currency_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void CostProviderSummary::unsafe_arena_set_allocated_currency(
    std::string* currency) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (currency != nullptr) {
    
  } else {
    
  }
  currency_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      currency, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.cost.v202308.CostProviderSummary.currency)
}

// float cost_per_mbps = 8[json_name = "costPerMbps", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void CostProviderSummary::clear_cost_per_mbps() {
  cost_per_mbps_ = 0;
}
inline float CostProviderSummary::_internal_cost_per_mbps() const {
  return cost_per_mbps_;
}
inline float CostProviderSummary::cost_per_mbps() const {
  // @@protoc_insertion_point(field_get:kentik.cost.v202308.CostProviderSummary.cost_per_mbps)
  return _internal_cost_per_mbps();
}
inline void CostProviderSummary::_internal_set_cost_per_mbps(float value) {
  
  cost_per_mbps_ = value;
}
inline void CostProviderSummary::set_cost_per_mbps(float value) {
  _internal_set_cost_per_mbps(value);
  // @@protoc_insertion_point(field_set:kentik.cost.v202308.CostProviderSummary.cost_per_mbps)
}

// string cost_per_mbps_variation = 9[json_name = "costPerMbpsVariation", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void CostProviderSummary::clear_cost_per_mbps_variation() {
  cost_per_mbps_variation_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& CostProviderSummary::cost_per_mbps_variation() const {
  // @@protoc_insertion_point(field_get:kentik.cost.v202308.CostProviderSummary.cost_per_mbps_variation)
  return _internal_cost_per_mbps_variation();
}
inline void CostProviderSummary::set_cost_per_mbps_variation(const std::string& value) {
  _internal_set_cost_per_mbps_variation(value);
  // @@protoc_insertion_point(field_set:kentik.cost.v202308.CostProviderSummary.cost_per_mbps_variation)
}
inline std::string* CostProviderSummary::mutable_cost_per_mbps_variation() {
  // @@protoc_insertion_point(field_mutable:kentik.cost.v202308.CostProviderSummary.cost_per_mbps_variation)
  return _internal_mutable_cost_per_mbps_variation();
}
inline const std::string& CostProviderSummary::_internal_cost_per_mbps_variation() const {
  return cost_per_mbps_variation_.Get();
}
inline void CostProviderSummary::_internal_set_cost_per_mbps_variation(const std::string& value) {
  
  cost_per_mbps_variation_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void CostProviderSummary::set_cost_per_mbps_variation(std::string&& value) {
  
  cost_per_mbps_variation_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:kentik.cost.v202308.CostProviderSummary.cost_per_mbps_variation)
}
inline void CostProviderSummary::set_cost_per_mbps_variation(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  cost_per_mbps_variation_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:kentik.cost.v202308.CostProviderSummary.cost_per_mbps_variation)
}
inline void CostProviderSummary::set_cost_per_mbps_variation(const char* value,
    size_t size) {
  
  cost_per_mbps_variation_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:kentik.cost.v202308.CostProviderSummary.cost_per_mbps_variation)
}
inline std::string* CostProviderSummary::_internal_mutable_cost_per_mbps_variation() {
  
  return cost_per_mbps_variation_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* CostProviderSummary::release_cost_per_mbps_variation() {
  // @@protoc_insertion_point(field_release:kentik.cost.v202308.CostProviderSummary.cost_per_mbps_variation)
  return cost_per_mbps_variation_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CostProviderSummary::set_allocated_cost_per_mbps_variation(std::string* cost_per_mbps_variation) {
  if (cost_per_mbps_variation != nullptr) {
    
  } else {
    
  }
  cost_per_mbps_variation_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), cost_per_mbps_variation,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:kentik.cost.v202308.CostProviderSummary.cost_per_mbps_variation)
}
inline std::string* CostProviderSummary::unsafe_arena_release_cost_per_mbps_variation() {
  // @@protoc_insertion_point(field_unsafe_arena_release:kentik.cost.v202308.CostProviderSummary.cost_per_mbps_variation)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return cost_per_mbps_variation_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void CostProviderSummary::unsafe_arena_set_allocated_cost_per_mbps_variation(
    std::string* cost_per_mbps_variation) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (cost_per_mbps_variation != nullptr) {
    
  } else {
    
  }
  cost_per_mbps_variation_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      cost_per_mbps_variation, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.cost.v202308.CostProviderSummary.cost_per_mbps_variation)
}

// string provider_name = 10[json_name = "providerName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void CostProviderSummary::clear_provider_name() {
  provider_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& CostProviderSummary::provider_name() const {
  // @@protoc_insertion_point(field_get:kentik.cost.v202308.CostProviderSummary.provider_name)
  return _internal_provider_name();
}
inline void CostProviderSummary::set_provider_name(const std::string& value) {
  _internal_set_provider_name(value);
  // @@protoc_insertion_point(field_set:kentik.cost.v202308.CostProviderSummary.provider_name)
}
inline std::string* CostProviderSummary::mutable_provider_name() {
  // @@protoc_insertion_point(field_mutable:kentik.cost.v202308.CostProviderSummary.provider_name)
  return _internal_mutable_provider_name();
}
inline const std::string& CostProviderSummary::_internal_provider_name() const {
  return provider_name_.Get();
}
inline void CostProviderSummary::_internal_set_provider_name(const std::string& value) {
  
  provider_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void CostProviderSummary::set_provider_name(std::string&& value) {
  
  provider_name_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:kentik.cost.v202308.CostProviderSummary.provider_name)
}
inline void CostProviderSummary::set_provider_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  provider_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:kentik.cost.v202308.CostProviderSummary.provider_name)
}
inline void CostProviderSummary::set_provider_name(const char* value,
    size_t size) {
  
  provider_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:kentik.cost.v202308.CostProviderSummary.provider_name)
}
inline std::string* CostProviderSummary::_internal_mutable_provider_name() {
  
  return provider_name_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* CostProviderSummary::release_provider_name() {
  // @@protoc_insertion_point(field_release:kentik.cost.v202308.CostProviderSummary.provider_name)
  return provider_name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CostProviderSummary::set_allocated_provider_name(std::string* provider_name) {
  if (provider_name != nullptr) {
    
  } else {
    
  }
  provider_name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), provider_name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:kentik.cost.v202308.CostProviderSummary.provider_name)
}
inline std::string* CostProviderSummary::unsafe_arena_release_provider_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:kentik.cost.v202308.CostProviderSummary.provider_name)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return provider_name_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void CostProviderSummary::unsafe_arena_set_allocated_provider_name(
    std::string* provider_name) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (provider_name != nullptr) {
    
  } else {
    
  }
  provider_name_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      provider_name, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.cost.v202308.CostProviderSummary.provider_name)
}

// string cost_group_name = 11[json_name = "costGroupName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void CostProviderSummary::clear_cost_group_name() {
  cost_group_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& CostProviderSummary::cost_group_name() const {
  // @@protoc_insertion_point(field_get:kentik.cost.v202308.CostProviderSummary.cost_group_name)
  return _internal_cost_group_name();
}
inline void CostProviderSummary::set_cost_group_name(const std::string& value) {
  _internal_set_cost_group_name(value);
  // @@protoc_insertion_point(field_set:kentik.cost.v202308.CostProviderSummary.cost_group_name)
}
inline std::string* CostProviderSummary::mutable_cost_group_name() {
  // @@protoc_insertion_point(field_mutable:kentik.cost.v202308.CostProviderSummary.cost_group_name)
  return _internal_mutable_cost_group_name();
}
inline const std::string& CostProviderSummary::_internal_cost_group_name() const {
  return cost_group_name_.Get();
}
inline void CostProviderSummary::_internal_set_cost_group_name(const std::string& value) {
  
  cost_group_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void CostProviderSummary::set_cost_group_name(std::string&& value) {
  
  cost_group_name_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:kentik.cost.v202308.CostProviderSummary.cost_group_name)
}
inline void CostProviderSummary::set_cost_group_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  cost_group_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:kentik.cost.v202308.CostProviderSummary.cost_group_name)
}
inline void CostProviderSummary::set_cost_group_name(const char* value,
    size_t size) {
  
  cost_group_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:kentik.cost.v202308.CostProviderSummary.cost_group_name)
}
inline std::string* CostProviderSummary::_internal_mutable_cost_group_name() {
  
  return cost_group_name_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* CostProviderSummary::release_cost_group_name() {
  // @@protoc_insertion_point(field_release:kentik.cost.v202308.CostProviderSummary.cost_group_name)
  return cost_group_name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CostProviderSummary::set_allocated_cost_group_name(std::string* cost_group_name) {
  if (cost_group_name != nullptr) {
    
  } else {
    
  }
  cost_group_name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), cost_group_name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:kentik.cost.v202308.CostProviderSummary.cost_group_name)
}
inline std::string* CostProviderSummary::unsafe_arena_release_cost_group_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:kentik.cost.v202308.CostProviderSummary.cost_group_name)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return cost_group_name_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void CostProviderSummary::unsafe_arena_set_allocated_cost_group_name(
    std::string* cost_group_name) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (cost_group_name != nullptr) {
    
  } else {
    
  }
  cost_group_name_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      cost_group_name, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.cost.v202308.CostProviderSummary.cost_group_name)
}

// string cost_group_conn_type = 12[json_name = "costGroupConnType", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void CostProviderSummary::clear_cost_group_conn_type() {
  cost_group_conn_type_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& CostProviderSummary::cost_group_conn_type() const {
  // @@protoc_insertion_point(field_get:kentik.cost.v202308.CostProviderSummary.cost_group_conn_type)
  return _internal_cost_group_conn_type();
}
inline void CostProviderSummary::set_cost_group_conn_type(const std::string& value) {
  _internal_set_cost_group_conn_type(value);
  // @@protoc_insertion_point(field_set:kentik.cost.v202308.CostProviderSummary.cost_group_conn_type)
}
inline std::string* CostProviderSummary::mutable_cost_group_conn_type() {
  // @@protoc_insertion_point(field_mutable:kentik.cost.v202308.CostProviderSummary.cost_group_conn_type)
  return _internal_mutable_cost_group_conn_type();
}
inline const std::string& CostProviderSummary::_internal_cost_group_conn_type() const {
  return cost_group_conn_type_.Get();
}
inline void CostProviderSummary::_internal_set_cost_group_conn_type(const std::string& value) {
  
  cost_group_conn_type_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void CostProviderSummary::set_cost_group_conn_type(std::string&& value) {
  
  cost_group_conn_type_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:kentik.cost.v202308.CostProviderSummary.cost_group_conn_type)
}
inline void CostProviderSummary::set_cost_group_conn_type(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  cost_group_conn_type_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:kentik.cost.v202308.CostProviderSummary.cost_group_conn_type)
}
inline void CostProviderSummary::set_cost_group_conn_type(const char* value,
    size_t size) {
  
  cost_group_conn_type_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:kentik.cost.v202308.CostProviderSummary.cost_group_conn_type)
}
inline std::string* CostProviderSummary::_internal_mutable_cost_group_conn_type() {
  
  return cost_group_conn_type_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* CostProviderSummary::release_cost_group_conn_type() {
  // @@protoc_insertion_point(field_release:kentik.cost.v202308.CostProviderSummary.cost_group_conn_type)
  return cost_group_conn_type_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CostProviderSummary::set_allocated_cost_group_conn_type(std::string* cost_group_conn_type) {
  if (cost_group_conn_type != nullptr) {
    
  } else {
    
  }
  cost_group_conn_type_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), cost_group_conn_type,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:kentik.cost.v202308.CostProviderSummary.cost_group_conn_type)
}
inline std::string* CostProviderSummary::unsafe_arena_release_cost_group_conn_type() {
  // @@protoc_insertion_point(field_unsafe_arena_release:kentik.cost.v202308.CostProviderSummary.cost_group_conn_type)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return cost_group_conn_type_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void CostProviderSummary::unsafe_arena_set_allocated_cost_group_conn_type(
    std::string* cost_group_conn_type) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (cost_group_conn_type != nullptr) {
    
  } else {
    
  }
  cost_group_conn_type_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      cost_group_conn_type, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.cost.v202308.CostProviderSummary.cost_group_conn_type)
}

// string site_name = 13[json_name = "siteName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void CostProviderSummary::clear_site_name() {
  site_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& CostProviderSummary::site_name() const {
  // @@protoc_insertion_point(field_get:kentik.cost.v202308.CostProviderSummary.site_name)
  return _internal_site_name();
}
inline void CostProviderSummary::set_site_name(const std::string& value) {
  _internal_set_site_name(value);
  // @@protoc_insertion_point(field_set:kentik.cost.v202308.CostProviderSummary.site_name)
}
inline std::string* CostProviderSummary::mutable_site_name() {
  // @@protoc_insertion_point(field_mutable:kentik.cost.v202308.CostProviderSummary.site_name)
  return _internal_mutable_site_name();
}
inline const std::string& CostProviderSummary::_internal_site_name() const {
  return site_name_.Get();
}
inline void CostProviderSummary::_internal_set_site_name(const std::string& value) {
  
  site_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void CostProviderSummary::set_site_name(std::string&& value) {
  
  site_name_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:kentik.cost.v202308.CostProviderSummary.site_name)
}
inline void CostProviderSummary::set_site_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  site_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:kentik.cost.v202308.CostProviderSummary.site_name)
}
inline void CostProviderSummary::set_site_name(const char* value,
    size_t size) {
  
  site_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:kentik.cost.v202308.CostProviderSummary.site_name)
}
inline std::string* CostProviderSummary::_internal_mutable_site_name() {
  
  return site_name_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* CostProviderSummary::release_site_name() {
  // @@protoc_insertion_point(field_release:kentik.cost.v202308.CostProviderSummary.site_name)
  return site_name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CostProviderSummary::set_allocated_site_name(std::string* site_name) {
  if (site_name != nullptr) {
    
  } else {
    
  }
  site_name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), site_name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:kentik.cost.v202308.CostProviderSummary.site_name)
}
inline std::string* CostProviderSummary::unsafe_arena_release_site_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:kentik.cost.v202308.CostProviderSummary.site_name)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return site_name_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void CostProviderSummary::unsafe_arena_set_allocated_site_name(
    std::string* site_name) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (site_name != nullptr) {
    
  } else {
    
  }
  site_name_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      site_name, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.cost.v202308.CostProviderSummary.site_name)
}

// string site_market = 14[json_name = "siteMarket", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void CostProviderSummary::clear_site_market() {
  site_market_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& CostProviderSummary::site_market() const {
  // @@protoc_insertion_point(field_get:kentik.cost.v202308.CostProviderSummary.site_market)
  return _internal_site_market();
}
inline void CostProviderSummary::set_site_market(const std::string& value) {
  _internal_set_site_market(value);
  // @@protoc_insertion_point(field_set:kentik.cost.v202308.CostProviderSummary.site_market)
}
inline std::string* CostProviderSummary::mutable_site_market() {
  // @@protoc_insertion_point(field_mutable:kentik.cost.v202308.CostProviderSummary.site_market)
  return _internal_mutable_site_market();
}
inline const std::string& CostProviderSummary::_internal_site_market() const {
  return site_market_.Get();
}
inline void CostProviderSummary::_internal_set_site_market(const std::string& value) {
  
  site_market_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void CostProviderSummary::set_site_market(std::string&& value) {
  
  site_market_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:kentik.cost.v202308.CostProviderSummary.site_market)
}
inline void CostProviderSummary::set_site_market(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  site_market_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:kentik.cost.v202308.CostProviderSummary.site_market)
}
inline void CostProviderSummary::set_site_market(const char* value,
    size_t size) {
  
  site_market_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:kentik.cost.v202308.CostProviderSummary.site_market)
}
inline std::string* CostProviderSummary::_internal_mutable_site_market() {
  
  return site_market_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* CostProviderSummary::release_site_market() {
  // @@protoc_insertion_point(field_release:kentik.cost.v202308.CostProviderSummary.site_market)
  return site_market_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CostProviderSummary::set_allocated_site_market(std::string* site_market) {
  if (site_market != nullptr) {
    
  } else {
    
  }
  site_market_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), site_market,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:kentik.cost.v202308.CostProviderSummary.site_market)
}
inline std::string* CostProviderSummary::unsafe_arena_release_site_market() {
  // @@protoc_insertion_point(field_unsafe_arena_release:kentik.cost.v202308.CostProviderSummary.site_market)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return site_market_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void CostProviderSummary::unsafe_arena_set_allocated_site_market(
    std::string* site_market) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (site_market != nullptr) {
    
  } else {
    
  }
  site_market_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      site_market, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.cost.v202308.CostProviderSummary.site_market)
}

// float ingress_traffic_mbps = 15[json_name = "ingressTrafficMbps", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void CostProviderSummary::clear_ingress_traffic_mbps() {
  ingress_traffic_mbps_ = 0;
}
inline float CostProviderSummary::_internal_ingress_traffic_mbps() const {
  return ingress_traffic_mbps_;
}
inline float CostProviderSummary::ingress_traffic_mbps() const {
  // @@protoc_insertion_point(field_get:kentik.cost.v202308.CostProviderSummary.ingress_traffic_mbps)
  return _internal_ingress_traffic_mbps();
}
inline void CostProviderSummary::_internal_set_ingress_traffic_mbps(float value) {
  
  ingress_traffic_mbps_ = value;
}
inline void CostProviderSummary::set_ingress_traffic_mbps(float value) {
  _internal_set_ingress_traffic_mbps(value);
  // @@protoc_insertion_point(field_set:kentik.cost.v202308.CostProviderSummary.ingress_traffic_mbps)
}

// string ingress_traffic_variation = 16[json_name = "ingressTrafficVariation", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void CostProviderSummary::clear_ingress_traffic_variation() {
  ingress_traffic_variation_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& CostProviderSummary::ingress_traffic_variation() const {
  // @@protoc_insertion_point(field_get:kentik.cost.v202308.CostProviderSummary.ingress_traffic_variation)
  return _internal_ingress_traffic_variation();
}
inline void CostProviderSummary::set_ingress_traffic_variation(const std::string& value) {
  _internal_set_ingress_traffic_variation(value);
  // @@protoc_insertion_point(field_set:kentik.cost.v202308.CostProviderSummary.ingress_traffic_variation)
}
inline std::string* CostProviderSummary::mutable_ingress_traffic_variation() {
  // @@protoc_insertion_point(field_mutable:kentik.cost.v202308.CostProviderSummary.ingress_traffic_variation)
  return _internal_mutable_ingress_traffic_variation();
}
inline const std::string& CostProviderSummary::_internal_ingress_traffic_variation() const {
  return ingress_traffic_variation_.Get();
}
inline void CostProviderSummary::_internal_set_ingress_traffic_variation(const std::string& value) {
  
  ingress_traffic_variation_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void CostProviderSummary::set_ingress_traffic_variation(std::string&& value) {
  
  ingress_traffic_variation_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:kentik.cost.v202308.CostProviderSummary.ingress_traffic_variation)
}
inline void CostProviderSummary::set_ingress_traffic_variation(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  ingress_traffic_variation_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:kentik.cost.v202308.CostProviderSummary.ingress_traffic_variation)
}
inline void CostProviderSummary::set_ingress_traffic_variation(const char* value,
    size_t size) {
  
  ingress_traffic_variation_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:kentik.cost.v202308.CostProviderSummary.ingress_traffic_variation)
}
inline std::string* CostProviderSummary::_internal_mutable_ingress_traffic_variation() {
  
  return ingress_traffic_variation_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* CostProviderSummary::release_ingress_traffic_variation() {
  // @@protoc_insertion_point(field_release:kentik.cost.v202308.CostProviderSummary.ingress_traffic_variation)
  return ingress_traffic_variation_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CostProviderSummary::set_allocated_ingress_traffic_variation(std::string* ingress_traffic_variation) {
  if (ingress_traffic_variation != nullptr) {
    
  } else {
    
  }
  ingress_traffic_variation_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ingress_traffic_variation,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:kentik.cost.v202308.CostProviderSummary.ingress_traffic_variation)
}
inline std::string* CostProviderSummary::unsafe_arena_release_ingress_traffic_variation() {
  // @@protoc_insertion_point(field_unsafe_arena_release:kentik.cost.v202308.CostProviderSummary.ingress_traffic_variation)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return ingress_traffic_variation_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void CostProviderSummary::unsafe_arena_set_allocated_ingress_traffic_variation(
    std::string* ingress_traffic_variation) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (ingress_traffic_variation != nullptr) {
    
  } else {
    
  }
  ingress_traffic_variation_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ingress_traffic_variation, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.cost.v202308.CostProviderSummary.ingress_traffic_variation)
}

// float egress_traffic_mbps = 17[json_name = "egressTrafficMbps", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void CostProviderSummary::clear_egress_traffic_mbps() {
  egress_traffic_mbps_ = 0;
}
inline float CostProviderSummary::_internal_egress_traffic_mbps() const {
  return egress_traffic_mbps_;
}
inline float CostProviderSummary::egress_traffic_mbps() const {
  // @@protoc_insertion_point(field_get:kentik.cost.v202308.CostProviderSummary.egress_traffic_mbps)
  return _internal_egress_traffic_mbps();
}
inline void CostProviderSummary::_internal_set_egress_traffic_mbps(float value) {
  
  egress_traffic_mbps_ = value;
}
inline void CostProviderSummary::set_egress_traffic_mbps(float value) {
  _internal_set_egress_traffic_mbps(value);
  // @@protoc_insertion_point(field_set:kentik.cost.v202308.CostProviderSummary.egress_traffic_mbps)
}

// string egress_traffic_variation = 18[json_name = "egressTrafficVariation", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void CostProviderSummary::clear_egress_traffic_variation() {
  egress_traffic_variation_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& CostProviderSummary::egress_traffic_variation() const {
  // @@protoc_insertion_point(field_get:kentik.cost.v202308.CostProviderSummary.egress_traffic_variation)
  return _internal_egress_traffic_variation();
}
inline void CostProviderSummary::set_egress_traffic_variation(const std::string& value) {
  _internal_set_egress_traffic_variation(value);
  // @@protoc_insertion_point(field_set:kentik.cost.v202308.CostProviderSummary.egress_traffic_variation)
}
inline std::string* CostProviderSummary::mutable_egress_traffic_variation() {
  // @@protoc_insertion_point(field_mutable:kentik.cost.v202308.CostProviderSummary.egress_traffic_variation)
  return _internal_mutable_egress_traffic_variation();
}
inline const std::string& CostProviderSummary::_internal_egress_traffic_variation() const {
  return egress_traffic_variation_.Get();
}
inline void CostProviderSummary::_internal_set_egress_traffic_variation(const std::string& value) {
  
  egress_traffic_variation_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void CostProviderSummary::set_egress_traffic_variation(std::string&& value) {
  
  egress_traffic_variation_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:kentik.cost.v202308.CostProviderSummary.egress_traffic_variation)
}
inline void CostProviderSummary::set_egress_traffic_variation(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  egress_traffic_variation_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:kentik.cost.v202308.CostProviderSummary.egress_traffic_variation)
}
inline void CostProviderSummary::set_egress_traffic_variation(const char* value,
    size_t size) {
  
  egress_traffic_variation_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:kentik.cost.v202308.CostProviderSummary.egress_traffic_variation)
}
inline std::string* CostProviderSummary::_internal_mutable_egress_traffic_variation() {
  
  return egress_traffic_variation_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* CostProviderSummary::release_egress_traffic_variation() {
  // @@protoc_insertion_point(field_release:kentik.cost.v202308.CostProviderSummary.egress_traffic_variation)
  return egress_traffic_variation_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CostProviderSummary::set_allocated_egress_traffic_variation(std::string* egress_traffic_variation) {
  if (egress_traffic_variation != nullptr) {
    
  } else {
    
  }
  egress_traffic_variation_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), egress_traffic_variation,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:kentik.cost.v202308.CostProviderSummary.egress_traffic_variation)
}
inline std::string* CostProviderSummary::unsafe_arena_release_egress_traffic_variation() {
  // @@protoc_insertion_point(field_unsafe_arena_release:kentik.cost.v202308.CostProviderSummary.egress_traffic_variation)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return egress_traffic_variation_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void CostProviderSummary::unsafe_arena_set_allocated_egress_traffic_variation(
    std::string* egress_traffic_variation) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (egress_traffic_variation != nullptr) {
    
  } else {
    
  }
  egress_traffic_variation_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      egress_traffic_variation, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.cost.v202308.CostProviderSummary.egress_traffic_variation)
}

// -------------------------------------------------------------------

// CostProviderConcise

// string id = 1[json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void CostProviderConcise::clear_id() {
  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& CostProviderConcise::id() const {
  // @@protoc_insertion_point(field_get:kentik.cost.v202308.CostProviderConcise.id)
  return _internal_id();
}
inline void CostProviderConcise::set_id(const std::string& value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:kentik.cost.v202308.CostProviderConcise.id)
}
inline std::string* CostProviderConcise::mutable_id() {
  // @@protoc_insertion_point(field_mutable:kentik.cost.v202308.CostProviderConcise.id)
  return _internal_mutable_id();
}
inline const std::string& CostProviderConcise::_internal_id() const {
  return id_.Get();
}
inline void CostProviderConcise::_internal_set_id(const std::string& value) {
  
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void CostProviderConcise::set_id(std::string&& value) {
  
  id_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:kentik.cost.v202308.CostProviderConcise.id)
}
inline void CostProviderConcise::set_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:kentik.cost.v202308.CostProviderConcise.id)
}
inline void CostProviderConcise::set_id(const char* value,
    size_t size) {
  
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:kentik.cost.v202308.CostProviderConcise.id)
}
inline std::string* CostProviderConcise::_internal_mutable_id() {
  
  return id_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* CostProviderConcise::release_id() {
  // @@protoc_insertion_point(field_release:kentik.cost.v202308.CostProviderConcise.id)
  return id_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CostProviderConcise::set_allocated_id(std::string* id) {
  if (id != nullptr) {
    
  } else {
    
  }
  id_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), id,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:kentik.cost.v202308.CostProviderConcise.id)
}
inline std::string* CostProviderConcise::unsafe_arena_release_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:kentik.cost.v202308.CostProviderConcise.id)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return id_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void CostProviderConcise::unsafe_arena_set_allocated_id(
    std::string* id) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (id != nullptr) {
    
  } else {
    
  }
  id_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      id, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.cost.v202308.CostProviderConcise.id)
}

// string name = 2[json_name = "name", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void CostProviderConcise::clear_name() {
  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& CostProviderConcise::name() const {
  // @@protoc_insertion_point(field_get:kentik.cost.v202308.CostProviderConcise.name)
  return _internal_name();
}
inline void CostProviderConcise::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:kentik.cost.v202308.CostProviderConcise.name)
}
inline std::string* CostProviderConcise::mutable_name() {
  // @@protoc_insertion_point(field_mutable:kentik.cost.v202308.CostProviderConcise.name)
  return _internal_mutable_name();
}
inline const std::string& CostProviderConcise::_internal_name() const {
  return name_.Get();
}
inline void CostProviderConcise::_internal_set_name(const std::string& value) {
  
  name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void CostProviderConcise::set_name(std::string&& value) {
  
  name_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:kentik.cost.v202308.CostProviderConcise.name)
}
inline void CostProviderConcise::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:kentik.cost.v202308.CostProviderConcise.name)
}
inline void CostProviderConcise::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:kentik.cost.v202308.CostProviderConcise.name)
}
inline std::string* CostProviderConcise::_internal_mutable_name() {
  
  return name_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* CostProviderConcise::release_name() {
  // @@protoc_insertion_point(field_release:kentik.cost.v202308.CostProviderConcise.name)
  return name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CostProviderConcise::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:kentik.cost.v202308.CostProviderConcise.name)
}
inline std::string* CostProviderConcise::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:kentik.cost.v202308.CostProviderConcise.name)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return name_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void CostProviderConcise::unsafe_arena_set_allocated_name(
    std::string* name) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (name != nullptr) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      name, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.cost.v202308.CostProviderConcise.name)
}

// -------------------------------------------------------------------

// ListCostProvidersRequest

// -------------------------------------------------------------------

// ListCostProvidersResponse

// repeated .kentik.cost.v202308.CostProviderConcise providers = 1[json_name = "providers", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int ListCostProvidersResponse::_internal_providers_size() const {
  return providers_.size();
}
inline int ListCostProvidersResponse::providers_size() const {
  return _internal_providers_size();
}
inline void ListCostProvidersResponse::clear_providers() {
  providers_.Clear();
}
inline ::kentik::cost::v202308::CostProviderConcise* ListCostProvidersResponse::mutable_providers(int index) {
  // @@protoc_insertion_point(field_mutable:kentik.cost.v202308.ListCostProvidersResponse.providers)
  return providers_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kentik::cost::v202308::CostProviderConcise >*
ListCostProvidersResponse::mutable_providers() {
  // @@protoc_insertion_point(field_mutable_list:kentik.cost.v202308.ListCostProvidersResponse.providers)
  return &providers_;
}
inline const ::kentik::cost::v202308::CostProviderConcise& ListCostProvidersResponse::_internal_providers(int index) const {
  return providers_.Get(index);
}
inline const ::kentik::cost::v202308::CostProviderConcise& ListCostProvidersResponse::providers(int index) const {
  // @@protoc_insertion_point(field_get:kentik.cost.v202308.ListCostProvidersResponse.providers)
  return _internal_providers(index);
}
inline ::kentik::cost::v202308::CostProviderConcise* ListCostProvidersResponse::_internal_add_providers() {
  return providers_.Add();
}
inline ::kentik::cost::v202308::CostProviderConcise* ListCostProvidersResponse::add_providers() {
  // @@protoc_insertion_point(field_add:kentik.cost.v202308.ListCostProvidersResponse.providers)
  return _internal_add_providers();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kentik::cost::v202308::CostProviderConcise >&
ListCostProvidersResponse::providers() const {
  // @@protoc_insertion_point(field_list:kentik.cost.v202308.ListCostProvidersResponse.providers)
  return providers_;
}

// uint32 invalid_count = 2[json_name = "invalidCount", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void ListCostProvidersResponse::clear_invalid_count() {
  invalid_count_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ListCostProvidersResponse::_internal_invalid_count() const {
  return invalid_count_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ListCostProvidersResponse::invalid_count() const {
  // @@protoc_insertion_point(field_get:kentik.cost.v202308.ListCostProvidersResponse.invalid_count)
  return _internal_invalid_count();
}
inline void ListCostProvidersResponse::_internal_set_invalid_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  invalid_count_ = value;
}
inline void ListCostProvidersResponse::set_invalid_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_invalid_count(value);
  // @@protoc_insertion_point(field_set:kentik.cost.v202308.ListCostProvidersResponse.invalid_count)
}

// -------------------------------------------------------------------

// ListCostProviderSummariesRequest

// string date = 1[json_name = "date", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void ListCostProviderSummariesRequest::clear_date() {
  date_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& ListCostProviderSummariesRequest::date() const {
  // @@protoc_insertion_point(field_get:kentik.cost.v202308.ListCostProviderSummariesRequest.date)
  return _internal_date();
}
inline void ListCostProviderSummariesRequest::set_date(const std::string& value) {
  _internal_set_date(value);
  // @@protoc_insertion_point(field_set:kentik.cost.v202308.ListCostProviderSummariesRequest.date)
}
inline std::string* ListCostProviderSummariesRequest::mutable_date() {
  // @@protoc_insertion_point(field_mutable:kentik.cost.v202308.ListCostProviderSummariesRequest.date)
  return _internal_mutable_date();
}
inline const std::string& ListCostProviderSummariesRequest::_internal_date() const {
  return date_.Get();
}
inline void ListCostProviderSummariesRequest::_internal_set_date(const std::string& value) {
  
  date_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void ListCostProviderSummariesRequest::set_date(std::string&& value) {
  
  date_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:kentik.cost.v202308.ListCostProviderSummariesRequest.date)
}
inline void ListCostProviderSummariesRequest::set_date(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  date_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:kentik.cost.v202308.ListCostProviderSummariesRequest.date)
}
inline void ListCostProviderSummariesRequest::set_date(const char* value,
    size_t size) {
  
  date_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:kentik.cost.v202308.ListCostProviderSummariesRequest.date)
}
inline std::string* ListCostProviderSummariesRequest::_internal_mutable_date() {
  
  return date_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* ListCostProviderSummariesRequest::release_date() {
  // @@protoc_insertion_point(field_release:kentik.cost.v202308.ListCostProviderSummariesRequest.date)
  return date_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ListCostProviderSummariesRequest::set_allocated_date(std::string* date) {
  if (date != nullptr) {
    
  } else {
    
  }
  date_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), date,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:kentik.cost.v202308.ListCostProviderSummariesRequest.date)
}
inline std::string* ListCostProviderSummariesRequest::unsafe_arena_release_date() {
  // @@protoc_insertion_point(field_unsafe_arena_release:kentik.cost.v202308.ListCostProviderSummariesRequest.date)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return date_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void ListCostProviderSummariesRequest::unsafe_arena_set_allocated_date(
    std::string* date) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (date != nullptr) {
    
  } else {
    
  }
  date_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      date, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.cost.v202308.ListCostProviderSummariesRequest.date)
}

// -------------------------------------------------------------------

// ListCostProviderSummariesResponse

// repeated .kentik.cost.v202308.CostProviderSummary providers = 1[json_name = "providers", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int ListCostProviderSummariesResponse::_internal_providers_size() const {
  return providers_.size();
}
inline int ListCostProviderSummariesResponse::providers_size() const {
  return _internal_providers_size();
}
inline void ListCostProviderSummariesResponse::clear_providers() {
  providers_.Clear();
}
inline ::kentik::cost::v202308::CostProviderSummary* ListCostProviderSummariesResponse::mutable_providers(int index) {
  // @@protoc_insertion_point(field_mutable:kentik.cost.v202308.ListCostProviderSummariesResponse.providers)
  return providers_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kentik::cost::v202308::CostProviderSummary >*
ListCostProviderSummariesResponse::mutable_providers() {
  // @@protoc_insertion_point(field_mutable_list:kentik.cost.v202308.ListCostProviderSummariesResponse.providers)
  return &providers_;
}
inline const ::kentik::cost::v202308::CostProviderSummary& ListCostProviderSummariesResponse::_internal_providers(int index) const {
  return providers_.Get(index);
}
inline const ::kentik::cost::v202308::CostProviderSummary& ListCostProviderSummariesResponse::providers(int index) const {
  // @@protoc_insertion_point(field_get:kentik.cost.v202308.ListCostProviderSummariesResponse.providers)
  return _internal_providers(index);
}
inline ::kentik::cost::v202308::CostProviderSummary* ListCostProviderSummariesResponse::_internal_add_providers() {
  return providers_.Add();
}
inline ::kentik::cost::v202308::CostProviderSummary* ListCostProviderSummariesResponse::add_providers() {
  // @@protoc_insertion_point(field_add:kentik.cost.v202308.ListCostProviderSummariesResponse.providers)
  return _internal_add_providers();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kentik::cost::v202308::CostProviderSummary >&
ListCostProviderSummariesResponse::providers() const {
  // @@protoc_insertion_point(field_list:kentik.cost.v202308.ListCostProviderSummariesResponse.providers)
  return providers_;
}

// uint32 invalid_count = 2[json_name = "invalidCount", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void ListCostProviderSummariesResponse::clear_invalid_count() {
  invalid_count_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ListCostProviderSummariesResponse::_internal_invalid_count() const {
  return invalid_count_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ListCostProviderSummariesResponse::invalid_count() const {
  // @@protoc_insertion_point(field_get:kentik.cost.v202308.ListCostProviderSummariesResponse.invalid_count)
  return _internal_invalid_count();
}
inline void ListCostProviderSummariesResponse::_internal_set_invalid_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  invalid_count_ = value;
}
inline void ListCostProviderSummariesResponse::set_invalid_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_invalid_count(value);
  // @@protoc_insertion_point(field_set:kentik.cost.v202308.ListCostProviderSummariesResponse.invalid_count)
}

// -------------------------------------------------------------------

// GetCostProviderSummaryRequest

// string id = 1[json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void GetCostProviderSummaryRequest::clear_id() {
  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& GetCostProviderSummaryRequest::id() const {
  // @@protoc_insertion_point(field_get:kentik.cost.v202308.GetCostProviderSummaryRequest.id)
  return _internal_id();
}
inline void GetCostProviderSummaryRequest::set_id(const std::string& value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:kentik.cost.v202308.GetCostProviderSummaryRequest.id)
}
inline std::string* GetCostProviderSummaryRequest::mutable_id() {
  // @@protoc_insertion_point(field_mutable:kentik.cost.v202308.GetCostProviderSummaryRequest.id)
  return _internal_mutable_id();
}
inline const std::string& GetCostProviderSummaryRequest::_internal_id() const {
  return id_.Get();
}
inline void GetCostProviderSummaryRequest::_internal_set_id(const std::string& value) {
  
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void GetCostProviderSummaryRequest::set_id(std::string&& value) {
  
  id_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:kentik.cost.v202308.GetCostProviderSummaryRequest.id)
}
inline void GetCostProviderSummaryRequest::set_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:kentik.cost.v202308.GetCostProviderSummaryRequest.id)
}
inline void GetCostProviderSummaryRequest::set_id(const char* value,
    size_t size) {
  
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:kentik.cost.v202308.GetCostProviderSummaryRequest.id)
}
inline std::string* GetCostProviderSummaryRequest::_internal_mutable_id() {
  
  return id_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* GetCostProviderSummaryRequest::release_id() {
  // @@protoc_insertion_point(field_release:kentik.cost.v202308.GetCostProviderSummaryRequest.id)
  return id_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void GetCostProviderSummaryRequest::set_allocated_id(std::string* id) {
  if (id != nullptr) {
    
  } else {
    
  }
  id_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), id,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:kentik.cost.v202308.GetCostProviderSummaryRequest.id)
}
inline std::string* GetCostProviderSummaryRequest::unsafe_arena_release_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:kentik.cost.v202308.GetCostProviderSummaryRequest.id)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return id_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void GetCostProviderSummaryRequest::unsafe_arena_set_allocated_id(
    std::string* id) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (id != nullptr) {
    
  } else {
    
  }
  id_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      id, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.cost.v202308.GetCostProviderSummaryRequest.id)
}

// string date = 2[json_name = "date", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void GetCostProviderSummaryRequest::clear_date() {
  date_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& GetCostProviderSummaryRequest::date() const {
  // @@protoc_insertion_point(field_get:kentik.cost.v202308.GetCostProviderSummaryRequest.date)
  return _internal_date();
}
inline void GetCostProviderSummaryRequest::set_date(const std::string& value) {
  _internal_set_date(value);
  // @@protoc_insertion_point(field_set:kentik.cost.v202308.GetCostProviderSummaryRequest.date)
}
inline std::string* GetCostProviderSummaryRequest::mutable_date() {
  // @@protoc_insertion_point(field_mutable:kentik.cost.v202308.GetCostProviderSummaryRequest.date)
  return _internal_mutable_date();
}
inline const std::string& GetCostProviderSummaryRequest::_internal_date() const {
  return date_.Get();
}
inline void GetCostProviderSummaryRequest::_internal_set_date(const std::string& value) {
  
  date_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void GetCostProviderSummaryRequest::set_date(std::string&& value) {
  
  date_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:kentik.cost.v202308.GetCostProviderSummaryRequest.date)
}
inline void GetCostProviderSummaryRequest::set_date(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  date_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:kentik.cost.v202308.GetCostProviderSummaryRequest.date)
}
inline void GetCostProviderSummaryRequest::set_date(const char* value,
    size_t size) {
  
  date_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:kentik.cost.v202308.GetCostProviderSummaryRequest.date)
}
inline std::string* GetCostProviderSummaryRequest::_internal_mutable_date() {
  
  return date_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* GetCostProviderSummaryRequest::release_date() {
  // @@protoc_insertion_point(field_release:kentik.cost.v202308.GetCostProviderSummaryRequest.date)
  return date_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void GetCostProviderSummaryRequest::set_allocated_date(std::string* date) {
  if (date != nullptr) {
    
  } else {
    
  }
  date_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), date,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:kentik.cost.v202308.GetCostProviderSummaryRequest.date)
}
inline std::string* GetCostProviderSummaryRequest::unsafe_arena_release_date() {
  // @@protoc_insertion_point(field_unsafe_arena_release:kentik.cost.v202308.GetCostProviderSummaryRequest.date)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return date_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void GetCostProviderSummaryRequest::unsafe_arena_set_allocated_date(
    std::string* date) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (date != nullptr) {
    
  } else {
    
  }
  date_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      date, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.cost.v202308.GetCostProviderSummaryRequest.date)
}

// -------------------------------------------------------------------

// GetCostProviderSummaryResponse

// repeated .kentik.cost.v202308.CostProviderSummary providers = 1[json_name = "providers", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int GetCostProviderSummaryResponse::_internal_providers_size() const {
  return providers_.size();
}
inline int GetCostProviderSummaryResponse::providers_size() const {
  return _internal_providers_size();
}
inline void GetCostProviderSummaryResponse::clear_providers() {
  providers_.Clear();
}
inline ::kentik::cost::v202308::CostProviderSummary* GetCostProviderSummaryResponse::mutable_providers(int index) {
  // @@protoc_insertion_point(field_mutable:kentik.cost.v202308.GetCostProviderSummaryResponse.providers)
  return providers_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kentik::cost::v202308::CostProviderSummary >*
GetCostProviderSummaryResponse::mutable_providers() {
  // @@protoc_insertion_point(field_mutable_list:kentik.cost.v202308.GetCostProviderSummaryResponse.providers)
  return &providers_;
}
inline const ::kentik::cost::v202308::CostProviderSummary& GetCostProviderSummaryResponse::_internal_providers(int index) const {
  return providers_.Get(index);
}
inline const ::kentik::cost::v202308::CostProviderSummary& GetCostProviderSummaryResponse::providers(int index) const {
  // @@protoc_insertion_point(field_get:kentik.cost.v202308.GetCostProviderSummaryResponse.providers)
  return _internal_providers(index);
}
inline ::kentik::cost::v202308::CostProviderSummary* GetCostProviderSummaryResponse::_internal_add_providers() {
  return providers_.Add();
}
inline ::kentik::cost::v202308::CostProviderSummary* GetCostProviderSummaryResponse::add_providers() {
  // @@protoc_insertion_point(field_add:kentik.cost.v202308.GetCostProviderSummaryResponse.providers)
  return _internal_add_providers();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kentik::cost::v202308::CostProviderSummary >&
GetCostProviderSummaryResponse::providers() const {
  // @@protoc_insertion_point(field_list:kentik.cost.v202308.GetCostProviderSummaryResponse.providers)
  return providers_;
}

// uint32 invalid_count = 2[json_name = "invalidCount", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void GetCostProviderSummaryResponse::clear_invalid_count() {
  invalid_count_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GetCostProviderSummaryResponse::_internal_invalid_count() const {
  return invalid_count_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GetCostProviderSummaryResponse::invalid_count() const {
  // @@protoc_insertion_point(field_get:kentik.cost.v202308.GetCostProviderSummaryResponse.invalid_count)
  return _internal_invalid_count();
}
inline void GetCostProviderSummaryResponse::_internal_set_invalid_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  invalid_count_ = value;
}
inline void GetCostProviderSummaryResponse::set_invalid_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_invalid_count(value);
  // @@protoc_insertion_point(field_set:kentik.cost.v202308.GetCostProviderSummaryResponse.invalid_count)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v202308
}  // namespace cost
}  // namespace kentik

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::kentik::cost::v202308::Status> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::kentik::cost::v202308::Status>() {
  return ::kentik::cost::v202308::Status_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_kentik_2fcost_2fv202308_2fcost_2eproto
