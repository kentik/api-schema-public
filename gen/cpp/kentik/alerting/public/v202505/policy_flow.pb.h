// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: kentik/alerting/public/v202505/policy_flow.proto
// Protobuf C++ Version: 5.29.3

#ifndef kentik_2falerting_2fpublic_2fv202505_2fpolicy_5fflow_2eproto_2epb_2eh
#define kentik_2falerting_2fpublic_2fv202505_2fpolicy_5fflow_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "google/protobuf/timestamp.pb.h"
#include "google/protobuf/duration.pb.h"
#include "google/protobuf/struct.pb.h"
#include "google/api/annotations.pb.h"
#include "google/api/client.pb.h"
#include "google/api/field_behavior.pb.h"
#include "protoc-gen-openapiv2/options/annotations.pb.h"
#include "kentik/core/v202303/annotations.pb.h"
#include "kentik/alerting/types/v202303/types.pb.h"
#include "kentik/alerting/public/v202505/common.pb.h"
#include "kentik/alerting/public/v202505/policy_datasources.pb.h"
#include "kentik/alerting/public/v202505/policy_filters.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_kentik_2falerting_2fpublic_2fv202505_2fpolicy_5fflow_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_kentik_2falerting_2fpublic_2fv202505_2fpolicy_5fflow_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_kentik_2falerting_2fpublic_2fv202505_2fpolicy_5fflow_2eproto;
namespace kentik {
namespace alerting {
namespace public_ {
namespace v202505 {
class FlowPolicyLevelSettings;
struct FlowPolicyLevelSettingsDefaultTypeInternal;
extern FlowPolicyLevelSettingsDefaultTypeInternal _FlowPolicyLevelSettings_default_instance_;
class FlowPolicyLevelSettings_ActivationSettings;
struct FlowPolicyLevelSettings_ActivationSettingsDefaultTypeInternal;
extern FlowPolicyLevelSettings_ActivationSettingsDefaultTypeInternal _FlowPolicyLevelSettings_ActivationSettings_default_instance_;
class FlowPolicyLevelSettings_Conditions;
struct FlowPolicyLevelSettings_ConditionsDefaultTypeInternal;
extern FlowPolicyLevelSettings_ConditionsDefaultTypeInternal _FlowPolicyLevelSettings_Conditions_default_instance_;
class FlowPolicyLevelSettings_Conditions_BaselineCondition;
struct FlowPolicyLevelSettings_Conditions_BaselineConditionDefaultTypeInternal;
extern FlowPolicyLevelSettings_Conditions_BaselineConditionDefaultTypeInternal _FlowPolicyLevelSettings_Conditions_BaselineCondition_default_instance_;
class FlowPolicyLevelSettings_Conditions_ForecastCondition;
struct FlowPolicyLevelSettings_Conditions_ForecastConditionDefaultTypeInternal;
extern FlowPolicyLevelSettings_Conditions_ForecastConditionDefaultTypeInternal _FlowPolicyLevelSettings_Conditions_ForecastCondition_default_instance_;
class FlowPolicyLevelSettings_Conditions_InterfaceCapacityCondition;
struct FlowPolicyLevelSettings_Conditions_InterfaceCapacityConditionDefaultTypeInternal;
extern FlowPolicyLevelSettings_Conditions_InterfaceCapacityConditionDefaultTypeInternal _FlowPolicyLevelSettings_Conditions_InterfaceCapacityCondition_default_instance_;
class FlowPolicyLevelSettings_Conditions_RatioCondition;
struct FlowPolicyLevelSettings_Conditions_RatioConditionDefaultTypeInternal;
extern FlowPolicyLevelSettings_Conditions_RatioConditionDefaultTypeInternal _FlowPolicyLevelSettings_Conditions_RatioCondition_default_instance_;
class FlowPolicyLevelSettings_Conditions_StaticCondition;
struct FlowPolicyLevelSettings_Conditions_StaticConditionDefaultTypeInternal;
extern FlowPolicyLevelSettings_Conditions_StaticConditionDefaultTypeInternal _FlowPolicyLevelSettings_Conditions_StaticCondition_default_instance_;
class FlowPolicyLevelSettings_Conditions_TopKeysCondition;
struct FlowPolicyLevelSettings_Conditions_TopKeysConditionDefaultTypeInternal;
extern FlowPolicyLevelSettings_Conditions_TopKeysConditionDefaultTypeInternal _FlowPolicyLevelSettings_Conditions_TopKeysCondition_default_instance_;
class FlowPolicyLevelSettings_MitigationAssociation;
struct FlowPolicyLevelSettings_MitigationAssociationDefaultTypeInternal;
extern FlowPolicyLevelSettings_MitigationAssociationDefaultTypeInternal _FlowPolicyLevelSettings_MitigationAssociation_default_instance_;
class FlowPolicySettings;
struct FlowPolicySettingsDefaultTypeInternal;
extern FlowPolicySettingsDefaultTypeInternal _FlowPolicySettings_default_instance_;
class FlowPolicySettings_BaselineConfig;
struct FlowPolicySettings_BaselineConfigDefaultTypeInternal;
extern FlowPolicySettings_BaselineConfigDefaultTypeInternal _FlowPolicySettings_BaselineConfig_default_instance_;
class FlowPolicySettings_DatasetConfig;
struct FlowPolicySettings_DatasetConfigDefaultTypeInternal;
extern FlowPolicySettings_DatasetConfigDefaultTypeInternal _FlowPolicySettings_DatasetConfig_default_instance_;
class FlowPolicySettings_EvaluationConfig;
struct FlowPolicySettings_EvaluationConfigDefaultTypeInternal;
extern FlowPolicySettings_EvaluationConfigDefaultTypeInternal _FlowPolicySettings_EvaluationConfig_default_instance_;
}  // namespace v202505
}  // namespace public_
}  // namespace alerting
}  // namespace kentik
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace kentik {
namespace alerting {
namespace public_ {
namespace v202505 {
enum FlowPolicySettings_BaselineConfig_CompareMode : int {
  FlowPolicySettings_BaselineConfig_CompareMode_COMPARE_MODE_UNSPECIFIED = 0,
  FlowPolicySettings_BaselineConfig_CompareMode_COMPARE_MODE_PREVIOUS_HOURS = 1,
  FlowPolicySettings_BaselineConfig_CompareMode_COMPARE_MODE_PREVIOUS_DAYS = 2,
  FlowPolicySettings_BaselineConfig_CompareMode_COMPARE_MODE_PREVIOUS_DAYS_DISTINGUISH_WEEKENDS = 3,
  FlowPolicySettings_BaselineConfig_CompareMode_COMPARE_MODE_PREVIOUS_WEEKS = 4,
  FlowPolicySettings_BaselineConfig_CompareMode_FlowPolicySettings_BaselineConfig_CompareMode_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  FlowPolicySettings_BaselineConfig_CompareMode_FlowPolicySettings_BaselineConfig_CompareMode_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool FlowPolicySettings_BaselineConfig_CompareMode_IsValid(int value);
extern const uint32_t FlowPolicySettings_BaselineConfig_CompareMode_internal_data_[];
constexpr FlowPolicySettings_BaselineConfig_CompareMode FlowPolicySettings_BaselineConfig_CompareMode_CompareMode_MIN = static_cast<FlowPolicySettings_BaselineConfig_CompareMode>(0);
constexpr FlowPolicySettings_BaselineConfig_CompareMode FlowPolicySettings_BaselineConfig_CompareMode_CompareMode_MAX = static_cast<FlowPolicySettings_BaselineConfig_CompareMode>(4);
constexpr int FlowPolicySettings_BaselineConfig_CompareMode_CompareMode_ARRAYSIZE = 4 + 1;
const ::google::protobuf::EnumDescriptor*
FlowPolicySettings_BaselineConfig_CompareMode_descriptor();
template <typename T>
const std::string& FlowPolicySettings_BaselineConfig_CompareMode_Name(T value) {
  static_assert(std::is_same<T, FlowPolicySettings_BaselineConfig_CompareMode>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to CompareMode_Name().");
  return FlowPolicySettings_BaselineConfig_CompareMode_Name(static_cast<FlowPolicySettings_BaselineConfig_CompareMode>(value));
}
template <>
inline const std::string& FlowPolicySettings_BaselineConfig_CompareMode_Name(FlowPolicySettings_BaselineConfig_CompareMode value) {
  return ::google::protobuf::internal::NameOfDenseEnum<FlowPolicySettings_BaselineConfig_CompareMode_descriptor,
                                                 0, 4>(
      static_cast<int>(value));
}
inline bool FlowPolicySettings_BaselineConfig_CompareMode_Parse(absl::string_view name, FlowPolicySettings_BaselineConfig_CompareMode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FlowPolicySettings_BaselineConfig_CompareMode>(
      FlowPolicySettings_BaselineConfig_CompareMode_descriptor(), name, value);
}
enum FlowPolicyLevelSettings_Conditions_BaselineCondition_DeltaType : int {
  FlowPolicyLevelSettings_Conditions_BaselineCondition_DeltaType_DELTA_TYPE_UNSPECIFIED = 0,
  FlowPolicyLevelSettings_Conditions_BaselineCondition_DeltaType_DELTA_TYPE_ABOVE = 1,
  FlowPolicyLevelSettings_Conditions_BaselineCondition_DeltaType_DELTA_TYPE_BELOW = 2,
  FlowPolicyLevelSettings_Conditions_BaselineCondition_DeltaType_FlowPolicyLevelSettings_Conditions_BaselineCondition_DeltaType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  FlowPolicyLevelSettings_Conditions_BaselineCondition_DeltaType_FlowPolicyLevelSettings_Conditions_BaselineCondition_DeltaType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool FlowPolicyLevelSettings_Conditions_BaselineCondition_DeltaType_IsValid(int value);
extern const uint32_t FlowPolicyLevelSettings_Conditions_BaselineCondition_DeltaType_internal_data_[];
constexpr FlowPolicyLevelSettings_Conditions_BaselineCondition_DeltaType FlowPolicyLevelSettings_Conditions_BaselineCondition_DeltaType_DeltaType_MIN = static_cast<FlowPolicyLevelSettings_Conditions_BaselineCondition_DeltaType>(0);
constexpr FlowPolicyLevelSettings_Conditions_BaselineCondition_DeltaType FlowPolicyLevelSettings_Conditions_BaselineCondition_DeltaType_DeltaType_MAX = static_cast<FlowPolicyLevelSettings_Conditions_BaselineCondition_DeltaType>(2);
constexpr int FlowPolicyLevelSettings_Conditions_BaselineCondition_DeltaType_DeltaType_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor*
FlowPolicyLevelSettings_Conditions_BaselineCondition_DeltaType_descriptor();
template <typename T>
const std::string& FlowPolicyLevelSettings_Conditions_BaselineCondition_DeltaType_Name(T value) {
  static_assert(std::is_same<T, FlowPolicyLevelSettings_Conditions_BaselineCondition_DeltaType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to DeltaType_Name().");
  return FlowPolicyLevelSettings_Conditions_BaselineCondition_DeltaType_Name(static_cast<FlowPolicyLevelSettings_Conditions_BaselineCondition_DeltaType>(value));
}
template <>
inline const std::string& FlowPolicyLevelSettings_Conditions_BaselineCondition_DeltaType_Name(FlowPolicyLevelSettings_Conditions_BaselineCondition_DeltaType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<FlowPolicyLevelSettings_Conditions_BaselineCondition_DeltaType_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool FlowPolicyLevelSettings_Conditions_BaselineCondition_DeltaType_Parse(absl::string_view name, FlowPolicyLevelSettings_Conditions_BaselineCondition_DeltaType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FlowPolicyLevelSettings_Conditions_BaselineCondition_DeltaType>(
      FlowPolicyLevelSettings_Conditions_BaselineCondition_DeltaType_descriptor(), name, value);
}
enum FlowPolicyLevelSettings_Conditions_TopKeysCondition_TopKeysEvent : int {
  FlowPolicyLevelSettings_Conditions_TopKeysCondition_TopKeysEvent_TOP_KEYS_EVENT_UNSPECIFIED = 0,
  FlowPolicyLevelSettings_Conditions_TopKeysCondition_TopKeysEvent_TOP_KEYS_EVENT_JOINS = 1,
  FlowPolicyLevelSettings_Conditions_TopKeysCondition_TopKeysEvent_TOP_KEYS_EVENT_LEAVES = 2,
  FlowPolicyLevelSettings_Conditions_TopKeysCondition_TopKeysEvent_FlowPolicyLevelSettings_Conditions_TopKeysCondition_TopKeysEvent_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  FlowPolicyLevelSettings_Conditions_TopKeysCondition_TopKeysEvent_FlowPolicyLevelSettings_Conditions_TopKeysCondition_TopKeysEvent_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool FlowPolicyLevelSettings_Conditions_TopKeysCondition_TopKeysEvent_IsValid(int value);
extern const uint32_t FlowPolicyLevelSettings_Conditions_TopKeysCondition_TopKeysEvent_internal_data_[];
constexpr FlowPolicyLevelSettings_Conditions_TopKeysCondition_TopKeysEvent FlowPolicyLevelSettings_Conditions_TopKeysCondition_TopKeysEvent_TopKeysEvent_MIN = static_cast<FlowPolicyLevelSettings_Conditions_TopKeysCondition_TopKeysEvent>(0);
constexpr FlowPolicyLevelSettings_Conditions_TopKeysCondition_TopKeysEvent FlowPolicyLevelSettings_Conditions_TopKeysCondition_TopKeysEvent_TopKeysEvent_MAX = static_cast<FlowPolicyLevelSettings_Conditions_TopKeysCondition_TopKeysEvent>(2);
constexpr int FlowPolicyLevelSettings_Conditions_TopKeysCondition_TopKeysEvent_TopKeysEvent_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor*
FlowPolicyLevelSettings_Conditions_TopKeysCondition_TopKeysEvent_descriptor();
template <typename T>
const std::string& FlowPolicyLevelSettings_Conditions_TopKeysCondition_TopKeysEvent_Name(T value) {
  static_assert(std::is_same<T, FlowPolicyLevelSettings_Conditions_TopKeysCondition_TopKeysEvent>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to TopKeysEvent_Name().");
  return FlowPolicyLevelSettings_Conditions_TopKeysCondition_TopKeysEvent_Name(static_cast<FlowPolicyLevelSettings_Conditions_TopKeysCondition_TopKeysEvent>(value));
}
template <>
inline const std::string& FlowPolicyLevelSettings_Conditions_TopKeysCondition_TopKeysEvent_Name(FlowPolicyLevelSettings_Conditions_TopKeysCondition_TopKeysEvent value) {
  return ::google::protobuf::internal::NameOfDenseEnum<FlowPolicyLevelSettings_Conditions_TopKeysCondition_TopKeysEvent_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool FlowPolicyLevelSettings_Conditions_TopKeysCondition_TopKeysEvent_Parse(absl::string_view name, FlowPolicyLevelSettings_Conditions_TopKeysCondition_TopKeysEvent* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FlowPolicyLevelSettings_Conditions_TopKeysCondition_TopKeysEvent>(
      FlowPolicyLevelSettings_Conditions_TopKeysCondition_TopKeysEvent_descriptor(), name, value);
}
enum FlowPolicyLevelSettings_Conditions_RatioCondition_Direction : int {
  FlowPolicyLevelSettings_Conditions_RatioCondition_Direction_DIRECTION_UNSPECIFIED = 0,
  FlowPolicyLevelSettings_Conditions_RatioCondition_Direction_DIRECTION_BOTH = 1,
  FlowPolicyLevelSettings_Conditions_RatioCondition_Direction_DIRECTION_RIGHT = 2,
  FlowPolicyLevelSettings_Conditions_RatioCondition_Direction_DIRECTION_LEFT = 3,
  FlowPolicyLevelSettings_Conditions_RatioCondition_Direction_FlowPolicyLevelSettings_Conditions_RatioCondition_Direction_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  FlowPolicyLevelSettings_Conditions_RatioCondition_Direction_FlowPolicyLevelSettings_Conditions_RatioCondition_Direction_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool FlowPolicyLevelSettings_Conditions_RatioCondition_Direction_IsValid(int value);
extern const uint32_t FlowPolicyLevelSettings_Conditions_RatioCondition_Direction_internal_data_[];
constexpr FlowPolicyLevelSettings_Conditions_RatioCondition_Direction FlowPolicyLevelSettings_Conditions_RatioCondition_Direction_Direction_MIN = static_cast<FlowPolicyLevelSettings_Conditions_RatioCondition_Direction>(0);
constexpr FlowPolicyLevelSettings_Conditions_RatioCondition_Direction FlowPolicyLevelSettings_Conditions_RatioCondition_Direction_Direction_MAX = static_cast<FlowPolicyLevelSettings_Conditions_RatioCondition_Direction>(3);
constexpr int FlowPolicyLevelSettings_Conditions_RatioCondition_Direction_Direction_ARRAYSIZE = 3 + 1;
const ::google::protobuf::EnumDescriptor*
FlowPolicyLevelSettings_Conditions_RatioCondition_Direction_descriptor();
template <typename T>
const std::string& FlowPolicyLevelSettings_Conditions_RatioCondition_Direction_Name(T value) {
  static_assert(std::is_same<T, FlowPolicyLevelSettings_Conditions_RatioCondition_Direction>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Direction_Name().");
  return FlowPolicyLevelSettings_Conditions_RatioCondition_Direction_Name(static_cast<FlowPolicyLevelSettings_Conditions_RatioCondition_Direction>(value));
}
template <>
inline const std::string& FlowPolicyLevelSettings_Conditions_RatioCondition_Direction_Name(FlowPolicyLevelSettings_Conditions_RatioCondition_Direction value) {
  return ::google::protobuf::internal::NameOfDenseEnum<FlowPolicyLevelSettings_Conditions_RatioCondition_Direction_descriptor,
                                                 0, 3>(
      static_cast<int>(value));
}
inline bool FlowPolicyLevelSettings_Conditions_RatioCondition_Direction_Parse(absl::string_view name, FlowPolicyLevelSettings_Conditions_RatioCondition_Direction* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FlowPolicyLevelSettings_Conditions_RatioCondition_Direction>(
      FlowPolicyLevelSettings_Conditions_RatioCondition_Direction_descriptor(), name, value);
}
enum FlowPolicyLevelSettings_Conditions_Operator : int {
  FlowPolicyLevelSettings_Conditions_Operator_OPERATOR_UNSPECIFIED = 0,
  FlowPolicyLevelSettings_Conditions_Operator_OPERATOR_GREATER_THAN_OR_EQUALS = 1,
  FlowPolicyLevelSettings_Conditions_Operator_OPERATOR_GREATER_THAN = 2,
  FlowPolicyLevelSettings_Conditions_Operator_OPERATOR_EQUALS = 3,
  FlowPolicyLevelSettings_Conditions_Operator_OPERATOR_NOT_EQUALS = 4,
  FlowPolicyLevelSettings_Conditions_Operator_OPERATOR_LESS_THAN = 5,
  FlowPolicyLevelSettings_Conditions_Operator_OPERATOR_LESS_THAN_OR_EQUALS = 6,
  FlowPolicyLevelSettings_Conditions_Operator_OPERATOR_IN_SET = 7,
  FlowPolicyLevelSettings_Conditions_Operator_OPERATOR_NOT_IN_SET = 8,
  FlowPolicyLevelSettings_Conditions_Operator_FlowPolicyLevelSettings_Conditions_Operator_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  FlowPolicyLevelSettings_Conditions_Operator_FlowPolicyLevelSettings_Conditions_Operator_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool FlowPolicyLevelSettings_Conditions_Operator_IsValid(int value);
extern const uint32_t FlowPolicyLevelSettings_Conditions_Operator_internal_data_[];
constexpr FlowPolicyLevelSettings_Conditions_Operator FlowPolicyLevelSettings_Conditions_Operator_Operator_MIN = static_cast<FlowPolicyLevelSettings_Conditions_Operator>(0);
constexpr FlowPolicyLevelSettings_Conditions_Operator FlowPolicyLevelSettings_Conditions_Operator_Operator_MAX = static_cast<FlowPolicyLevelSettings_Conditions_Operator>(8);
constexpr int FlowPolicyLevelSettings_Conditions_Operator_Operator_ARRAYSIZE = 8 + 1;
const ::google::protobuf::EnumDescriptor*
FlowPolicyLevelSettings_Conditions_Operator_descriptor();
template <typename T>
const std::string& FlowPolicyLevelSettings_Conditions_Operator_Name(T value) {
  static_assert(std::is_same<T, FlowPolicyLevelSettings_Conditions_Operator>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Operator_Name().");
  return FlowPolicyLevelSettings_Conditions_Operator_Name(static_cast<FlowPolicyLevelSettings_Conditions_Operator>(value));
}
template <>
inline const std::string& FlowPolicyLevelSettings_Conditions_Operator_Name(FlowPolicyLevelSettings_Conditions_Operator value) {
  return ::google::protobuf::internal::NameOfDenseEnum<FlowPolicyLevelSettings_Conditions_Operator_descriptor,
                                                 0, 8>(
      static_cast<int>(value));
}
inline bool FlowPolicyLevelSettings_Conditions_Operator_Parse(absl::string_view name, FlowPolicyLevelSettings_Conditions_Operator* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FlowPolicyLevelSettings_Conditions_Operator>(
      FlowPolicyLevelSettings_Conditions_Operator_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class FlowPolicyLevelSettings_MitigationAssociation final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.alerting.public.v202505.FlowPolicyLevelSettings.MitigationAssociation) */ {
 public:
  inline FlowPolicyLevelSettings_MitigationAssociation() : FlowPolicyLevelSettings_MitigationAssociation(nullptr) {}
  ~FlowPolicyLevelSettings_MitigationAssociation() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(FlowPolicyLevelSettings_MitigationAssociation* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(FlowPolicyLevelSettings_MitigationAssociation));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR FlowPolicyLevelSettings_MitigationAssociation(
      ::google::protobuf::internal::ConstantInitialized);

  inline FlowPolicyLevelSettings_MitigationAssociation(const FlowPolicyLevelSettings_MitigationAssociation& from) : FlowPolicyLevelSettings_MitigationAssociation(nullptr, from) {}
  inline FlowPolicyLevelSettings_MitigationAssociation(FlowPolicyLevelSettings_MitigationAssociation&& from) noexcept
      : FlowPolicyLevelSettings_MitigationAssociation(nullptr, std::move(from)) {}
  inline FlowPolicyLevelSettings_MitigationAssociation& operator=(const FlowPolicyLevelSettings_MitigationAssociation& from) {
    CopyFrom(from);
    return *this;
  }
  inline FlowPolicyLevelSettings_MitigationAssociation& operator=(FlowPolicyLevelSettings_MitigationAssociation&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FlowPolicyLevelSettings_MitigationAssociation& default_instance() {
    return *internal_default_instance();
  }
  static inline const FlowPolicyLevelSettings_MitigationAssociation* internal_default_instance() {
    return reinterpret_cast<const FlowPolicyLevelSettings_MitigationAssociation*>(
        &_FlowPolicyLevelSettings_MitigationAssociation_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(FlowPolicyLevelSettings_MitigationAssociation& a, FlowPolicyLevelSettings_MitigationAssociation& b) { a.Swap(&b); }
  inline void Swap(FlowPolicyLevelSettings_MitigationAssociation* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FlowPolicyLevelSettings_MitigationAssociation* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FlowPolicyLevelSettings_MitigationAssociation* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<FlowPolicyLevelSettings_MitigationAssociation>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FlowPolicyLevelSettings_MitigationAssociation& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const FlowPolicyLevelSettings_MitigationAssociation& from) { FlowPolicyLevelSettings_MitigationAssociation::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(FlowPolicyLevelSettings_MitigationAssociation* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.alerting.public.v202505.FlowPolicyLevelSettings.MitigationAssociation"; }

 protected:
  explicit FlowPolicyLevelSettings_MitigationAssociation(::google::protobuf::Arena* arena);
  FlowPolicyLevelSettings_MitigationAssociation(::google::protobuf::Arena* arena, const FlowPolicyLevelSettings_MitigationAssociation& from);
  FlowPolicyLevelSettings_MitigationAssociation(::google::protobuf::Arena* arena, FlowPolicyLevelSettings_MitigationAssociation&& from) noexcept
      : FlowPolicyLevelSettings_MitigationAssociation(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPlatformIdFieldNumber = 1,
    kMethodIdFieldNumber = 2,
  };
  // string platform_id = 1 [json_name = "platformId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_platform_id() ;
  const std::string& platform_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_platform_id(Arg_&& arg, Args_... args);
  std::string* mutable_platform_id();
  PROTOBUF_NODISCARD std::string* release_platform_id();
  void set_allocated_platform_id(std::string* value);

  private:
  const std::string& _internal_platform_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_platform_id(
      const std::string& value);
  std::string* _internal_mutable_platform_id();

  public:
  // string method_id = 2 [json_name = "methodId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_method_id() ;
  const std::string& method_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_method_id(Arg_&& arg, Args_... args);
  std::string* mutable_method_id();
  PROTOBUF_NODISCARD std::string* release_method_id();
  void set_allocated_method_id(std::string* value);

  private:
  const std::string& _internal_method_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_method_id(
      const std::string& value);
  std::string* _internal_mutable_method_id();

  public:
  // @@protoc_insertion_point(class_scope:kentik.alerting.public.v202505.FlowPolicyLevelSettings.MitigationAssociation)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      105, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const FlowPolicyLevelSettings_MitigationAssociation& from_msg);
    ::google::protobuf::internal::ArenaStringPtr platform_id_;
    ::google::protobuf::internal::ArenaStringPtr method_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2falerting_2fpublic_2fv202505_2fpolicy_5fflow_2eproto;
};
// -------------------------------------------------------------------

class FlowPolicyLevelSettings_Conditions_TopKeysCondition final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.TopKeysCondition) */ {
 public:
  inline FlowPolicyLevelSettings_Conditions_TopKeysCondition() : FlowPolicyLevelSettings_Conditions_TopKeysCondition(nullptr) {}
  ~FlowPolicyLevelSettings_Conditions_TopKeysCondition() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(FlowPolicyLevelSettings_Conditions_TopKeysCondition* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(FlowPolicyLevelSettings_Conditions_TopKeysCondition));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR FlowPolicyLevelSettings_Conditions_TopKeysCondition(
      ::google::protobuf::internal::ConstantInitialized);

  inline FlowPolicyLevelSettings_Conditions_TopKeysCondition(const FlowPolicyLevelSettings_Conditions_TopKeysCondition& from) : FlowPolicyLevelSettings_Conditions_TopKeysCondition(nullptr, from) {}
  inline FlowPolicyLevelSettings_Conditions_TopKeysCondition(FlowPolicyLevelSettings_Conditions_TopKeysCondition&& from) noexcept
      : FlowPolicyLevelSettings_Conditions_TopKeysCondition(nullptr, std::move(from)) {}
  inline FlowPolicyLevelSettings_Conditions_TopKeysCondition& operator=(const FlowPolicyLevelSettings_Conditions_TopKeysCondition& from) {
    CopyFrom(from);
    return *this;
  }
  inline FlowPolicyLevelSettings_Conditions_TopKeysCondition& operator=(FlowPolicyLevelSettings_Conditions_TopKeysCondition&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FlowPolicyLevelSettings_Conditions_TopKeysCondition& default_instance() {
    return *internal_default_instance();
  }
  static inline const FlowPolicyLevelSettings_Conditions_TopKeysCondition* internal_default_instance() {
    return reinterpret_cast<const FlowPolicyLevelSettings_Conditions_TopKeysCondition*>(
        &_FlowPolicyLevelSettings_Conditions_TopKeysCondition_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(FlowPolicyLevelSettings_Conditions_TopKeysCondition& a, FlowPolicyLevelSettings_Conditions_TopKeysCondition& b) { a.Swap(&b); }
  inline void Swap(FlowPolicyLevelSettings_Conditions_TopKeysCondition* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FlowPolicyLevelSettings_Conditions_TopKeysCondition* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FlowPolicyLevelSettings_Conditions_TopKeysCondition* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<FlowPolicyLevelSettings_Conditions_TopKeysCondition>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FlowPolicyLevelSettings_Conditions_TopKeysCondition& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const FlowPolicyLevelSettings_Conditions_TopKeysCondition& from) { FlowPolicyLevelSettings_Conditions_TopKeysCondition::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(FlowPolicyLevelSettings_Conditions_TopKeysCondition* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.TopKeysCondition"; }

 protected:
  explicit FlowPolicyLevelSettings_Conditions_TopKeysCondition(::google::protobuf::Arena* arena);
  FlowPolicyLevelSettings_Conditions_TopKeysCondition(::google::protobuf::Arena* arena, const FlowPolicyLevelSettings_Conditions_TopKeysCondition& from);
  FlowPolicyLevelSettings_Conditions_TopKeysCondition(::google::protobuf::Arena* arena, FlowPolicyLevelSettings_Conditions_TopKeysCondition&& from) noexcept
      : FlowPolicyLevelSettings_Conditions_TopKeysCondition(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using TopKeysEvent = FlowPolicyLevelSettings_Conditions_TopKeysCondition_TopKeysEvent;
  static constexpr TopKeysEvent TOP_KEYS_EVENT_UNSPECIFIED = FlowPolicyLevelSettings_Conditions_TopKeysCondition_TopKeysEvent_TOP_KEYS_EVENT_UNSPECIFIED;
  static constexpr TopKeysEvent TOP_KEYS_EVENT_JOINS = FlowPolicyLevelSettings_Conditions_TopKeysCondition_TopKeysEvent_TOP_KEYS_EVENT_JOINS;
  static constexpr TopKeysEvent TOP_KEYS_EVENT_LEAVES = FlowPolicyLevelSettings_Conditions_TopKeysCondition_TopKeysEvent_TOP_KEYS_EVENT_LEAVES;
  static inline bool TopKeysEvent_IsValid(int value) {
    return FlowPolicyLevelSettings_Conditions_TopKeysCondition_TopKeysEvent_IsValid(value);
  }
  static constexpr TopKeysEvent TopKeysEvent_MIN = FlowPolicyLevelSettings_Conditions_TopKeysCondition_TopKeysEvent_TopKeysEvent_MIN;
  static constexpr TopKeysEvent TopKeysEvent_MAX = FlowPolicyLevelSettings_Conditions_TopKeysCondition_TopKeysEvent_TopKeysEvent_MAX;
  static constexpr int TopKeysEvent_ARRAYSIZE = FlowPolicyLevelSettings_Conditions_TopKeysCondition_TopKeysEvent_TopKeysEvent_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* TopKeysEvent_descriptor() {
    return FlowPolicyLevelSettings_Conditions_TopKeysCondition_TopKeysEvent_descriptor();
  }
  template <typename T>
  static inline const std::string& TopKeysEvent_Name(T value) {
    return FlowPolicyLevelSettings_Conditions_TopKeysCondition_TopKeysEvent_Name(value);
  }
  static inline bool TopKeysEvent_Parse(absl::string_view name, TopKeysEvent* value) {
    return FlowPolicyLevelSettings_Conditions_TopKeysCondition_TopKeysEvent_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kCountFieldNumber = 2,
    kEventFieldNumber = 1,
  };
  // int64 count = 2 [json_name = "count", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_count() ;
  ::int64_t count() const;
  void set_count(::int64_t value);

  private:
  ::int64_t _internal_count() const;
  void _internal_set_count(::int64_t value);

  public:
  // .kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.TopKeysCondition.TopKeysEvent event = 1 [json_name = "event", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_event() ;
  ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_TopKeysCondition_TopKeysEvent event() const;
  void set_event(::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_TopKeysCondition_TopKeysEvent value);

  private:
  ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_TopKeysCondition_TopKeysEvent _internal_event() const;
  void _internal_set_event(::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_TopKeysCondition_TopKeysEvent value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.TopKeysCondition)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const FlowPolicyLevelSettings_Conditions_TopKeysCondition& from_msg);
    ::int64_t count_;
    int event_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2falerting_2fpublic_2fv202505_2fpolicy_5fflow_2eproto;
};
// -------------------------------------------------------------------

class FlowPolicyLevelSettings_Conditions_StaticCondition final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.StaticCondition) */ {
 public:
  inline FlowPolicyLevelSettings_Conditions_StaticCondition() : FlowPolicyLevelSettings_Conditions_StaticCondition(nullptr) {}
  ~FlowPolicyLevelSettings_Conditions_StaticCondition() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(FlowPolicyLevelSettings_Conditions_StaticCondition* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(FlowPolicyLevelSettings_Conditions_StaticCondition));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR FlowPolicyLevelSettings_Conditions_StaticCondition(
      ::google::protobuf::internal::ConstantInitialized);

  inline FlowPolicyLevelSettings_Conditions_StaticCondition(const FlowPolicyLevelSettings_Conditions_StaticCondition& from) : FlowPolicyLevelSettings_Conditions_StaticCondition(nullptr, from) {}
  inline FlowPolicyLevelSettings_Conditions_StaticCondition(FlowPolicyLevelSettings_Conditions_StaticCondition&& from) noexcept
      : FlowPolicyLevelSettings_Conditions_StaticCondition(nullptr, std::move(from)) {}
  inline FlowPolicyLevelSettings_Conditions_StaticCondition& operator=(const FlowPolicyLevelSettings_Conditions_StaticCondition& from) {
    CopyFrom(from);
    return *this;
  }
  inline FlowPolicyLevelSettings_Conditions_StaticCondition& operator=(FlowPolicyLevelSettings_Conditions_StaticCondition&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FlowPolicyLevelSettings_Conditions_StaticCondition& default_instance() {
    return *internal_default_instance();
  }
  static inline const FlowPolicyLevelSettings_Conditions_StaticCondition* internal_default_instance() {
    return reinterpret_cast<const FlowPolicyLevelSettings_Conditions_StaticCondition*>(
        &_FlowPolicyLevelSettings_Conditions_StaticCondition_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(FlowPolicyLevelSettings_Conditions_StaticCondition& a, FlowPolicyLevelSettings_Conditions_StaticCondition& b) { a.Swap(&b); }
  inline void Swap(FlowPolicyLevelSettings_Conditions_StaticCondition* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FlowPolicyLevelSettings_Conditions_StaticCondition* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FlowPolicyLevelSettings_Conditions_StaticCondition* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<FlowPolicyLevelSettings_Conditions_StaticCondition>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FlowPolicyLevelSettings_Conditions_StaticCondition& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const FlowPolicyLevelSettings_Conditions_StaticCondition& from) { FlowPolicyLevelSettings_Conditions_StaticCondition::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(FlowPolicyLevelSettings_Conditions_StaticCondition* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.StaticCondition"; }

 protected:
  explicit FlowPolicyLevelSettings_Conditions_StaticCondition(::google::protobuf::Arena* arena);
  FlowPolicyLevelSettings_Conditions_StaticCondition(::google::protobuf::Arena* arena, const FlowPolicyLevelSettings_Conditions_StaticCondition& from);
  FlowPolicyLevelSettings_Conditions_StaticCondition(::google::protobuf::Arena* arena, FlowPolicyLevelSettings_Conditions_StaticCondition&& from) noexcept
      : FlowPolicyLevelSettings_Conditions_StaticCondition(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMetricFieldNumber = 1,
    kValueFieldNumber = 3,
    kOperatorFieldNumber = 2,
  };
  // string metric = 1 [json_name = "metric", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_metric() ;
  const std::string& metric() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_metric(Arg_&& arg, Args_... args);
  std::string* mutable_metric();
  PROTOBUF_NODISCARD std::string* release_metric();
  void set_allocated_metric(std::string* value);

  private:
  const std::string& _internal_metric() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_metric(
      const std::string& value);
  std::string* _internal_mutable_metric();

  public:
  // double value = 3 [json_name = "value", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_value() ;
  double value() const;
  void set_value(double value);

  private:
  double _internal_value() const;
  void _internal_set_value(double value);

  public:
  // .kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.Operator operator = 2 [json_name = "operator", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_operator_() ;
  ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_Operator operator_() const;
  void set_operator_(::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_Operator value);

  private:
  ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_Operator _internal_operator_() const;
  void _internal_set_operator_(::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_Operator value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.StaticCondition)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      96, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const FlowPolicyLevelSettings_Conditions_StaticCondition& from_msg);
    ::google::protobuf::internal::ArenaStringPtr metric_;
    double value_;
    int operator__;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2falerting_2fpublic_2fv202505_2fpolicy_5fflow_2eproto;
};
// -------------------------------------------------------------------

class FlowPolicyLevelSettings_Conditions_RatioCondition final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.RatioCondition) */ {
 public:
  inline FlowPolicyLevelSettings_Conditions_RatioCondition() : FlowPolicyLevelSettings_Conditions_RatioCondition(nullptr) {}
  ~FlowPolicyLevelSettings_Conditions_RatioCondition() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(FlowPolicyLevelSettings_Conditions_RatioCondition* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(FlowPolicyLevelSettings_Conditions_RatioCondition));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR FlowPolicyLevelSettings_Conditions_RatioCondition(
      ::google::protobuf::internal::ConstantInitialized);

  inline FlowPolicyLevelSettings_Conditions_RatioCondition(const FlowPolicyLevelSettings_Conditions_RatioCondition& from) : FlowPolicyLevelSettings_Conditions_RatioCondition(nullptr, from) {}
  inline FlowPolicyLevelSettings_Conditions_RatioCondition(FlowPolicyLevelSettings_Conditions_RatioCondition&& from) noexcept
      : FlowPolicyLevelSettings_Conditions_RatioCondition(nullptr, std::move(from)) {}
  inline FlowPolicyLevelSettings_Conditions_RatioCondition& operator=(const FlowPolicyLevelSettings_Conditions_RatioCondition& from) {
    CopyFrom(from);
    return *this;
  }
  inline FlowPolicyLevelSettings_Conditions_RatioCondition& operator=(FlowPolicyLevelSettings_Conditions_RatioCondition&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FlowPolicyLevelSettings_Conditions_RatioCondition& default_instance() {
    return *internal_default_instance();
  }
  static inline const FlowPolicyLevelSettings_Conditions_RatioCondition* internal_default_instance() {
    return reinterpret_cast<const FlowPolicyLevelSettings_Conditions_RatioCondition*>(
        &_FlowPolicyLevelSettings_Conditions_RatioCondition_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(FlowPolicyLevelSettings_Conditions_RatioCondition& a, FlowPolicyLevelSettings_Conditions_RatioCondition& b) { a.Swap(&b); }
  inline void Swap(FlowPolicyLevelSettings_Conditions_RatioCondition* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FlowPolicyLevelSettings_Conditions_RatioCondition* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FlowPolicyLevelSettings_Conditions_RatioCondition* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<FlowPolicyLevelSettings_Conditions_RatioCondition>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FlowPolicyLevelSettings_Conditions_RatioCondition& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const FlowPolicyLevelSettings_Conditions_RatioCondition& from) { FlowPolicyLevelSettings_Conditions_RatioCondition::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(FlowPolicyLevelSettings_Conditions_RatioCondition* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.RatioCondition"; }

 protected:
  explicit FlowPolicyLevelSettings_Conditions_RatioCondition(::google::protobuf::Arena* arena);
  FlowPolicyLevelSettings_Conditions_RatioCondition(::google::protobuf::Arena* arena, const FlowPolicyLevelSettings_Conditions_RatioCondition& from);
  FlowPolicyLevelSettings_Conditions_RatioCondition(::google::protobuf::Arena* arena, FlowPolicyLevelSettings_Conditions_RatioCondition&& from) noexcept
      : FlowPolicyLevelSettings_Conditions_RatioCondition(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using Direction = FlowPolicyLevelSettings_Conditions_RatioCondition_Direction;
  static constexpr Direction DIRECTION_UNSPECIFIED = FlowPolicyLevelSettings_Conditions_RatioCondition_Direction_DIRECTION_UNSPECIFIED;
  static constexpr Direction DIRECTION_BOTH = FlowPolicyLevelSettings_Conditions_RatioCondition_Direction_DIRECTION_BOTH;
  static constexpr Direction DIRECTION_RIGHT = FlowPolicyLevelSettings_Conditions_RatioCondition_Direction_DIRECTION_RIGHT;
  static constexpr Direction DIRECTION_LEFT = FlowPolicyLevelSettings_Conditions_RatioCondition_Direction_DIRECTION_LEFT;
  static inline bool Direction_IsValid(int value) {
    return FlowPolicyLevelSettings_Conditions_RatioCondition_Direction_IsValid(value);
  }
  static constexpr Direction Direction_MIN = FlowPolicyLevelSettings_Conditions_RatioCondition_Direction_Direction_MIN;
  static constexpr Direction Direction_MAX = FlowPolicyLevelSettings_Conditions_RatioCondition_Direction_Direction_MAX;
  static constexpr int Direction_ARRAYSIZE = FlowPolicyLevelSettings_Conditions_RatioCondition_Direction_Direction_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* Direction_descriptor() {
    return FlowPolicyLevelSettings_Conditions_RatioCondition_Direction_descriptor();
  }
  template <typename T>
  static inline const std::string& Direction_Name(T value) {
    return FlowPolicyLevelSettings_Conditions_RatioCondition_Direction_Name(value);
  }
  static inline bool Direction_Parse(absl::string_view name, Direction* value) {
    return FlowPolicyLevelSettings_Conditions_RatioCondition_Direction_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kLhsMetricFieldNumber = 1,
    kRhsMetricFieldNumber = 2,
    kLhsProportionFieldNumber = 3,
    kRhsProportionFieldNumber = 4,
    kMarginFieldNumber = 5,
    kDirectionFieldNumber = 6,
  };
  // string lhs_metric = 1 [json_name = "lhsMetric", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_lhs_metric() ;
  const std::string& lhs_metric() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_lhs_metric(Arg_&& arg, Args_... args);
  std::string* mutable_lhs_metric();
  PROTOBUF_NODISCARD std::string* release_lhs_metric();
  void set_allocated_lhs_metric(std::string* value);

  private:
  const std::string& _internal_lhs_metric() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_lhs_metric(
      const std::string& value);
  std::string* _internal_mutable_lhs_metric();

  public:
  // string rhs_metric = 2 [json_name = "rhsMetric", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_rhs_metric() ;
  const std::string& rhs_metric() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_rhs_metric(Arg_&& arg, Args_... args);
  std::string* mutable_rhs_metric();
  PROTOBUF_NODISCARD std::string* release_rhs_metric();
  void set_allocated_rhs_metric(std::string* value);

  private:
  const std::string& _internal_rhs_metric() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_rhs_metric(
      const std::string& value);
  std::string* _internal_mutable_rhs_metric();

  public:
  // uint32 lhs_proportion = 3 [json_name = "lhsProportion", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_lhs_proportion() ;
  ::uint32_t lhs_proportion() const;
  void set_lhs_proportion(::uint32_t value);

  private:
  ::uint32_t _internal_lhs_proportion() const;
  void _internal_set_lhs_proportion(::uint32_t value);

  public:
  // uint32 rhs_proportion = 4 [json_name = "rhsProportion", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_rhs_proportion() ;
  ::uint32_t rhs_proportion() const;
  void set_rhs_proportion(::uint32_t value);

  private:
  ::uint32_t _internal_rhs_proportion() const;
  void _internal_set_rhs_proportion(::uint32_t value);

  public:
  // double margin = 5 [json_name = "margin", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_margin() ;
  double margin() const;
  void set_margin(double value);

  private:
  double _internal_margin() const;
  void _internal_set_margin(double value);

  public:
  // .kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.RatioCondition.Direction direction = 6 [json_name = "direction", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_direction() ;
  ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_RatioCondition_Direction direction() const;
  void set_direction(::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_RatioCondition_Direction value);

  private:
  ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_RatioCondition_Direction _internal_direction() const;
  void _internal_set_direction(::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_RatioCondition_Direction value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.RatioCondition)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 0,
      109, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const FlowPolicyLevelSettings_Conditions_RatioCondition& from_msg);
    ::google::protobuf::internal::ArenaStringPtr lhs_metric_;
    ::google::protobuf::internal::ArenaStringPtr rhs_metric_;
    ::uint32_t lhs_proportion_;
    ::uint32_t rhs_proportion_;
    double margin_;
    int direction_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2falerting_2fpublic_2fv202505_2fpolicy_5fflow_2eproto;
};
// -------------------------------------------------------------------

class FlowPolicyLevelSettings_Conditions_InterfaceCapacityCondition final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.InterfaceCapacityCondition) */ {
 public:
  inline FlowPolicyLevelSettings_Conditions_InterfaceCapacityCondition() : FlowPolicyLevelSettings_Conditions_InterfaceCapacityCondition(nullptr) {}
  ~FlowPolicyLevelSettings_Conditions_InterfaceCapacityCondition() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(FlowPolicyLevelSettings_Conditions_InterfaceCapacityCondition* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(FlowPolicyLevelSettings_Conditions_InterfaceCapacityCondition));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR FlowPolicyLevelSettings_Conditions_InterfaceCapacityCondition(
      ::google::protobuf::internal::ConstantInitialized);

  inline FlowPolicyLevelSettings_Conditions_InterfaceCapacityCondition(const FlowPolicyLevelSettings_Conditions_InterfaceCapacityCondition& from) : FlowPolicyLevelSettings_Conditions_InterfaceCapacityCondition(nullptr, from) {}
  inline FlowPolicyLevelSettings_Conditions_InterfaceCapacityCondition(FlowPolicyLevelSettings_Conditions_InterfaceCapacityCondition&& from) noexcept
      : FlowPolicyLevelSettings_Conditions_InterfaceCapacityCondition(nullptr, std::move(from)) {}
  inline FlowPolicyLevelSettings_Conditions_InterfaceCapacityCondition& operator=(const FlowPolicyLevelSettings_Conditions_InterfaceCapacityCondition& from) {
    CopyFrom(from);
    return *this;
  }
  inline FlowPolicyLevelSettings_Conditions_InterfaceCapacityCondition& operator=(FlowPolicyLevelSettings_Conditions_InterfaceCapacityCondition&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FlowPolicyLevelSettings_Conditions_InterfaceCapacityCondition& default_instance() {
    return *internal_default_instance();
  }
  enum ValueCase {
    kAbsolute = 1,
    kPercentage = 2,
    VALUE_NOT_SET = 0,
  };
  static inline const FlowPolicyLevelSettings_Conditions_InterfaceCapacityCondition* internal_default_instance() {
    return reinterpret_cast<const FlowPolicyLevelSettings_Conditions_InterfaceCapacityCondition*>(
        &_FlowPolicyLevelSettings_Conditions_InterfaceCapacityCondition_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(FlowPolicyLevelSettings_Conditions_InterfaceCapacityCondition& a, FlowPolicyLevelSettings_Conditions_InterfaceCapacityCondition& b) { a.Swap(&b); }
  inline void Swap(FlowPolicyLevelSettings_Conditions_InterfaceCapacityCondition* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FlowPolicyLevelSettings_Conditions_InterfaceCapacityCondition* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FlowPolicyLevelSettings_Conditions_InterfaceCapacityCondition* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<FlowPolicyLevelSettings_Conditions_InterfaceCapacityCondition>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FlowPolicyLevelSettings_Conditions_InterfaceCapacityCondition& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const FlowPolicyLevelSettings_Conditions_InterfaceCapacityCondition& from) { FlowPolicyLevelSettings_Conditions_InterfaceCapacityCondition::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(FlowPolicyLevelSettings_Conditions_InterfaceCapacityCondition* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.InterfaceCapacityCondition"; }

 protected:
  explicit FlowPolicyLevelSettings_Conditions_InterfaceCapacityCondition(::google::protobuf::Arena* arena);
  FlowPolicyLevelSettings_Conditions_InterfaceCapacityCondition(::google::protobuf::Arena* arena, const FlowPolicyLevelSettings_Conditions_InterfaceCapacityCondition& from);
  FlowPolicyLevelSettings_Conditions_InterfaceCapacityCondition(::google::protobuf::Arena* arena, FlowPolicyLevelSettings_Conditions_InterfaceCapacityCondition&& from) noexcept
      : FlowPolicyLevelSettings_Conditions_InterfaceCapacityCondition(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAbsoluteFieldNumber = 1,
    kPercentageFieldNumber = 2,
  };
  // double absolute = 1 [json_name = "absolute", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_absolute() const;
  void clear_absolute() ;
  double absolute() const;
  void set_absolute(double value);

  private:
  double _internal_absolute() const;
  void _internal_set_absolute(double value);

  public:
  // int64 percentage = 2 [json_name = "percentage", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_percentage() const;
  void clear_percentage() ;
  ::int64_t percentage() const;
  void set_percentage(::int64_t value);

  private:
  ::int64_t _internal_percentage() const;
  void _internal_set_percentage(::int64_t value);

  public:
  void clear_value();
  ValueCase value_case() const;
  // @@protoc_insertion_point(class_scope:kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.InterfaceCapacityCondition)
 private:
  class _Internal;
  void set_has_absolute();
  void set_has_percentage();
  inline bool has_value() const;
  inline void clear_has_value();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 2, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const FlowPolicyLevelSettings_Conditions_InterfaceCapacityCondition& from_msg);
    union ValueUnion {
      constexpr ValueUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      double absolute_;
      ::int64_t percentage_;
    } value_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2falerting_2fpublic_2fv202505_2fpolicy_5fflow_2eproto;
};
// -------------------------------------------------------------------

class FlowPolicyLevelSettings_Conditions_ForecastCondition final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.ForecastCondition) */ {
 public:
  inline FlowPolicyLevelSettings_Conditions_ForecastCondition() : FlowPolicyLevelSettings_Conditions_ForecastCondition(nullptr) {}
  ~FlowPolicyLevelSettings_Conditions_ForecastCondition() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(FlowPolicyLevelSettings_Conditions_ForecastCondition* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(FlowPolicyLevelSettings_Conditions_ForecastCondition));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR FlowPolicyLevelSettings_Conditions_ForecastCondition(
      ::google::protobuf::internal::ConstantInitialized);

  inline FlowPolicyLevelSettings_Conditions_ForecastCondition(const FlowPolicyLevelSettings_Conditions_ForecastCondition& from) : FlowPolicyLevelSettings_Conditions_ForecastCondition(nullptr, from) {}
  inline FlowPolicyLevelSettings_Conditions_ForecastCondition(FlowPolicyLevelSettings_Conditions_ForecastCondition&& from) noexcept
      : FlowPolicyLevelSettings_Conditions_ForecastCondition(nullptr, std::move(from)) {}
  inline FlowPolicyLevelSettings_Conditions_ForecastCondition& operator=(const FlowPolicyLevelSettings_Conditions_ForecastCondition& from) {
    CopyFrom(from);
    return *this;
  }
  inline FlowPolicyLevelSettings_Conditions_ForecastCondition& operator=(FlowPolicyLevelSettings_Conditions_ForecastCondition&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FlowPolicyLevelSettings_Conditions_ForecastCondition& default_instance() {
    return *internal_default_instance();
  }
  static inline const FlowPolicyLevelSettings_Conditions_ForecastCondition* internal_default_instance() {
    return reinterpret_cast<const FlowPolicyLevelSettings_Conditions_ForecastCondition*>(
        &_FlowPolicyLevelSettings_Conditions_ForecastCondition_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(FlowPolicyLevelSettings_Conditions_ForecastCondition& a, FlowPolicyLevelSettings_Conditions_ForecastCondition& b) { a.Swap(&b); }
  inline void Swap(FlowPolicyLevelSettings_Conditions_ForecastCondition* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FlowPolicyLevelSettings_Conditions_ForecastCondition* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FlowPolicyLevelSettings_Conditions_ForecastCondition* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<FlowPolicyLevelSettings_Conditions_ForecastCondition>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FlowPolicyLevelSettings_Conditions_ForecastCondition& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const FlowPolicyLevelSettings_Conditions_ForecastCondition& from) { FlowPolicyLevelSettings_Conditions_ForecastCondition::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(FlowPolicyLevelSettings_Conditions_ForecastCondition* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.ForecastCondition"; }

 protected:
  explicit FlowPolicyLevelSettings_Conditions_ForecastCondition(::google::protobuf::Arena* arena);
  FlowPolicyLevelSettings_Conditions_ForecastCondition(::google::protobuf::Arena* arena, const FlowPolicyLevelSettings_Conditions_ForecastCondition& from);
  FlowPolicyLevelSettings_Conditions_ForecastCondition(::google::protobuf::Arena* arena, FlowPolicyLevelSettings_Conditions_ForecastCondition&& from) noexcept
      : FlowPolicyLevelSettings_Conditions_ForecastCondition(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPercentageValueFieldNumber = 2,
    kOperatorFieldNumber = 1,
  };
  // int64 percentage_value = 2 [json_name = "percentageValue"];
  void clear_percentage_value() ;
  ::int64_t percentage_value() const;
  void set_percentage_value(::int64_t value);

  private:
  ::int64_t _internal_percentage_value() const;
  void _internal_set_percentage_value(::int64_t value);

  public:
  // .kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.Operator operator = 1 [json_name = "operator"];
  void clear_operator_() ;
  ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_Operator operator_() const;
  void set_operator_(::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_Operator value);

  private:
  ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_Operator _internal_operator_() const;
  void _internal_set_operator_(::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_Operator value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.ForecastCondition)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const FlowPolicyLevelSettings_Conditions_ForecastCondition& from_msg);
    ::int64_t percentage_value_;
    int operator__;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2falerting_2fpublic_2fv202505_2fpolicy_5fflow_2eproto;
};
// -------------------------------------------------------------------

class FlowPolicyLevelSettings_Conditions_BaselineCondition final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.BaselineCondition) */ {
 public:
  inline FlowPolicyLevelSettings_Conditions_BaselineCondition() : FlowPolicyLevelSettings_Conditions_BaselineCondition(nullptr) {}
  ~FlowPolicyLevelSettings_Conditions_BaselineCondition() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(FlowPolicyLevelSettings_Conditions_BaselineCondition* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(FlowPolicyLevelSettings_Conditions_BaselineCondition));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR FlowPolicyLevelSettings_Conditions_BaselineCondition(
      ::google::protobuf::internal::ConstantInitialized);

  inline FlowPolicyLevelSettings_Conditions_BaselineCondition(const FlowPolicyLevelSettings_Conditions_BaselineCondition& from) : FlowPolicyLevelSettings_Conditions_BaselineCondition(nullptr, from) {}
  inline FlowPolicyLevelSettings_Conditions_BaselineCondition(FlowPolicyLevelSettings_Conditions_BaselineCondition&& from) noexcept
      : FlowPolicyLevelSettings_Conditions_BaselineCondition(nullptr, std::move(from)) {}
  inline FlowPolicyLevelSettings_Conditions_BaselineCondition& operator=(const FlowPolicyLevelSettings_Conditions_BaselineCondition& from) {
    CopyFrom(from);
    return *this;
  }
  inline FlowPolicyLevelSettings_Conditions_BaselineCondition& operator=(FlowPolicyLevelSettings_Conditions_BaselineCondition&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FlowPolicyLevelSettings_Conditions_BaselineCondition& default_instance() {
    return *internal_default_instance();
  }
  enum ValueCase {
    kAbsolute = 1,
    kPercentage = 2,
    VALUE_NOT_SET = 0,
  };
  enum FallbackCase {
    kUseLowest = 4,
    kUseHighest = 5,
    kUseTrigger = 6,
    kSkip = 7,
    kUseValue = 8,
    FALLBACK_NOT_SET = 0,
  };
  static inline const FlowPolicyLevelSettings_Conditions_BaselineCondition* internal_default_instance() {
    return reinterpret_cast<const FlowPolicyLevelSettings_Conditions_BaselineCondition*>(
        &_FlowPolicyLevelSettings_Conditions_BaselineCondition_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(FlowPolicyLevelSettings_Conditions_BaselineCondition& a, FlowPolicyLevelSettings_Conditions_BaselineCondition& b) { a.Swap(&b); }
  inline void Swap(FlowPolicyLevelSettings_Conditions_BaselineCondition* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FlowPolicyLevelSettings_Conditions_BaselineCondition* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FlowPolicyLevelSettings_Conditions_BaselineCondition* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<FlowPolicyLevelSettings_Conditions_BaselineCondition>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FlowPolicyLevelSettings_Conditions_BaselineCondition& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const FlowPolicyLevelSettings_Conditions_BaselineCondition& from) { FlowPolicyLevelSettings_Conditions_BaselineCondition::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(FlowPolicyLevelSettings_Conditions_BaselineCondition* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.BaselineCondition"; }

 protected:
  explicit FlowPolicyLevelSettings_Conditions_BaselineCondition(::google::protobuf::Arena* arena);
  FlowPolicyLevelSettings_Conditions_BaselineCondition(::google::protobuf::Arena* arena, const FlowPolicyLevelSettings_Conditions_BaselineCondition& from);
  FlowPolicyLevelSettings_Conditions_BaselineCondition(::google::protobuf::Arena* arena, FlowPolicyLevelSettings_Conditions_BaselineCondition&& from) noexcept
      : FlowPolicyLevelSettings_Conditions_BaselineCondition(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using DeltaType = FlowPolicyLevelSettings_Conditions_BaselineCondition_DeltaType;
  static constexpr DeltaType DELTA_TYPE_UNSPECIFIED = FlowPolicyLevelSettings_Conditions_BaselineCondition_DeltaType_DELTA_TYPE_UNSPECIFIED;
  static constexpr DeltaType DELTA_TYPE_ABOVE = FlowPolicyLevelSettings_Conditions_BaselineCondition_DeltaType_DELTA_TYPE_ABOVE;
  static constexpr DeltaType DELTA_TYPE_BELOW = FlowPolicyLevelSettings_Conditions_BaselineCondition_DeltaType_DELTA_TYPE_BELOW;
  static inline bool DeltaType_IsValid(int value) {
    return FlowPolicyLevelSettings_Conditions_BaselineCondition_DeltaType_IsValid(value);
  }
  static constexpr DeltaType DeltaType_MIN = FlowPolicyLevelSettings_Conditions_BaselineCondition_DeltaType_DeltaType_MIN;
  static constexpr DeltaType DeltaType_MAX = FlowPolicyLevelSettings_Conditions_BaselineCondition_DeltaType_DeltaType_MAX;
  static constexpr int DeltaType_ARRAYSIZE = FlowPolicyLevelSettings_Conditions_BaselineCondition_DeltaType_DeltaType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* DeltaType_descriptor() {
    return FlowPolicyLevelSettings_Conditions_BaselineCondition_DeltaType_descriptor();
  }
  template <typename T>
  static inline const std::string& DeltaType_Name(T value) {
    return FlowPolicyLevelSettings_Conditions_BaselineCondition_DeltaType_Name(value);
  }
  static inline bool DeltaType_Parse(absl::string_view name, DeltaType* value) {
    return FlowPolicyLevelSettings_Conditions_BaselineCondition_DeltaType_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kDeltaFieldNumber = 3,
    kAbsoluteFieldNumber = 1,
    kPercentageFieldNumber = 2,
    kUseLowestFieldNumber = 4,
    kUseHighestFieldNumber = 5,
    kUseTriggerFieldNumber = 6,
    kSkipFieldNumber = 7,
    kUseValueFieldNumber = 8,
  };
  // .kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.BaselineCondition.DeltaType delta = 3 [json_name = "delta", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_delta() ;
  ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_BaselineCondition_DeltaType delta() const;
  void set_delta(::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_BaselineCondition_DeltaType value);

  private:
  ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_BaselineCondition_DeltaType _internal_delta() const;
  void _internal_set_delta(::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_BaselineCondition_DeltaType value);

  public:
  // double absolute = 1 [json_name = "absolute", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_absolute() const;
  void clear_absolute() ;
  double absolute() const;
  void set_absolute(double value);

  private:
  double _internal_absolute() const;
  void _internal_set_absolute(double value);

  public:
  // int64 percentage = 2 [json_name = "percentage", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_percentage() const;
  void clear_percentage() ;
  ::int64_t percentage() const;
  void set_percentage(::int64_t value);

  private:
  ::int64_t _internal_percentage() const;
  void _internal_set_percentage(::int64_t value);

  public:
  // bool use_lowest = 4 [json_name = "useLowest", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_use_lowest() const;
  void clear_use_lowest() ;
  bool use_lowest() const;
  void set_use_lowest(bool value);

  private:
  bool _internal_use_lowest() const;
  void _internal_set_use_lowest(bool value);

  public:
  // bool use_highest = 5 [json_name = "useHighest", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_use_highest() const;
  void clear_use_highest() ;
  bool use_highest() const;
  void set_use_highest(bool value);

  private:
  bool _internal_use_highest() const;
  void _internal_set_use_highest(bool value);

  public:
  // bool use_trigger = 6 [json_name = "useTrigger", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_use_trigger() const;
  void clear_use_trigger() ;
  bool use_trigger() const;
  void set_use_trigger(bool value);

  private:
  bool _internal_use_trigger() const;
  void _internal_set_use_trigger(bool value);

  public:
  // bool skip = 7 [json_name = "skip", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_skip() const;
  void clear_skip() ;
  bool skip() const;
  void set_skip(bool value);

  private:
  bool _internal_skip() const;
  void _internal_set_skip(bool value);

  public:
  // int64 use_value = 8 [json_name = "useValue", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_use_value() const;
  void clear_use_value() ;
  ::int64_t use_value() const;
  void set_use_value(::int64_t value);

  private:
  ::int64_t _internal_use_value() const;
  void _internal_set_use_value(::int64_t value);

  public:
  void clear_value();
  ValueCase value_case() const;
  void clear_fallback();
  FallbackCase fallback_case() const;
  // @@protoc_insertion_point(class_scope:kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.BaselineCondition)
 private:
  class _Internal;
  void set_has_absolute();
  void set_has_percentage();
  void set_has_use_lowest();
  void set_has_use_highest();
  void set_has_use_trigger();
  void set_has_skip();
  void set_has_use_value();
  inline bool has_value() const;
  inline void clear_has_value();
  inline bool has_fallback() const;
  inline void clear_has_fallback();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 8, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const FlowPolicyLevelSettings_Conditions_BaselineCondition& from_msg);
    int delta_;
    union ValueUnion {
      constexpr ValueUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      double absolute_;
      ::int64_t percentage_;
    } value_;
    union FallbackUnion {
      constexpr FallbackUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      bool use_lowest_;
      bool use_highest_;
      bool use_trigger_;
      bool skip_;
      ::int64_t use_value_;
    } fallback_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[2];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2falerting_2fpublic_2fv202505_2fpolicy_5fflow_2eproto;
};
// -------------------------------------------------------------------

class FlowPolicySettings_EvaluationConfig final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.alerting.public.v202505.FlowPolicySettings.EvaluationConfig) */ {
 public:
  inline FlowPolicySettings_EvaluationConfig() : FlowPolicySettings_EvaluationConfig(nullptr) {}
  ~FlowPolicySettings_EvaluationConfig() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(FlowPolicySettings_EvaluationConfig* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(FlowPolicySettings_EvaluationConfig));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR FlowPolicySettings_EvaluationConfig(
      ::google::protobuf::internal::ConstantInitialized);

  inline FlowPolicySettings_EvaluationConfig(const FlowPolicySettings_EvaluationConfig& from) : FlowPolicySettings_EvaluationConfig(nullptr, from) {}
  inline FlowPolicySettings_EvaluationConfig(FlowPolicySettings_EvaluationConfig&& from) noexcept
      : FlowPolicySettings_EvaluationConfig(nullptr, std::move(from)) {}
  inline FlowPolicySettings_EvaluationConfig& operator=(const FlowPolicySettings_EvaluationConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline FlowPolicySettings_EvaluationConfig& operator=(FlowPolicySettings_EvaluationConfig&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FlowPolicySettings_EvaluationConfig& default_instance() {
    return *internal_default_instance();
  }
  static inline const FlowPolicySettings_EvaluationConfig* internal_default_instance() {
    return reinterpret_cast<const FlowPolicySettings_EvaluationConfig*>(
        &_FlowPolicySettings_EvaluationConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(FlowPolicySettings_EvaluationConfig& a, FlowPolicySettings_EvaluationConfig& b) { a.Swap(&b); }
  inline void Swap(FlowPolicySettings_EvaluationConfig* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FlowPolicySettings_EvaluationConfig* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FlowPolicySettings_EvaluationConfig* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<FlowPolicySettings_EvaluationConfig>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FlowPolicySettings_EvaluationConfig& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const FlowPolicySettings_EvaluationConfig& from) { FlowPolicySettings_EvaluationConfig::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(FlowPolicySettings_EvaluationConfig* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.alerting.public.v202505.FlowPolicySettings.EvaluationConfig"; }

 protected:
  explicit FlowPolicySettings_EvaluationConfig(::google::protobuf::Arena* arena);
  FlowPolicySettings_EvaluationConfig(::google::protobuf::Arena* arena, const FlowPolicySettings_EvaluationConfig& from);
  FlowPolicySettings_EvaluationConfig(::google::protobuf::Arena* arena, FlowPolicySettings_EvaluationConfig&& from) noexcept
      : FlowPolicySettings_EvaluationConfig(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFrequencyFieldNumber = 1,
    kKeyCountFieldNumber = 2,
  };
  // .google.protobuf.Duration frequency = 1 [json_name = "frequency", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_frequency() const;
  void clear_frequency() ;
  const ::google::protobuf::Duration& frequency() const;
  PROTOBUF_NODISCARD ::google::protobuf::Duration* release_frequency();
  ::google::protobuf::Duration* mutable_frequency();
  void set_allocated_frequency(::google::protobuf::Duration* value);
  void unsafe_arena_set_allocated_frequency(::google::protobuf::Duration* value);
  ::google::protobuf::Duration* unsafe_arena_release_frequency();

  private:
  const ::google::protobuf::Duration& _internal_frequency() const;
  ::google::protobuf::Duration* _internal_mutable_frequency();

  public:
  // int64 key_count = 2 [json_name = "keyCount", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_key_count() ;
  ::int64_t key_count() const;
  void set_key_count(::int64_t value);

  private:
  ::int64_t _internal_key_count() const;
  void _internal_set_key_count(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.alerting.public.v202505.FlowPolicySettings.EvaluationConfig)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const FlowPolicySettings_EvaluationConfig& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::Duration* frequency_;
    ::int64_t key_count_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2falerting_2fpublic_2fv202505_2fpolicy_5fflow_2eproto;
};
// -------------------------------------------------------------------

class FlowPolicySettings_BaselineConfig final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.alerting.public.v202505.FlowPolicySettings.BaselineConfig) */ {
 public:
  inline FlowPolicySettings_BaselineConfig() : FlowPolicySettings_BaselineConfig(nullptr) {}
  ~FlowPolicySettings_BaselineConfig() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(FlowPolicySettings_BaselineConfig* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(FlowPolicySettings_BaselineConfig));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR FlowPolicySettings_BaselineConfig(
      ::google::protobuf::internal::ConstantInitialized);

  inline FlowPolicySettings_BaselineConfig(const FlowPolicySettings_BaselineConfig& from) : FlowPolicySettings_BaselineConfig(nullptr, from) {}
  inline FlowPolicySettings_BaselineConfig(FlowPolicySettings_BaselineConfig&& from) noexcept
      : FlowPolicySettings_BaselineConfig(nullptr, std::move(from)) {}
  inline FlowPolicySettings_BaselineConfig& operator=(const FlowPolicySettings_BaselineConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline FlowPolicySettings_BaselineConfig& operator=(FlowPolicySettings_BaselineConfig&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FlowPolicySettings_BaselineConfig& default_instance() {
    return *internal_default_instance();
  }
  static inline const FlowPolicySettings_BaselineConfig* internal_default_instance() {
    return reinterpret_cast<const FlowPolicySettings_BaselineConfig*>(
        &_FlowPolicySettings_BaselineConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(FlowPolicySettings_BaselineConfig& a, FlowPolicySettings_BaselineConfig& b) { a.Swap(&b); }
  inline void Swap(FlowPolicySettings_BaselineConfig* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FlowPolicySettings_BaselineConfig* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FlowPolicySettings_BaselineConfig* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<FlowPolicySettings_BaselineConfig>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FlowPolicySettings_BaselineConfig& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const FlowPolicySettings_BaselineConfig& from) { FlowPolicySettings_BaselineConfig::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(FlowPolicySettings_BaselineConfig* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.alerting.public.v202505.FlowPolicySettings.BaselineConfig"; }

 protected:
  explicit FlowPolicySettings_BaselineConfig(::google::protobuf::Arena* arena);
  FlowPolicySettings_BaselineConfig(::google::protobuf::Arena* arena, const FlowPolicySettings_BaselineConfig& from);
  FlowPolicySettings_BaselineConfig(::google::protobuf::Arena* arena, FlowPolicySettings_BaselineConfig&& from) noexcept
      : FlowPolicySettings_BaselineConfig(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using CompareMode = FlowPolicySettings_BaselineConfig_CompareMode;
  static constexpr CompareMode COMPARE_MODE_UNSPECIFIED = FlowPolicySettings_BaselineConfig_CompareMode_COMPARE_MODE_UNSPECIFIED;
  static constexpr CompareMode COMPARE_MODE_PREVIOUS_HOURS = FlowPolicySettings_BaselineConfig_CompareMode_COMPARE_MODE_PREVIOUS_HOURS;
  static constexpr CompareMode COMPARE_MODE_PREVIOUS_DAYS = FlowPolicySettings_BaselineConfig_CompareMode_COMPARE_MODE_PREVIOUS_DAYS;
  static constexpr CompareMode COMPARE_MODE_PREVIOUS_DAYS_DISTINGUISH_WEEKENDS = FlowPolicySettings_BaselineConfig_CompareMode_COMPARE_MODE_PREVIOUS_DAYS_DISTINGUISH_WEEKENDS;
  static constexpr CompareMode COMPARE_MODE_PREVIOUS_WEEKS = FlowPolicySettings_BaselineConfig_CompareMode_COMPARE_MODE_PREVIOUS_WEEKS;
  static inline bool CompareMode_IsValid(int value) {
    return FlowPolicySettings_BaselineConfig_CompareMode_IsValid(value);
  }
  static constexpr CompareMode CompareMode_MIN = FlowPolicySettings_BaselineConfig_CompareMode_CompareMode_MIN;
  static constexpr CompareMode CompareMode_MAX = FlowPolicySettings_BaselineConfig_CompareMode_CompareMode_MAX;
  static constexpr int CompareMode_ARRAYSIZE = FlowPolicySettings_BaselineConfig_CompareMode_CompareMode_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* CompareMode_descriptor() {
    return FlowPolicySettings_BaselineConfig_CompareMode_descriptor();
  }
  template <typename T>
  static inline const std::string& CompareMode_Name(T value) {
    return FlowPolicySettings_BaselineConfig_CompareMode_Name(value);
  }
  static inline bool CompareMode_Parse(absl::string_view name, CompareMode* value) {
    return FlowPolicySettings_BaselineConfig_CompareMode_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kWindowLengthFieldNumber = 2,
    kWindowStartOffsetFieldNumber = 3,
    kNeighbourhoodRadiusFieldNumber = 6,
    kStoredKeyCountFieldNumber = 1,
    kRollupAggregationFieldNumber = 4,
    kCompareModeFieldNumber = 5,
    kNeighbourhoodAggregationFieldNumber = 7,
    kFinalAggregationFieldNumber = 8,
  };
  // .google.protobuf.Duration window_length = 2 [json_name = "windowLength", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_window_length() const;
  void clear_window_length() ;
  const ::google::protobuf::Duration& window_length() const;
  PROTOBUF_NODISCARD ::google::protobuf::Duration* release_window_length();
  ::google::protobuf::Duration* mutable_window_length();
  void set_allocated_window_length(::google::protobuf::Duration* value);
  void unsafe_arena_set_allocated_window_length(::google::protobuf::Duration* value);
  ::google::protobuf::Duration* unsafe_arena_release_window_length();

  private:
  const ::google::protobuf::Duration& _internal_window_length() const;
  ::google::protobuf::Duration* _internal_mutable_window_length();

  public:
  // .google.protobuf.Duration window_start_offset = 3 [json_name = "windowStartOffset", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_window_start_offset() const;
  void clear_window_start_offset() ;
  const ::google::protobuf::Duration& window_start_offset() const;
  PROTOBUF_NODISCARD ::google::protobuf::Duration* release_window_start_offset();
  ::google::protobuf::Duration* mutable_window_start_offset();
  void set_allocated_window_start_offset(::google::protobuf::Duration* value);
  void unsafe_arena_set_allocated_window_start_offset(::google::protobuf::Duration* value);
  ::google::protobuf::Duration* unsafe_arena_release_window_start_offset();

  private:
  const ::google::protobuf::Duration& _internal_window_start_offset() const;
  ::google::protobuf::Duration* _internal_mutable_window_start_offset();

  public:
  // .google.protobuf.Duration neighbourhood_radius = 6 [json_name = "neighbourhoodRadius", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_neighbourhood_radius() const;
  void clear_neighbourhood_radius() ;
  const ::google::protobuf::Duration& neighbourhood_radius() const;
  PROTOBUF_NODISCARD ::google::protobuf::Duration* release_neighbourhood_radius();
  ::google::protobuf::Duration* mutable_neighbourhood_radius();
  void set_allocated_neighbourhood_radius(::google::protobuf::Duration* value);
  void unsafe_arena_set_allocated_neighbourhood_radius(::google::protobuf::Duration* value);
  ::google::protobuf::Duration* unsafe_arena_release_neighbourhood_radius();

  private:
  const ::google::protobuf::Duration& _internal_neighbourhood_radius() const;
  ::google::protobuf::Duration* _internal_mutable_neighbourhood_radius();

  public:
  // int64 stored_key_count = 1 [json_name = "storedKeyCount", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_stored_key_count() ;
  ::int64_t stored_key_count() const;
  void set_stored_key_count(::int64_t value);

  private:
  ::int64_t _internal_stored_key_count() const;
  void _internal_set_stored_key_count(::int64_t value);

  public:
  // .kentik.alerting.public.v202505.AggregationType rollup_aggregation = 4 [json_name = "rollupAggregation", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_rollup_aggregation() ;
  ::kentik::alerting::public_::v202505::AggregationType rollup_aggregation() const;
  void set_rollup_aggregation(::kentik::alerting::public_::v202505::AggregationType value);

  private:
  ::kentik::alerting::public_::v202505::AggregationType _internal_rollup_aggregation() const;
  void _internal_set_rollup_aggregation(::kentik::alerting::public_::v202505::AggregationType value);

  public:
  // .kentik.alerting.public.v202505.FlowPolicySettings.BaselineConfig.CompareMode compare_mode = 5 [json_name = "compareMode", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_compare_mode() ;
  ::kentik::alerting::public_::v202505::FlowPolicySettings_BaselineConfig_CompareMode compare_mode() const;
  void set_compare_mode(::kentik::alerting::public_::v202505::FlowPolicySettings_BaselineConfig_CompareMode value);

  private:
  ::kentik::alerting::public_::v202505::FlowPolicySettings_BaselineConfig_CompareMode _internal_compare_mode() const;
  void _internal_set_compare_mode(::kentik::alerting::public_::v202505::FlowPolicySettings_BaselineConfig_CompareMode value);

  public:
  // .kentik.alerting.public.v202505.AggregationType neighbourhood_aggregation = 7 [json_name = "neighbourhoodAggregation", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_neighbourhood_aggregation() ;
  ::kentik::alerting::public_::v202505::AggregationType neighbourhood_aggregation() const;
  void set_neighbourhood_aggregation(::kentik::alerting::public_::v202505::AggregationType value);

  private:
  ::kentik::alerting::public_::v202505::AggregationType _internal_neighbourhood_aggregation() const;
  void _internal_set_neighbourhood_aggregation(::kentik::alerting::public_::v202505::AggregationType value);

  public:
  // .kentik.alerting.public.v202505.AggregationType final_aggregation = 8 [json_name = "finalAggregation", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_final_aggregation() ;
  ::kentik::alerting::public_::v202505::AggregationType final_aggregation() const;
  void set_final_aggregation(::kentik::alerting::public_::v202505::AggregationType value);

  private:
  ::kentik::alerting::public_::v202505::AggregationType _internal_final_aggregation() const;
  void _internal_set_final_aggregation(::kentik::alerting::public_::v202505::AggregationType value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.alerting.public.v202505.FlowPolicySettings.BaselineConfig)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 8, 3,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const FlowPolicySettings_BaselineConfig& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::Duration* window_length_;
    ::google::protobuf::Duration* window_start_offset_;
    ::google::protobuf::Duration* neighbourhood_radius_;
    ::int64_t stored_key_count_;
    int rollup_aggregation_;
    int compare_mode_;
    int neighbourhood_aggregation_;
    int final_aggregation_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2falerting_2fpublic_2fv202505_2fpolicy_5fflow_2eproto;
};
// -------------------------------------------------------------------

class FlowPolicyLevelSettings_Conditions final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions) */ {
 public:
  inline FlowPolicyLevelSettings_Conditions() : FlowPolicyLevelSettings_Conditions(nullptr) {}
  ~FlowPolicyLevelSettings_Conditions() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(FlowPolicyLevelSettings_Conditions* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(FlowPolicyLevelSettings_Conditions));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR FlowPolicyLevelSettings_Conditions(
      ::google::protobuf::internal::ConstantInitialized);

  inline FlowPolicyLevelSettings_Conditions(const FlowPolicyLevelSettings_Conditions& from) : FlowPolicyLevelSettings_Conditions(nullptr, from) {}
  inline FlowPolicyLevelSettings_Conditions(FlowPolicyLevelSettings_Conditions&& from) noexcept
      : FlowPolicyLevelSettings_Conditions(nullptr, std::move(from)) {}
  inline FlowPolicyLevelSettings_Conditions& operator=(const FlowPolicyLevelSettings_Conditions& from) {
    CopyFrom(from);
    return *this;
  }
  inline FlowPolicyLevelSettings_Conditions& operator=(FlowPolicyLevelSettings_Conditions&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FlowPolicyLevelSettings_Conditions& default_instance() {
    return *internal_default_instance();
  }
  enum TypeCase {
    kStatic = 1,
    kBaseline = 2,
    kTopKeys = 3,
    kInterfaceCapacity = 4,
    kRatio = 5,
    kForecast = 6,
    TYPE_NOT_SET = 0,
  };
  static inline const FlowPolicyLevelSettings_Conditions* internal_default_instance() {
    return reinterpret_cast<const FlowPolicyLevelSettings_Conditions*>(
        &_FlowPolicyLevelSettings_Conditions_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(FlowPolicyLevelSettings_Conditions& a, FlowPolicyLevelSettings_Conditions& b) { a.Swap(&b); }
  inline void Swap(FlowPolicyLevelSettings_Conditions* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FlowPolicyLevelSettings_Conditions* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FlowPolicyLevelSettings_Conditions* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<FlowPolicyLevelSettings_Conditions>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FlowPolicyLevelSettings_Conditions& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const FlowPolicyLevelSettings_Conditions& from) { FlowPolicyLevelSettings_Conditions::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(FlowPolicyLevelSettings_Conditions* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions"; }

 protected:
  explicit FlowPolicyLevelSettings_Conditions(::google::protobuf::Arena* arena);
  FlowPolicyLevelSettings_Conditions(::google::protobuf::Arena* arena, const FlowPolicyLevelSettings_Conditions& from);
  FlowPolicyLevelSettings_Conditions(::google::protobuf::Arena* arena, FlowPolicyLevelSettings_Conditions&& from) noexcept
      : FlowPolicyLevelSettings_Conditions(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using StaticCondition = FlowPolicyLevelSettings_Conditions_StaticCondition;
  using BaselineCondition = FlowPolicyLevelSettings_Conditions_BaselineCondition;
  using TopKeysCondition = FlowPolicyLevelSettings_Conditions_TopKeysCondition;
  using InterfaceCapacityCondition = FlowPolicyLevelSettings_Conditions_InterfaceCapacityCondition;
  using RatioCondition = FlowPolicyLevelSettings_Conditions_RatioCondition;
  using ForecastCondition = FlowPolicyLevelSettings_Conditions_ForecastCondition;
  using Operator = FlowPolicyLevelSettings_Conditions_Operator;
  static constexpr Operator OPERATOR_UNSPECIFIED = FlowPolicyLevelSettings_Conditions_Operator_OPERATOR_UNSPECIFIED;
  static constexpr Operator OPERATOR_GREATER_THAN_OR_EQUALS = FlowPolicyLevelSettings_Conditions_Operator_OPERATOR_GREATER_THAN_OR_EQUALS;
  static constexpr Operator OPERATOR_GREATER_THAN = FlowPolicyLevelSettings_Conditions_Operator_OPERATOR_GREATER_THAN;
  static constexpr Operator OPERATOR_EQUALS = FlowPolicyLevelSettings_Conditions_Operator_OPERATOR_EQUALS;
  static constexpr Operator OPERATOR_NOT_EQUALS = FlowPolicyLevelSettings_Conditions_Operator_OPERATOR_NOT_EQUALS;
  static constexpr Operator OPERATOR_LESS_THAN = FlowPolicyLevelSettings_Conditions_Operator_OPERATOR_LESS_THAN;
  static constexpr Operator OPERATOR_LESS_THAN_OR_EQUALS = FlowPolicyLevelSettings_Conditions_Operator_OPERATOR_LESS_THAN_OR_EQUALS;
  static constexpr Operator OPERATOR_IN_SET = FlowPolicyLevelSettings_Conditions_Operator_OPERATOR_IN_SET;
  static constexpr Operator OPERATOR_NOT_IN_SET = FlowPolicyLevelSettings_Conditions_Operator_OPERATOR_NOT_IN_SET;
  static inline bool Operator_IsValid(int value) {
    return FlowPolicyLevelSettings_Conditions_Operator_IsValid(value);
  }
  static constexpr Operator Operator_MIN = FlowPolicyLevelSettings_Conditions_Operator_Operator_MIN;
  static constexpr Operator Operator_MAX = FlowPolicyLevelSettings_Conditions_Operator_Operator_MAX;
  static constexpr int Operator_ARRAYSIZE = FlowPolicyLevelSettings_Conditions_Operator_Operator_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* Operator_descriptor() {
    return FlowPolicyLevelSettings_Conditions_Operator_descriptor();
  }
  template <typename T>
  static inline const std::string& Operator_Name(T value) {
    return FlowPolicyLevelSettings_Conditions_Operator_Name(value);
  }
  static inline bool Operator_Parse(absl::string_view name, Operator* value) {
    return FlowPolicyLevelSettings_Conditions_Operator_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kStaticFieldNumber = 1,
    kBaselineFieldNumber = 2,
    kTopKeysFieldNumber = 3,
    kInterfaceCapacityFieldNumber = 4,
    kRatioFieldNumber = 5,
    kForecastFieldNumber = 6,
  };
  // .kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.StaticCondition static = 1 [json_name = "static", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_static_() const;
  private:
  bool _internal_has_static_() const;

  public:
  void clear_static_() ;
  const ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_StaticCondition& static_() const;
  PROTOBUF_NODISCARD ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_StaticCondition* release_static_();
  ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_StaticCondition* mutable_static_();
  void set_allocated_static_(::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_StaticCondition* value);
  void unsafe_arena_set_allocated_static_(::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_StaticCondition* value);
  ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_StaticCondition* unsafe_arena_release_static_();

  private:
  const ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_StaticCondition& _internal_static_() const;
  ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_StaticCondition* _internal_mutable_static_();

  public:
  // .kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.BaselineCondition baseline = 2 [json_name = "baseline", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_baseline() const;
  private:
  bool _internal_has_baseline() const;

  public:
  void clear_baseline() ;
  const ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_BaselineCondition& baseline() const;
  PROTOBUF_NODISCARD ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_BaselineCondition* release_baseline();
  ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_BaselineCondition* mutable_baseline();
  void set_allocated_baseline(::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_BaselineCondition* value);
  void unsafe_arena_set_allocated_baseline(::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_BaselineCondition* value);
  ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_BaselineCondition* unsafe_arena_release_baseline();

  private:
  const ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_BaselineCondition& _internal_baseline() const;
  ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_BaselineCondition* _internal_mutable_baseline();

  public:
  // .kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.TopKeysCondition top_keys = 3 [json_name = "topKeys", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_top_keys() const;
  private:
  bool _internal_has_top_keys() const;

  public:
  void clear_top_keys() ;
  const ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_TopKeysCondition& top_keys() const;
  PROTOBUF_NODISCARD ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_TopKeysCondition* release_top_keys();
  ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_TopKeysCondition* mutable_top_keys();
  void set_allocated_top_keys(::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_TopKeysCondition* value);
  void unsafe_arena_set_allocated_top_keys(::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_TopKeysCondition* value);
  ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_TopKeysCondition* unsafe_arena_release_top_keys();

  private:
  const ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_TopKeysCondition& _internal_top_keys() const;
  ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_TopKeysCondition* _internal_mutable_top_keys();

  public:
  // .kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.InterfaceCapacityCondition interface_capacity = 4 [json_name = "interfaceCapacity", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_interface_capacity() const;
  private:
  bool _internal_has_interface_capacity() const;

  public:
  void clear_interface_capacity() ;
  const ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_InterfaceCapacityCondition& interface_capacity() const;
  PROTOBUF_NODISCARD ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_InterfaceCapacityCondition* release_interface_capacity();
  ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_InterfaceCapacityCondition* mutable_interface_capacity();
  void set_allocated_interface_capacity(::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_InterfaceCapacityCondition* value);
  void unsafe_arena_set_allocated_interface_capacity(::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_InterfaceCapacityCondition* value);
  ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_InterfaceCapacityCondition* unsafe_arena_release_interface_capacity();

  private:
  const ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_InterfaceCapacityCondition& _internal_interface_capacity() const;
  ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_InterfaceCapacityCondition* _internal_mutable_interface_capacity();

  public:
  // .kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.RatioCondition ratio = 5 [json_name = "ratio", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_ratio() const;
  private:
  bool _internal_has_ratio() const;

  public:
  void clear_ratio() ;
  const ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_RatioCondition& ratio() const;
  PROTOBUF_NODISCARD ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_RatioCondition* release_ratio();
  ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_RatioCondition* mutable_ratio();
  void set_allocated_ratio(::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_RatioCondition* value);
  void unsafe_arena_set_allocated_ratio(::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_RatioCondition* value);
  ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_RatioCondition* unsafe_arena_release_ratio();

  private:
  const ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_RatioCondition& _internal_ratio() const;
  ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_RatioCondition* _internal_mutable_ratio();

  public:
  // .kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.ForecastCondition forecast = 6 [json_name = "forecast", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_forecast() const;
  private:
  bool _internal_has_forecast() const;

  public:
  void clear_forecast() ;
  const ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_ForecastCondition& forecast() const;
  PROTOBUF_NODISCARD ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_ForecastCondition* release_forecast();
  ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_ForecastCondition* mutable_forecast();
  void set_allocated_forecast(::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_ForecastCondition* value);
  void unsafe_arena_set_allocated_forecast(::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_ForecastCondition* value);
  ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_ForecastCondition* unsafe_arena_release_forecast();

  private:
  const ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_ForecastCondition& _internal_forecast() const;
  ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_ForecastCondition* _internal_mutable_forecast();

  public:
  void clear_type();
  TypeCase type_case() const;
  // @@protoc_insertion_point(class_scope:kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions)
 private:
  class _Internal;
  void set_has_static_();
  void set_has_baseline();
  void set_has_top_keys();
  void set_has_interface_capacity();
  void set_has_ratio();
  void set_has_forecast();
  inline bool has_type() const;
  inline void clear_has_type();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 6, 6,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const FlowPolicyLevelSettings_Conditions& from_msg);
    union TypeUnion {
      constexpr TypeUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_StaticCondition* static__;
      ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_BaselineCondition* baseline_;
      ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_TopKeysCondition* top_keys_;
      ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_InterfaceCapacityCondition* interface_capacity_;
      ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_RatioCondition* ratio_;
      ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_ForecastCondition* forecast_;
    } type_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2falerting_2fpublic_2fv202505_2fpolicy_5fflow_2eproto;
};
// -------------------------------------------------------------------

class FlowPolicyLevelSettings_ActivationSettings final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.alerting.public.v202505.FlowPolicyLevelSettings.ActivationSettings) */ {
 public:
  inline FlowPolicyLevelSettings_ActivationSettings() : FlowPolicyLevelSettings_ActivationSettings(nullptr) {}
  ~FlowPolicyLevelSettings_ActivationSettings() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(FlowPolicyLevelSettings_ActivationSettings* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(FlowPolicyLevelSettings_ActivationSettings));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR FlowPolicyLevelSettings_ActivationSettings(
      ::google::protobuf::internal::ConstantInitialized);

  inline FlowPolicyLevelSettings_ActivationSettings(const FlowPolicyLevelSettings_ActivationSettings& from) : FlowPolicyLevelSettings_ActivationSettings(nullptr, from) {}
  inline FlowPolicyLevelSettings_ActivationSettings(FlowPolicyLevelSettings_ActivationSettings&& from) noexcept
      : FlowPolicyLevelSettings_ActivationSettings(nullptr, std::move(from)) {}
  inline FlowPolicyLevelSettings_ActivationSettings& operator=(const FlowPolicyLevelSettings_ActivationSettings& from) {
    CopyFrom(from);
    return *this;
  }
  inline FlowPolicyLevelSettings_ActivationSettings& operator=(FlowPolicyLevelSettings_ActivationSettings&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FlowPolicyLevelSettings_ActivationSettings& default_instance() {
    return *internal_default_instance();
  }
  static inline const FlowPolicyLevelSettings_ActivationSettings* internal_default_instance() {
    return reinterpret_cast<const FlowPolicyLevelSettings_ActivationSettings*>(
        &_FlowPolicyLevelSettings_ActivationSettings_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(FlowPolicyLevelSettings_ActivationSettings& a, FlowPolicyLevelSettings_ActivationSettings& b) { a.Swap(&b); }
  inline void Swap(FlowPolicyLevelSettings_ActivationSettings* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FlowPolicyLevelSettings_ActivationSettings* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FlowPolicyLevelSettings_ActivationSettings* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<FlowPolicyLevelSettings_ActivationSettings>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FlowPolicyLevelSettings_ActivationSettings& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const FlowPolicyLevelSettings_ActivationSettings& from) { FlowPolicyLevelSettings_ActivationSettings::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(FlowPolicyLevelSettings_ActivationSettings* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.alerting.public.v202505.FlowPolicyLevelSettings.ActivationSettings"; }

 protected:
  explicit FlowPolicyLevelSettings_ActivationSettings(::google::protobuf::Arena* arena);
  FlowPolicyLevelSettings_ActivationSettings(::google::protobuf::Arena* arena, const FlowPolicyLevelSettings_ActivationSettings& from);
  FlowPolicyLevelSettings_ActivationSettings(::google::protobuf::Arena* arena, FlowPolicyLevelSettings_ActivationSettings&& from) noexcept
      : FlowPolicyLevelSettings_ActivationSettings(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMatchWindowFieldNumber = 2,
    kResetCountWindowFieldNumber = 3,
    kMatchTimesFieldNumber = 1,
  };
  // .google.protobuf.Duration match_window = 2 [json_name = "matchWindow", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_match_window() const;
  void clear_match_window() ;
  const ::google::protobuf::Duration& match_window() const;
  PROTOBUF_NODISCARD ::google::protobuf::Duration* release_match_window();
  ::google::protobuf::Duration* mutable_match_window();
  void set_allocated_match_window(::google::protobuf::Duration* value);
  void unsafe_arena_set_allocated_match_window(::google::protobuf::Duration* value);
  ::google::protobuf::Duration* unsafe_arena_release_match_window();

  private:
  const ::google::protobuf::Duration& _internal_match_window() const;
  ::google::protobuf::Duration* _internal_mutable_match_window();

  public:
  // .google.protobuf.Duration reset_count_window = 3 [json_name = "resetCountWindow", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_reset_count_window() const;
  void clear_reset_count_window() ;
  const ::google::protobuf::Duration& reset_count_window() const;
  PROTOBUF_NODISCARD ::google::protobuf::Duration* release_reset_count_window();
  ::google::protobuf::Duration* mutable_reset_count_window();
  void set_allocated_reset_count_window(::google::protobuf::Duration* value);
  void unsafe_arena_set_allocated_reset_count_window(::google::protobuf::Duration* value);
  ::google::protobuf::Duration* unsafe_arena_release_reset_count_window();

  private:
  const ::google::protobuf::Duration& _internal_reset_count_window() const;
  ::google::protobuf::Duration* _internal_mutable_reset_count_window();

  public:
  // int64 match_times = 1 [json_name = "matchTimes", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_match_times() ;
  ::int64_t match_times() const;
  void set_match_times(::int64_t value);

  private:
  ::int64_t _internal_match_times() const;
  void _internal_set_match_times(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.alerting.public.v202505.FlowPolicyLevelSettings.ActivationSettings)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 2,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const FlowPolicyLevelSettings_ActivationSettings& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::Duration* match_window_;
    ::google::protobuf::Duration* reset_count_window_;
    ::int64_t match_times_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2falerting_2fpublic_2fv202505_2fpolicy_5fflow_2eproto;
};
// -------------------------------------------------------------------

class FlowPolicySettings_DatasetConfig final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.alerting.public.v202505.FlowPolicySettings.DatasetConfig) */ {
 public:
  inline FlowPolicySettings_DatasetConfig() : FlowPolicySettings_DatasetConfig(nullptr) {}
  ~FlowPolicySettings_DatasetConfig() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(FlowPolicySettings_DatasetConfig* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(FlowPolicySettings_DatasetConfig));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR FlowPolicySettings_DatasetConfig(
      ::google::protobuf::internal::ConstantInitialized);

  inline FlowPolicySettings_DatasetConfig(const FlowPolicySettings_DatasetConfig& from) : FlowPolicySettings_DatasetConfig(nullptr, from) {}
  inline FlowPolicySettings_DatasetConfig(FlowPolicySettings_DatasetConfig&& from) noexcept
      : FlowPolicySettings_DatasetConfig(nullptr, std::move(from)) {}
  inline FlowPolicySettings_DatasetConfig& operator=(const FlowPolicySettings_DatasetConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline FlowPolicySettings_DatasetConfig& operator=(FlowPolicySettings_DatasetConfig&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FlowPolicySettings_DatasetConfig& default_instance() {
    return *internal_default_instance();
  }
  static inline const FlowPolicySettings_DatasetConfig* internal_default_instance() {
    return reinterpret_cast<const FlowPolicySettings_DatasetConfig*>(
        &_FlowPolicySettings_DatasetConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(FlowPolicySettings_DatasetConfig& a, FlowPolicySettings_DatasetConfig& b) { a.Swap(&b); }
  inline void Swap(FlowPolicySettings_DatasetConfig* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FlowPolicySettings_DatasetConfig* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FlowPolicySettings_DatasetConfig* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<FlowPolicySettings_DatasetConfig>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FlowPolicySettings_DatasetConfig& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const FlowPolicySettings_DatasetConfig& from) { FlowPolicySettings_DatasetConfig::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(FlowPolicySettings_DatasetConfig* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.alerting.public.v202505.FlowPolicySettings.DatasetConfig"; }

 protected:
  explicit FlowPolicySettings_DatasetConfig(::google::protobuf::Arena* arena);
  FlowPolicySettings_DatasetConfig(::google::protobuf::Arena* arena, const FlowPolicySettings_DatasetConfig& from);
  FlowPolicySettings_DatasetConfig(::google::protobuf::Arena* arena, FlowPolicySettings_DatasetConfig&& from) noexcept
      : FlowPolicySettings_DatasetConfig(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDimensionsFieldNumber = 3,
    kMetricsFieldNumber = 4,
    kSourcesFieldNumber = 1,
    kFiltersFieldNumber = 2,
  };
  // repeated string dimensions = 3 [json_name = "dimensions", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int dimensions_size() const;
  private:
  int _internal_dimensions_size() const;

  public:
  void clear_dimensions() ;
  const std::string& dimensions(int index) const;
  std::string* mutable_dimensions(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_dimensions(int index, Arg_&& value, Args_... args);
  std::string* add_dimensions();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_dimensions(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& dimensions() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_dimensions();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_dimensions() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_dimensions();

  public:
  // repeated string metrics = 4 [json_name = "metrics", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int metrics_size() const;
  private:
  int _internal_metrics_size() const;

  public:
  void clear_metrics() ;
  const std::string& metrics(int index) const;
  std::string* mutable_metrics(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_metrics(int index, Arg_&& value, Args_... args);
  std::string* add_metrics();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_metrics(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& metrics() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_metrics();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_metrics() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_metrics();

  public:
  // .kentik.alerting.public.v202505.PolicyDataSources sources = 1 [json_name = "sources", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_sources() const;
  void clear_sources() ;
  const ::kentik::alerting::public_::v202505::PolicyDataSources& sources() const;
  PROTOBUF_NODISCARD ::kentik::alerting::public_::v202505::PolicyDataSources* release_sources();
  ::kentik::alerting::public_::v202505::PolicyDataSources* mutable_sources();
  void set_allocated_sources(::kentik::alerting::public_::v202505::PolicyDataSources* value);
  void unsafe_arena_set_allocated_sources(::kentik::alerting::public_::v202505::PolicyDataSources* value);
  ::kentik::alerting::public_::v202505::PolicyDataSources* unsafe_arena_release_sources();

  private:
  const ::kentik::alerting::public_::v202505::PolicyDataSources& _internal_sources() const;
  ::kentik::alerting::public_::v202505::PolicyDataSources* _internal_mutable_sources();

  public:
  // .kentik.alerting.public.v202505.PolicyFilters filters = 2 [json_name = "filters", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_filters() const;
  void clear_filters() ;
  const ::kentik::alerting::public_::v202505::PolicyFilters& filters() const;
  PROTOBUF_NODISCARD ::kentik::alerting::public_::v202505::PolicyFilters* release_filters();
  ::kentik::alerting::public_::v202505::PolicyFilters* mutable_filters();
  void set_allocated_filters(::kentik::alerting::public_::v202505::PolicyFilters* value);
  void unsafe_arena_set_allocated_filters(::kentik::alerting::public_::v202505::PolicyFilters* value);
  ::kentik::alerting::public_::v202505::PolicyFilters* unsafe_arena_release_filters();

  private:
  const ::kentik::alerting::public_::v202505::PolicyFilters& _internal_filters() const;
  ::kentik::alerting::public_::v202505::PolicyFilters* _internal_mutable_filters();

  public:
  // @@protoc_insertion_point(class_scope:kentik.alerting.public.v202505.FlowPolicySettings.DatasetConfig)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 2,
      89, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const FlowPolicySettings_DatasetConfig& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<std::string> dimensions_;
    ::google::protobuf::RepeatedPtrField<std::string> metrics_;
    ::kentik::alerting::public_::v202505::PolicyDataSources* sources_;
    ::kentik::alerting::public_::v202505::PolicyFilters* filters_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2falerting_2fpublic_2fv202505_2fpolicy_5fflow_2eproto;
};
// -------------------------------------------------------------------

class FlowPolicyLevelSettings final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.alerting.public.v202505.FlowPolicyLevelSettings) */ {
 public:
  inline FlowPolicyLevelSettings() : FlowPolicyLevelSettings(nullptr) {}
  ~FlowPolicyLevelSettings() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(FlowPolicyLevelSettings* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(FlowPolicyLevelSettings));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR FlowPolicyLevelSettings(
      ::google::protobuf::internal::ConstantInitialized);

  inline FlowPolicyLevelSettings(const FlowPolicyLevelSettings& from) : FlowPolicyLevelSettings(nullptr, from) {}
  inline FlowPolicyLevelSettings(FlowPolicyLevelSettings&& from) noexcept
      : FlowPolicyLevelSettings(nullptr, std::move(from)) {}
  inline FlowPolicyLevelSettings& operator=(const FlowPolicyLevelSettings& from) {
    CopyFrom(from);
    return *this;
  }
  inline FlowPolicyLevelSettings& operator=(FlowPolicyLevelSettings&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FlowPolicyLevelSettings& default_instance() {
    return *internal_default_instance();
  }
  static inline const FlowPolicyLevelSettings* internal_default_instance() {
    return reinterpret_cast<const FlowPolicyLevelSettings*>(
        &_FlowPolicyLevelSettings_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 13;
  friend void swap(FlowPolicyLevelSettings& a, FlowPolicyLevelSettings& b) { a.Swap(&b); }
  inline void Swap(FlowPolicyLevelSettings* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FlowPolicyLevelSettings* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FlowPolicyLevelSettings* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<FlowPolicyLevelSettings>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FlowPolicyLevelSettings& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const FlowPolicyLevelSettings& from) { FlowPolicyLevelSettings::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(FlowPolicyLevelSettings* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.alerting.public.v202505.FlowPolicyLevelSettings"; }

 protected:
  explicit FlowPolicyLevelSettings(::google::protobuf::Arena* arena);
  FlowPolicyLevelSettings(::google::protobuf::Arena* arena, const FlowPolicyLevelSettings& from);
  FlowPolicyLevelSettings(::google::protobuf::Arena* arena, FlowPolicyLevelSettings&& from) noexcept
      : FlowPolicyLevelSettings(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using ActivationSettings = FlowPolicyLevelSettings_ActivationSettings;
  using Conditions = FlowPolicyLevelSettings_Conditions;
  using MitigationAssociation = FlowPolicyLevelSettings_MitigationAssociation;

  // accessors -------------------------------------------------------
  enum : int {
    kConditionsFieldNumber = 1,
    kMitigationAssociationsFieldNumber = 3,
    kActivationFieldNumber = 2,
  };
  // repeated .kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions conditions = 1 [json_name = "conditions", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int conditions_size() const;
  private:
  int _internal_conditions_size() const;

  public:
  void clear_conditions() ;
  ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions* mutable_conditions(int index);
  ::google::protobuf::RepeatedPtrField<::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions>* mutable_conditions();

  private:
  const ::google::protobuf::RepeatedPtrField<::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions>& _internal_conditions() const;
  ::google::protobuf::RepeatedPtrField<::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions>* _internal_mutable_conditions();
  public:
  const ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions& conditions(int index) const;
  ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions* add_conditions();
  const ::google::protobuf::RepeatedPtrField<::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions>& conditions() const;
  // repeated .kentik.alerting.public.v202505.FlowPolicyLevelSettings.MitigationAssociation mitigation_associations = 3 [json_name = "mitigationAssociations", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int mitigation_associations_size() const;
  private:
  int _internal_mitigation_associations_size() const;

  public:
  void clear_mitigation_associations() ;
  ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_MitigationAssociation* mutable_mitigation_associations(int index);
  ::google::protobuf::RepeatedPtrField<::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_MitigationAssociation>* mutable_mitigation_associations();

  private:
  const ::google::protobuf::RepeatedPtrField<::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_MitigationAssociation>& _internal_mitigation_associations() const;
  ::google::protobuf::RepeatedPtrField<::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_MitigationAssociation>* _internal_mutable_mitigation_associations();
  public:
  const ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_MitigationAssociation& mitigation_associations(int index) const;
  ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_MitigationAssociation* add_mitigation_associations();
  const ::google::protobuf::RepeatedPtrField<::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_MitigationAssociation>& mitigation_associations() const;
  // .kentik.alerting.public.v202505.FlowPolicyLevelSettings.ActivationSettings activation = 2 [json_name = "activation", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_activation() const;
  void clear_activation() ;
  const ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_ActivationSettings& activation() const;
  PROTOBUF_NODISCARD ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_ActivationSettings* release_activation();
  ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_ActivationSettings* mutable_activation();
  void set_allocated_activation(::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_ActivationSettings* value);
  void unsafe_arena_set_allocated_activation(::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_ActivationSettings* value);
  ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_ActivationSettings* unsafe_arena_release_activation();

  private:
  const ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_ActivationSettings& _internal_activation() const;
  ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_ActivationSettings* _internal_mutable_activation();

  public:
  // @@protoc_insertion_point(class_scope:kentik.alerting.public.v202505.FlowPolicyLevelSettings)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 3,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const FlowPolicyLevelSettings& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions > conditions_;
    ::google::protobuf::RepeatedPtrField< ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_MitigationAssociation > mitigation_associations_;
    ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_ActivationSettings* activation_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2falerting_2fpublic_2fv202505_2fpolicy_5fflow_2eproto;
};
// -------------------------------------------------------------------

class FlowPolicySettings final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.alerting.public.v202505.FlowPolicySettings) */ {
 public:
  inline FlowPolicySettings() : FlowPolicySettings(nullptr) {}
  ~FlowPolicySettings() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(FlowPolicySettings* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(FlowPolicySettings));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR FlowPolicySettings(
      ::google::protobuf::internal::ConstantInitialized);

  inline FlowPolicySettings(const FlowPolicySettings& from) : FlowPolicySettings(nullptr, from) {}
  inline FlowPolicySettings(FlowPolicySettings&& from) noexcept
      : FlowPolicySettings(nullptr, std::move(from)) {}
  inline FlowPolicySettings& operator=(const FlowPolicySettings& from) {
    CopyFrom(from);
    return *this;
  }
  inline FlowPolicySettings& operator=(FlowPolicySettings&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FlowPolicySettings& default_instance() {
    return *internal_default_instance();
  }
  static inline const FlowPolicySettings* internal_default_instance() {
    return reinterpret_cast<const FlowPolicySettings*>(
        &_FlowPolicySettings_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(FlowPolicySettings& a, FlowPolicySettings& b) { a.Swap(&b); }
  inline void Swap(FlowPolicySettings* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FlowPolicySettings* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FlowPolicySettings* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<FlowPolicySettings>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FlowPolicySettings& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const FlowPolicySettings& from) { FlowPolicySettings::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(FlowPolicySettings* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.alerting.public.v202505.FlowPolicySettings"; }

 protected:
  explicit FlowPolicySettings(::google::protobuf::Arena* arena);
  FlowPolicySettings(::google::protobuf::Arena* arena, const FlowPolicySettings& from);
  FlowPolicySettings(::google::protobuf::Arena* arena, FlowPolicySettings&& from) noexcept
      : FlowPolicySettings(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using DatasetConfig = FlowPolicySettings_DatasetConfig;
  using EvaluationConfig = FlowPolicySettings_EvaluationConfig;
  using BaselineConfig = FlowPolicySettings_BaselineConfig;

  // accessors -------------------------------------------------------
  enum : int {
    kDatasetFieldNumber = 1,
    kEvaluationFieldNumber = 2,
    kBaselineFieldNumber = 3,
  };
  // .kentik.alerting.public.v202505.FlowPolicySettings.DatasetConfig dataset = 1 [json_name = "dataset", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_dataset() const;
  void clear_dataset() ;
  const ::kentik::alerting::public_::v202505::FlowPolicySettings_DatasetConfig& dataset() const;
  PROTOBUF_NODISCARD ::kentik::alerting::public_::v202505::FlowPolicySettings_DatasetConfig* release_dataset();
  ::kentik::alerting::public_::v202505::FlowPolicySettings_DatasetConfig* mutable_dataset();
  void set_allocated_dataset(::kentik::alerting::public_::v202505::FlowPolicySettings_DatasetConfig* value);
  void unsafe_arena_set_allocated_dataset(::kentik::alerting::public_::v202505::FlowPolicySettings_DatasetConfig* value);
  ::kentik::alerting::public_::v202505::FlowPolicySettings_DatasetConfig* unsafe_arena_release_dataset();

  private:
  const ::kentik::alerting::public_::v202505::FlowPolicySettings_DatasetConfig& _internal_dataset() const;
  ::kentik::alerting::public_::v202505::FlowPolicySettings_DatasetConfig* _internal_mutable_dataset();

  public:
  // .kentik.alerting.public.v202505.FlowPolicySettings.EvaluationConfig evaluation = 2 [json_name = "evaluation", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_evaluation() const;
  void clear_evaluation() ;
  const ::kentik::alerting::public_::v202505::FlowPolicySettings_EvaluationConfig& evaluation() const;
  PROTOBUF_NODISCARD ::kentik::alerting::public_::v202505::FlowPolicySettings_EvaluationConfig* release_evaluation();
  ::kentik::alerting::public_::v202505::FlowPolicySettings_EvaluationConfig* mutable_evaluation();
  void set_allocated_evaluation(::kentik::alerting::public_::v202505::FlowPolicySettings_EvaluationConfig* value);
  void unsafe_arena_set_allocated_evaluation(::kentik::alerting::public_::v202505::FlowPolicySettings_EvaluationConfig* value);
  ::kentik::alerting::public_::v202505::FlowPolicySettings_EvaluationConfig* unsafe_arena_release_evaluation();

  private:
  const ::kentik::alerting::public_::v202505::FlowPolicySettings_EvaluationConfig& _internal_evaluation() const;
  ::kentik::alerting::public_::v202505::FlowPolicySettings_EvaluationConfig* _internal_mutable_evaluation();

  public:
  // .kentik.alerting.public.v202505.FlowPolicySettings.BaselineConfig baseline = 3 [json_name = "baseline", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_baseline() const;
  void clear_baseline() ;
  const ::kentik::alerting::public_::v202505::FlowPolicySettings_BaselineConfig& baseline() const;
  PROTOBUF_NODISCARD ::kentik::alerting::public_::v202505::FlowPolicySettings_BaselineConfig* release_baseline();
  ::kentik::alerting::public_::v202505::FlowPolicySettings_BaselineConfig* mutable_baseline();
  void set_allocated_baseline(::kentik::alerting::public_::v202505::FlowPolicySettings_BaselineConfig* value);
  void unsafe_arena_set_allocated_baseline(::kentik::alerting::public_::v202505::FlowPolicySettings_BaselineConfig* value);
  ::kentik::alerting::public_::v202505::FlowPolicySettings_BaselineConfig* unsafe_arena_release_baseline();

  private:
  const ::kentik::alerting::public_::v202505::FlowPolicySettings_BaselineConfig& _internal_baseline() const;
  ::kentik::alerting::public_::v202505::FlowPolicySettings_BaselineConfig* _internal_mutable_baseline();

  public:
  // @@protoc_insertion_point(class_scope:kentik.alerting.public.v202505.FlowPolicySettings)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 3,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const FlowPolicySettings& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::kentik::alerting::public_::v202505::FlowPolicySettings_DatasetConfig* dataset_;
    ::kentik::alerting::public_::v202505::FlowPolicySettings_EvaluationConfig* evaluation_;
    ::kentik::alerting::public_::v202505::FlowPolicySettings_BaselineConfig* baseline_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2falerting_2fpublic_2fv202505_2fpolicy_5fflow_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// FlowPolicySettings_DatasetConfig

// .kentik.alerting.public.v202505.PolicyDataSources sources = 1 [json_name = "sources", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool FlowPolicySettings_DatasetConfig::has_sources() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.sources_ != nullptr);
  return value;
}
inline const ::kentik::alerting::public_::v202505::PolicyDataSources& FlowPolicySettings_DatasetConfig::_internal_sources() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::alerting::public_::v202505::PolicyDataSources* p = _impl_.sources_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::alerting::public_::v202505::PolicyDataSources&>(::kentik::alerting::public_::v202505::_PolicyDataSources_default_instance_);
}
inline const ::kentik::alerting::public_::v202505::PolicyDataSources& FlowPolicySettings_DatasetConfig::sources() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.FlowPolicySettings.DatasetConfig.sources)
  return _internal_sources();
}
inline void FlowPolicySettings_DatasetConfig::unsafe_arena_set_allocated_sources(::kentik::alerting::public_::v202505::PolicyDataSources* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.sources_);
  }
  _impl_.sources_ = reinterpret_cast<::kentik::alerting::public_::v202505::PolicyDataSources*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.alerting.public.v202505.FlowPolicySettings.DatasetConfig.sources)
}
inline ::kentik::alerting::public_::v202505::PolicyDataSources* FlowPolicySettings_DatasetConfig::release_sources() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::alerting::public_::v202505::PolicyDataSources* released = _impl_.sources_;
  _impl_.sources_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::alerting::public_::v202505::PolicyDataSources* FlowPolicySettings_DatasetConfig::unsafe_arena_release_sources() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.alerting.public.v202505.FlowPolicySettings.DatasetConfig.sources)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::alerting::public_::v202505::PolicyDataSources* temp = _impl_.sources_;
  _impl_.sources_ = nullptr;
  return temp;
}
inline ::kentik::alerting::public_::v202505::PolicyDataSources* FlowPolicySettings_DatasetConfig::_internal_mutable_sources() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.sources_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::alerting::public_::v202505::PolicyDataSources>(GetArena());
    _impl_.sources_ = reinterpret_cast<::kentik::alerting::public_::v202505::PolicyDataSources*>(p);
  }
  return _impl_.sources_;
}
inline ::kentik::alerting::public_::v202505::PolicyDataSources* FlowPolicySettings_DatasetConfig::mutable_sources() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::kentik::alerting::public_::v202505::PolicyDataSources* _msg = _internal_mutable_sources();
  // @@protoc_insertion_point(field_mutable:kentik.alerting.public.v202505.FlowPolicySettings.DatasetConfig.sources)
  return _msg;
}
inline void FlowPolicySettings_DatasetConfig::set_allocated_sources(::kentik::alerting::public_::v202505::PolicyDataSources* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.sources_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.sources_ = reinterpret_cast<::kentik::alerting::public_::v202505::PolicyDataSources*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.alerting.public.v202505.FlowPolicySettings.DatasetConfig.sources)
}

// .kentik.alerting.public.v202505.PolicyFilters filters = 2 [json_name = "filters", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool FlowPolicySettings_DatasetConfig::has_filters() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.filters_ != nullptr);
  return value;
}
inline const ::kentik::alerting::public_::v202505::PolicyFilters& FlowPolicySettings_DatasetConfig::_internal_filters() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::alerting::public_::v202505::PolicyFilters* p = _impl_.filters_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::alerting::public_::v202505::PolicyFilters&>(::kentik::alerting::public_::v202505::_PolicyFilters_default_instance_);
}
inline const ::kentik::alerting::public_::v202505::PolicyFilters& FlowPolicySettings_DatasetConfig::filters() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.FlowPolicySettings.DatasetConfig.filters)
  return _internal_filters();
}
inline void FlowPolicySettings_DatasetConfig::unsafe_arena_set_allocated_filters(::kentik::alerting::public_::v202505::PolicyFilters* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.filters_);
  }
  _impl_.filters_ = reinterpret_cast<::kentik::alerting::public_::v202505::PolicyFilters*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.alerting.public.v202505.FlowPolicySettings.DatasetConfig.filters)
}
inline ::kentik::alerting::public_::v202505::PolicyFilters* FlowPolicySettings_DatasetConfig::release_filters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::kentik::alerting::public_::v202505::PolicyFilters* released = _impl_.filters_;
  _impl_.filters_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::alerting::public_::v202505::PolicyFilters* FlowPolicySettings_DatasetConfig::unsafe_arena_release_filters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.alerting.public.v202505.FlowPolicySettings.DatasetConfig.filters)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::kentik::alerting::public_::v202505::PolicyFilters* temp = _impl_.filters_;
  _impl_.filters_ = nullptr;
  return temp;
}
inline ::kentik::alerting::public_::v202505::PolicyFilters* FlowPolicySettings_DatasetConfig::_internal_mutable_filters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.filters_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::alerting::public_::v202505::PolicyFilters>(GetArena());
    _impl_.filters_ = reinterpret_cast<::kentik::alerting::public_::v202505::PolicyFilters*>(p);
  }
  return _impl_.filters_;
}
inline ::kentik::alerting::public_::v202505::PolicyFilters* FlowPolicySettings_DatasetConfig::mutable_filters() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::kentik::alerting::public_::v202505::PolicyFilters* _msg = _internal_mutable_filters();
  // @@protoc_insertion_point(field_mutable:kentik.alerting.public.v202505.FlowPolicySettings.DatasetConfig.filters)
  return _msg;
}
inline void FlowPolicySettings_DatasetConfig::set_allocated_filters(::kentik::alerting::public_::v202505::PolicyFilters* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.filters_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.filters_ = reinterpret_cast<::kentik::alerting::public_::v202505::PolicyFilters*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.alerting.public.v202505.FlowPolicySettings.DatasetConfig.filters)
}

// repeated string dimensions = 3 [json_name = "dimensions", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int FlowPolicySettings_DatasetConfig::_internal_dimensions_size() const {
  return _internal_dimensions().size();
}
inline int FlowPolicySettings_DatasetConfig::dimensions_size() const {
  return _internal_dimensions_size();
}
inline void FlowPolicySettings_DatasetConfig::clear_dimensions() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dimensions_.Clear();
}
inline std::string* FlowPolicySettings_DatasetConfig::add_dimensions() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_dimensions()->Add();
  // @@protoc_insertion_point(field_add_mutable:kentik.alerting.public.v202505.FlowPolicySettings.DatasetConfig.dimensions)
  return _s;
}
inline const std::string& FlowPolicySettings_DatasetConfig::dimensions(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.FlowPolicySettings.DatasetConfig.dimensions)
  return _internal_dimensions().Get(index);
}
inline std::string* FlowPolicySettings_DatasetConfig::mutable_dimensions(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.alerting.public.v202505.FlowPolicySettings.DatasetConfig.dimensions)
  return _internal_mutable_dimensions()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void FlowPolicySettings_DatasetConfig::set_dimensions(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_dimensions()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:kentik.alerting.public.v202505.FlowPolicySettings.DatasetConfig.dimensions)
}
template <typename Arg_, typename... Args_>
inline void FlowPolicySettings_DatasetConfig::add_dimensions(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_dimensions(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:kentik.alerting.public.v202505.FlowPolicySettings.DatasetConfig.dimensions)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
FlowPolicySettings_DatasetConfig::dimensions() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.alerting.public.v202505.FlowPolicySettings.DatasetConfig.dimensions)
  return _internal_dimensions();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
FlowPolicySettings_DatasetConfig::mutable_dimensions() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.alerting.public.v202505.FlowPolicySettings.DatasetConfig.dimensions)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_dimensions();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
FlowPolicySettings_DatasetConfig::_internal_dimensions() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dimensions_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
FlowPolicySettings_DatasetConfig::_internal_mutable_dimensions() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.dimensions_;
}

// repeated string metrics = 4 [json_name = "metrics", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int FlowPolicySettings_DatasetConfig::_internal_metrics_size() const {
  return _internal_metrics().size();
}
inline int FlowPolicySettings_DatasetConfig::metrics_size() const {
  return _internal_metrics_size();
}
inline void FlowPolicySettings_DatasetConfig::clear_metrics() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.metrics_.Clear();
}
inline std::string* FlowPolicySettings_DatasetConfig::add_metrics() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_metrics()->Add();
  // @@protoc_insertion_point(field_add_mutable:kentik.alerting.public.v202505.FlowPolicySettings.DatasetConfig.metrics)
  return _s;
}
inline const std::string& FlowPolicySettings_DatasetConfig::metrics(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.FlowPolicySettings.DatasetConfig.metrics)
  return _internal_metrics().Get(index);
}
inline std::string* FlowPolicySettings_DatasetConfig::mutable_metrics(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.alerting.public.v202505.FlowPolicySettings.DatasetConfig.metrics)
  return _internal_mutable_metrics()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void FlowPolicySettings_DatasetConfig::set_metrics(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_metrics()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:kentik.alerting.public.v202505.FlowPolicySettings.DatasetConfig.metrics)
}
template <typename Arg_, typename... Args_>
inline void FlowPolicySettings_DatasetConfig::add_metrics(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_metrics(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:kentik.alerting.public.v202505.FlowPolicySettings.DatasetConfig.metrics)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
FlowPolicySettings_DatasetConfig::metrics() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.alerting.public.v202505.FlowPolicySettings.DatasetConfig.metrics)
  return _internal_metrics();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
FlowPolicySettings_DatasetConfig::mutable_metrics() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.alerting.public.v202505.FlowPolicySettings.DatasetConfig.metrics)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_metrics();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
FlowPolicySettings_DatasetConfig::_internal_metrics() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.metrics_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
FlowPolicySettings_DatasetConfig::_internal_mutable_metrics() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.metrics_;
}

// -------------------------------------------------------------------

// FlowPolicySettings_EvaluationConfig

// .google.protobuf.Duration frequency = 1 [json_name = "frequency", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool FlowPolicySettings_EvaluationConfig::has_frequency() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.frequency_ != nullptr);
  return value;
}
inline const ::google::protobuf::Duration& FlowPolicySettings_EvaluationConfig::_internal_frequency() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Duration* p = _impl_.frequency_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Duration&>(::google::protobuf::_Duration_default_instance_);
}
inline const ::google::protobuf::Duration& FlowPolicySettings_EvaluationConfig::frequency() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.FlowPolicySettings.EvaluationConfig.frequency)
  return _internal_frequency();
}
inline void FlowPolicySettings_EvaluationConfig::unsafe_arena_set_allocated_frequency(::google::protobuf::Duration* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.frequency_);
  }
  _impl_.frequency_ = reinterpret_cast<::google::protobuf::Duration*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.alerting.public.v202505.FlowPolicySettings.EvaluationConfig.frequency)
}
inline ::google::protobuf::Duration* FlowPolicySettings_EvaluationConfig::release_frequency() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Duration* released = _impl_.frequency_;
  _impl_.frequency_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Duration* FlowPolicySettings_EvaluationConfig::unsafe_arena_release_frequency() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.alerting.public.v202505.FlowPolicySettings.EvaluationConfig.frequency)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Duration* temp = _impl_.frequency_;
  _impl_.frequency_ = nullptr;
  return temp;
}
inline ::google::protobuf::Duration* FlowPolicySettings_EvaluationConfig::_internal_mutable_frequency() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.frequency_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Duration>(GetArena());
    _impl_.frequency_ = reinterpret_cast<::google::protobuf::Duration*>(p);
  }
  return _impl_.frequency_;
}
inline ::google::protobuf::Duration* FlowPolicySettings_EvaluationConfig::mutable_frequency() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::google::protobuf::Duration* _msg = _internal_mutable_frequency();
  // @@protoc_insertion_point(field_mutable:kentik.alerting.public.v202505.FlowPolicySettings.EvaluationConfig.frequency)
  return _msg;
}
inline void FlowPolicySettings_EvaluationConfig::set_allocated_frequency(::google::protobuf::Duration* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.frequency_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.frequency_ = reinterpret_cast<::google::protobuf::Duration*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.alerting.public.v202505.FlowPolicySettings.EvaluationConfig.frequency)
}

// int64 key_count = 2 [json_name = "keyCount", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void FlowPolicySettings_EvaluationConfig::clear_key_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.key_count_ = ::int64_t{0};
}
inline ::int64_t FlowPolicySettings_EvaluationConfig::key_count() const {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.FlowPolicySettings.EvaluationConfig.key_count)
  return _internal_key_count();
}
inline void FlowPolicySettings_EvaluationConfig::set_key_count(::int64_t value) {
  _internal_set_key_count(value);
  // @@protoc_insertion_point(field_set:kentik.alerting.public.v202505.FlowPolicySettings.EvaluationConfig.key_count)
}
inline ::int64_t FlowPolicySettings_EvaluationConfig::_internal_key_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.key_count_;
}
inline void FlowPolicySettings_EvaluationConfig::_internal_set_key_count(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.key_count_ = value;
}

// -------------------------------------------------------------------

// FlowPolicySettings_BaselineConfig

// int64 stored_key_count = 1 [json_name = "storedKeyCount", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void FlowPolicySettings_BaselineConfig::clear_stored_key_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.stored_key_count_ = ::int64_t{0};
}
inline ::int64_t FlowPolicySettings_BaselineConfig::stored_key_count() const {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.FlowPolicySettings.BaselineConfig.stored_key_count)
  return _internal_stored_key_count();
}
inline void FlowPolicySettings_BaselineConfig::set_stored_key_count(::int64_t value) {
  _internal_set_stored_key_count(value);
  // @@protoc_insertion_point(field_set:kentik.alerting.public.v202505.FlowPolicySettings.BaselineConfig.stored_key_count)
}
inline ::int64_t FlowPolicySettings_BaselineConfig::_internal_stored_key_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.stored_key_count_;
}
inline void FlowPolicySettings_BaselineConfig::_internal_set_stored_key_count(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.stored_key_count_ = value;
}

// .google.protobuf.Duration window_length = 2 [json_name = "windowLength", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool FlowPolicySettings_BaselineConfig::has_window_length() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.window_length_ != nullptr);
  return value;
}
inline const ::google::protobuf::Duration& FlowPolicySettings_BaselineConfig::_internal_window_length() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Duration* p = _impl_.window_length_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Duration&>(::google::protobuf::_Duration_default_instance_);
}
inline const ::google::protobuf::Duration& FlowPolicySettings_BaselineConfig::window_length() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.FlowPolicySettings.BaselineConfig.window_length)
  return _internal_window_length();
}
inline void FlowPolicySettings_BaselineConfig::unsafe_arena_set_allocated_window_length(::google::protobuf::Duration* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.window_length_);
  }
  _impl_.window_length_ = reinterpret_cast<::google::protobuf::Duration*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.alerting.public.v202505.FlowPolicySettings.BaselineConfig.window_length)
}
inline ::google::protobuf::Duration* FlowPolicySettings_BaselineConfig::release_window_length() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Duration* released = _impl_.window_length_;
  _impl_.window_length_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Duration* FlowPolicySettings_BaselineConfig::unsafe_arena_release_window_length() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.alerting.public.v202505.FlowPolicySettings.BaselineConfig.window_length)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Duration* temp = _impl_.window_length_;
  _impl_.window_length_ = nullptr;
  return temp;
}
inline ::google::protobuf::Duration* FlowPolicySettings_BaselineConfig::_internal_mutable_window_length() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.window_length_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Duration>(GetArena());
    _impl_.window_length_ = reinterpret_cast<::google::protobuf::Duration*>(p);
  }
  return _impl_.window_length_;
}
inline ::google::protobuf::Duration* FlowPolicySettings_BaselineConfig::mutable_window_length() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::google::protobuf::Duration* _msg = _internal_mutable_window_length();
  // @@protoc_insertion_point(field_mutable:kentik.alerting.public.v202505.FlowPolicySettings.BaselineConfig.window_length)
  return _msg;
}
inline void FlowPolicySettings_BaselineConfig::set_allocated_window_length(::google::protobuf::Duration* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.window_length_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.window_length_ = reinterpret_cast<::google::protobuf::Duration*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.alerting.public.v202505.FlowPolicySettings.BaselineConfig.window_length)
}

// .google.protobuf.Duration window_start_offset = 3 [json_name = "windowStartOffset", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool FlowPolicySettings_BaselineConfig::has_window_start_offset() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.window_start_offset_ != nullptr);
  return value;
}
inline const ::google::protobuf::Duration& FlowPolicySettings_BaselineConfig::_internal_window_start_offset() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Duration* p = _impl_.window_start_offset_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Duration&>(::google::protobuf::_Duration_default_instance_);
}
inline const ::google::protobuf::Duration& FlowPolicySettings_BaselineConfig::window_start_offset() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.FlowPolicySettings.BaselineConfig.window_start_offset)
  return _internal_window_start_offset();
}
inline void FlowPolicySettings_BaselineConfig::unsafe_arena_set_allocated_window_start_offset(::google::protobuf::Duration* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.window_start_offset_);
  }
  _impl_.window_start_offset_ = reinterpret_cast<::google::protobuf::Duration*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.alerting.public.v202505.FlowPolicySettings.BaselineConfig.window_start_offset)
}
inline ::google::protobuf::Duration* FlowPolicySettings_BaselineConfig::release_window_start_offset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Duration* released = _impl_.window_start_offset_;
  _impl_.window_start_offset_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Duration* FlowPolicySettings_BaselineConfig::unsafe_arena_release_window_start_offset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.alerting.public.v202505.FlowPolicySettings.BaselineConfig.window_start_offset)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Duration* temp = _impl_.window_start_offset_;
  _impl_.window_start_offset_ = nullptr;
  return temp;
}
inline ::google::protobuf::Duration* FlowPolicySettings_BaselineConfig::_internal_mutable_window_start_offset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.window_start_offset_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Duration>(GetArena());
    _impl_.window_start_offset_ = reinterpret_cast<::google::protobuf::Duration*>(p);
  }
  return _impl_.window_start_offset_;
}
inline ::google::protobuf::Duration* FlowPolicySettings_BaselineConfig::mutable_window_start_offset() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::google::protobuf::Duration* _msg = _internal_mutable_window_start_offset();
  // @@protoc_insertion_point(field_mutable:kentik.alerting.public.v202505.FlowPolicySettings.BaselineConfig.window_start_offset)
  return _msg;
}
inline void FlowPolicySettings_BaselineConfig::set_allocated_window_start_offset(::google::protobuf::Duration* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.window_start_offset_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.window_start_offset_ = reinterpret_cast<::google::protobuf::Duration*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.alerting.public.v202505.FlowPolicySettings.BaselineConfig.window_start_offset)
}

// .kentik.alerting.public.v202505.AggregationType rollup_aggregation = 4 [json_name = "rollupAggregation", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void FlowPolicySettings_BaselineConfig::clear_rollup_aggregation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rollup_aggregation_ = 0;
}
inline ::kentik::alerting::public_::v202505::AggregationType FlowPolicySettings_BaselineConfig::rollup_aggregation() const {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.FlowPolicySettings.BaselineConfig.rollup_aggregation)
  return _internal_rollup_aggregation();
}
inline void FlowPolicySettings_BaselineConfig::set_rollup_aggregation(::kentik::alerting::public_::v202505::AggregationType value) {
  _internal_set_rollup_aggregation(value);
  // @@protoc_insertion_point(field_set:kentik.alerting.public.v202505.FlowPolicySettings.BaselineConfig.rollup_aggregation)
}
inline ::kentik::alerting::public_::v202505::AggregationType FlowPolicySettings_BaselineConfig::_internal_rollup_aggregation() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::kentik::alerting::public_::v202505::AggregationType>(_impl_.rollup_aggregation_);
}
inline void FlowPolicySettings_BaselineConfig::_internal_set_rollup_aggregation(::kentik::alerting::public_::v202505::AggregationType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rollup_aggregation_ = value;
}

// .kentik.alerting.public.v202505.FlowPolicySettings.BaselineConfig.CompareMode compare_mode = 5 [json_name = "compareMode", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void FlowPolicySettings_BaselineConfig::clear_compare_mode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.compare_mode_ = 0;
}
inline ::kentik::alerting::public_::v202505::FlowPolicySettings_BaselineConfig_CompareMode FlowPolicySettings_BaselineConfig::compare_mode() const {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.FlowPolicySettings.BaselineConfig.compare_mode)
  return _internal_compare_mode();
}
inline void FlowPolicySettings_BaselineConfig::set_compare_mode(::kentik::alerting::public_::v202505::FlowPolicySettings_BaselineConfig_CompareMode value) {
  _internal_set_compare_mode(value);
  // @@protoc_insertion_point(field_set:kentik.alerting.public.v202505.FlowPolicySettings.BaselineConfig.compare_mode)
}
inline ::kentik::alerting::public_::v202505::FlowPolicySettings_BaselineConfig_CompareMode FlowPolicySettings_BaselineConfig::_internal_compare_mode() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::kentik::alerting::public_::v202505::FlowPolicySettings_BaselineConfig_CompareMode>(_impl_.compare_mode_);
}
inline void FlowPolicySettings_BaselineConfig::_internal_set_compare_mode(::kentik::alerting::public_::v202505::FlowPolicySettings_BaselineConfig_CompareMode value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.compare_mode_ = value;
}

// .google.protobuf.Duration neighbourhood_radius = 6 [json_name = "neighbourhoodRadius", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool FlowPolicySettings_BaselineConfig::has_neighbourhood_radius() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.neighbourhood_radius_ != nullptr);
  return value;
}
inline const ::google::protobuf::Duration& FlowPolicySettings_BaselineConfig::_internal_neighbourhood_radius() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Duration* p = _impl_.neighbourhood_radius_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Duration&>(::google::protobuf::_Duration_default_instance_);
}
inline const ::google::protobuf::Duration& FlowPolicySettings_BaselineConfig::neighbourhood_radius() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.FlowPolicySettings.BaselineConfig.neighbourhood_radius)
  return _internal_neighbourhood_radius();
}
inline void FlowPolicySettings_BaselineConfig::unsafe_arena_set_allocated_neighbourhood_radius(::google::protobuf::Duration* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.neighbourhood_radius_);
  }
  _impl_.neighbourhood_radius_ = reinterpret_cast<::google::protobuf::Duration*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.alerting.public.v202505.FlowPolicySettings.BaselineConfig.neighbourhood_radius)
}
inline ::google::protobuf::Duration* FlowPolicySettings_BaselineConfig::release_neighbourhood_radius() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::google::protobuf::Duration* released = _impl_.neighbourhood_radius_;
  _impl_.neighbourhood_radius_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Duration* FlowPolicySettings_BaselineConfig::unsafe_arena_release_neighbourhood_radius() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.alerting.public.v202505.FlowPolicySettings.BaselineConfig.neighbourhood_radius)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::google::protobuf::Duration* temp = _impl_.neighbourhood_radius_;
  _impl_.neighbourhood_radius_ = nullptr;
  return temp;
}
inline ::google::protobuf::Duration* FlowPolicySettings_BaselineConfig::_internal_mutable_neighbourhood_radius() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.neighbourhood_radius_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Duration>(GetArena());
    _impl_.neighbourhood_radius_ = reinterpret_cast<::google::protobuf::Duration*>(p);
  }
  return _impl_.neighbourhood_radius_;
}
inline ::google::protobuf::Duration* FlowPolicySettings_BaselineConfig::mutable_neighbourhood_radius() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::google::protobuf::Duration* _msg = _internal_mutable_neighbourhood_radius();
  // @@protoc_insertion_point(field_mutable:kentik.alerting.public.v202505.FlowPolicySettings.BaselineConfig.neighbourhood_radius)
  return _msg;
}
inline void FlowPolicySettings_BaselineConfig::set_allocated_neighbourhood_radius(::google::protobuf::Duration* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.neighbourhood_radius_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.neighbourhood_radius_ = reinterpret_cast<::google::protobuf::Duration*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.alerting.public.v202505.FlowPolicySettings.BaselineConfig.neighbourhood_radius)
}

// .kentik.alerting.public.v202505.AggregationType neighbourhood_aggregation = 7 [json_name = "neighbourhoodAggregation", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void FlowPolicySettings_BaselineConfig::clear_neighbourhood_aggregation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.neighbourhood_aggregation_ = 0;
}
inline ::kentik::alerting::public_::v202505::AggregationType FlowPolicySettings_BaselineConfig::neighbourhood_aggregation() const {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.FlowPolicySettings.BaselineConfig.neighbourhood_aggregation)
  return _internal_neighbourhood_aggregation();
}
inline void FlowPolicySettings_BaselineConfig::set_neighbourhood_aggregation(::kentik::alerting::public_::v202505::AggregationType value) {
  _internal_set_neighbourhood_aggregation(value);
  // @@protoc_insertion_point(field_set:kentik.alerting.public.v202505.FlowPolicySettings.BaselineConfig.neighbourhood_aggregation)
}
inline ::kentik::alerting::public_::v202505::AggregationType FlowPolicySettings_BaselineConfig::_internal_neighbourhood_aggregation() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::kentik::alerting::public_::v202505::AggregationType>(_impl_.neighbourhood_aggregation_);
}
inline void FlowPolicySettings_BaselineConfig::_internal_set_neighbourhood_aggregation(::kentik::alerting::public_::v202505::AggregationType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.neighbourhood_aggregation_ = value;
}

// .kentik.alerting.public.v202505.AggregationType final_aggregation = 8 [json_name = "finalAggregation", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void FlowPolicySettings_BaselineConfig::clear_final_aggregation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.final_aggregation_ = 0;
}
inline ::kentik::alerting::public_::v202505::AggregationType FlowPolicySettings_BaselineConfig::final_aggregation() const {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.FlowPolicySettings.BaselineConfig.final_aggregation)
  return _internal_final_aggregation();
}
inline void FlowPolicySettings_BaselineConfig::set_final_aggregation(::kentik::alerting::public_::v202505::AggregationType value) {
  _internal_set_final_aggregation(value);
  // @@protoc_insertion_point(field_set:kentik.alerting.public.v202505.FlowPolicySettings.BaselineConfig.final_aggregation)
}
inline ::kentik::alerting::public_::v202505::AggregationType FlowPolicySettings_BaselineConfig::_internal_final_aggregation() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::kentik::alerting::public_::v202505::AggregationType>(_impl_.final_aggregation_);
}
inline void FlowPolicySettings_BaselineConfig::_internal_set_final_aggregation(::kentik::alerting::public_::v202505::AggregationType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.final_aggregation_ = value;
}

// -------------------------------------------------------------------

// FlowPolicySettings

// .kentik.alerting.public.v202505.FlowPolicySettings.DatasetConfig dataset = 1 [json_name = "dataset", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool FlowPolicySettings::has_dataset() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.dataset_ != nullptr);
  return value;
}
inline void FlowPolicySettings::clear_dataset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.dataset_ != nullptr) _impl_.dataset_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::kentik::alerting::public_::v202505::FlowPolicySettings_DatasetConfig& FlowPolicySettings::_internal_dataset() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::alerting::public_::v202505::FlowPolicySettings_DatasetConfig* p = _impl_.dataset_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::alerting::public_::v202505::FlowPolicySettings_DatasetConfig&>(::kentik::alerting::public_::v202505::_FlowPolicySettings_DatasetConfig_default_instance_);
}
inline const ::kentik::alerting::public_::v202505::FlowPolicySettings_DatasetConfig& FlowPolicySettings::dataset() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.FlowPolicySettings.dataset)
  return _internal_dataset();
}
inline void FlowPolicySettings::unsafe_arena_set_allocated_dataset(::kentik::alerting::public_::v202505::FlowPolicySettings_DatasetConfig* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.dataset_);
  }
  _impl_.dataset_ = reinterpret_cast<::kentik::alerting::public_::v202505::FlowPolicySettings_DatasetConfig*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.alerting.public.v202505.FlowPolicySettings.dataset)
}
inline ::kentik::alerting::public_::v202505::FlowPolicySettings_DatasetConfig* FlowPolicySettings::release_dataset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::alerting::public_::v202505::FlowPolicySettings_DatasetConfig* released = _impl_.dataset_;
  _impl_.dataset_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::alerting::public_::v202505::FlowPolicySettings_DatasetConfig* FlowPolicySettings::unsafe_arena_release_dataset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.alerting.public.v202505.FlowPolicySettings.dataset)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::alerting::public_::v202505::FlowPolicySettings_DatasetConfig* temp = _impl_.dataset_;
  _impl_.dataset_ = nullptr;
  return temp;
}
inline ::kentik::alerting::public_::v202505::FlowPolicySettings_DatasetConfig* FlowPolicySettings::_internal_mutable_dataset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.dataset_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::alerting::public_::v202505::FlowPolicySettings_DatasetConfig>(GetArena());
    _impl_.dataset_ = reinterpret_cast<::kentik::alerting::public_::v202505::FlowPolicySettings_DatasetConfig*>(p);
  }
  return _impl_.dataset_;
}
inline ::kentik::alerting::public_::v202505::FlowPolicySettings_DatasetConfig* FlowPolicySettings::mutable_dataset() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::kentik::alerting::public_::v202505::FlowPolicySettings_DatasetConfig* _msg = _internal_mutable_dataset();
  // @@protoc_insertion_point(field_mutable:kentik.alerting.public.v202505.FlowPolicySettings.dataset)
  return _msg;
}
inline void FlowPolicySettings::set_allocated_dataset(::kentik::alerting::public_::v202505::FlowPolicySettings_DatasetConfig* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.dataset_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.dataset_ = reinterpret_cast<::kentik::alerting::public_::v202505::FlowPolicySettings_DatasetConfig*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.alerting.public.v202505.FlowPolicySettings.dataset)
}

// .kentik.alerting.public.v202505.FlowPolicySettings.EvaluationConfig evaluation = 2 [json_name = "evaluation", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool FlowPolicySettings::has_evaluation() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.evaluation_ != nullptr);
  return value;
}
inline void FlowPolicySettings::clear_evaluation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.evaluation_ != nullptr) _impl_.evaluation_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::kentik::alerting::public_::v202505::FlowPolicySettings_EvaluationConfig& FlowPolicySettings::_internal_evaluation() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::alerting::public_::v202505::FlowPolicySettings_EvaluationConfig* p = _impl_.evaluation_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::alerting::public_::v202505::FlowPolicySettings_EvaluationConfig&>(::kentik::alerting::public_::v202505::_FlowPolicySettings_EvaluationConfig_default_instance_);
}
inline const ::kentik::alerting::public_::v202505::FlowPolicySettings_EvaluationConfig& FlowPolicySettings::evaluation() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.FlowPolicySettings.evaluation)
  return _internal_evaluation();
}
inline void FlowPolicySettings::unsafe_arena_set_allocated_evaluation(::kentik::alerting::public_::v202505::FlowPolicySettings_EvaluationConfig* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.evaluation_);
  }
  _impl_.evaluation_ = reinterpret_cast<::kentik::alerting::public_::v202505::FlowPolicySettings_EvaluationConfig*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.alerting.public.v202505.FlowPolicySettings.evaluation)
}
inline ::kentik::alerting::public_::v202505::FlowPolicySettings_EvaluationConfig* FlowPolicySettings::release_evaluation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::kentik::alerting::public_::v202505::FlowPolicySettings_EvaluationConfig* released = _impl_.evaluation_;
  _impl_.evaluation_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::alerting::public_::v202505::FlowPolicySettings_EvaluationConfig* FlowPolicySettings::unsafe_arena_release_evaluation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.alerting.public.v202505.FlowPolicySettings.evaluation)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::kentik::alerting::public_::v202505::FlowPolicySettings_EvaluationConfig* temp = _impl_.evaluation_;
  _impl_.evaluation_ = nullptr;
  return temp;
}
inline ::kentik::alerting::public_::v202505::FlowPolicySettings_EvaluationConfig* FlowPolicySettings::_internal_mutable_evaluation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.evaluation_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::alerting::public_::v202505::FlowPolicySettings_EvaluationConfig>(GetArena());
    _impl_.evaluation_ = reinterpret_cast<::kentik::alerting::public_::v202505::FlowPolicySettings_EvaluationConfig*>(p);
  }
  return _impl_.evaluation_;
}
inline ::kentik::alerting::public_::v202505::FlowPolicySettings_EvaluationConfig* FlowPolicySettings::mutable_evaluation() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::kentik::alerting::public_::v202505::FlowPolicySettings_EvaluationConfig* _msg = _internal_mutable_evaluation();
  // @@protoc_insertion_point(field_mutable:kentik.alerting.public.v202505.FlowPolicySettings.evaluation)
  return _msg;
}
inline void FlowPolicySettings::set_allocated_evaluation(::kentik::alerting::public_::v202505::FlowPolicySettings_EvaluationConfig* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.evaluation_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.evaluation_ = reinterpret_cast<::kentik::alerting::public_::v202505::FlowPolicySettings_EvaluationConfig*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.alerting.public.v202505.FlowPolicySettings.evaluation)
}

// .kentik.alerting.public.v202505.FlowPolicySettings.BaselineConfig baseline = 3 [json_name = "baseline", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool FlowPolicySettings::has_baseline() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.baseline_ != nullptr);
  return value;
}
inline void FlowPolicySettings::clear_baseline() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.baseline_ != nullptr) _impl_.baseline_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::kentik::alerting::public_::v202505::FlowPolicySettings_BaselineConfig& FlowPolicySettings::_internal_baseline() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::alerting::public_::v202505::FlowPolicySettings_BaselineConfig* p = _impl_.baseline_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::alerting::public_::v202505::FlowPolicySettings_BaselineConfig&>(::kentik::alerting::public_::v202505::_FlowPolicySettings_BaselineConfig_default_instance_);
}
inline const ::kentik::alerting::public_::v202505::FlowPolicySettings_BaselineConfig& FlowPolicySettings::baseline() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.FlowPolicySettings.baseline)
  return _internal_baseline();
}
inline void FlowPolicySettings::unsafe_arena_set_allocated_baseline(::kentik::alerting::public_::v202505::FlowPolicySettings_BaselineConfig* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.baseline_);
  }
  _impl_.baseline_ = reinterpret_cast<::kentik::alerting::public_::v202505::FlowPolicySettings_BaselineConfig*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.alerting.public.v202505.FlowPolicySettings.baseline)
}
inline ::kentik::alerting::public_::v202505::FlowPolicySettings_BaselineConfig* FlowPolicySettings::release_baseline() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::kentik::alerting::public_::v202505::FlowPolicySettings_BaselineConfig* released = _impl_.baseline_;
  _impl_.baseline_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::alerting::public_::v202505::FlowPolicySettings_BaselineConfig* FlowPolicySettings::unsafe_arena_release_baseline() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.alerting.public.v202505.FlowPolicySettings.baseline)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::kentik::alerting::public_::v202505::FlowPolicySettings_BaselineConfig* temp = _impl_.baseline_;
  _impl_.baseline_ = nullptr;
  return temp;
}
inline ::kentik::alerting::public_::v202505::FlowPolicySettings_BaselineConfig* FlowPolicySettings::_internal_mutable_baseline() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.baseline_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::alerting::public_::v202505::FlowPolicySettings_BaselineConfig>(GetArena());
    _impl_.baseline_ = reinterpret_cast<::kentik::alerting::public_::v202505::FlowPolicySettings_BaselineConfig*>(p);
  }
  return _impl_.baseline_;
}
inline ::kentik::alerting::public_::v202505::FlowPolicySettings_BaselineConfig* FlowPolicySettings::mutable_baseline() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::kentik::alerting::public_::v202505::FlowPolicySettings_BaselineConfig* _msg = _internal_mutable_baseline();
  // @@protoc_insertion_point(field_mutable:kentik.alerting.public.v202505.FlowPolicySettings.baseline)
  return _msg;
}
inline void FlowPolicySettings::set_allocated_baseline(::kentik::alerting::public_::v202505::FlowPolicySettings_BaselineConfig* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.baseline_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.baseline_ = reinterpret_cast<::kentik::alerting::public_::v202505::FlowPolicySettings_BaselineConfig*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.alerting.public.v202505.FlowPolicySettings.baseline)
}

// -------------------------------------------------------------------

// FlowPolicyLevelSettings_ActivationSettings

// int64 match_times = 1 [json_name = "matchTimes", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void FlowPolicyLevelSettings_ActivationSettings::clear_match_times() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.match_times_ = ::int64_t{0};
}
inline ::int64_t FlowPolicyLevelSettings_ActivationSettings::match_times() const {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.FlowPolicyLevelSettings.ActivationSettings.match_times)
  return _internal_match_times();
}
inline void FlowPolicyLevelSettings_ActivationSettings::set_match_times(::int64_t value) {
  _internal_set_match_times(value);
  // @@protoc_insertion_point(field_set:kentik.alerting.public.v202505.FlowPolicyLevelSettings.ActivationSettings.match_times)
}
inline ::int64_t FlowPolicyLevelSettings_ActivationSettings::_internal_match_times() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.match_times_;
}
inline void FlowPolicyLevelSettings_ActivationSettings::_internal_set_match_times(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.match_times_ = value;
}

// .google.protobuf.Duration match_window = 2 [json_name = "matchWindow", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool FlowPolicyLevelSettings_ActivationSettings::has_match_window() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.match_window_ != nullptr);
  return value;
}
inline const ::google::protobuf::Duration& FlowPolicyLevelSettings_ActivationSettings::_internal_match_window() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Duration* p = _impl_.match_window_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Duration&>(::google::protobuf::_Duration_default_instance_);
}
inline const ::google::protobuf::Duration& FlowPolicyLevelSettings_ActivationSettings::match_window() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.FlowPolicyLevelSettings.ActivationSettings.match_window)
  return _internal_match_window();
}
inline void FlowPolicyLevelSettings_ActivationSettings::unsafe_arena_set_allocated_match_window(::google::protobuf::Duration* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.match_window_);
  }
  _impl_.match_window_ = reinterpret_cast<::google::protobuf::Duration*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.alerting.public.v202505.FlowPolicyLevelSettings.ActivationSettings.match_window)
}
inline ::google::protobuf::Duration* FlowPolicyLevelSettings_ActivationSettings::release_match_window() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Duration* released = _impl_.match_window_;
  _impl_.match_window_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Duration* FlowPolicyLevelSettings_ActivationSettings::unsafe_arena_release_match_window() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.alerting.public.v202505.FlowPolicyLevelSettings.ActivationSettings.match_window)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Duration* temp = _impl_.match_window_;
  _impl_.match_window_ = nullptr;
  return temp;
}
inline ::google::protobuf::Duration* FlowPolicyLevelSettings_ActivationSettings::_internal_mutable_match_window() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.match_window_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Duration>(GetArena());
    _impl_.match_window_ = reinterpret_cast<::google::protobuf::Duration*>(p);
  }
  return _impl_.match_window_;
}
inline ::google::protobuf::Duration* FlowPolicyLevelSettings_ActivationSettings::mutable_match_window() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::google::protobuf::Duration* _msg = _internal_mutable_match_window();
  // @@protoc_insertion_point(field_mutable:kentik.alerting.public.v202505.FlowPolicyLevelSettings.ActivationSettings.match_window)
  return _msg;
}
inline void FlowPolicyLevelSettings_ActivationSettings::set_allocated_match_window(::google::protobuf::Duration* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.match_window_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.match_window_ = reinterpret_cast<::google::protobuf::Duration*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.alerting.public.v202505.FlowPolicyLevelSettings.ActivationSettings.match_window)
}

// .google.protobuf.Duration reset_count_window = 3 [json_name = "resetCountWindow", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool FlowPolicyLevelSettings_ActivationSettings::has_reset_count_window() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.reset_count_window_ != nullptr);
  return value;
}
inline const ::google::protobuf::Duration& FlowPolicyLevelSettings_ActivationSettings::_internal_reset_count_window() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Duration* p = _impl_.reset_count_window_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Duration&>(::google::protobuf::_Duration_default_instance_);
}
inline const ::google::protobuf::Duration& FlowPolicyLevelSettings_ActivationSettings::reset_count_window() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.FlowPolicyLevelSettings.ActivationSettings.reset_count_window)
  return _internal_reset_count_window();
}
inline void FlowPolicyLevelSettings_ActivationSettings::unsafe_arena_set_allocated_reset_count_window(::google::protobuf::Duration* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.reset_count_window_);
  }
  _impl_.reset_count_window_ = reinterpret_cast<::google::protobuf::Duration*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.alerting.public.v202505.FlowPolicyLevelSettings.ActivationSettings.reset_count_window)
}
inline ::google::protobuf::Duration* FlowPolicyLevelSettings_ActivationSettings::release_reset_count_window() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Duration* released = _impl_.reset_count_window_;
  _impl_.reset_count_window_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Duration* FlowPolicyLevelSettings_ActivationSettings::unsafe_arena_release_reset_count_window() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.alerting.public.v202505.FlowPolicyLevelSettings.ActivationSettings.reset_count_window)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Duration* temp = _impl_.reset_count_window_;
  _impl_.reset_count_window_ = nullptr;
  return temp;
}
inline ::google::protobuf::Duration* FlowPolicyLevelSettings_ActivationSettings::_internal_mutable_reset_count_window() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.reset_count_window_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Duration>(GetArena());
    _impl_.reset_count_window_ = reinterpret_cast<::google::protobuf::Duration*>(p);
  }
  return _impl_.reset_count_window_;
}
inline ::google::protobuf::Duration* FlowPolicyLevelSettings_ActivationSettings::mutable_reset_count_window() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::google::protobuf::Duration* _msg = _internal_mutable_reset_count_window();
  // @@protoc_insertion_point(field_mutable:kentik.alerting.public.v202505.FlowPolicyLevelSettings.ActivationSettings.reset_count_window)
  return _msg;
}
inline void FlowPolicyLevelSettings_ActivationSettings::set_allocated_reset_count_window(::google::protobuf::Duration* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.reset_count_window_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.reset_count_window_ = reinterpret_cast<::google::protobuf::Duration*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.alerting.public.v202505.FlowPolicyLevelSettings.ActivationSettings.reset_count_window)
}

// -------------------------------------------------------------------

// FlowPolicyLevelSettings_Conditions_StaticCondition

// string metric = 1 [json_name = "metric", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void FlowPolicyLevelSettings_Conditions_StaticCondition::clear_metric() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.metric_.ClearToEmpty();
}
inline const std::string& FlowPolicyLevelSettings_Conditions_StaticCondition::metric() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.StaticCondition.metric)
  return _internal_metric();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void FlowPolicyLevelSettings_Conditions_StaticCondition::set_metric(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.metric_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.StaticCondition.metric)
}
inline std::string* FlowPolicyLevelSettings_Conditions_StaticCondition::mutable_metric() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_metric();
  // @@protoc_insertion_point(field_mutable:kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.StaticCondition.metric)
  return _s;
}
inline const std::string& FlowPolicyLevelSettings_Conditions_StaticCondition::_internal_metric() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.metric_.Get();
}
inline void FlowPolicyLevelSettings_Conditions_StaticCondition::_internal_set_metric(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.metric_.Set(value, GetArena());
}
inline std::string* FlowPolicyLevelSettings_Conditions_StaticCondition::_internal_mutable_metric() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.metric_.Mutable( GetArena());
}
inline std::string* FlowPolicyLevelSettings_Conditions_StaticCondition::release_metric() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.StaticCondition.metric)
  return _impl_.metric_.Release();
}
inline void FlowPolicyLevelSettings_Conditions_StaticCondition::set_allocated_metric(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.metric_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.metric_.IsDefault()) {
    _impl_.metric_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.StaticCondition.metric)
}

// .kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.Operator operator = 2 [json_name = "operator", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void FlowPolicyLevelSettings_Conditions_StaticCondition::clear_operator_() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.operator__ = 0;
}
inline ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_Operator FlowPolicyLevelSettings_Conditions_StaticCondition::operator_() const {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.StaticCondition.operator)
  return _internal_operator_();
}
inline void FlowPolicyLevelSettings_Conditions_StaticCondition::set_operator_(::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_Operator value) {
  _internal_set_operator_(value);
  // @@protoc_insertion_point(field_set:kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.StaticCondition.operator)
}
inline ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_Operator FlowPolicyLevelSettings_Conditions_StaticCondition::_internal_operator_() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_Operator>(_impl_.operator__);
}
inline void FlowPolicyLevelSettings_Conditions_StaticCondition::_internal_set_operator_(::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_Operator value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.operator__ = value;
}

// double value = 3 [json_name = "value", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void FlowPolicyLevelSettings_Conditions_StaticCondition::clear_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_ = 0;
}
inline double FlowPolicyLevelSettings_Conditions_StaticCondition::value() const {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.StaticCondition.value)
  return _internal_value();
}
inline void FlowPolicyLevelSettings_Conditions_StaticCondition::set_value(double value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.StaticCondition.value)
}
inline double FlowPolicyLevelSettings_Conditions_StaticCondition::_internal_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.value_;
}
inline void FlowPolicyLevelSettings_Conditions_StaticCondition::_internal_set_value(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_ = value;
}

// -------------------------------------------------------------------

// FlowPolicyLevelSettings_Conditions_BaselineCondition

// double absolute = 1 [json_name = "absolute", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool FlowPolicyLevelSettings_Conditions_BaselineCondition::has_absolute() const {
  return value_case() == kAbsolute;
}
inline void FlowPolicyLevelSettings_Conditions_BaselineCondition::set_has_absolute() {
  _impl_._oneof_case_[0] = kAbsolute;
}
inline void FlowPolicyLevelSettings_Conditions_BaselineCondition::clear_absolute() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value_case() == kAbsolute) {
    _impl_.value_.absolute_ = 0;
    clear_has_value();
  }
}
inline double FlowPolicyLevelSettings_Conditions_BaselineCondition::absolute() const {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.BaselineCondition.absolute)
  return _internal_absolute();
}
inline void FlowPolicyLevelSettings_Conditions_BaselineCondition::set_absolute(double value) {
  if (value_case() != kAbsolute) {
    clear_value();
    set_has_absolute();
  }
  _impl_.value_.absolute_ = value;
  // @@protoc_insertion_point(field_set:kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.BaselineCondition.absolute)
}
inline double FlowPolicyLevelSettings_Conditions_BaselineCondition::_internal_absolute() const {
  if (value_case() == kAbsolute) {
    return _impl_.value_.absolute_;
  }
  return 0;
}

// int64 percentage = 2 [json_name = "percentage", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool FlowPolicyLevelSettings_Conditions_BaselineCondition::has_percentage() const {
  return value_case() == kPercentage;
}
inline void FlowPolicyLevelSettings_Conditions_BaselineCondition::set_has_percentage() {
  _impl_._oneof_case_[0] = kPercentage;
}
inline void FlowPolicyLevelSettings_Conditions_BaselineCondition::clear_percentage() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value_case() == kPercentage) {
    _impl_.value_.percentage_ = ::int64_t{0};
    clear_has_value();
  }
}
inline ::int64_t FlowPolicyLevelSettings_Conditions_BaselineCondition::percentage() const {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.BaselineCondition.percentage)
  return _internal_percentage();
}
inline void FlowPolicyLevelSettings_Conditions_BaselineCondition::set_percentage(::int64_t value) {
  if (value_case() != kPercentage) {
    clear_value();
    set_has_percentage();
  }
  _impl_.value_.percentage_ = value;
  // @@protoc_insertion_point(field_set:kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.BaselineCondition.percentage)
}
inline ::int64_t FlowPolicyLevelSettings_Conditions_BaselineCondition::_internal_percentage() const {
  if (value_case() == kPercentage) {
    return _impl_.value_.percentage_;
  }
  return ::int64_t{0};
}

// .kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.BaselineCondition.DeltaType delta = 3 [json_name = "delta", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void FlowPolicyLevelSettings_Conditions_BaselineCondition::clear_delta() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delta_ = 0;
}
inline ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_BaselineCondition_DeltaType FlowPolicyLevelSettings_Conditions_BaselineCondition::delta() const {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.BaselineCondition.delta)
  return _internal_delta();
}
inline void FlowPolicyLevelSettings_Conditions_BaselineCondition::set_delta(::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_BaselineCondition_DeltaType value) {
  _internal_set_delta(value);
  // @@protoc_insertion_point(field_set:kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.BaselineCondition.delta)
}
inline ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_BaselineCondition_DeltaType FlowPolicyLevelSettings_Conditions_BaselineCondition::_internal_delta() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_BaselineCondition_DeltaType>(_impl_.delta_);
}
inline void FlowPolicyLevelSettings_Conditions_BaselineCondition::_internal_set_delta(::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_BaselineCondition_DeltaType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delta_ = value;
}

// bool use_lowest = 4 [json_name = "useLowest", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool FlowPolicyLevelSettings_Conditions_BaselineCondition::has_use_lowest() const {
  return fallback_case() == kUseLowest;
}
inline void FlowPolicyLevelSettings_Conditions_BaselineCondition::set_has_use_lowest() {
  _impl_._oneof_case_[1] = kUseLowest;
}
inline void FlowPolicyLevelSettings_Conditions_BaselineCondition::clear_use_lowest() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (fallback_case() == kUseLowest) {
    _impl_.fallback_.use_lowest_ = false;
    clear_has_fallback();
  }
}
inline bool FlowPolicyLevelSettings_Conditions_BaselineCondition::use_lowest() const {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.BaselineCondition.use_lowest)
  return _internal_use_lowest();
}
inline void FlowPolicyLevelSettings_Conditions_BaselineCondition::set_use_lowest(bool value) {
  if (fallback_case() != kUseLowest) {
    clear_fallback();
    set_has_use_lowest();
  }
  _impl_.fallback_.use_lowest_ = value;
  // @@protoc_insertion_point(field_set:kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.BaselineCondition.use_lowest)
}
inline bool FlowPolicyLevelSettings_Conditions_BaselineCondition::_internal_use_lowest() const {
  if (fallback_case() == kUseLowest) {
    return _impl_.fallback_.use_lowest_;
  }
  return false;
}

// bool use_highest = 5 [json_name = "useHighest", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool FlowPolicyLevelSettings_Conditions_BaselineCondition::has_use_highest() const {
  return fallback_case() == kUseHighest;
}
inline void FlowPolicyLevelSettings_Conditions_BaselineCondition::set_has_use_highest() {
  _impl_._oneof_case_[1] = kUseHighest;
}
inline void FlowPolicyLevelSettings_Conditions_BaselineCondition::clear_use_highest() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (fallback_case() == kUseHighest) {
    _impl_.fallback_.use_highest_ = false;
    clear_has_fallback();
  }
}
inline bool FlowPolicyLevelSettings_Conditions_BaselineCondition::use_highest() const {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.BaselineCondition.use_highest)
  return _internal_use_highest();
}
inline void FlowPolicyLevelSettings_Conditions_BaselineCondition::set_use_highest(bool value) {
  if (fallback_case() != kUseHighest) {
    clear_fallback();
    set_has_use_highest();
  }
  _impl_.fallback_.use_highest_ = value;
  // @@protoc_insertion_point(field_set:kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.BaselineCondition.use_highest)
}
inline bool FlowPolicyLevelSettings_Conditions_BaselineCondition::_internal_use_highest() const {
  if (fallback_case() == kUseHighest) {
    return _impl_.fallback_.use_highest_;
  }
  return false;
}

// bool use_trigger = 6 [json_name = "useTrigger", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool FlowPolicyLevelSettings_Conditions_BaselineCondition::has_use_trigger() const {
  return fallback_case() == kUseTrigger;
}
inline void FlowPolicyLevelSettings_Conditions_BaselineCondition::set_has_use_trigger() {
  _impl_._oneof_case_[1] = kUseTrigger;
}
inline void FlowPolicyLevelSettings_Conditions_BaselineCondition::clear_use_trigger() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (fallback_case() == kUseTrigger) {
    _impl_.fallback_.use_trigger_ = false;
    clear_has_fallback();
  }
}
inline bool FlowPolicyLevelSettings_Conditions_BaselineCondition::use_trigger() const {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.BaselineCondition.use_trigger)
  return _internal_use_trigger();
}
inline void FlowPolicyLevelSettings_Conditions_BaselineCondition::set_use_trigger(bool value) {
  if (fallback_case() != kUseTrigger) {
    clear_fallback();
    set_has_use_trigger();
  }
  _impl_.fallback_.use_trigger_ = value;
  // @@protoc_insertion_point(field_set:kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.BaselineCondition.use_trigger)
}
inline bool FlowPolicyLevelSettings_Conditions_BaselineCondition::_internal_use_trigger() const {
  if (fallback_case() == kUseTrigger) {
    return _impl_.fallback_.use_trigger_;
  }
  return false;
}

// bool skip = 7 [json_name = "skip", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool FlowPolicyLevelSettings_Conditions_BaselineCondition::has_skip() const {
  return fallback_case() == kSkip;
}
inline void FlowPolicyLevelSettings_Conditions_BaselineCondition::set_has_skip() {
  _impl_._oneof_case_[1] = kSkip;
}
inline void FlowPolicyLevelSettings_Conditions_BaselineCondition::clear_skip() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (fallback_case() == kSkip) {
    _impl_.fallback_.skip_ = false;
    clear_has_fallback();
  }
}
inline bool FlowPolicyLevelSettings_Conditions_BaselineCondition::skip() const {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.BaselineCondition.skip)
  return _internal_skip();
}
inline void FlowPolicyLevelSettings_Conditions_BaselineCondition::set_skip(bool value) {
  if (fallback_case() != kSkip) {
    clear_fallback();
    set_has_skip();
  }
  _impl_.fallback_.skip_ = value;
  // @@protoc_insertion_point(field_set:kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.BaselineCondition.skip)
}
inline bool FlowPolicyLevelSettings_Conditions_BaselineCondition::_internal_skip() const {
  if (fallback_case() == kSkip) {
    return _impl_.fallback_.skip_;
  }
  return false;
}

// int64 use_value = 8 [json_name = "useValue", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool FlowPolicyLevelSettings_Conditions_BaselineCondition::has_use_value() const {
  return fallback_case() == kUseValue;
}
inline void FlowPolicyLevelSettings_Conditions_BaselineCondition::set_has_use_value() {
  _impl_._oneof_case_[1] = kUseValue;
}
inline void FlowPolicyLevelSettings_Conditions_BaselineCondition::clear_use_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (fallback_case() == kUseValue) {
    _impl_.fallback_.use_value_ = ::int64_t{0};
    clear_has_fallback();
  }
}
inline ::int64_t FlowPolicyLevelSettings_Conditions_BaselineCondition::use_value() const {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.BaselineCondition.use_value)
  return _internal_use_value();
}
inline void FlowPolicyLevelSettings_Conditions_BaselineCondition::set_use_value(::int64_t value) {
  if (fallback_case() != kUseValue) {
    clear_fallback();
    set_has_use_value();
  }
  _impl_.fallback_.use_value_ = value;
  // @@protoc_insertion_point(field_set:kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.BaselineCondition.use_value)
}
inline ::int64_t FlowPolicyLevelSettings_Conditions_BaselineCondition::_internal_use_value() const {
  if (fallback_case() == kUseValue) {
    return _impl_.fallback_.use_value_;
  }
  return ::int64_t{0};
}

inline bool FlowPolicyLevelSettings_Conditions_BaselineCondition::has_value() const {
  return value_case() != VALUE_NOT_SET;
}
inline void FlowPolicyLevelSettings_Conditions_BaselineCondition::clear_has_value() {
  _impl_._oneof_case_[0] = VALUE_NOT_SET;
}
inline bool FlowPolicyLevelSettings_Conditions_BaselineCondition::has_fallback() const {
  return fallback_case() != FALLBACK_NOT_SET;
}
inline void FlowPolicyLevelSettings_Conditions_BaselineCondition::clear_has_fallback() {
  _impl_._oneof_case_[1] = FALLBACK_NOT_SET;
}
inline FlowPolicyLevelSettings_Conditions_BaselineCondition::ValueCase FlowPolicyLevelSettings_Conditions_BaselineCondition::value_case() const {
  return FlowPolicyLevelSettings_Conditions_BaselineCondition::ValueCase(_impl_._oneof_case_[0]);
}
inline FlowPolicyLevelSettings_Conditions_BaselineCondition::FallbackCase FlowPolicyLevelSettings_Conditions_BaselineCondition::fallback_case() const {
  return FlowPolicyLevelSettings_Conditions_BaselineCondition::FallbackCase(_impl_._oneof_case_[1]);
}
// -------------------------------------------------------------------

// FlowPolicyLevelSettings_Conditions_TopKeysCondition

// .kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.TopKeysCondition.TopKeysEvent event = 1 [json_name = "event", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void FlowPolicyLevelSettings_Conditions_TopKeysCondition::clear_event() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.event_ = 0;
}
inline ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_TopKeysCondition_TopKeysEvent FlowPolicyLevelSettings_Conditions_TopKeysCondition::event() const {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.TopKeysCondition.event)
  return _internal_event();
}
inline void FlowPolicyLevelSettings_Conditions_TopKeysCondition::set_event(::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_TopKeysCondition_TopKeysEvent value) {
  _internal_set_event(value);
  // @@protoc_insertion_point(field_set:kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.TopKeysCondition.event)
}
inline ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_TopKeysCondition_TopKeysEvent FlowPolicyLevelSettings_Conditions_TopKeysCondition::_internal_event() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_TopKeysCondition_TopKeysEvent>(_impl_.event_);
}
inline void FlowPolicyLevelSettings_Conditions_TopKeysCondition::_internal_set_event(::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_TopKeysCondition_TopKeysEvent value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.event_ = value;
}

// int64 count = 2 [json_name = "count", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void FlowPolicyLevelSettings_Conditions_TopKeysCondition::clear_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.count_ = ::int64_t{0};
}
inline ::int64_t FlowPolicyLevelSettings_Conditions_TopKeysCondition::count() const {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.TopKeysCondition.count)
  return _internal_count();
}
inline void FlowPolicyLevelSettings_Conditions_TopKeysCondition::set_count(::int64_t value) {
  _internal_set_count(value);
  // @@protoc_insertion_point(field_set:kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.TopKeysCondition.count)
}
inline ::int64_t FlowPolicyLevelSettings_Conditions_TopKeysCondition::_internal_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.count_;
}
inline void FlowPolicyLevelSettings_Conditions_TopKeysCondition::_internal_set_count(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.count_ = value;
}

// -------------------------------------------------------------------

// FlowPolicyLevelSettings_Conditions_InterfaceCapacityCondition

// double absolute = 1 [json_name = "absolute", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool FlowPolicyLevelSettings_Conditions_InterfaceCapacityCondition::has_absolute() const {
  return value_case() == kAbsolute;
}
inline void FlowPolicyLevelSettings_Conditions_InterfaceCapacityCondition::set_has_absolute() {
  _impl_._oneof_case_[0] = kAbsolute;
}
inline void FlowPolicyLevelSettings_Conditions_InterfaceCapacityCondition::clear_absolute() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value_case() == kAbsolute) {
    _impl_.value_.absolute_ = 0;
    clear_has_value();
  }
}
inline double FlowPolicyLevelSettings_Conditions_InterfaceCapacityCondition::absolute() const {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.InterfaceCapacityCondition.absolute)
  return _internal_absolute();
}
inline void FlowPolicyLevelSettings_Conditions_InterfaceCapacityCondition::set_absolute(double value) {
  if (value_case() != kAbsolute) {
    clear_value();
    set_has_absolute();
  }
  _impl_.value_.absolute_ = value;
  // @@protoc_insertion_point(field_set:kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.InterfaceCapacityCondition.absolute)
}
inline double FlowPolicyLevelSettings_Conditions_InterfaceCapacityCondition::_internal_absolute() const {
  if (value_case() == kAbsolute) {
    return _impl_.value_.absolute_;
  }
  return 0;
}

// int64 percentage = 2 [json_name = "percentage", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool FlowPolicyLevelSettings_Conditions_InterfaceCapacityCondition::has_percentage() const {
  return value_case() == kPercentage;
}
inline void FlowPolicyLevelSettings_Conditions_InterfaceCapacityCondition::set_has_percentage() {
  _impl_._oneof_case_[0] = kPercentage;
}
inline void FlowPolicyLevelSettings_Conditions_InterfaceCapacityCondition::clear_percentage() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value_case() == kPercentage) {
    _impl_.value_.percentage_ = ::int64_t{0};
    clear_has_value();
  }
}
inline ::int64_t FlowPolicyLevelSettings_Conditions_InterfaceCapacityCondition::percentage() const {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.InterfaceCapacityCondition.percentage)
  return _internal_percentage();
}
inline void FlowPolicyLevelSettings_Conditions_InterfaceCapacityCondition::set_percentage(::int64_t value) {
  if (value_case() != kPercentage) {
    clear_value();
    set_has_percentage();
  }
  _impl_.value_.percentage_ = value;
  // @@protoc_insertion_point(field_set:kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.InterfaceCapacityCondition.percentage)
}
inline ::int64_t FlowPolicyLevelSettings_Conditions_InterfaceCapacityCondition::_internal_percentage() const {
  if (value_case() == kPercentage) {
    return _impl_.value_.percentage_;
  }
  return ::int64_t{0};
}

inline bool FlowPolicyLevelSettings_Conditions_InterfaceCapacityCondition::has_value() const {
  return value_case() != VALUE_NOT_SET;
}
inline void FlowPolicyLevelSettings_Conditions_InterfaceCapacityCondition::clear_has_value() {
  _impl_._oneof_case_[0] = VALUE_NOT_SET;
}
inline FlowPolicyLevelSettings_Conditions_InterfaceCapacityCondition::ValueCase FlowPolicyLevelSettings_Conditions_InterfaceCapacityCondition::value_case() const {
  return FlowPolicyLevelSettings_Conditions_InterfaceCapacityCondition::ValueCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// FlowPolicyLevelSettings_Conditions_RatioCondition

// string lhs_metric = 1 [json_name = "lhsMetric", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void FlowPolicyLevelSettings_Conditions_RatioCondition::clear_lhs_metric() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lhs_metric_.ClearToEmpty();
}
inline const std::string& FlowPolicyLevelSettings_Conditions_RatioCondition::lhs_metric() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.RatioCondition.lhs_metric)
  return _internal_lhs_metric();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void FlowPolicyLevelSettings_Conditions_RatioCondition::set_lhs_metric(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lhs_metric_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.RatioCondition.lhs_metric)
}
inline std::string* FlowPolicyLevelSettings_Conditions_RatioCondition::mutable_lhs_metric() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_lhs_metric();
  // @@protoc_insertion_point(field_mutable:kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.RatioCondition.lhs_metric)
  return _s;
}
inline const std::string& FlowPolicyLevelSettings_Conditions_RatioCondition::_internal_lhs_metric() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.lhs_metric_.Get();
}
inline void FlowPolicyLevelSettings_Conditions_RatioCondition::_internal_set_lhs_metric(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lhs_metric_.Set(value, GetArena());
}
inline std::string* FlowPolicyLevelSettings_Conditions_RatioCondition::_internal_mutable_lhs_metric() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.lhs_metric_.Mutable( GetArena());
}
inline std::string* FlowPolicyLevelSettings_Conditions_RatioCondition::release_lhs_metric() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.RatioCondition.lhs_metric)
  return _impl_.lhs_metric_.Release();
}
inline void FlowPolicyLevelSettings_Conditions_RatioCondition::set_allocated_lhs_metric(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lhs_metric_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.lhs_metric_.IsDefault()) {
    _impl_.lhs_metric_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.RatioCondition.lhs_metric)
}

// string rhs_metric = 2 [json_name = "rhsMetric", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void FlowPolicyLevelSettings_Conditions_RatioCondition::clear_rhs_metric() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rhs_metric_.ClearToEmpty();
}
inline const std::string& FlowPolicyLevelSettings_Conditions_RatioCondition::rhs_metric() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.RatioCondition.rhs_metric)
  return _internal_rhs_metric();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void FlowPolicyLevelSettings_Conditions_RatioCondition::set_rhs_metric(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rhs_metric_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.RatioCondition.rhs_metric)
}
inline std::string* FlowPolicyLevelSettings_Conditions_RatioCondition::mutable_rhs_metric() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_rhs_metric();
  // @@protoc_insertion_point(field_mutable:kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.RatioCondition.rhs_metric)
  return _s;
}
inline const std::string& FlowPolicyLevelSettings_Conditions_RatioCondition::_internal_rhs_metric() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.rhs_metric_.Get();
}
inline void FlowPolicyLevelSettings_Conditions_RatioCondition::_internal_set_rhs_metric(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rhs_metric_.Set(value, GetArena());
}
inline std::string* FlowPolicyLevelSettings_Conditions_RatioCondition::_internal_mutable_rhs_metric() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.rhs_metric_.Mutable( GetArena());
}
inline std::string* FlowPolicyLevelSettings_Conditions_RatioCondition::release_rhs_metric() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.RatioCondition.rhs_metric)
  return _impl_.rhs_metric_.Release();
}
inline void FlowPolicyLevelSettings_Conditions_RatioCondition::set_allocated_rhs_metric(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rhs_metric_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.rhs_metric_.IsDefault()) {
    _impl_.rhs_metric_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.RatioCondition.rhs_metric)
}

// uint32 lhs_proportion = 3 [json_name = "lhsProportion", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void FlowPolicyLevelSettings_Conditions_RatioCondition::clear_lhs_proportion() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lhs_proportion_ = 0u;
}
inline ::uint32_t FlowPolicyLevelSettings_Conditions_RatioCondition::lhs_proportion() const {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.RatioCondition.lhs_proportion)
  return _internal_lhs_proportion();
}
inline void FlowPolicyLevelSettings_Conditions_RatioCondition::set_lhs_proportion(::uint32_t value) {
  _internal_set_lhs_proportion(value);
  // @@protoc_insertion_point(field_set:kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.RatioCondition.lhs_proportion)
}
inline ::uint32_t FlowPolicyLevelSettings_Conditions_RatioCondition::_internal_lhs_proportion() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.lhs_proportion_;
}
inline void FlowPolicyLevelSettings_Conditions_RatioCondition::_internal_set_lhs_proportion(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lhs_proportion_ = value;
}

// uint32 rhs_proportion = 4 [json_name = "rhsProportion", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void FlowPolicyLevelSettings_Conditions_RatioCondition::clear_rhs_proportion() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rhs_proportion_ = 0u;
}
inline ::uint32_t FlowPolicyLevelSettings_Conditions_RatioCondition::rhs_proportion() const {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.RatioCondition.rhs_proportion)
  return _internal_rhs_proportion();
}
inline void FlowPolicyLevelSettings_Conditions_RatioCondition::set_rhs_proportion(::uint32_t value) {
  _internal_set_rhs_proportion(value);
  // @@protoc_insertion_point(field_set:kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.RatioCondition.rhs_proportion)
}
inline ::uint32_t FlowPolicyLevelSettings_Conditions_RatioCondition::_internal_rhs_proportion() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.rhs_proportion_;
}
inline void FlowPolicyLevelSettings_Conditions_RatioCondition::_internal_set_rhs_proportion(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rhs_proportion_ = value;
}

// double margin = 5 [json_name = "margin", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void FlowPolicyLevelSettings_Conditions_RatioCondition::clear_margin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.margin_ = 0;
}
inline double FlowPolicyLevelSettings_Conditions_RatioCondition::margin() const {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.RatioCondition.margin)
  return _internal_margin();
}
inline void FlowPolicyLevelSettings_Conditions_RatioCondition::set_margin(double value) {
  _internal_set_margin(value);
  // @@protoc_insertion_point(field_set:kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.RatioCondition.margin)
}
inline double FlowPolicyLevelSettings_Conditions_RatioCondition::_internal_margin() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.margin_;
}
inline void FlowPolicyLevelSettings_Conditions_RatioCondition::_internal_set_margin(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.margin_ = value;
}

// .kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.RatioCondition.Direction direction = 6 [json_name = "direction", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void FlowPolicyLevelSettings_Conditions_RatioCondition::clear_direction() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.direction_ = 0;
}
inline ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_RatioCondition_Direction FlowPolicyLevelSettings_Conditions_RatioCondition::direction() const {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.RatioCondition.direction)
  return _internal_direction();
}
inline void FlowPolicyLevelSettings_Conditions_RatioCondition::set_direction(::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_RatioCondition_Direction value) {
  _internal_set_direction(value);
  // @@protoc_insertion_point(field_set:kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.RatioCondition.direction)
}
inline ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_RatioCondition_Direction FlowPolicyLevelSettings_Conditions_RatioCondition::_internal_direction() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_RatioCondition_Direction>(_impl_.direction_);
}
inline void FlowPolicyLevelSettings_Conditions_RatioCondition::_internal_set_direction(::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_RatioCondition_Direction value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.direction_ = value;
}

// -------------------------------------------------------------------

// FlowPolicyLevelSettings_Conditions_ForecastCondition

// .kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.Operator operator = 1 [json_name = "operator"];
inline void FlowPolicyLevelSettings_Conditions_ForecastCondition::clear_operator_() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.operator__ = 0;
}
inline ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_Operator FlowPolicyLevelSettings_Conditions_ForecastCondition::operator_() const {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.ForecastCondition.operator)
  return _internal_operator_();
}
inline void FlowPolicyLevelSettings_Conditions_ForecastCondition::set_operator_(::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_Operator value) {
  _internal_set_operator_(value);
  // @@protoc_insertion_point(field_set:kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.ForecastCondition.operator)
}
inline ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_Operator FlowPolicyLevelSettings_Conditions_ForecastCondition::_internal_operator_() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_Operator>(_impl_.operator__);
}
inline void FlowPolicyLevelSettings_Conditions_ForecastCondition::_internal_set_operator_(::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_Operator value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.operator__ = value;
}

// int64 percentage_value = 2 [json_name = "percentageValue"];
inline void FlowPolicyLevelSettings_Conditions_ForecastCondition::clear_percentage_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.percentage_value_ = ::int64_t{0};
}
inline ::int64_t FlowPolicyLevelSettings_Conditions_ForecastCondition::percentage_value() const {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.ForecastCondition.percentage_value)
  return _internal_percentage_value();
}
inline void FlowPolicyLevelSettings_Conditions_ForecastCondition::set_percentage_value(::int64_t value) {
  _internal_set_percentage_value(value);
  // @@protoc_insertion_point(field_set:kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.ForecastCondition.percentage_value)
}
inline ::int64_t FlowPolicyLevelSettings_Conditions_ForecastCondition::_internal_percentage_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.percentage_value_;
}
inline void FlowPolicyLevelSettings_Conditions_ForecastCondition::_internal_set_percentage_value(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.percentage_value_ = value;
}

// -------------------------------------------------------------------

// FlowPolicyLevelSettings_Conditions

// .kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.StaticCondition static = 1 [json_name = "static", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool FlowPolicyLevelSettings_Conditions::has_static_() const {
  return type_case() == kStatic;
}
inline bool FlowPolicyLevelSettings_Conditions::_internal_has_static_() const {
  return type_case() == kStatic;
}
inline void FlowPolicyLevelSettings_Conditions::set_has_static_() {
  _impl_._oneof_case_[0] = kStatic;
}
inline void FlowPolicyLevelSettings_Conditions::clear_static_() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (type_case() == kStatic) {
    if (GetArena() == nullptr) {
      delete _impl_.type_.static__;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.type_.static__);
    }
    clear_has_type();
  }
}
inline ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_StaticCondition* FlowPolicyLevelSettings_Conditions::release_static_() {
  // @@protoc_insertion_point(field_release:kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.static)
  if (type_case() == kStatic) {
    clear_has_type();
    auto* temp = _impl_.type_.static__;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.type_.static__ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_StaticCondition& FlowPolicyLevelSettings_Conditions::_internal_static_() const {
  return type_case() == kStatic ? *_impl_.type_.static__ : reinterpret_cast<::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_StaticCondition&>(::kentik::alerting::public_::v202505::_FlowPolicyLevelSettings_Conditions_StaticCondition_default_instance_);
}
inline const ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_StaticCondition& FlowPolicyLevelSettings_Conditions::static_() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.static)
  return _internal_static_();
}
inline ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_StaticCondition* FlowPolicyLevelSettings_Conditions::unsafe_arena_release_static_() {
  // @@protoc_insertion_point(field_unsafe_arena_release:kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.static)
  if (type_case() == kStatic) {
    clear_has_type();
    auto* temp = _impl_.type_.static__;
    _impl_.type_.static__ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void FlowPolicyLevelSettings_Conditions::unsafe_arena_set_allocated_static_(::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_StaticCondition* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_type();
  if (value) {
    set_has_static_();
    _impl_.type_.static__ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.static)
}
inline ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_StaticCondition* FlowPolicyLevelSettings_Conditions::_internal_mutable_static_() {
  if (type_case() != kStatic) {
    clear_type();
    set_has_static_();
    _impl_.type_.static__ =
        ::google::protobuf::Message::DefaultConstruct<::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_StaticCondition>(GetArena());
  }
  return _impl_.type_.static__;
}
inline ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_StaticCondition* FlowPolicyLevelSettings_Conditions::mutable_static_() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_StaticCondition* _msg = _internal_mutable_static_();
  // @@protoc_insertion_point(field_mutable:kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.static)
  return _msg;
}

// .kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.BaselineCondition baseline = 2 [json_name = "baseline", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool FlowPolicyLevelSettings_Conditions::has_baseline() const {
  return type_case() == kBaseline;
}
inline bool FlowPolicyLevelSettings_Conditions::_internal_has_baseline() const {
  return type_case() == kBaseline;
}
inline void FlowPolicyLevelSettings_Conditions::set_has_baseline() {
  _impl_._oneof_case_[0] = kBaseline;
}
inline void FlowPolicyLevelSettings_Conditions::clear_baseline() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (type_case() == kBaseline) {
    if (GetArena() == nullptr) {
      delete _impl_.type_.baseline_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.type_.baseline_);
    }
    clear_has_type();
  }
}
inline ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_BaselineCondition* FlowPolicyLevelSettings_Conditions::release_baseline() {
  // @@protoc_insertion_point(field_release:kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.baseline)
  if (type_case() == kBaseline) {
    clear_has_type();
    auto* temp = _impl_.type_.baseline_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.type_.baseline_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_BaselineCondition& FlowPolicyLevelSettings_Conditions::_internal_baseline() const {
  return type_case() == kBaseline ? *_impl_.type_.baseline_ : reinterpret_cast<::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_BaselineCondition&>(::kentik::alerting::public_::v202505::_FlowPolicyLevelSettings_Conditions_BaselineCondition_default_instance_);
}
inline const ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_BaselineCondition& FlowPolicyLevelSettings_Conditions::baseline() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.baseline)
  return _internal_baseline();
}
inline ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_BaselineCondition* FlowPolicyLevelSettings_Conditions::unsafe_arena_release_baseline() {
  // @@protoc_insertion_point(field_unsafe_arena_release:kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.baseline)
  if (type_case() == kBaseline) {
    clear_has_type();
    auto* temp = _impl_.type_.baseline_;
    _impl_.type_.baseline_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void FlowPolicyLevelSettings_Conditions::unsafe_arena_set_allocated_baseline(::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_BaselineCondition* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_type();
  if (value) {
    set_has_baseline();
    _impl_.type_.baseline_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.baseline)
}
inline ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_BaselineCondition* FlowPolicyLevelSettings_Conditions::_internal_mutable_baseline() {
  if (type_case() != kBaseline) {
    clear_type();
    set_has_baseline();
    _impl_.type_.baseline_ =
        ::google::protobuf::Message::DefaultConstruct<::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_BaselineCondition>(GetArena());
  }
  return _impl_.type_.baseline_;
}
inline ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_BaselineCondition* FlowPolicyLevelSettings_Conditions::mutable_baseline() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_BaselineCondition* _msg = _internal_mutable_baseline();
  // @@protoc_insertion_point(field_mutable:kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.baseline)
  return _msg;
}

// .kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.TopKeysCondition top_keys = 3 [json_name = "topKeys", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool FlowPolicyLevelSettings_Conditions::has_top_keys() const {
  return type_case() == kTopKeys;
}
inline bool FlowPolicyLevelSettings_Conditions::_internal_has_top_keys() const {
  return type_case() == kTopKeys;
}
inline void FlowPolicyLevelSettings_Conditions::set_has_top_keys() {
  _impl_._oneof_case_[0] = kTopKeys;
}
inline void FlowPolicyLevelSettings_Conditions::clear_top_keys() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (type_case() == kTopKeys) {
    if (GetArena() == nullptr) {
      delete _impl_.type_.top_keys_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.type_.top_keys_);
    }
    clear_has_type();
  }
}
inline ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_TopKeysCondition* FlowPolicyLevelSettings_Conditions::release_top_keys() {
  // @@protoc_insertion_point(field_release:kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.top_keys)
  if (type_case() == kTopKeys) {
    clear_has_type();
    auto* temp = _impl_.type_.top_keys_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.type_.top_keys_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_TopKeysCondition& FlowPolicyLevelSettings_Conditions::_internal_top_keys() const {
  return type_case() == kTopKeys ? *_impl_.type_.top_keys_ : reinterpret_cast<::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_TopKeysCondition&>(::kentik::alerting::public_::v202505::_FlowPolicyLevelSettings_Conditions_TopKeysCondition_default_instance_);
}
inline const ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_TopKeysCondition& FlowPolicyLevelSettings_Conditions::top_keys() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.top_keys)
  return _internal_top_keys();
}
inline ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_TopKeysCondition* FlowPolicyLevelSettings_Conditions::unsafe_arena_release_top_keys() {
  // @@protoc_insertion_point(field_unsafe_arena_release:kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.top_keys)
  if (type_case() == kTopKeys) {
    clear_has_type();
    auto* temp = _impl_.type_.top_keys_;
    _impl_.type_.top_keys_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void FlowPolicyLevelSettings_Conditions::unsafe_arena_set_allocated_top_keys(::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_TopKeysCondition* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_type();
  if (value) {
    set_has_top_keys();
    _impl_.type_.top_keys_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.top_keys)
}
inline ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_TopKeysCondition* FlowPolicyLevelSettings_Conditions::_internal_mutable_top_keys() {
  if (type_case() != kTopKeys) {
    clear_type();
    set_has_top_keys();
    _impl_.type_.top_keys_ =
        ::google::protobuf::Message::DefaultConstruct<::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_TopKeysCondition>(GetArena());
  }
  return _impl_.type_.top_keys_;
}
inline ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_TopKeysCondition* FlowPolicyLevelSettings_Conditions::mutable_top_keys() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_TopKeysCondition* _msg = _internal_mutable_top_keys();
  // @@protoc_insertion_point(field_mutable:kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.top_keys)
  return _msg;
}

// .kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.InterfaceCapacityCondition interface_capacity = 4 [json_name = "interfaceCapacity", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool FlowPolicyLevelSettings_Conditions::has_interface_capacity() const {
  return type_case() == kInterfaceCapacity;
}
inline bool FlowPolicyLevelSettings_Conditions::_internal_has_interface_capacity() const {
  return type_case() == kInterfaceCapacity;
}
inline void FlowPolicyLevelSettings_Conditions::set_has_interface_capacity() {
  _impl_._oneof_case_[0] = kInterfaceCapacity;
}
inline void FlowPolicyLevelSettings_Conditions::clear_interface_capacity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (type_case() == kInterfaceCapacity) {
    if (GetArena() == nullptr) {
      delete _impl_.type_.interface_capacity_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.type_.interface_capacity_);
    }
    clear_has_type();
  }
}
inline ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_InterfaceCapacityCondition* FlowPolicyLevelSettings_Conditions::release_interface_capacity() {
  // @@protoc_insertion_point(field_release:kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.interface_capacity)
  if (type_case() == kInterfaceCapacity) {
    clear_has_type();
    auto* temp = _impl_.type_.interface_capacity_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.type_.interface_capacity_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_InterfaceCapacityCondition& FlowPolicyLevelSettings_Conditions::_internal_interface_capacity() const {
  return type_case() == kInterfaceCapacity ? *_impl_.type_.interface_capacity_ : reinterpret_cast<::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_InterfaceCapacityCondition&>(::kentik::alerting::public_::v202505::_FlowPolicyLevelSettings_Conditions_InterfaceCapacityCondition_default_instance_);
}
inline const ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_InterfaceCapacityCondition& FlowPolicyLevelSettings_Conditions::interface_capacity() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.interface_capacity)
  return _internal_interface_capacity();
}
inline ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_InterfaceCapacityCondition* FlowPolicyLevelSettings_Conditions::unsafe_arena_release_interface_capacity() {
  // @@protoc_insertion_point(field_unsafe_arena_release:kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.interface_capacity)
  if (type_case() == kInterfaceCapacity) {
    clear_has_type();
    auto* temp = _impl_.type_.interface_capacity_;
    _impl_.type_.interface_capacity_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void FlowPolicyLevelSettings_Conditions::unsafe_arena_set_allocated_interface_capacity(::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_InterfaceCapacityCondition* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_type();
  if (value) {
    set_has_interface_capacity();
    _impl_.type_.interface_capacity_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.interface_capacity)
}
inline ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_InterfaceCapacityCondition* FlowPolicyLevelSettings_Conditions::_internal_mutable_interface_capacity() {
  if (type_case() != kInterfaceCapacity) {
    clear_type();
    set_has_interface_capacity();
    _impl_.type_.interface_capacity_ =
        ::google::protobuf::Message::DefaultConstruct<::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_InterfaceCapacityCondition>(GetArena());
  }
  return _impl_.type_.interface_capacity_;
}
inline ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_InterfaceCapacityCondition* FlowPolicyLevelSettings_Conditions::mutable_interface_capacity() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_InterfaceCapacityCondition* _msg = _internal_mutable_interface_capacity();
  // @@protoc_insertion_point(field_mutable:kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.interface_capacity)
  return _msg;
}

// .kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.RatioCondition ratio = 5 [json_name = "ratio", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool FlowPolicyLevelSettings_Conditions::has_ratio() const {
  return type_case() == kRatio;
}
inline bool FlowPolicyLevelSettings_Conditions::_internal_has_ratio() const {
  return type_case() == kRatio;
}
inline void FlowPolicyLevelSettings_Conditions::set_has_ratio() {
  _impl_._oneof_case_[0] = kRatio;
}
inline void FlowPolicyLevelSettings_Conditions::clear_ratio() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (type_case() == kRatio) {
    if (GetArena() == nullptr) {
      delete _impl_.type_.ratio_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.type_.ratio_);
    }
    clear_has_type();
  }
}
inline ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_RatioCondition* FlowPolicyLevelSettings_Conditions::release_ratio() {
  // @@protoc_insertion_point(field_release:kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.ratio)
  if (type_case() == kRatio) {
    clear_has_type();
    auto* temp = _impl_.type_.ratio_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.type_.ratio_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_RatioCondition& FlowPolicyLevelSettings_Conditions::_internal_ratio() const {
  return type_case() == kRatio ? *_impl_.type_.ratio_ : reinterpret_cast<::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_RatioCondition&>(::kentik::alerting::public_::v202505::_FlowPolicyLevelSettings_Conditions_RatioCondition_default_instance_);
}
inline const ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_RatioCondition& FlowPolicyLevelSettings_Conditions::ratio() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.ratio)
  return _internal_ratio();
}
inline ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_RatioCondition* FlowPolicyLevelSettings_Conditions::unsafe_arena_release_ratio() {
  // @@protoc_insertion_point(field_unsafe_arena_release:kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.ratio)
  if (type_case() == kRatio) {
    clear_has_type();
    auto* temp = _impl_.type_.ratio_;
    _impl_.type_.ratio_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void FlowPolicyLevelSettings_Conditions::unsafe_arena_set_allocated_ratio(::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_RatioCondition* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_type();
  if (value) {
    set_has_ratio();
    _impl_.type_.ratio_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.ratio)
}
inline ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_RatioCondition* FlowPolicyLevelSettings_Conditions::_internal_mutable_ratio() {
  if (type_case() != kRatio) {
    clear_type();
    set_has_ratio();
    _impl_.type_.ratio_ =
        ::google::protobuf::Message::DefaultConstruct<::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_RatioCondition>(GetArena());
  }
  return _impl_.type_.ratio_;
}
inline ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_RatioCondition* FlowPolicyLevelSettings_Conditions::mutable_ratio() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_RatioCondition* _msg = _internal_mutable_ratio();
  // @@protoc_insertion_point(field_mutable:kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.ratio)
  return _msg;
}

// .kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.ForecastCondition forecast = 6 [json_name = "forecast", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool FlowPolicyLevelSettings_Conditions::has_forecast() const {
  return type_case() == kForecast;
}
inline bool FlowPolicyLevelSettings_Conditions::_internal_has_forecast() const {
  return type_case() == kForecast;
}
inline void FlowPolicyLevelSettings_Conditions::set_has_forecast() {
  _impl_._oneof_case_[0] = kForecast;
}
inline void FlowPolicyLevelSettings_Conditions::clear_forecast() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (type_case() == kForecast) {
    if (GetArena() == nullptr) {
      delete _impl_.type_.forecast_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.type_.forecast_);
    }
    clear_has_type();
  }
}
inline ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_ForecastCondition* FlowPolicyLevelSettings_Conditions::release_forecast() {
  // @@protoc_insertion_point(field_release:kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.forecast)
  if (type_case() == kForecast) {
    clear_has_type();
    auto* temp = _impl_.type_.forecast_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.type_.forecast_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_ForecastCondition& FlowPolicyLevelSettings_Conditions::_internal_forecast() const {
  return type_case() == kForecast ? *_impl_.type_.forecast_ : reinterpret_cast<::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_ForecastCondition&>(::kentik::alerting::public_::v202505::_FlowPolicyLevelSettings_Conditions_ForecastCondition_default_instance_);
}
inline const ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_ForecastCondition& FlowPolicyLevelSettings_Conditions::forecast() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.forecast)
  return _internal_forecast();
}
inline ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_ForecastCondition* FlowPolicyLevelSettings_Conditions::unsafe_arena_release_forecast() {
  // @@protoc_insertion_point(field_unsafe_arena_release:kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.forecast)
  if (type_case() == kForecast) {
    clear_has_type();
    auto* temp = _impl_.type_.forecast_;
    _impl_.type_.forecast_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void FlowPolicyLevelSettings_Conditions::unsafe_arena_set_allocated_forecast(::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_ForecastCondition* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_type();
  if (value) {
    set_has_forecast();
    _impl_.type_.forecast_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.forecast)
}
inline ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_ForecastCondition* FlowPolicyLevelSettings_Conditions::_internal_mutable_forecast() {
  if (type_case() != kForecast) {
    clear_type();
    set_has_forecast();
    _impl_.type_.forecast_ =
        ::google::protobuf::Message::DefaultConstruct<::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_ForecastCondition>(GetArena());
  }
  return _impl_.type_.forecast_;
}
inline ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_ForecastCondition* FlowPolicyLevelSettings_Conditions::mutable_forecast() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_ForecastCondition* _msg = _internal_mutable_forecast();
  // @@protoc_insertion_point(field_mutable:kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions.forecast)
  return _msg;
}

inline bool FlowPolicyLevelSettings_Conditions::has_type() const {
  return type_case() != TYPE_NOT_SET;
}
inline void FlowPolicyLevelSettings_Conditions::clear_has_type() {
  _impl_._oneof_case_[0] = TYPE_NOT_SET;
}
inline FlowPolicyLevelSettings_Conditions::TypeCase FlowPolicyLevelSettings_Conditions::type_case() const {
  return FlowPolicyLevelSettings_Conditions::TypeCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// FlowPolicyLevelSettings_MitigationAssociation

// string platform_id = 1 [json_name = "platformId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void FlowPolicyLevelSettings_MitigationAssociation::clear_platform_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.platform_id_.ClearToEmpty();
}
inline const std::string& FlowPolicyLevelSettings_MitigationAssociation::platform_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.FlowPolicyLevelSettings.MitigationAssociation.platform_id)
  return _internal_platform_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void FlowPolicyLevelSettings_MitigationAssociation::set_platform_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.platform_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.alerting.public.v202505.FlowPolicyLevelSettings.MitigationAssociation.platform_id)
}
inline std::string* FlowPolicyLevelSettings_MitigationAssociation::mutable_platform_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_platform_id();
  // @@protoc_insertion_point(field_mutable:kentik.alerting.public.v202505.FlowPolicyLevelSettings.MitigationAssociation.platform_id)
  return _s;
}
inline const std::string& FlowPolicyLevelSettings_MitigationAssociation::_internal_platform_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.platform_id_.Get();
}
inline void FlowPolicyLevelSettings_MitigationAssociation::_internal_set_platform_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.platform_id_.Set(value, GetArena());
}
inline std::string* FlowPolicyLevelSettings_MitigationAssociation::_internal_mutable_platform_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.platform_id_.Mutable( GetArena());
}
inline std::string* FlowPolicyLevelSettings_MitigationAssociation::release_platform_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.alerting.public.v202505.FlowPolicyLevelSettings.MitigationAssociation.platform_id)
  return _impl_.platform_id_.Release();
}
inline void FlowPolicyLevelSettings_MitigationAssociation::set_allocated_platform_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.platform_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.platform_id_.IsDefault()) {
    _impl_.platform_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.alerting.public.v202505.FlowPolicyLevelSettings.MitigationAssociation.platform_id)
}

// string method_id = 2 [json_name = "methodId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void FlowPolicyLevelSettings_MitigationAssociation::clear_method_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.method_id_.ClearToEmpty();
}
inline const std::string& FlowPolicyLevelSettings_MitigationAssociation::method_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.FlowPolicyLevelSettings.MitigationAssociation.method_id)
  return _internal_method_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void FlowPolicyLevelSettings_MitigationAssociation::set_method_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.method_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.alerting.public.v202505.FlowPolicyLevelSettings.MitigationAssociation.method_id)
}
inline std::string* FlowPolicyLevelSettings_MitigationAssociation::mutable_method_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_method_id();
  // @@protoc_insertion_point(field_mutable:kentik.alerting.public.v202505.FlowPolicyLevelSettings.MitigationAssociation.method_id)
  return _s;
}
inline const std::string& FlowPolicyLevelSettings_MitigationAssociation::_internal_method_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.method_id_.Get();
}
inline void FlowPolicyLevelSettings_MitigationAssociation::_internal_set_method_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.method_id_.Set(value, GetArena());
}
inline std::string* FlowPolicyLevelSettings_MitigationAssociation::_internal_mutable_method_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.method_id_.Mutable( GetArena());
}
inline std::string* FlowPolicyLevelSettings_MitigationAssociation::release_method_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.alerting.public.v202505.FlowPolicyLevelSettings.MitigationAssociation.method_id)
  return _impl_.method_id_.Release();
}
inline void FlowPolicyLevelSettings_MitigationAssociation::set_allocated_method_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.method_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.method_id_.IsDefault()) {
    _impl_.method_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.alerting.public.v202505.FlowPolicyLevelSettings.MitigationAssociation.method_id)
}

// -------------------------------------------------------------------

// FlowPolicyLevelSettings

// repeated .kentik.alerting.public.v202505.FlowPolicyLevelSettings.Conditions conditions = 1 [json_name = "conditions", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int FlowPolicyLevelSettings::_internal_conditions_size() const {
  return _internal_conditions().size();
}
inline int FlowPolicyLevelSettings::conditions_size() const {
  return _internal_conditions_size();
}
inline void FlowPolicyLevelSettings::clear_conditions() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.conditions_.Clear();
}
inline ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions* FlowPolicyLevelSettings::mutable_conditions(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.alerting.public.v202505.FlowPolicyLevelSettings.conditions)
  return _internal_mutable_conditions()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions>* FlowPolicyLevelSettings::mutable_conditions()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.alerting.public.v202505.FlowPolicyLevelSettings.conditions)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_conditions();
}
inline const ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions& FlowPolicyLevelSettings::conditions(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.FlowPolicyLevelSettings.conditions)
  return _internal_conditions().Get(index);
}
inline ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions* FlowPolicyLevelSettings::add_conditions() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions* _add = _internal_mutable_conditions()->Add();
  // @@protoc_insertion_point(field_add:kentik.alerting.public.v202505.FlowPolicyLevelSettings.conditions)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions>& FlowPolicyLevelSettings::conditions() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.alerting.public.v202505.FlowPolicyLevelSettings.conditions)
  return _internal_conditions();
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions>&
FlowPolicyLevelSettings::_internal_conditions() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.conditions_;
}
inline ::google::protobuf::RepeatedPtrField<::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions>*
FlowPolicyLevelSettings::_internal_mutable_conditions() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.conditions_;
}

// .kentik.alerting.public.v202505.FlowPolicyLevelSettings.ActivationSettings activation = 2 [json_name = "activation", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool FlowPolicyLevelSettings::has_activation() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.activation_ != nullptr);
  return value;
}
inline void FlowPolicyLevelSettings::clear_activation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.activation_ != nullptr) _impl_.activation_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_ActivationSettings& FlowPolicyLevelSettings::_internal_activation() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_ActivationSettings* p = _impl_.activation_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_ActivationSettings&>(::kentik::alerting::public_::v202505::_FlowPolicyLevelSettings_ActivationSettings_default_instance_);
}
inline const ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_ActivationSettings& FlowPolicyLevelSettings::activation() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.FlowPolicyLevelSettings.activation)
  return _internal_activation();
}
inline void FlowPolicyLevelSettings::unsafe_arena_set_allocated_activation(::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_ActivationSettings* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.activation_);
  }
  _impl_.activation_ = reinterpret_cast<::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_ActivationSettings*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.alerting.public.v202505.FlowPolicyLevelSettings.activation)
}
inline ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_ActivationSettings* FlowPolicyLevelSettings::release_activation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_ActivationSettings* released = _impl_.activation_;
  _impl_.activation_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_ActivationSettings* FlowPolicyLevelSettings::unsafe_arena_release_activation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.alerting.public.v202505.FlowPolicyLevelSettings.activation)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_ActivationSettings* temp = _impl_.activation_;
  _impl_.activation_ = nullptr;
  return temp;
}
inline ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_ActivationSettings* FlowPolicyLevelSettings::_internal_mutable_activation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.activation_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_ActivationSettings>(GetArena());
    _impl_.activation_ = reinterpret_cast<::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_ActivationSettings*>(p);
  }
  return _impl_.activation_;
}
inline ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_ActivationSettings* FlowPolicyLevelSettings::mutable_activation() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_ActivationSettings* _msg = _internal_mutable_activation();
  // @@protoc_insertion_point(field_mutable:kentik.alerting.public.v202505.FlowPolicyLevelSettings.activation)
  return _msg;
}
inline void FlowPolicyLevelSettings::set_allocated_activation(::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_ActivationSettings* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.activation_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.activation_ = reinterpret_cast<::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_ActivationSettings*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.alerting.public.v202505.FlowPolicyLevelSettings.activation)
}

// repeated .kentik.alerting.public.v202505.FlowPolicyLevelSettings.MitigationAssociation mitigation_associations = 3 [json_name = "mitigationAssociations", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int FlowPolicyLevelSettings::_internal_mitigation_associations_size() const {
  return _internal_mitigation_associations().size();
}
inline int FlowPolicyLevelSettings::mitigation_associations_size() const {
  return _internal_mitigation_associations_size();
}
inline void FlowPolicyLevelSettings::clear_mitigation_associations() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mitigation_associations_.Clear();
}
inline ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_MitigationAssociation* FlowPolicyLevelSettings::mutable_mitigation_associations(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.alerting.public.v202505.FlowPolicyLevelSettings.mitigation_associations)
  return _internal_mutable_mitigation_associations()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_MitigationAssociation>* FlowPolicyLevelSettings::mutable_mitigation_associations()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.alerting.public.v202505.FlowPolicyLevelSettings.mitigation_associations)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_mitigation_associations();
}
inline const ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_MitigationAssociation& FlowPolicyLevelSettings::mitigation_associations(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.FlowPolicyLevelSettings.mitigation_associations)
  return _internal_mitigation_associations().Get(index);
}
inline ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_MitigationAssociation* FlowPolicyLevelSettings::add_mitigation_associations() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_MitigationAssociation* _add = _internal_mutable_mitigation_associations()->Add();
  // @@protoc_insertion_point(field_add:kentik.alerting.public.v202505.FlowPolicyLevelSettings.mitigation_associations)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_MitigationAssociation>& FlowPolicyLevelSettings::mitigation_associations() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.alerting.public.v202505.FlowPolicyLevelSettings.mitigation_associations)
  return _internal_mitigation_associations();
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_MitigationAssociation>&
FlowPolicyLevelSettings::_internal_mitigation_associations() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.mitigation_associations_;
}
inline ::google::protobuf::RepeatedPtrField<::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_MitigationAssociation>*
FlowPolicyLevelSettings::_internal_mutable_mitigation_associations() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.mitigation_associations_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v202505
}  // namespace public_
}  // namespace alerting
}  // namespace kentik


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::kentik::alerting::public_::v202505::FlowPolicySettings_BaselineConfig_CompareMode> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::kentik::alerting::public_::v202505::FlowPolicySettings_BaselineConfig_CompareMode>() {
  return ::kentik::alerting::public_::v202505::FlowPolicySettings_BaselineConfig_CompareMode_descriptor();
}
template <>
struct is_proto_enum<::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_BaselineCondition_DeltaType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_BaselineCondition_DeltaType>() {
  return ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_BaselineCondition_DeltaType_descriptor();
}
template <>
struct is_proto_enum<::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_TopKeysCondition_TopKeysEvent> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_TopKeysCondition_TopKeysEvent>() {
  return ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_TopKeysCondition_TopKeysEvent_descriptor();
}
template <>
struct is_proto_enum<::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_RatioCondition_Direction> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_RatioCondition_Direction>() {
  return ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_RatioCondition_Direction_descriptor();
}
template <>
struct is_proto_enum<::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_Operator> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_Operator>() {
  return ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings_Conditions_Operator_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // kentik_2falerting_2fpublic_2fv202505_2fpolicy_5fflow_2eproto_2epb_2eh
