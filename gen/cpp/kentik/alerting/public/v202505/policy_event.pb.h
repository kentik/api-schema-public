// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: kentik/alerting/public/v202505/policy_event.proto
// Protobuf C++ Version: 5.29.3

#ifndef kentik_2falerting_2fpublic_2fv202505_2fpolicy_5fevent_2eproto_2epb_2eh
#define kentik_2falerting_2fpublic_2fv202505_2fpolicy_5fevent_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "google/protobuf/timestamp.pb.h"
#include "google/protobuf/duration.pb.h"
#include "google/protobuf/struct.pb.h"
#include "google/api/annotations.pb.h"
#include "google/api/client.pb.h"
#include "google/api/field_behavior.pb.h"
#include "protoc-gen-openapiv2/options/annotations.pb.h"
#include "kentik/core/v202303/annotations.pb.h"
#include "kentik/alerting/types/v202303/types.pb.h"
#include "kentik/alerting/public/v202505/common.pb.h"
#include "kentik/alerting/public/v202505/policy_filters.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_kentik_2falerting_2fpublic_2fv202505_2fpolicy_5fevent_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_kentik_2falerting_2fpublic_2fv202505_2fpolicy_5fevent_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_kentik_2falerting_2fpublic_2fv202505_2fpolicy_5fevent_2eproto;
namespace kentik {
namespace alerting {
namespace public_ {
namespace v202505 {
class EventPolicyLevelSettings;
struct EventPolicyLevelSettingsDefaultTypeInternal;
extern EventPolicyLevelSettingsDefaultTypeInternal _EventPolicyLevelSettings_default_instance_;
class EventPolicySettings;
struct EventPolicySettingsDefaultTypeInternal;
extern EventPolicySettingsDefaultTypeInternal _EventPolicySettings_default_instance_;
}  // namespace v202505
}  // namespace public_
}  // namespace alerting
}  // namespace kentik
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace kentik {
namespace alerting {
namespace public_ {
namespace v202505 {
enum EventPolicySettings_EventType : int {
  EventPolicySettings_EventType_EVENT_TYPE_UNSPECIFIED = 0,
  EventPolicySettings_EventType_EVENT_TYPE_SYSLOG = 1,
  EventPolicySettings_EventType_EVENT_TYPE_SNMP_TRAP = 2,
  EventPolicySettings_EventType_EventPolicySettings_EventType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  EventPolicySettings_EventType_EventPolicySettings_EventType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool EventPolicySettings_EventType_IsValid(int value);
extern const uint32_t EventPolicySettings_EventType_internal_data_[];
constexpr EventPolicySettings_EventType EventPolicySettings_EventType_EventType_MIN = static_cast<EventPolicySettings_EventType>(0);
constexpr EventPolicySettings_EventType EventPolicySettings_EventType_EventType_MAX = static_cast<EventPolicySettings_EventType>(2);
constexpr int EventPolicySettings_EventType_EventType_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor*
EventPolicySettings_EventType_descriptor();
template <typename T>
const std::string& EventPolicySettings_EventType_Name(T value) {
  static_assert(std::is_same<T, EventPolicySettings_EventType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to EventType_Name().");
  return EventPolicySettings_EventType_Name(static_cast<EventPolicySettings_EventType>(value));
}
template <>
inline const std::string& EventPolicySettings_EventType_Name(EventPolicySettings_EventType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<EventPolicySettings_EventType_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool EventPolicySettings_EventType_Parse(absl::string_view name, EventPolicySettings_EventType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EventPolicySettings_EventType>(
      EventPolicySettings_EventType_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class EventPolicySettings final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.alerting.public.v202505.EventPolicySettings) */ {
 public:
  inline EventPolicySettings() : EventPolicySettings(nullptr) {}
  ~EventPolicySettings() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(EventPolicySettings* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(EventPolicySettings));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR EventPolicySettings(
      ::google::protobuf::internal::ConstantInitialized);

  inline EventPolicySettings(const EventPolicySettings& from) : EventPolicySettings(nullptr, from) {}
  inline EventPolicySettings(EventPolicySettings&& from) noexcept
      : EventPolicySettings(nullptr, std::move(from)) {}
  inline EventPolicySettings& operator=(const EventPolicySettings& from) {
    CopyFrom(from);
    return *this;
  }
  inline EventPolicySettings& operator=(EventPolicySettings&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EventPolicySettings& default_instance() {
    return *internal_default_instance();
  }
  static inline const EventPolicySettings* internal_default_instance() {
    return reinterpret_cast<const EventPolicySettings*>(
        &_EventPolicySettings_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(EventPolicySettings& a, EventPolicySettings& b) { a.Swap(&b); }
  inline void Swap(EventPolicySettings* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EventPolicySettings* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EventPolicySettings* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<EventPolicySettings>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EventPolicySettings& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const EventPolicySettings& from) { EventPolicySettings::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(EventPolicySettings* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.alerting.public.v202505.EventPolicySettings"; }

 protected:
  explicit EventPolicySettings(::google::protobuf::Arena* arena);
  EventPolicySettings(::google::protobuf::Arena* arena, const EventPolicySettings& from);
  EventPolicySettings(::google::protobuf::Arena* arena, EventPolicySettings&& from) noexcept
      : EventPolicySettings(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using EventType = EventPolicySettings_EventType;
  static constexpr EventType EVENT_TYPE_UNSPECIFIED = EventPolicySettings_EventType_EVENT_TYPE_UNSPECIFIED;
  static constexpr EventType EVENT_TYPE_SYSLOG = EventPolicySettings_EventType_EVENT_TYPE_SYSLOG;
  static constexpr EventType EVENT_TYPE_SNMP_TRAP = EventPolicySettings_EventType_EVENT_TYPE_SNMP_TRAP;
  static inline bool EventType_IsValid(int value) {
    return EventPolicySettings_EventType_IsValid(value);
  }
  static constexpr EventType EventType_MIN = EventPolicySettings_EventType_EventType_MIN;
  static constexpr EventType EventType_MAX = EventPolicySettings_EventType_EventType_MAX;
  static constexpr int EventType_ARRAYSIZE = EventPolicySettings_EventType_EventType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* EventType_descriptor() {
    return EventPolicySettings_EventType_descriptor();
  }
  template <typename T>
  static inline const std::string& EventType_Name(T value) {
    return EventPolicySettings_EventType_Name(value);
  }
  static inline bool EventType_Parse(absl::string_view name, EventType* value) {
    return EventPolicySettings_EventType_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kDimensionsFieldNumber = 2,
    kFiltersFieldNumber = 3,
    kTypeFieldNumber = 1,
  };
  // repeated string dimensions = 2 [json_name = "dimensions", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int dimensions_size() const;
  private:
  int _internal_dimensions_size() const;

  public:
  void clear_dimensions() ;
  const std::string& dimensions(int index) const;
  std::string* mutable_dimensions(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_dimensions(int index, Arg_&& value, Args_... args);
  std::string* add_dimensions();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_dimensions(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& dimensions() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_dimensions();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_dimensions() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_dimensions();

  public:
  // .kentik.alerting.public.v202505.PolicyFilters filters = 3 [json_name = "filters", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_filters() const;
  void clear_filters() ;
  const ::kentik::alerting::public_::v202505::PolicyFilters& filters() const;
  PROTOBUF_NODISCARD ::kentik::alerting::public_::v202505::PolicyFilters* release_filters();
  ::kentik::alerting::public_::v202505::PolicyFilters* mutable_filters();
  void set_allocated_filters(::kentik::alerting::public_::v202505::PolicyFilters* value);
  void unsafe_arena_set_allocated_filters(::kentik::alerting::public_::v202505::PolicyFilters* value);
  ::kentik::alerting::public_::v202505::PolicyFilters* unsafe_arena_release_filters();

  private:
  const ::kentik::alerting::public_::v202505::PolicyFilters& _internal_filters() const;
  ::kentik::alerting::public_::v202505::PolicyFilters* _internal_mutable_filters();

  public:
  // .kentik.alerting.public.v202505.EventPolicySettings.EventType type = 1 [json_name = "type", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_type() ;
  ::kentik::alerting::public_::v202505::EventPolicySettings_EventType type() const;
  void set_type(::kentik::alerting::public_::v202505::EventPolicySettings_EventType value);

  private:
  ::kentik::alerting::public_::v202505::EventPolicySettings_EventType _internal_type() const;
  void _internal_set_type(::kentik::alerting::public_::v202505::EventPolicySettings_EventType value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.alerting.public.v202505.EventPolicySettings)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      69, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const EventPolicySettings& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<std::string> dimensions_;
    ::kentik::alerting::public_::v202505::PolicyFilters* filters_;
    int type_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2falerting_2fpublic_2fv202505_2fpolicy_5fevent_2eproto;
};
// -------------------------------------------------------------------

class EventPolicyLevelSettings final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.alerting.public.v202505.EventPolicyLevelSettings) */ {
 public:
  inline EventPolicyLevelSettings() : EventPolicyLevelSettings(nullptr) {}
  ~EventPolicyLevelSettings() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(EventPolicyLevelSettings* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(EventPolicyLevelSettings));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR EventPolicyLevelSettings(
      ::google::protobuf::internal::ConstantInitialized);

  inline EventPolicyLevelSettings(const EventPolicyLevelSettings& from) : EventPolicyLevelSettings(nullptr, from) {}
  inline EventPolicyLevelSettings(EventPolicyLevelSettings&& from) noexcept
      : EventPolicyLevelSettings(nullptr, std::move(from)) {}
  inline EventPolicyLevelSettings& operator=(const EventPolicyLevelSettings& from) {
    CopyFrom(from);
    return *this;
  }
  inline EventPolicyLevelSettings& operator=(EventPolicyLevelSettings&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EventPolicyLevelSettings& default_instance() {
    return *internal_default_instance();
  }
  static inline const EventPolicyLevelSettings* internal_default_instance() {
    return reinterpret_cast<const EventPolicyLevelSettings*>(
        &_EventPolicyLevelSettings_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(EventPolicyLevelSettings& a, EventPolicyLevelSettings& b) { a.Swap(&b); }
  inline void Swap(EventPolicyLevelSettings* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EventPolicyLevelSettings* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EventPolicyLevelSettings* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<EventPolicyLevelSettings>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EventPolicyLevelSettings& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const EventPolicyLevelSettings& from) { EventPolicyLevelSettings::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(EventPolicyLevelSettings* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.alerting.public.v202505.EventPolicyLevelSettings"; }

 protected:
  explicit EventPolicyLevelSettings(::google::protobuf::Arena* arena);
  EventPolicyLevelSettings(::google::protobuf::Arena* arena, const EventPolicyLevelSettings& from);
  EventPolicyLevelSettings(::google::protobuf::Arena* arena, EventPolicyLevelSettings&& from) noexcept
      : EventPolicyLevelSettings(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFiltersFieldNumber = 1,
  };
  // .kentik.alerting.public.v202505.PolicyDimensionFilters filters = 1 [json_name = "filters", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_filters() const;
  void clear_filters() ;
  const ::kentik::alerting::public_::v202505::PolicyDimensionFilters& filters() const;
  PROTOBUF_NODISCARD ::kentik::alerting::public_::v202505::PolicyDimensionFilters* release_filters();
  ::kentik::alerting::public_::v202505::PolicyDimensionFilters* mutable_filters();
  void set_allocated_filters(::kentik::alerting::public_::v202505::PolicyDimensionFilters* value);
  void unsafe_arena_set_allocated_filters(::kentik::alerting::public_::v202505::PolicyDimensionFilters* value);
  ::kentik::alerting::public_::v202505::PolicyDimensionFilters* unsafe_arena_release_filters();

  private:
  const ::kentik::alerting::public_::v202505::PolicyDimensionFilters& _internal_filters() const;
  ::kentik::alerting::public_::v202505::PolicyDimensionFilters* _internal_mutable_filters();

  public:
  // @@protoc_insertion_point(class_scope:kentik.alerting.public.v202505.EventPolicyLevelSettings)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const EventPolicyLevelSettings& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::kentik::alerting::public_::v202505::PolicyDimensionFilters* filters_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2falerting_2fpublic_2fv202505_2fpolicy_5fevent_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// EventPolicySettings

// .kentik.alerting.public.v202505.EventPolicySettings.EventType type = 1 [json_name = "type", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void EventPolicySettings::clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = 0;
}
inline ::kentik::alerting::public_::v202505::EventPolicySettings_EventType EventPolicySettings::type() const {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.EventPolicySettings.type)
  return _internal_type();
}
inline void EventPolicySettings::set_type(::kentik::alerting::public_::v202505::EventPolicySettings_EventType value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:kentik.alerting.public.v202505.EventPolicySettings.type)
}
inline ::kentik::alerting::public_::v202505::EventPolicySettings_EventType EventPolicySettings::_internal_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::kentik::alerting::public_::v202505::EventPolicySettings_EventType>(_impl_.type_);
}
inline void EventPolicySettings::_internal_set_type(::kentik::alerting::public_::v202505::EventPolicySettings_EventType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = value;
}

// repeated string dimensions = 2 [json_name = "dimensions", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int EventPolicySettings::_internal_dimensions_size() const {
  return _internal_dimensions().size();
}
inline int EventPolicySettings::dimensions_size() const {
  return _internal_dimensions_size();
}
inline void EventPolicySettings::clear_dimensions() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dimensions_.Clear();
}
inline std::string* EventPolicySettings::add_dimensions() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_dimensions()->Add();
  // @@protoc_insertion_point(field_add_mutable:kentik.alerting.public.v202505.EventPolicySettings.dimensions)
  return _s;
}
inline const std::string& EventPolicySettings::dimensions(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.EventPolicySettings.dimensions)
  return _internal_dimensions().Get(index);
}
inline std::string* EventPolicySettings::mutable_dimensions(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.alerting.public.v202505.EventPolicySettings.dimensions)
  return _internal_mutable_dimensions()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void EventPolicySettings::set_dimensions(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_dimensions()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:kentik.alerting.public.v202505.EventPolicySettings.dimensions)
}
template <typename Arg_, typename... Args_>
inline void EventPolicySettings::add_dimensions(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_dimensions(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:kentik.alerting.public.v202505.EventPolicySettings.dimensions)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
EventPolicySettings::dimensions() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.alerting.public.v202505.EventPolicySettings.dimensions)
  return _internal_dimensions();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
EventPolicySettings::mutable_dimensions() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.alerting.public.v202505.EventPolicySettings.dimensions)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_dimensions();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
EventPolicySettings::_internal_dimensions() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dimensions_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
EventPolicySettings::_internal_mutable_dimensions() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.dimensions_;
}

// .kentik.alerting.public.v202505.PolicyFilters filters = 3 [json_name = "filters", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool EventPolicySettings::has_filters() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.filters_ != nullptr);
  return value;
}
inline const ::kentik::alerting::public_::v202505::PolicyFilters& EventPolicySettings::_internal_filters() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::alerting::public_::v202505::PolicyFilters* p = _impl_.filters_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::alerting::public_::v202505::PolicyFilters&>(::kentik::alerting::public_::v202505::_PolicyFilters_default_instance_);
}
inline const ::kentik::alerting::public_::v202505::PolicyFilters& EventPolicySettings::filters() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.EventPolicySettings.filters)
  return _internal_filters();
}
inline void EventPolicySettings::unsafe_arena_set_allocated_filters(::kentik::alerting::public_::v202505::PolicyFilters* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.filters_);
  }
  _impl_.filters_ = reinterpret_cast<::kentik::alerting::public_::v202505::PolicyFilters*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.alerting.public.v202505.EventPolicySettings.filters)
}
inline ::kentik::alerting::public_::v202505::PolicyFilters* EventPolicySettings::release_filters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::alerting::public_::v202505::PolicyFilters* released = _impl_.filters_;
  _impl_.filters_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::alerting::public_::v202505::PolicyFilters* EventPolicySettings::unsafe_arena_release_filters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.alerting.public.v202505.EventPolicySettings.filters)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::alerting::public_::v202505::PolicyFilters* temp = _impl_.filters_;
  _impl_.filters_ = nullptr;
  return temp;
}
inline ::kentik::alerting::public_::v202505::PolicyFilters* EventPolicySettings::_internal_mutable_filters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.filters_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::alerting::public_::v202505::PolicyFilters>(GetArena());
    _impl_.filters_ = reinterpret_cast<::kentik::alerting::public_::v202505::PolicyFilters*>(p);
  }
  return _impl_.filters_;
}
inline ::kentik::alerting::public_::v202505::PolicyFilters* EventPolicySettings::mutable_filters() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::kentik::alerting::public_::v202505::PolicyFilters* _msg = _internal_mutable_filters();
  // @@protoc_insertion_point(field_mutable:kentik.alerting.public.v202505.EventPolicySettings.filters)
  return _msg;
}
inline void EventPolicySettings::set_allocated_filters(::kentik::alerting::public_::v202505::PolicyFilters* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.filters_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.filters_ = reinterpret_cast<::kentik::alerting::public_::v202505::PolicyFilters*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.alerting.public.v202505.EventPolicySettings.filters)
}

// -------------------------------------------------------------------

// EventPolicyLevelSettings

// .kentik.alerting.public.v202505.PolicyDimensionFilters filters = 1 [json_name = "filters", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool EventPolicyLevelSettings::has_filters() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.filters_ != nullptr);
  return value;
}
inline const ::kentik::alerting::public_::v202505::PolicyDimensionFilters& EventPolicyLevelSettings::_internal_filters() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::alerting::public_::v202505::PolicyDimensionFilters* p = _impl_.filters_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::alerting::public_::v202505::PolicyDimensionFilters&>(::kentik::alerting::public_::v202505::_PolicyDimensionFilters_default_instance_);
}
inline const ::kentik::alerting::public_::v202505::PolicyDimensionFilters& EventPolicyLevelSettings::filters() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.EventPolicyLevelSettings.filters)
  return _internal_filters();
}
inline void EventPolicyLevelSettings::unsafe_arena_set_allocated_filters(::kentik::alerting::public_::v202505::PolicyDimensionFilters* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.filters_);
  }
  _impl_.filters_ = reinterpret_cast<::kentik::alerting::public_::v202505::PolicyDimensionFilters*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.alerting.public.v202505.EventPolicyLevelSettings.filters)
}
inline ::kentik::alerting::public_::v202505::PolicyDimensionFilters* EventPolicyLevelSettings::release_filters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::alerting::public_::v202505::PolicyDimensionFilters* released = _impl_.filters_;
  _impl_.filters_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::alerting::public_::v202505::PolicyDimensionFilters* EventPolicyLevelSettings::unsafe_arena_release_filters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.alerting.public.v202505.EventPolicyLevelSettings.filters)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::alerting::public_::v202505::PolicyDimensionFilters* temp = _impl_.filters_;
  _impl_.filters_ = nullptr;
  return temp;
}
inline ::kentik::alerting::public_::v202505::PolicyDimensionFilters* EventPolicyLevelSettings::_internal_mutable_filters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.filters_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::alerting::public_::v202505::PolicyDimensionFilters>(GetArena());
    _impl_.filters_ = reinterpret_cast<::kentik::alerting::public_::v202505::PolicyDimensionFilters*>(p);
  }
  return _impl_.filters_;
}
inline ::kentik::alerting::public_::v202505::PolicyDimensionFilters* EventPolicyLevelSettings::mutable_filters() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::kentik::alerting::public_::v202505::PolicyDimensionFilters* _msg = _internal_mutable_filters();
  // @@protoc_insertion_point(field_mutable:kentik.alerting.public.v202505.EventPolicyLevelSettings.filters)
  return _msg;
}
inline void EventPolicyLevelSettings::set_allocated_filters(::kentik::alerting::public_::v202505::PolicyDimensionFilters* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.filters_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.filters_ = reinterpret_cast<::kentik::alerting::public_::v202505::PolicyDimensionFilters*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.alerting.public.v202505.EventPolicyLevelSettings.filters)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v202505
}  // namespace public_
}  // namespace alerting
}  // namespace kentik


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::kentik::alerting::public_::v202505::EventPolicySettings_EventType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::kentik::alerting::public_::v202505::EventPolicySettings_EventType>() {
  return ::kentik::alerting::public_::v202505::EventPolicySettings_EventType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // kentik_2falerting_2fpublic_2fv202505_2fpolicy_5fevent_2eproto_2epb_2eh
