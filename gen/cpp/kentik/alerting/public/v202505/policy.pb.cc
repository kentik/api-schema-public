// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: kentik/alerting/public/v202505/policy.proto
// Protobuf C++ Version: 5.29.3

#include "kentik/alerting/public/v202505/policy.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace kentik {
namespace alerting {
namespace public_ {
namespace v202505 {

inline constexpr PolicyServiceGetRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        policy_type_{static_cast< ::kentik::alerting::public_::v202505::PolicyType >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PolicyServiceGetRequest::PolicyServiceGetRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PolicyServiceGetRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PolicyServiceGetRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PolicyServiceGetRequestDefaultTypeInternal() {}
  union {
    PolicyServiceGetRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PolicyServiceGetRequestDefaultTypeInternal _PolicyServiceGetRequest_default_instance_;

inline constexpr PolicyServiceEnableRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        policy_type_{static_cast< ::kentik::alerting::public_::v202505::PolicyType >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PolicyServiceEnableRequest::PolicyServiceEnableRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PolicyServiceEnableRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PolicyServiceEnableRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PolicyServiceEnableRequestDefaultTypeInternal() {}
  union {
    PolicyServiceEnableRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PolicyServiceEnableRequestDefaultTypeInternal _PolicyServiceEnableRequest_default_instance_;

inline constexpr PolicyServiceDisableRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        policy_type_{static_cast< ::kentik::alerting::public_::v202505::PolicyType >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PolicyServiceDisableRequest::PolicyServiceDisableRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PolicyServiceDisableRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PolicyServiceDisableRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PolicyServiceDisableRequestDefaultTypeInternal() {}
  union {
    PolicyServiceDisableRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PolicyServiceDisableRequestDefaultTypeInternal _PolicyServiceDisableRequest_default_instance_;

inline constexpr Policy_PolicyErrorInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        timestamp_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Policy_PolicyErrorInfo::Policy_PolicyErrorInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Policy_PolicyErrorInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Policy_PolicyErrorInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Policy_PolicyErrorInfoDefaultTypeInternal() {}
  union {
    Policy_PolicyErrorInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Policy_PolicyErrorInfoDefaultTypeInternal _Policy_PolicyErrorInfo_default_instance_;

inline constexpr PolicyListFilters::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        sources_{},
        applications_{},
        user_ids_{},
        created_at_{nullptr},
        modified_at_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR PolicyListFilters::PolicyListFilters(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PolicyListFiltersDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PolicyListFiltersDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PolicyListFiltersDefaultTypeInternal() {}
  union {
    PolicyListFilters _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PolicyListFiltersDefaultTypeInternal _PolicyListFilters_default_instance_;

inline constexpr PolicyServiceListRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        pagination_{nullptr},
        sorting_{nullptr},
        filters_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR PolicyServiceListRequest::PolicyServiceListRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PolicyServiceListRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PolicyServiceListRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PolicyServiceListRequestDefaultTypeInternal() {}
  union {
    PolicyServiceListRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PolicyServiceListRequestDefaultTypeInternal _PolicyServiceListRequest_default_instance_;

inline constexpr Policy_PolicyLevel::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : notifications_{},
        description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        severity_{static_cast< ::kentik::alerting::types::v202303::Severity >(0)},
        ack_required_{false},
        settings_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR Policy_PolicyLevel::Policy_PolicyLevel(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Policy_PolicyLevelDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Policy_PolicyLevelDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Policy_PolicyLevelDefaultTypeInternal() {}
  union {
    Policy_PolicyLevel _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Policy_PolicyLevelDefaultTypeInternal _Policy_PolicyLevel_default_instance_;

inline constexpr Policy::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        levels_{},
        created_by_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        modified_by_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        source_{nullptr},
        created_at_{nullptr},
        modified_at_{nullptr},
        last_error_{nullptr},
        enabled_{false},
        has_errors_{false},
        settings_{},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR Policy::Policy(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PolicyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PolicyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PolicyDefaultTypeInternal() {}
  union {
    Policy _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PolicyDefaultTypeInternal _Policy_default_instance_;

inline constexpr PolicyServiceListResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        policies_{},
        pagination_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR PolicyServiceListResponse::PolicyServiceListResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PolicyServiceListResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PolicyServiceListResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PolicyServiceListResponseDefaultTypeInternal() {}
  union {
    PolicyServiceListResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PolicyServiceListResponseDefaultTypeInternal _PolicyServiceListResponse_default_instance_;

inline constexpr PolicyServiceGetResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        policy_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR PolicyServiceGetResponse::PolicyServiceGetResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PolicyServiceGetResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PolicyServiceGetResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PolicyServiceGetResponseDefaultTypeInternal() {}
  union {
    PolicyServiceGetResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PolicyServiceGetResponseDefaultTypeInternal _PolicyServiceGetResponse_default_instance_;

inline constexpr PolicyServiceEnableResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        policy_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR PolicyServiceEnableResponse::PolicyServiceEnableResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PolicyServiceEnableResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PolicyServiceEnableResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PolicyServiceEnableResponseDefaultTypeInternal() {}
  union {
    PolicyServiceEnableResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PolicyServiceEnableResponseDefaultTypeInternal _PolicyServiceEnableResponse_default_instance_;

inline constexpr PolicyServiceDisableResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        policy_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR PolicyServiceDisableResponse::PolicyServiceDisableResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PolicyServiceDisableResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PolicyServiceDisableResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PolicyServiceDisableResponseDefaultTypeInternal() {}
  union {
    PolicyServiceDisableResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PolicyServiceDisableResponseDefaultTypeInternal _PolicyServiceDisableResponse_default_instance_;
}  // namespace v202505
}  // namespace public_
}  // namespace alerting
}  // namespace kentik
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_kentik_2falerting_2fpublic_2fv202505_2fpolicy_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_kentik_2falerting_2fpublic_2fv202505_2fpolicy_2eproto = nullptr;
const ::uint32_t
    TableStruct_kentik_2falerting_2fpublic_2fv202505_2fpolicy_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::alerting::public_::v202505::PolicyServiceGetRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::alerting::public_::v202505::PolicyServiceGetRequest, _impl_.policy_type_),
        PROTOBUF_FIELD_OFFSET(::kentik::alerting::public_::v202505::PolicyServiceGetRequest, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::kentik::alerting::public_::v202505::PolicyServiceGetResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::kentik::alerting::public_::v202505::PolicyServiceGetResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::alerting::public_::v202505::PolicyServiceGetResponse, _impl_.policy_),
        0,
        PROTOBUF_FIELD_OFFSET(::kentik::alerting::public_::v202505::PolicyServiceListRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::kentik::alerting::public_::v202505::PolicyServiceListRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::alerting::public_::v202505::PolicyServiceListRequest, _impl_.pagination_),
        PROTOBUF_FIELD_OFFSET(::kentik::alerting::public_::v202505::PolicyServiceListRequest, _impl_.sorting_),
        PROTOBUF_FIELD_OFFSET(::kentik::alerting::public_::v202505::PolicyServiceListRequest, _impl_.filters_),
        0,
        1,
        2,
        PROTOBUF_FIELD_OFFSET(::kentik::alerting::public_::v202505::PolicyListFilters, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::kentik::alerting::public_::v202505::PolicyListFilters, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::alerting::public_::v202505::PolicyListFilters, _impl_.sources_),
        PROTOBUF_FIELD_OFFSET(::kentik::alerting::public_::v202505::PolicyListFilters, _impl_.applications_),
        PROTOBUF_FIELD_OFFSET(::kentik::alerting::public_::v202505::PolicyListFilters, _impl_.user_ids_),
        PROTOBUF_FIELD_OFFSET(::kentik::alerting::public_::v202505::PolicyListFilters, _impl_.created_at_),
        PROTOBUF_FIELD_OFFSET(::kentik::alerting::public_::v202505::PolicyListFilters, _impl_.modified_at_),
        ~0u,
        ~0u,
        ~0u,
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::kentik::alerting::public_::v202505::PolicyServiceListResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::kentik::alerting::public_::v202505::PolicyServiceListResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::alerting::public_::v202505::PolicyServiceListResponse, _impl_.pagination_),
        PROTOBUF_FIELD_OFFSET(::kentik::alerting::public_::v202505::PolicyServiceListResponse, _impl_.policies_),
        0,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::alerting::public_::v202505::PolicyServiceDisableRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::alerting::public_::v202505::PolicyServiceDisableRequest, _impl_.policy_type_),
        PROTOBUF_FIELD_OFFSET(::kentik::alerting::public_::v202505::PolicyServiceDisableRequest, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::kentik::alerting::public_::v202505::PolicyServiceDisableResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::kentik::alerting::public_::v202505::PolicyServiceDisableResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::alerting::public_::v202505::PolicyServiceDisableResponse, _impl_.policy_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::alerting::public_::v202505::PolicyServiceEnableRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::alerting::public_::v202505::PolicyServiceEnableRequest, _impl_.policy_type_),
        PROTOBUF_FIELD_OFFSET(::kentik::alerting::public_::v202505::PolicyServiceEnableRequest, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::kentik::alerting::public_::v202505::PolicyServiceEnableResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::kentik::alerting::public_::v202505::PolicyServiceEnableResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::alerting::public_::v202505::PolicyServiceEnableResponse, _impl_.policy_),
        0,
        PROTOBUF_FIELD_OFFSET(::kentik::alerting::public_::v202505::Policy_PolicyErrorInfo, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::kentik::alerting::public_::v202505::Policy_PolicyErrorInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::alerting::public_::v202505::Policy_PolicyErrorInfo, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::kentik::alerting::public_::v202505::Policy_PolicyErrorInfo, _impl_.description_),
        0,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::alerting::public_::v202505::Policy_PolicyLevel, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::kentik::alerting::public_::v202505::Policy_PolicyLevel, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::alerting::public_::v202505::Policy_PolicyLevel, _impl_.severity_),
        PROTOBUF_FIELD_OFFSET(::kentik::alerting::public_::v202505::Policy_PolicyLevel, _impl_.description_),
        PROTOBUF_FIELD_OFFSET(::kentik::alerting::public_::v202505::Policy_PolicyLevel, _impl_.ack_required_),
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::kentik::alerting::public_::v202505::Policy_PolicyLevel, _impl_.notifications_),
        PROTOBUF_FIELD_OFFSET(::kentik::alerting::public_::v202505::Policy_PolicyLevel, _impl_.settings_),
        PROTOBUF_FIELD_OFFSET(::kentik::alerting::public_::v202505::Policy, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::kentik::alerting::public_::v202505::Policy, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::kentik::alerting::public_::v202505::Policy, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::alerting::public_::v202505::Policy, _impl_.source_),
        PROTOBUF_FIELD_OFFSET(::kentik::alerting::public_::v202505::Policy, _impl_.created_at_),
        PROTOBUF_FIELD_OFFSET(::kentik::alerting::public_::v202505::Policy, _impl_.modified_at_),
        PROTOBUF_FIELD_OFFSET(::kentik::alerting::public_::v202505::Policy, _impl_.created_by_),
        PROTOBUF_FIELD_OFFSET(::kentik::alerting::public_::v202505::Policy, _impl_.modified_by_),
        PROTOBUF_FIELD_OFFSET(::kentik::alerting::public_::v202505::Policy, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::kentik::alerting::public_::v202505::Policy, _impl_.description_),
        PROTOBUF_FIELD_OFFSET(::kentik::alerting::public_::v202505::Policy, _impl_.enabled_),
        PROTOBUF_FIELD_OFFSET(::kentik::alerting::public_::v202505::Policy, _impl_.levels_),
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::kentik::alerting::public_::v202505::Policy, _impl_.has_errors_),
        PROTOBUF_FIELD_OFFSET(::kentik::alerting::public_::v202505::Policy, _impl_.last_error_),
        PROTOBUF_FIELD_OFFSET(::kentik::alerting::public_::v202505::Policy, _impl_.settings_),
        0,
        1,
        2,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        4,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        3,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::kentik::alerting::public_::v202505::PolicyServiceGetRequest)},
        {10, 19, -1, sizeof(::kentik::alerting::public_::v202505::PolicyServiceGetResponse)},
        {20, 31, -1, sizeof(::kentik::alerting::public_::v202505::PolicyServiceListRequest)},
        {34, 47, -1, sizeof(::kentik::alerting::public_::v202505::PolicyListFilters)},
        {52, 62, -1, sizeof(::kentik::alerting::public_::v202505::PolicyServiceListResponse)},
        {64, -1, -1, sizeof(::kentik::alerting::public_::v202505::PolicyServiceDisableRequest)},
        {74, 83, -1, sizeof(::kentik::alerting::public_::v202505::PolicyServiceDisableResponse)},
        {84, -1, -1, sizeof(::kentik::alerting::public_::v202505::PolicyServiceEnableRequest)},
        {94, 103, -1, sizeof(::kentik::alerting::public_::v202505::PolicyServiceEnableResponse)},
        {104, 114, -1, sizeof(::kentik::alerting::public_::v202505::Policy_PolicyErrorInfo)},
        {116, -1, -1, sizeof(::kentik::alerting::public_::v202505::Policy_PolicyLevel)},
        {132, 155, -1, sizeof(::kentik::alerting::public_::v202505::Policy)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::kentik::alerting::public_::v202505::_PolicyServiceGetRequest_default_instance_._instance,
    &::kentik::alerting::public_::v202505::_PolicyServiceGetResponse_default_instance_._instance,
    &::kentik::alerting::public_::v202505::_PolicyServiceListRequest_default_instance_._instance,
    &::kentik::alerting::public_::v202505::_PolicyListFilters_default_instance_._instance,
    &::kentik::alerting::public_::v202505::_PolicyServiceListResponse_default_instance_._instance,
    &::kentik::alerting::public_::v202505::_PolicyServiceDisableRequest_default_instance_._instance,
    &::kentik::alerting::public_::v202505::_PolicyServiceDisableResponse_default_instance_._instance,
    &::kentik::alerting::public_::v202505::_PolicyServiceEnableRequest_default_instance_._instance,
    &::kentik::alerting::public_::v202505::_PolicyServiceEnableResponse_default_instance_._instance,
    &::kentik::alerting::public_::v202505::_Policy_PolicyErrorInfo_default_instance_._instance,
    &::kentik::alerting::public_::v202505::_Policy_PolicyLevel_default_instance_._instance,
    &::kentik::alerting::public_::v202505::_Policy_default_instance_._instance,
};
const char descriptor_table_protodef_kentik_2falerting_2fpublic_2fv202505_2fpolicy_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n+kentik/alerting/public/v202505/policy."
    "proto\022\036kentik.alerting.public.v202505\032\037g"
    "oogle/protobuf/timestamp.proto\032\036google/p"
    "rotobuf/duration.proto\032\034google/protobuf/"
    "struct.proto\032\034google/api/annotations.pro"
    "to\032\027google/api/client.proto\032\037google/api/"
    "field_behavior.proto\032.protoc-gen-openapi"
    "v2/options/annotations.proto\032%kentik/cor"
    "e/v202303/annotations.proto\032)kentik/aler"
    "ting/types/v202303/types.proto\032.kentik/a"
    "lerting/types/v202506/pagination.proto\032+"
    "kentik/alerting/types/v202506/sorting.pr"
    "oto\032+kentik/alerting/public/v202505/comm"
    "on.proto\0323kentik/alerting/public/v202505"
    "/policy_filters.proto\032/kentik/alerting/p"
    "ublic/v202505/policy_nms.proto\0321kentik/a"
    "lerting/public/v202505/policy_event.prot"
    "o\0320kentik/alerting/public/v202505/policy"
    "_flow.proto\"\300\001\n\027PolicyServiceGetRequest\022"
    "o\n\013policy_type\030\001 \001(\0162*.kentik.alerting.p"
    "ublic.v202505.PolicyTypeB\"\222A\0342\032The type "
    "of policy to get.\340A\002R\npolicyType\0224\n\002id\030\002"
    " \001(\tB$\222A\0362\034The ID of the policy to get.\340"
    "A\002R\002id\"\213\001\n\030PolicyServiceGetResponse\022o\n\006p"
    "olicy\030\001 \001(\0132&.kentik.alerting.public.v20"
    "2505.PolicyB/\222A)2\'The alerting policy th"
    "at was retrieved.\340A\003R\006policy\"\250\003\n\030PolicyS"
    "erviceListRequest\022\213\001\n\npagination\030\001 \001(\0132/"
    ".kentik.alerting.types.v202506.Paginatio"
    "nConfigB:\222A422The pagination configurati"
    "on for the list request.\340A\001R\npagination\022"
    "\177\n\007sorting\030\002 \001(\0132,.kentik.alerting.types"
    ".v202506.SortingConfigB7\222A12/The sorting"
    " configuration for the list request.\340A\001R"
    "\007sorting\022}\n\007filters\030\003 \001(\01321.kentik.alert"
    "ing.public.v202505.PolicyListFiltersB0\222A"
    "*2(The policy filters for the list reque"
    "st.\340A\001R\007filters\"\320\004\n\021PolicyListFilters\022f\n"
    "\007sources\030\001 \003(\0132&.kentik.alerting.public."
    "v202505.SourceB$\222A\0362\034The source policies"
    " to list.\340A\001R\007sources\022`\n\014applications\030\002 "
    "\003(\tB<\222A624The policy applications (integ"
    "rations) to filter by.\340A\001R\014applications\022"
    "^\n\010user_ids\030\003 \003(\tBC\222A=2;The IDs of the u"
    "sers who created the policies to filter "
    "by.\340A\001R\007userIds\022\205\001\n\ncreated_at\030\004 \001(\0132(.k"
    "entik.alerting.types.v202303.TimeRangeB<"
    "\222A624The time range for the created time"
    " of the policies.\340A\001R\tcreatedAt\022\210\001\n\013modi"
    "fied_at\030\005 \001(\0132(.kentik.alerting.types.v2"
    "02303.TimeRangeB=\222A725The time range for"
    " the modified time of the policies.\340A\001R\n"
    "modifiedAt\"\260\002\n\031PolicyServiceListResponse"
    "\022\210\001\n\npagination\030\001 \001(\0132-.kentik.alerting."
    "types.v202506.PaginationInfoB9\222A321The p"
    "agination information for the list respo"
    "nse.\340A\003R\npagination\022\207\001\n\010policies\030\002 \003(\0132&"
    ".kentik.alerting.public.v202505.PolicyBC"
    "\222A=2;The alerting policies that were fou"
    "nd matching the filters.\340A\003R\010policies\"\314\001"
    "\n\033PolicyServiceDisableRequest\022s\n\013policy_"
    "type\030\001 \001(\0162*.kentik.alerting.public.v202"
    "505.PolicyTypeB&\222A 2\036The type of policy "
    "to disable.\340A\002R\npolicyType\0228\n\002id\030\002 \001(\tB("
    "\222A\"2 The ID of the policy to disable.\340A\002"
    "R\002id\"\221\001\n\034PolicyServiceDisableResponse\022q\n"
    "\006policy\030\001 \001(\0132&.kentik.alerting.public.v"
    "202505.PolicyB1\222A+2)The alerting policy "
    "after being disabled.\340A\003R\006policy\"\311\001\n\032Pol"
    "icyServiceEnableRequest\022r\n\013policy_type\030\001"
    " \001(\0162*.kentik.alerting.public.v202505.Po"
    "licyTypeB%\222A\0372\035The type of policy to ena"
    "ble.\340A\002R\npolicyType\0227\n\002id\030\002 \001(\tB\'\222A!2\037Th"
    "e ID of the policy to enable.\340A\002R\002id\"\217\001\n"
    "\033PolicyServiceEnableResponse\022p\n\006policy\030\001"
    " \001(\0132&.kentik.alerting.public.v202505.Po"
    "licyB0\222A*2(The alerting policy after bei"
    "ng enabled.\340A\003R\006policy\"\254\024\n\006Policy\022x\n\006sou"
    "rce\030\001 \001(\0132&.kentik.alerting.public.v2025"
    "05.SourceB8\222A220The source (type and ID)"
    " of the alerting policy.\340A\003R\006source\022h\n\nc"
    "reated_at\030\002 \001(\0132\032.google.protobuf.Timest"
    "ampB-\222A\'2%The time when the policy was c"
    "reated.\340A\003R\tcreatedAt\022p\n\013modified_at\030\003 \001"
    "(\0132\032.google.protobuf.TimestampB3\222A-2+The"
    " time when the policy was last modified."
    "\340A\003R\nmodifiedAt\022G\n\ncreated_by\030\004 \001(\tB(\222A\""
    "2 The user who created the policy.\340A\003R\tc"
    "reatedBy\022O\n\013modified_by\030\005 \001(\tB.\222A(2&The "
    "user who last modified the policy.\340A\003R\nm"
    "odifiedBy\0223\n\004name\030\006 \001(\tB\037\222A\0312\027The name o"
    "f the policy.\340A\003R\004name\022H\n\013description\030\007 "
    "\001(\tB&\222A 2\036The description of the policy."
    "\340A\003R\013description\022E\n\007enabled\030\010 \001(\010B&\222A 2\036"
    "Whether the policy is enabled.\340A\003H\001R\007ena"
    "bled\210\001\001\022t\n\006levels\030\n \003(\01322.kentik.alertin"
    "g.public.v202505.Policy.PolicyLevelB(\222A\""
    "2 The policy levels configuration.\340A\003R\006l"
    "evels\022d\n\004flow\030\013 \001(\01322.kentik.alerting.pu"
    "blic.v202505.FlowPolicySettingsB\032\222A\0272\025Fl"
    "ow policy settings.H\000R\004flow\022`\n\003nms\030\014 \001(\013"
    "21.kentik.alerting.public.v202505.NmsPol"
    "icySettingsB\031\222A\0262\024NMS policy settings.H\000"
    "R\003nms\022h\n\005event\030\r \001(\01323.kentik.alerting.p"
    "ublic.v202505.EventPolicySettingsB\033\222A\0302\026"
    "Event policy settings.H\000R\005event\022U\n\nhas_e"
    "rrors\030\016 \001(\010B6\222A02.Whether the policy has"
    " errors in the run-time.\340A\003R\thasErrors\022\236"
    "\001\n\nlast_error\030\017 \001(\01326.kentik.alerting.pu"
    "blic.v202505.Policy.PolicyErrorInfoBG\222AA"
    "2\?Information about the last error that "
    "occurred with the policy.\340A\003R\tlastError\032"
    "\276\001\n\017PolicyErrorInfo\022e\n\ttimestamp\030\001 \001(\0132\032"
    ".google.protobuf.TimestampB+\222A(2&The tim"
    "estamp when the error occurred.R\ttimesta"
    "mp\022D\n\013description\030\002 \001(\tB\"\222A\0372\035The descri"
    "ption of the error.R\013description\032\362\007\n\013Pol"
    "icyLevel\022\263\001\n\010severity\030\001 \001(\0162\'.kentik.ale"
    "rting.types.v202303.SeverityBn\222Ak2iThe s"
    "everity of the policy level. When level "
    "conditions are met, the alert is trigger"
    "ed at this severity.R\010severity\022K\n\013descri"
    "ption\030\002 \001(\tB)\222A&2$The description of the"
    " policy level.R\013description\022s\n\014ack_requi"
    "red\030\003 \001(\010BP\222AM2KWhether acknowledgment i"
    "s required for alerts that match this po"
    "licy level.R\013ackRequired\022k\n\003nms\030\004 \001(\01326."
    "kentik.alerting.public.v202505.NmsPolicy"
    "LevelSettingsB\037\222A\0342\032NMS policy level set"
    "tings.H\000R\003nms\022o\n\004flow\030\005 \001(\01327.kentik.ale"
    "rting.public.v202505.FlowPolicyLevelSett"
    "ingsB \222A\0352\033Flow policy level settings.H\000"
    "R\004flow\022s\n\005event\030\006 \001(\01328.kentik.alerting."
    "public.v202505.EventPolicyLevelSettingsB"
    "!\222A\0362\034Event policy level settings.H\000R\005ev"
    "ent\022\213\002\n\rnotifications\030\007 \003(\0132>.kentik.ale"
    "rting.public.v202505.NotificationChannel"
    "AssociationB\244\001\222A\240\0012\235\001The notification ch"
    "annel associations for this policy level"
    ". When the alert is triggered at this le"
    "vel, the channels are used to send the a"
    "lert notification.R\rnotificationsB\n\n\010set"
    "tingsB\n\n\010settingsB\n\n\010_enabled2\303\010\n\rPolicy"
    "Service\022\356\001\n\003Get\0227.kentik.alerting.public"
    ".v202505.PolicyServiceGetRequest\0328.kenti"
    "k.alerting.public.v202505.PolicyServiceG"
    "etResponse\"t\222A.\022\nGet Policy\032\033Returns an "
    "alerting policy.*\003Get\362\327\002\023admin.alerting:"
    "read\202\323\344\223\002&\022$/v202505/policies/{policy_ty"
    "pe}/{id}\022\363\001\n\004List\0228.kentik.alerting.publ"
    "ic.v202505.PolicyServiceListRequest\0329.ke"
    "ntik.alerting.public.v202505.PolicyServi"
    "ceListResponse\"v\222A;\022\rList Policies\032$Retu"
    "rns a list of alerting policies.*\004List\362\327"
    "\002\023admin.alerting:read\202\323\344\223\002\033\"\026/v202505/po"
    "licies/list:\001*\022\220\002\n\007Disable\022;.kentik.aler"
    "ting.public.v202505.PolicyServiceDisable"
    "Request\032<.kentik.alerting.public.v202505"
    ".PolicyServiceDisableResponse\"\211\001\222A7\022\016Dis"
    "able Policy\032\034Disables an alerting policy"
    ".*\007Disable\362\327\002\024admin.alerting:write\202\323\344\223\0021"
    "\",/v202505/policies/{policy_type}/{id}/d"
    "isable:\001*\022\211\002\n\006Enable\022:.kentik.alerting.p"
    "ublic.v202505.PolicyServiceEnableRequest"
    "\032;.kentik.alerting.public.v202505.Policy"
    "ServiceEnableResponse\"\205\001\222A4\022\rEnable Poli"
    "cy\032\033Enables an alerting policy.*\006Enable\362"
    "\327\002\024admin.alerting:write\202\323\344\223\0020\"+/v202505/"
    "policies/{policy_type}/{id}/enable:\001*\032,\312"
    "A\023grpc.api.kentik.com\352\327\002\016admin.alerting\220"
    "\330\002\003B\251\004ZIgithub.com/kentik/api-schema-pub"
    "lic/gen/go/kentik/alerting/public/v20250"
    "5\222A\332\003\022\216\002\n\025Alerting Policies API\022\244\001# Over"
    "view\nThe Alerting Policies API provides "
    "programmatic access to Kentik\'s configur"
    "ation of the policies that define how, w"
    "hen, and to whom alerts are triggered.\"E"
    "\n\026Kentik API Engineering\022+https://github"
    ".com/kentik/api-schema-public2\007v202505*\001"
    "\0022\020application/json:\020application/jsonZD\n"
    "\036\n\005email\022\025\010\002\032\017X-CH-Auth-Email \002\n\"\n\005token"
    "\022\031\010\002\032\023X-CH-Auth-API-Token \002b\026\n\t\n\005email\022\000"
    "\n\t\n\005token\022\000rB\n\033Kentik Alerts documentati"
    "on\022#https://kb.kentik.com/docs/alertingb"
    "\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_kentik_2falerting_2fpublic_2fv202505_2fpolicy_2eproto_deps[16] =
    {
        &::descriptor_table_google_2fapi_2fannotations_2eproto,
        &::descriptor_table_google_2fapi_2fclient_2eproto,
        &::descriptor_table_google_2fapi_2ffield_5fbehavior_2eproto,
        &::descriptor_table_google_2fprotobuf_2fduration_2eproto,
        &::descriptor_table_google_2fprotobuf_2fstruct_2eproto,
        &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
        &::descriptor_table_kentik_2falerting_2fpublic_2fv202505_2fcommon_2eproto,
        &::descriptor_table_kentik_2falerting_2fpublic_2fv202505_2fpolicy_5fevent_2eproto,
        &::descriptor_table_kentik_2falerting_2fpublic_2fv202505_2fpolicy_5ffilters_2eproto,
        &::descriptor_table_kentik_2falerting_2fpublic_2fv202505_2fpolicy_5fflow_2eproto,
        &::descriptor_table_kentik_2falerting_2fpublic_2fv202505_2fpolicy_5fnms_2eproto,
        &::descriptor_table_kentik_2falerting_2ftypes_2fv202303_2ftypes_2eproto,
        &::descriptor_table_kentik_2falerting_2ftypes_2fv202506_2fpagination_2eproto,
        &::descriptor_table_kentik_2falerting_2ftypes_2fv202506_2fsorting_2eproto,
        &::descriptor_table_kentik_2fcore_2fv202303_2fannotations_2eproto,
        &::descriptor_table_protoc_2dgen_2dopenapiv2_2foptions_2fannotations_2eproto,
};
static ::absl::once_flag descriptor_table_kentik_2falerting_2fpublic_2fv202505_2fpolicy_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_kentik_2falerting_2fpublic_2fv202505_2fpolicy_2eproto = {
    false,
    false,
    7367,
    descriptor_table_protodef_kentik_2falerting_2fpublic_2fv202505_2fpolicy_2eproto,
    "kentik/alerting/public/v202505/policy.proto",
    &descriptor_table_kentik_2falerting_2fpublic_2fv202505_2fpolicy_2eproto_once,
    descriptor_table_kentik_2falerting_2fpublic_2fv202505_2fpolicy_2eproto_deps,
    16,
    12,
    schemas,
    file_default_instances,
    TableStruct_kentik_2falerting_2fpublic_2fv202505_2fpolicy_2eproto::offsets,
    file_level_enum_descriptors_kentik_2falerting_2fpublic_2fv202505_2fpolicy_2eproto,
    file_level_service_descriptors_kentik_2falerting_2fpublic_2fv202505_2fpolicy_2eproto,
};
namespace kentik {
namespace alerting {
namespace public_ {
namespace v202505 {
// ===================================================================

class PolicyServiceGetRequest::_Internal {
 public:
};

PolicyServiceGetRequest::PolicyServiceGetRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.alerting.public.v202505.PolicyServiceGetRequest)
}
inline PROTOBUF_NDEBUG_INLINE PolicyServiceGetRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::alerting::public_::v202505::PolicyServiceGetRequest& from_msg)
      : id_(arena, from.id_),
        _cached_size_{0} {}

PolicyServiceGetRequest::PolicyServiceGetRequest(
    ::google::protobuf::Arena* arena,
    const PolicyServiceGetRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PolicyServiceGetRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.policy_type_ = from._impl_.policy_type_;

  // @@protoc_insertion_point(copy_constructor:kentik.alerting.public.v202505.PolicyServiceGetRequest)
}
inline PROTOBUF_NDEBUG_INLINE PolicyServiceGetRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : id_(arena),
        _cached_size_{0} {}

inline void PolicyServiceGetRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.policy_type_ = {};
}
PolicyServiceGetRequest::~PolicyServiceGetRequest() {
  // @@protoc_insertion_point(destructor:kentik.alerting.public.v202505.PolicyServiceGetRequest)
  SharedDtor(*this);
}
inline void PolicyServiceGetRequest::SharedDtor(MessageLite& self) {
  PolicyServiceGetRequest& this_ = static_cast<PolicyServiceGetRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PolicyServiceGetRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PolicyServiceGetRequest(arena);
}
constexpr auto PolicyServiceGetRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(PolicyServiceGetRequest),
                                            alignof(PolicyServiceGetRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PolicyServiceGetRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PolicyServiceGetRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PolicyServiceGetRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PolicyServiceGetRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PolicyServiceGetRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PolicyServiceGetRequest>(), &PolicyServiceGetRequest::ByteSizeLong,
            &PolicyServiceGetRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PolicyServiceGetRequest, _impl_._cached_size_),
        false,
    },
    &PolicyServiceGetRequest::kDescriptorMethods,
    &descriptor_table_kentik_2falerting_2fpublic_2fv202505_2fpolicy_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PolicyServiceGetRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 65, 2> PolicyServiceGetRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::alerting::public_::v202505::PolicyServiceGetRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string id = 2 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PolicyServiceGetRequest, _impl_.id_)}},
    // .kentik.alerting.public.v202505.PolicyType policy_type = 1 [json_name = "policyType", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PolicyServiceGetRequest, _impl_.policy_type_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(PolicyServiceGetRequest, _impl_.policy_type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .kentik.alerting.public.v202505.PolicyType policy_type = 1 [json_name = "policyType", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(PolicyServiceGetRequest, _impl_.policy_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string id = 2 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(PolicyServiceGetRequest, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\66\0\2\0\0\0\0\0"
    "kentik.alerting.public.v202505.PolicyServiceGetRequest"
    "id"
  }},
};

PROTOBUF_NOINLINE void PolicyServiceGetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.alerting.public.v202505.PolicyServiceGetRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.ClearToEmpty();
  _impl_.policy_type_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PolicyServiceGetRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PolicyServiceGetRequest& this_ = static_cast<const PolicyServiceGetRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PolicyServiceGetRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PolicyServiceGetRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.alerting.public.v202505.PolicyServiceGetRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // .kentik.alerting.public.v202505.PolicyType policy_type = 1 [json_name = "policyType", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (this_._internal_policy_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                1, this_._internal_policy_type(), target);
          }

          // string id = 2 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_id().empty()) {
            const std::string& _s = this_._internal_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.alerting.public.v202505.PolicyServiceGetRequest.id");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.alerting.public.v202505.PolicyServiceGetRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PolicyServiceGetRequest::ByteSizeLong(const MessageLite& base) {
          const PolicyServiceGetRequest& this_ = static_cast<const PolicyServiceGetRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PolicyServiceGetRequest::ByteSizeLong() const {
          const PolicyServiceGetRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.alerting.public.v202505.PolicyServiceGetRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string id = 2 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_id());
            }
            // .kentik.alerting.public.v202505.PolicyType policy_type = 1 [json_name = "policyType", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (this_._internal_policy_type() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_policy_type());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PolicyServiceGetRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PolicyServiceGetRequest*>(&to_msg);
  auto& from = static_cast<const PolicyServiceGetRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.alerting.public.v202505.PolicyServiceGetRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (from._internal_policy_type() != 0) {
    _this->_impl_.policy_type_ = from._impl_.policy_type_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PolicyServiceGetRequest::CopyFrom(const PolicyServiceGetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.alerting.public.v202505.PolicyServiceGetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PolicyServiceGetRequest::InternalSwap(PolicyServiceGetRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  swap(_impl_.policy_type_, other->_impl_.policy_type_);
}

::google::protobuf::Metadata PolicyServiceGetRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PolicyServiceGetResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<PolicyServiceGetResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PolicyServiceGetResponse, _impl_._has_bits_);
};

PolicyServiceGetResponse::PolicyServiceGetResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.alerting.public.v202505.PolicyServiceGetResponse)
}
inline PROTOBUF_NDEBUG_INLINE PolicyServiceGetResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::alerting::public_::v202505::PolicyServiceGetResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

PolicyServiceGetResponse::PolicyServiceGetResponse(
    ::google::protobuf::Arena* arena,
    const PolicyServiceGetResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PolicyServiceGetResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.policy_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::kentik::alerting::public_::v202505::Policy>(
                              arena, *from._impl_.policy_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:kentik.alerting.public.v202505.PolicyServiceGetResponse)
}
inline PROTOBUF_NDEBUG_INLINE PolicyServiceGetResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void PolicyServiceGetResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.policy_ = {};
}
PolicyServiceGetResponse::~PolicyServiceGetResponse() {
  // @@protoc_insertion_point(destructor:kentik.alerting.public.v202505.PolicyServiceGetResponse)
  SharedDtor(*this);
}
inline void PolicyServiceGetResponse::SharedDtor(MessageLite& self) {
  PolicyServiceGetResponse& this_ = static_cast<PolicyServiceGetResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.policy_;
  this_._impl_.~Impl_();
}

inline void* PolicyServiceGetResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PolicyServiceGetResponse(arena);
}
constexpr auto PolicyServiceGetResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(PolicyServiceGetResponse),
                                            alignof(PolicyServiceGetResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PolicyServiceGetResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PolicyServiceGetResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PolicyServiceGetResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PolicyServiceGetResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PolicyServiceGetResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PolicyServiceGetResponse>(), &PolicyServiceGetResponse::ByteSizeLong,
            &PolicyServiceGetResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PolicyServiceGetResponse, _impl_._cached_size_),
        false,
    },
    &PolicyServiceGetResponse::kDescriptorMethods,
    &descriptor_table_kentik_2falerting_2fpublic_2fv202505_2fpolicy_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PolicyServiceGetResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> PolicyServiceGetResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PolicyServiceGetResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::alerting::public_::v202505::PolicyServiceGetResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .kentik.alerting.public.v202505.Policy policy = 1 [json_name = "policy", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(PolicyServiceGetResponse, _impl_.policy_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .kentik.alerting.public.v202505.Policy policy = 1 [json_name = "policy", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(PolicyServiceGetResponse, _impl_.policy_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::kentik::alerting::public_::v202505::Policy>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void PolicyServiceGetResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.alerting.public.v202505.PolicyServiceGetResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.policy_ != nullptr);
    _impl_.policy_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PolicyServiceGetResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PolicyServiceGetResponse& this_ = static_cast<const PolicyServiceGetResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PolicyServiceGetResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PolicyServiceGetResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.alerting.public.v202505.PolicyServiceGetResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .kentik.alerting.public.v202505.Policy policy = 1 [json_name = "policy", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.policy_, this_._impl_.policy_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.alerting.public.v202505.PolicyServiceGetResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PolicyServiceGetResponse::ByteSizeLong(const MessageLite& base) {
          const PolicyServiceGetResponse& this_ = static_cast<const PolicyServiceGetResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PolicyServiceGetResponse::ByteSizeLong() const {
          const PolicyServiceGetResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.alerting.public.v202505.PolicyServiceGetResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .kentik.alerting.public.v202505.Policy policy = 1 [json_name = "policy", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.policy_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PolicyServiceGetResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PolicyServiceGetResponse*>(&to_msg);
  auto& from = static_cast<const PolicyServiceGetResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.alerting.public.v202505.PolicyServiceGetResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.policy_ != nullptr);
    if (_this->_impl_.policy_ == nullptr) {
      _this->_impl_.policy_ =
          ::google::protobuf::Message::CopyConstruct<::kentik::alerting::public_::v202505::Policy>(arena, *from._impl_.policy_);
    } else {
      _this->_impl_.policy_->MergeFrom(*from._impl_.policy_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PolicyServiceGetResponse::CopyFrom(const PolicyServiceGetResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.alerting.public.v202505.PolicyServiceGetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PolicyServiceGetResponse::InternalSwap(PolicyServiceGetResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.policy_, other->_impl_.policy_);
}

::google::protobuf::Metadata PolicyServiceGetResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PolicyServiceListRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<PolicyServiceListRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PolicyServiceListRequest, _impl_._has_bits_);
};

void PolicyServiceListRequest::clear_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pagination_ != nullptr) _impl_.pagination_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void PolicyServiceListRequest::clear_sorting() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.sorting_ != nullptr) _impl_.sorting_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
PolicyServiceListRequest::PolicyServiceListRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.alerting.public.v202505.PolicyServiceListRequest)
}
inline PROTOBUF_NDEBUG_INLINE PolicyServiceListRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::alerting::public_::v202505::PolicyServiceListRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

PolicyServiceListRequest::PolicyServiceListRequest(
    ::google::protobuf::Arena* arena,
    const PolicyServiceListRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PolicyServiceListRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.pagination_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::kentik::alerting::types::v202506::PaginationConfig>(
                              arena, *from._impl_.pagination_)
                        : nullptr;
  _impl_.sorting_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::kentik::alerting::types::v202506::SortingConfig>(
                              arena, *from._impl_.sorting_)
                        : nullptr;
  _impl_.filters_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::kentik::alerting::public_::v202505::PolicyListFilters>(
                              arena, *from._impl_.filters_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:kentik.alerting.public.v202505.PolicyServiceListRequest)
}
inline PROTOBUF_NDEBUG_INLINE PolicyServiceListRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void PolicyServiceListRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, pagination_),
           0,
           offsetof(Impl_, filters_) -
               offsetof(Impl_, pagination_) +
               sizeof(Impl_::filters_));
}
PolicyServiceListRequest::~PolicyServiceListRequest() {
  // @@protoc_insertion_point(destructor:kentik.alerting.public.v202505.PolicyServiceListRequest)
  SharedDtor(*this);
}
inline void PolicyServiceListRequest::SharedDtor(MessageLite& self) {
  PolicyServiceListRequest& this_ = static_cast<PolicyServiceListRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.pagination_;
  delete this_._impl_.sorting_;
  delete this_._impl_.filters_;
  this_._impl_.~Impl_();
}

inline void* PolicyServiceListRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PolicyServiceListRequest(arena);
}
constexpr auto PolicyServiceListRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(PolicyServiceListRequest),
                                            alignof(PolicyServiceListRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PolicyServiceListRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PolicyServiceListRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PolicyServiceListRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PolicyServiceListRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PolicyServiceListRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PolicyServiceListRequest>(), &PolicyServiceListRequest::ByteSizeLong,
            &PolicyServiceListRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PolicyServiceListRequest, _impl_._cached_size_),
        false,
    },
    &PolicyServiceListRequest::kDescriptorMethods,
    &descriptor_table_kentik_2falerting_2fpublic_2fv202505_2fpolicy_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PolicyServiceListRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 3, 0, 2> PolicyServiceListRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PolicyServiceListRequest, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::alerting::public_::v202505::PolicyServiceListRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .kentik.alerting.types.v202506.PaginationConfig pagination = 1 [json_name = "pagination", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(PolicyServiceListRequest, _impl_.pagination_)}},
    // .kentik.alerting.types.v202506.SortingConfig sorting = 2 [json_name = "sorting", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(PolicyServiceListRequest, _impl_.sorting_)}},
    // .kentik.alerting.public.v202505.PolicyListFilters filters = 3 [json_name = "filters", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(PolicyServiceListRequest, _impl_.filters_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .kentik.alerting.types.v202506.PaginationConfig pagination = 1 [json_name = "pagination", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(PolicyServiceListRequest, _impl_.pagination_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .kentik.alerting.types.v202506.SortingConfig sorting = 2 [json_name = "sorting", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(PolicyServiceListRequest, _impl_.sorting_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .kentik.alerting.public.v202505.PolicyListFilters filters = 3 [json_name = "filters", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(PolicyServiceListRequest, _impl_.filters_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::kentik::alerting::types::v202506::PaginationConfig>()},
    {::_pbi::TcParser::GetTable<::kentik::alerting::types::v202506::SortingConfig>()},
    {::_pbi::TcParser::GetTable<::kentik::alerting::public_::v202505::PolicyListFilters>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void PolicyServiceListRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.alerting.public.v202505.PolicyServiceListRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.pagination_ != nullptr);
      _impl_.pagination_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.sorting_ != nullptr);
      _impl_.sorting_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.filters_ != nullptr);
      _impl_.filters_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PolicyServiceListRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PolicyServiceListRequest& this_ = static_cast<const PolicyServiceListRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PolicyServiceListRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PolicyServiceListRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.alerting.public.v202505.PolicyServiceListRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .kentik.alerting.types.v202506.PaginationConfig pagination = 1 [json_name = "pagination", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.pagination_, this_._impl_.pagination_->GetCachedSize(), target,
                stream);
          }

          // .kentik.alerting.types.v202506.SortingConfig sorting = 2 [json_name = "sorting", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.sorting_, this_._impl_.sorting_->GetCachedSize(), target,
                stream);
          }

          // .kentik.alerting.public.v202505.PolicyListFilters filters = 3 [json_name = "filters", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.filters_, this_._impl_.filters_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.alerting.public.v202505.PolicyServiceListRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PolicyServiceListRequest::ByteSizeLong(const MessageLite& base) {
          const PolicyServiceListRequest& this_ = static_cast<const PolicyServiceListRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PolicyServiceListRequest::ByteSizeLong() const {
          const PolicyServiceListRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.alerting.public.v202505.PolicyServiceListRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000007u) {
            // .kentik.alerting.types.v202506.PaginationConfig pagination = 1 [json_name = "pagination", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.pagination_);
            }
            // .kentik.alerting.types.v202506.SortingConfig sorting = 2 [json_name = "sorting", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.sorting_);
            }
            // .kentik.alerting.public.v202505.PolicyListFilters filters = 3 [json_name = "filters", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.filters_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PolicyServiceListRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PolicyServiceListRequest*>(&to_msg);
  auto& from = static_cast<const PolicyServiceListRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.alerting.public.v202505.PolicyServiceListRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.pagination_ != nullptr);
      if (_this->_impl_.pagination_ == nullptr) {
        _this->_impl_.pagination_ =
            ::google::protobuf::Message::CopyConstruct<::kentik::alerting::types::v202506::PaginationConfig>(arena, *from._impl_.pagination_);
      } else {
        _this->_impl_.pagination_->MergeFrom(*from._impl_.pagination_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.sorting_ != nullptr);
      if (_this->_impl_.sorting_ == nullptr) {
        _this->_impl_.sorting_ =
            ::google::protobuf::Message::CopyConstruct<::kentik::alerting::types::v202506::SortingConfig>(arena, *from._impl_.sorting_);
      } else {
        _this->_impl_.sorting_->MergeFrom(*from._impl_.sorting_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.filters_ != nullptr);
      if (_this->_impl_.filters_ == nullptr) {
        _this->_impl_.filters_ =
            ::google::protobuf::Message::CopyConstruct<::kentik::alerting::public_::v202505::PolicyListFilters>(arena, *from._impl_.filters_);
      } else {
        _this->_impl_.filters_->MergeFrom(*from._impl_.filters_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PolicyServiceListRequest::CopyFrom(const PolicyServiceListRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.alerting.public.v202505.PolicyServiceListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PolicyServiceListRequest::InternalSwap(PolicyServiceListRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PolicyServiceListRequest, _impl_.filters_)
      + sizeof(PolicyServiceListRequest::_impl_.filters_)
      - PROTOBUF_FIELD_OFFSET(PolicyServiceListRequest, _impl_.pagination_)>(
          reinterpret_cast<char*>(&_impl_.pagination_),
          reinterpret_cast<char*>(&other->_impl_.pagination_));
}

::google::protobuf::Metadata PolicyServiceListRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PolicyListFilters::_Internal {
 public:
  using HasBits =
      decltype(std::declval<PolicyListFilters>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PolicyListFilters, _impl_._has_bits_);
};

void PolicyListFilters::clear_sources() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sources_.Clear();
}
void PolicyListFilters::clear_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.created_at_ != nullptr) _impl_.created_at_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void PolicyListFilters::clear_modified_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.modified_at_ != nullptr) _impl_.modified_at_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
PolicyListFilters::PolicyListFilters(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.alerting.public.v202505.PolicyListFilters)
}
inline PROTOBUF_NDEBUG_INLINE PolicyListFilters::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::alerting::public_::v202505::PolicyListFilters& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        sources_{visibility, arena, from.sources_},
        applications_{visibility, arena, from.applications_},
        user_ids_{visibility, arena, from.user_ids_} {}

PolicyListFilters::PolicyListFilters(
    ::google::protobuf::Arena* arena,
    const PolicyListFilters& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PolicyListFilters* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.created_at_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::kentik::alerting::types::v202303::TimeRange>(
                              arena, *from._impl_.created_at_)
                        : nullptr;
  _impl_.modified_at_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::kentik::alerting::types::v202303::TimeRange>(
                              arena, *from._impl_.modified_at_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:kentik.alerting.public.v202505.PolicyListFilters)
}
inline PROTOBUF_NDEBUG_INLINE PolicyListFilters::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        sources_{visibility, arena},
        applications_{visibility, arena},
        user_ids_{visibility, arena} {}

inline void PolicyListFilters::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, created_at_),
           0,
           offsetof(Impl_, modified_at_) -
               offsetof(Impl_, created_at_) +
               sizeof(Impl_::modified_at_));
}
PolicyListFilters::~PolicyListFilters() {
  // @@protoc_insertion_point(destructor:kentik.alerting.public.v202505.PolicyListFilters)
  SharedDtor(*this);
}
inline void PolicyListFilters::SharedDtor(MessageLite& self) {
  PolicyListFilters& this_ = static_cast<PolicyListFilters&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.created_at_;
  delete this_._impl_.modified_at_;
  this_._impl_.~Impl_();
}

inline void* PolicyListFilters::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PolicyListFilters(arena);
}
constexpr auto PolicyListFilters::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(PolicyListFilters, _impl_.sources_) +
          decltype(PolicyListFilters::_impl_.sources_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(PolicyListFilters, _impl_.applications_) +
          decltype(PolicyListFilters::_impl_.applications_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(PolicyListFilters, _impl_.user_ids_) +
          decltype(PolicyListFilters::_impl_.user_ids_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(PolicyListFilters), alignof(PolicyListFilters), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&PolicyListFilters::PlacementNew_,
                                 sizeof(PolicyListFilters),
                                 alignof(PolicyListFilters));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PolicyListFilters::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PolicyListFilters_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PolicyListFilters::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PolicyListFilters>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PolicyListFilters::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PolicyListFilters>(), &PolicyListFilters::ByteSizeLong,
            &PolicyListFilters::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PolicyListFilters, _impl_._cached_size_),
        false,
    },
    &PolicyListFilters::kDescriptorMethods,
    &descriptor_table_kentik_2falerting_2fpublic_2fv202505_2fpolicy_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PolicyListFilters::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 3, 77, 2> PolicyListFilters::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PolicyListFilters, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::alerting::public_::v202505::PolicyListFilters>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .kentik.alerting.public.v202505.Source sources = 1 [json_name = "sources", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PolicyListFilters, _impl_.sources_)}},
    // repeated string applications = 2 [json_name = "applications", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PolicyListFilters, _impl_.applications_)}},
    // repeated string user_ids = 3 [json_name = "userIds", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(PolicyListFilters, _impl_.user_ids_)}},
    // .kentik.alerting.types.v202303.TimeRange created_at = 4 [json_name = "createdAt", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastMtS1,
     {34, 0, 1, PROTOBUF_FIELD_OFFSET(PolicyListFilters, _impl_.created_at_)}},
    // .kentik.alerting.types.v202303.TimeRange modified_at = 5 [json_name = "modifiedAt", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastMtS1,
     {42, 1, 2, PROTOBUF_FIELD_OFFSET(PolicyListFilters, _impl_.modified_at_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .kentik.alerting.public.v202505.Source sources = 1 [json_name = "sources", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(PolicyListFilters, _impl_.sources_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated string applications = 2 [json_name = "applications", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(PolicyListFilters, _impl_.applications_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated string user_ids = 3 [json_name = "userIds", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(PolicyListFilters, _impl_.user_ids_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // .kentik.alerting.types.v202303.TimeRange created_at = 4 [json_name = "createdAt", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(PolicyListFilters, _impl_.created_at_), _Internal::kHasBitsOffset + 0, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .kentik.alerting.types.v202303.TimeRange modified_at = 5 [json_name = "modifiedAt", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(PolicyListFilters, _impl_.modified_at_), _Internal::kHasBitsOffset + 1, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::kentik::alerting::public_::v202505::Source>()},
    {::_pbi::TcParser::GetTable<::kentik::alerting::types::v202303::TimeRange>()},
    {::_pbi::TcParser::GetTable<::kentik::alerting::types::v202303::TimeRange>()},
  }}, {{
    "\60\0\14\10\0\0\0\0"
    "kentik.alerting.public.v202505.PolicyListFilters"
    "applications"
    "user_ids"
  }},
};

PROTOBUF_NOINLINE void PolicyListFilters::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.alerting.public.v202505.PolicyListFilters)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.sources_.Clear();
  _impl_.applications_.Clear();
  _impl_.user_ids_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.created_at_ != nullptr);
      _impl_.created_at_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.modified_at_ != nullptr);
      _impl_.modified_at_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PolicyListFilters::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PolicyListFilters& this_ = static_cast<const PolicyListFilters&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PolicyListFilters::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PolicyListFilters& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.alerting.public.v202505.PolicyListFilters)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .kentik.alerting.public.v202505.Source sources = 1 [json_name = "sources", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_sources_size());
               i < n; i++) {
            const auto& repfield = this_._internal_sources().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated string applications = 2 [json_name = "applications", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          for (int i = 0, n = this_._internal_applications_size(); i < n; ++i) {
            const auto& s = this_._internal_applications().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.alerting.public.v202505.PolicyListFilters.applications");
            target = stream->WriteString(2, s, target);
          }

          // repeated string user_ids = 3 [json_name = "userIds", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          for (int i = 0, n = this_._internal_user_ids_size(); i < n; ++i) {
            const auto& s = this_._internal_user_ids().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.alerting.public.v202505.PolicyListFilters.user_ids");
            target = stream->WriteString(3, s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .kentik.alerting.types.v202303.TimeRange created_at = 4 [json_name = "createdAt", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                4, *this_._impl_.created_at_, this_._impl_.created_at_->GetCachedSize(), target,
                stream);
          }

          // .kentik.alerting.types.v202303.TimeRange modified_at = 5 [json_name = "modifiedAt", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                5, *this_._impl_.modified_at_, this_._impl_.modified_at_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.alerting.public.v202505.PolicyListFilters)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PolicyListFilters::ByteSizeLong(const MessageLite& base) {
          const PolicyListFilters& this_ = static_cast<const PolicyListFilters&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PolicyListFilters::ByteSizeLong() const {
          const PolicyListFilters& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.alerting.public.v202505.PolicyListFilters)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .kentik.alerting.public.v202505.Source sources = 1 [json_name = "sources", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            {
              total_size += 1UL * this_._internal_sources_size();
              for (const auto& msg : this_._internal_sources()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated string applications = 2 [json_name = "applications", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_applications().size());
              for (int i = 0, n = this_._internal_applications().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_applications().Get(i));
              }
            }
            // repeated string user_ids = 3 [json_name = "userIds", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_user_ids().size());
              for (int i = 0, n = this_._internal_user_ids().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_user_ids().Get(i));
              }
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .kentik.alerting.types.v202303.TimeRange created_at = 4 [json_name = "createdAt", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.created_at_);
            }
            // .kentik.alerting.types.v202303.TimeRange modified_at = 5 [json_name = "modifiedAt", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.modified_at_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PolicyListFilters::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PolicyListFilters*>(&to_msg);
  auto& from = static_cast<const PolicyListFilters&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.alerting.public.v202505.PolicyListFilters)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_sources()->MergeFrom(
      from._internal_sources());
  _this->_internal_mutable_applications()->MergeFrom(from._internal_applications());
  _this->_internal_mutable_user_ids()->MergeFrom(from._internal_user_ids());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.created_at_ != nullptr);
      if (_this->_impl_.created_at_ == nullptr) {
        _this->_impl_.created_at_ =
            ::google::protobuf::Message::CopyConstruct<::kentik::alerting::types::v202303::TimeRange>(arena, *from._impl_.created_at_);
      } else {
        _this->_impl_.created_at_->MergeFrom(*from._impl_.created_at_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.modified_at_ != nullptr);
      if (_this->_impl_.modified_at_ == nullptr) {
        _this->_impl_.modified_at_ =
            ::google::protobuf::Message::CopyConstruct<::kentik::alerting::types::v202303::TimeRange>(arena, *from._impl_.modified_at_);
      } else {
        _this->_impl_.modified_at_->MergeFrom(*from._impl_.modified_at_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PolicyListFilters::CopyFrom(const PolicyListFilters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.alerting.public.v202505.PolicyListFilters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PolicyListFilters::InternalSwap(PolicyListFilters* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.sources_.InternalSwap(&other->_impl_.sources_);
  _impl_.applications_.InternalSwap(&other->_impl_.applications_);
  _impl_.user_ids_.InternalSwap(&other->_impl_.user_ids_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PolicyListFilters, _impl_.modified_at_)
      + sizeof(PolicyListFilters::_impl_.modified_at_)
      - PROTOBUF_FIELD_OFFSET(PolicyListFilters, _impl_.created_at_)>(
          reinterpret_cast<char*>(&_impl_.created_at_),
          reinterpret_cast<char*>(&other->_impl_.created_at_));
}

::google::protobuf::Metadata PolicyListFilters::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PolicyServiceListResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<PolicyServiceListResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PolicyServiceListResponse, _impl_._has_bits_);
};

void PolicyServiceListResponse::clear_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pagination_ != nullptr) _impl_.pagination_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
PolicyServiceListResponse::PolicyServiceListResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.alerting.public.v202505.PolicyServiceListResponse)
}
inline PROTOBUF_NDEBUG_INLINE PolicyServiceListResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::alerting::public_::v202505::PolicyServiceListResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        policies_{visibility, arena, from.policies_} {}

PolicyServiceListResponse::PolicyServiceListResponse(
    ::google::protobuf::Arena* arena,
    const PolicyServiceListResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PolicyServiceListResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.pagination_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::kentik::alerting::types::v202506::PaginationInfo>(
                              arena, *from._impl_.pagination_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:kentik.alerting.public.v202505.PolicyServiceListResponse)
}
inline PROTOBUF_NDEBUG_INLINE PolicyServiceListResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        policies_{visibility, arena} {}

inline void PolicyServiceListResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.pagination_ = {};
}
PolicyServiceListResponse::~PolicyServiceListResponse() {
  // @@protoc_insertion_point(destructor:kentik.alerting.public.v202505.PolicyServiceListResponse)
  SharedDtor(*this);
}
inline void PolicyServiceListResponse::SharedDtor(MessageLite& self) {
  PolicyServiceListResponse& this_ = static_cast<PolicyServiceListResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.pagination_;
  this_._impl_.~Impl_();
}

inline void* PolicyServiceListResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PolicyServiceListResponse(arena);
}
constexpr auto PolicyServiceListResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(PolicyServiceListResponse, _impl_.policies_) +
          decltype(PolicyServiceListResponse::_impl_.policies_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(PolicyServiceListResponse), alignof(PolicyServiceListResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&PolicyServiceListResponse::PlacementNew_,
                                 sizeof(PolicyServiceListResponse),
                                 alignof(PolicyServiceListResponse));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PolicyServiceListResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PolicyServiceListResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PolicyServiceListResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PolicyServiceListResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PolicyServiceListResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PolicyServiceListResponse>(), &PolicyServiceListResponse::ByteSizeLong,
            &PolicyServiceListResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PolicyServiceListResponse, _impl_._cached_size_),
        false,
    },
    &PolicyServiceListResponse::kDescriptorMethods,
    &descriptor_table_kentik_2falerting_2fpublic_2fv202505_2fpolicy_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PolicyServiceListResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> PolicyServiceListResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PolicyServiceListResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::alerting::public_::v202505::PolicyServiceListResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .kentik.alerting.public.v202505.Policy policies = 2 [json_name = "policies", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(PolicyServiceListResponse, _impl_.policies_)}},
    // .kentik.alerting.types.v202506.PaginationInfo pagination = 1 [json_name = "pagination", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(PolicyServiceListResponse, _impl_.pagination_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .kentik.alerting.types.v202506.PaginationInfo pagination = 1 [json_name = "pagination", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(PolicyServiceListResponse, _impl_.pagination_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .kentik.alerting.public.v202505.Policy policies = 2 [json_name = "policies", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(PolicyServiceListResponse, _impl_.policies_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::kentik::alerting::types::v202506::PaginationInfo>()},
    {::_pbi::TcParser::GetTable<::kentik::alerting::public_::v202505::Policy>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void PolicyServiceListResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.alerting.public.v202505.PolicyServiceListResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.policies_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.pagination_ != nullptr);
    _impl_.pagination_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PolicyServiceListResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PolicyServiceListResponse& this_ = static_cast<const PolicyServiceListResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PolicyServiceListResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PolicyServiceListResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.alerting.public.v202505.PolicyServiceListResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .kentik.alerting.types.v202506.PaginationInfo pagination = 1 [json_name = "pagination", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.pagination_, this_._impl_.pagination_->GetCachedSize(), target,
                stream);
          }

          // repeated .kentik.alerting.public.v202505.Policy policies = 2 [json_name = "policies", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_policies_size());
               i < n; i++) {
            const auto& repfield = this_._internal_policies().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.alerting.public.v202505.PolicyServiceListResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PolicyServiceListResponse::ByteSizeLong(const MessageLite& base) {
          const PolicyServiceListResponse& this_ = static_cast<const PolicyServiceListResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PolicyServiceListResponse::ByteSizeLong() const {
          const PolicyServiceListResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.alerting.public.v202505.PolicyServiceListResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .kentik.alerting.public.v202505.Policy policies = 2 [json_name = "policies", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            {
              total_size += 1UL * this_._internal_policies_size();
              for (const auto& msg : this_._internal_policies()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // .kentik.alerting.types.v202506.PaginationInfo pagination = 1 [json_name = "pagination", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.pagination_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PolicyServiceListResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PolicyServiceListResponse*>(&to_msg);
  auto& from = static_cast<const PolicyServiceListResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.alerting.public.v202505.PolicyServiceListResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_policies()->MergeFrom(
      from._internal_policies());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.pagination_ != nullptr);
    if (_this->_impl_.pagination_ == nullptr) {
      _this->_impl_.pagination_ =
          ::google::protobuf::Message::CopyConstruct<::kentik::alerting::types::v202506::PaginationInfo>(arena, *from._impl_.pagination_);
    } else {
      _this->_impl_.pagination_->MergeFrom(*from._impl_.pagination_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PolicyServiceListResponse::CopyFrom(const PolicyServiceListResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.alerting.public.v202505.PolicyServiceListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PolicyServiceListResponse::InternalSwap(PolicyServiceListResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.policies_.InternalSwap(&other->_impl_.policies_);
  swap(_impl_.pagination_, other->_impl_.pagination_);
}

::google::protobuf::Metadata PolicyServiceListResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PolicyServiceDisableRequest::_Internal {
 public:
};

PolicyServiceDisableRequest::PolicyServiceDisableRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.alerting.public.v202505.PolicyServiceDisableRequest)
}
inline PROTOBUF_NDEBUG_INLINE PolicyServiceDisableRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::alerting::public_::v202505::PolicyServiceDisableRequest& from_msg)
      : id_(arena, from.id_),
        _cached_size_{0} {}

PolicyServiceDisableRequest::PolicyServiceDisableRequest(
    ::google::protobuf::Arena* arena,
    const PolicyServiceDisableRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PolicyServiceDisableRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.policy_type_ = from._impl_.policy_type_;

  // @@protoc_insertion_point(copy_constructor:kentik.alerting.public.v202505.PolicyServiceDisableRequest)
}
inline PROTOBUF_NDEBUG_INLINE PolicyServiceDisableRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : id_(arena),
        _cached_size_{0} {}

inline void PolicyServiceDisableRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.policy_type_ = {};
}
PolicyServiceDisableRequest::~PolicyServiceDisableRequest() {
  // @@protoc_insertion_point(destructor:kentik.alerting.public.v202505.PolicyServiceDisableRequest)
  SharedDtor(*this);
}
inline void PolicyServiceDisableRequest::SharedDtor(MessageLite& self) {
  PolicyServiceDisableRequest& this_ = static_cast<PolicyServiceDisableRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PolicyServiceDisableRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PolicyServiceDisableRequest(arena);
}
constexpr auto PolicyServiceDisableRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(PolicyServiceDisableRequest),
                                            alignof(PolicyServiceDisableRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PolicyServiceDisableRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PolicyServiceDisableRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PolicyServiceDisableRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PolicyServiceDisableRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PolicyServiceDisableRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PolicyServiceDisableRequest>(), &PolicyServiceDisableRequest::ByteSizeLong,
            &PolicyServiceDisableRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PolicyServiceDisableRequest, _impl_._cached_size_),
        false,
    },
    &PolicyServiceDisableRequest::kDescriptorMethods,
    &descriptor_table_kentik_2falerting_2fpublic_2fv202505_2fpolicy_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PolicyServiceDisableRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 69, 2> PolicyServiceDisableRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::alerting::public_::v202505::PolicyServiceDisableRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string id = 2 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PolicyServiceDisableRequest, _impl_.id_)}},
    // .kentik.alerting.public.v202505.PolicyType policy_type = 1 [json_name = "policyType", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PolicyServiceDisableRequest, _impl_.policy_type_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(PolicyServiceDisableRequest, _impl_.policy_type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .kentik.alerting.public.v202505.PolicyType policy_type = 1 [json_name = "policyType", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(PolicyServiceDisableRequest, _impl_.policy_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string id = 2 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(PolicyServiceDisableRequest, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\72\0\2\0\0\0\0\0"
    "kentik.alerting.public.v202505.PolicyServiceDisableRequest"
    "id"
  }},
};

PROTOBUF_NOINLINE void PolicyServiceDisableRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.alerting.public.v202505.PolicyServiceDisableRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.ClearToEmpty();
  _impl_.policy_type_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PolicyServiceDisableRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PolicyServiceDisableRequest& this_ = static_cast<const PolicyServiceDisableRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PolicyServiceDisableRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PolicyServiceDisableRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.alerting.public.v202505.PolicyServiceDisableRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // .kentik.alerting.public.v202505.PolicyType policy_type = 1 [json_name = "policyType", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (this_._internal_policy_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                1, this_._internal_policy_type(), target);
          }

          // string id = 2 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_id().empty()) {
            const std::string& _s = this_._internal_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.alerting.public.v202505.PolicyServiceDisableRequest.id");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.alerting.public.v202505.PolicyServiceDisableRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PolicyServiceDisableRequest::ByteSizeLong(const MessageLite& base) {
          const PolicyServiceDisableRequest& this_ = static_cast<const PolicyServiceDisableRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PolicyServiceDisableRequest::ByteSizeLong() const {
          const PolicyServiceDisableRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.alerting.public.v202505.PolicyServiceDisableRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string id = 2 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_id());
            }
            // .kentik.alerting.public.v202505.PolicyType policy_type = 1 [json_name = "policyType", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (this_._internal_policy_type() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_policy_type());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PolicyServiceDisableRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PolicyServiceDisableRequest*>(&to_msg);
  auto& from = static_cast<const PolicyServiceDisableRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.alerting.public.v202505.PolicyServiceDisableRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (from._internal_policy_type() != 0) {
    _this->_impl_.policy_type_ = from._impl_.policy_type_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PolicyServiceDisableRequest::CopyFrom(const PolicyServiceDisableRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.alerting.public.v202505.PolicyServiceDisableRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PolicyServiceDisableRequest::InternalSwap(PolicyServiceDisableRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  swap(_impl_.policy_type_, other->_impl_.policy_type_);
}

::google::protobuf::Metadata PolicyServiceDisableRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PolicyServiceDisableResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<PolicyServiceDisableResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PolicyServiceDisableResponse, _impl_._has_bits_);
};

PolicyServiceDisableResponse::PolicyServiceDisableResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.alerting.public.v202505.PolicyServiceDisableResponse)
}
inline PROTOBUF_NDEBUG_INLINE PolicyServiceDisableResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::alerting::public_::v202505::PolicyServiceDisableResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

PolicyServiceDisableResponse::PolicyServiceDisableResponse(
    ::google::protobuf::Arena* arena,
    const PolicyServiceDisableResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PolicyServiceDisableResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.policy_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::kentik::alerting::public_::v202505::Policy>(
                              arena, *from._impl_.policy_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:kentik.alerting.public.v202505.PolicyServiceDisableResponse)
}
inline PROTOBUF_NDEBUG_INLINE PolicyServiceDisableResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void PolicyServiceDisableResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.policy_ = {};
}
PolicyServiceDisableResponse::~PolicyServiceDisableResponse() {
  // @@protoc_insertion_point(destructor:kentik.alerting.public.v202505.PolicyServiceDisableResponse)
  SharedDtor(*this);
}
inline void PolicyServiceDisableResponse::SharedDtor(MessageLite& self) {
  PolicyServiceDisableResponse& this_ = static_cast<PolicyServiceDisableResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.policy_;
  this_._impl_.~Impl_();
}

inline void* PolicyServiceDisableResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PolicyServiceDisableResponse(arena);
}
constexpr auto PolicyServiceDisableResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(PolicyServiceDisableResponse),
                                            alignof(PolicyServiceDisableResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PolicyServiceDisableResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PolicyServiceDisableResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PolicyServiceDisableResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PolicyServiceDisableResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PolicyServiceDisableResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PolicyServiceDisableResponse>(), &PolicyServiceDisableResponse::ByteSizeLong,
            &PolicyServiceDisableResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PolicyServiceDisableResponse, _impl_._cached_size_),
        false,
    },
    &PolicyServiceDisableResponse::kDescriptorMethods,
    &descriptor_table_kentik_2falerting_2fpublic_2fv202505_2fpolicy_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PolicyServiceDisableResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> PolicyServiceDisableResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PolicyServiceDisableResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::alerting::public_::v202505::PolicyServiceDisableResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .kentik.alerting.public.v202505.Policy policy = 1 [json_name = "policy", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(PolicyServiceDisableResponse, _impl_.policy_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .kentik.alerting.public.v202505.Policy policy = 1 [json_name = "policy", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(PolicyServiceDisableResponse, _impl_.policy_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::kentik::alerting::public_::v202505::Policy>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void PolicyServiceDisableResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.alerting.public.v202505.PolicyServiceDisableResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.policy_ != nullptr);
    _impl_.policy_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PolicyServiceDisableResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PolicyServiceDisableResponse& this_ = static_cast<const PolicyServiceDisableResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PolicyServiceDisableResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PolicyServiceDisableResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.alerting.public.v202505.PolicyServiceDisableResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .kentik.alerting.public.v202505.Policy policy = 1 [json_name = "policy", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.policy_, this_._impl_.policy_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.alerting.public.v202505.PolicyServiceDisableResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PolicyServiceDisableResponse::ByteSizeLong(const MessageLite& base) {
          const PolicyServiceDisableResponse& this_ = static_cast<const PolicyServiceDisableResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PolicyServiceDisableResponse::ByteSizeLong() const {
          const PolicyServiceDisableResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.alerting.public.v202505.PolicyServiceDisableResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .kentik.alerting.public.v202505.Policy policy = 1 [json_name = "policy", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.policy_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PolicyServiceDisableResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PolicyServiceDisableResponse*>(&to_msg);
  auto& from = static_cast<const PolicyServiceDisableResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.alerting.public.v202505.PolicyServiceDisableResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.policy_ != nullptr);
    if (_this->_impl_.policy_ == nullptr) {
      _this->_impl_.policy_ =
          ::google::protobuf::Message::CopyConstruct<::kentik::alerting::public_::v202505::Policy>(arena, *from._impl_.policy_);
    } else {
      _this->_impl_.policy_->MergeFrom(*from._impl_.policy_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PolicyServiceDisableResponse::CopyFrom(const PolicyServiceDisableResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.alerting.public.v202505.PolicyServiceDisableResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PolicyServiceDisableResponse::InternalSwap(PolicyServiceDisableResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.policy_, other->_impl_.policy_);
}

::google::protobuf::Metadata PolicyServiceDisableResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PolicyServiceEnableRequest::_Internal {
 public:
};

PolicyServiceEnableRequest::PolicyServiceEnableRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.alerting.public.v202505.PolicyServiceEnableRequest)
}
inline PROTOBUF_NDEBUG_INLINE PolicyServiceEnableRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::alerting::public_::v202505::PolicyServiceEnableRequest& from_msg)
      : id_(arena, from.id_),
        _cached_size_{0} {}

PolicyServiceEnableRequest::PolicyServiceEnableRequest(
    ::google::protobuf::Arena* arena,
    const PolicyServiceEnableRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PolicyServiceEnableRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.policy_type_ = from._impl_.policy_type_;

  // @@protoc_insertion_point(copy_constructor:kentik.alerting.public.v202505.PolicyServiceEnableRequest)
}
inline PROTOBUF_NDEBUG_INLINE PolicyServiceEnableRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : id_(arena),
        _cached_size_{0} {}

inline void PolicyServiceEnableRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.policy_type_ = {};
}
PolicyServiceEnableRequest::~PolicyServiceEnableRequest() {
  // @@protoc_insertion_point(destructor:kentik.alerting.public.v202505.PolicyServiceEnableRequest)
  SharedDtor(*this);
}
inline void PolicyServiceEnableRequest::SharedDtor(MessageLite& self) {
  PolicyServiceEnableRequest& this_ = static_cast<PolicyServiceEnableRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PolicyServiceEnableRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PolicyServiceEnableRequest(arena);
}
constexpr auto PolicyServiceEnableRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(PolicyServiceEnableRequest),
                                            alignof(PolicyServiceEnableRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PolicyServiceEnableRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PolicyServiceEnableRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PolicyServiceEnableRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PolicyServiceEnableRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PolicyServiceEnableRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PolicyServiceEnableRequest>(), &PolicyServiceEnableRequest::ByteSizeLong,
            &PolicyServiceEnableRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PolicyServiceEnableRequest, _impl_._cached_size_),
        false,
    },
    &PolicyServiceEnableRequest::kDescriptorMethods,
    &descriptor_table_kentik_2falerting_2fpublic_2fv202505_2fpolicy_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PolicyServiceEnableRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 68, 2> PolicyServiceEnableRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::alerting::public_::v202505::PolicyServiceEnableRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string id = 2 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PolicyServiceEnableRequest, _impl_.id_)}},
    // .kentik.alerting.public.v202505.PolicyType policy_type = 1 [json_name = "policyType", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PolicyServiceEnableRequest, _impl_.policy_type_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(PolicyServiceEnableRequest, _impl_.policy_type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .kentik.alerting.public.v202505.PolicyType policy_type = 1 [json_name = "policyType", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(PolicyServiceEnableRequest, _impl_.policy_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string id = 2 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(PolicyServiceEnableRequest, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\71\0\2\0\0\0\0\0"
    "kentik.alerting.public.v202505.PolicyServiceEnableRequest"
    "id"
  }},
};

PROTOBUF_NOINLINE void PolicyServiceEnableRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.alerting.public.v202505.PolicyServiceEnableRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.ClearToEmpty();
  _impl_.policy_type_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PolicyServiceEnableRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PolicyServiceEnableRequest& this_ = static_cast<const PolicyServiceEnableRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PolicyServiceEnableRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PolicyServiceEnableRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.alerting.public.v202505.PolicyServiceEnableRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // .kentik.alerting.public.v202505.PolicyType policy_type = 1 [json_name = "policyType", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (this_._internal_policy_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                1, this_._internal_policy_type(), target);
          }

          // string id = 2 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_id().empty()) {
            const std::string& _s = this_._internal_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.alerting.public.v202505.PolicyServiceEnableRequest.id");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.alerting.public.v202505.PolicyServiceEnableRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PolicyServiceEnableRequest::ByteSizeLong(const MessageLite& base) {
          const PolicyServiceEnableRequest& this_ = static_cast<const PolicyServiceEnableRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PolicyServiceEnableRequest::ByteSizeLong() const {
          const PolicyServiceEnableRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.alerting.public.v202505.PolicyServiceEnableRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string id = 2 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_id());
            }
            // .kentik.alerting.public.v202505.PolicyType policy_type = 1 [json_name = "policyType", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (this_._internal_policy_type() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_policy_type());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PolicyServiceEnableRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PolicyServiceEnableRequest*>(&to_msg);
  auto& from = static_cast<const PolicyServiceEnableRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.alerting.public.v202505.PolicyServiceEnableRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (from._internal_policy_type() != 0) {
    _this->_impl_.policy_type_ = from._impl_.policy_type_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PolicyServiceEnableRequest::CopyFrom(const PolicyServiceEnableRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.alerting.public.v202505.PolicyServiceEnableRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PolicyServiceEnableRequest::InternalSwap(PolicyServiceEnableRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  swap(_impl_.policy_type_, other->_impl_.policy_type_);
}

::google::protobuf::Metadata PolicyServiceEnableRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PolicyServiceEnableResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<PolicyServiceEnableResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PolicyServiceEnableResponse, _impl_._has_bits_);
};

PolicyServiceEnableResponse::PolicyServiceEnableResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.alerting.public.v202505.PolicyServiceEnableResponse)
}
inline PROTOBUF_NDEBUG_INLINE PolicyServiceEnableResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::alerting::public_::v202505::PolicyServiceEnableResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

PolicyServiceEnableResponse::PolicyServiceEnableResponse(
    ::google::protobuf::Arena* arena,
    const PolicyServiceEnableResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PolicyServiceEnableResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.policy_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::kentik::alerting::public_::v202505::Policy>(
                              arena, *from._impl_.policy_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:kentik.alerting.public.v202505.PolicyServiceEnableResponse)
}
inline PROTOBUF_NDEBUG_INLINE PolicyServiceEnableResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void PolicyServiceEnableResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.policy_ = {};
}
PolicyServiceEnableResponse::~PolicyServiceEnableResponse() {
  // @@protoc_insertion_point(destructor:kentik.alerting.public.v202505.PolicyServiceEnableResponse)
  SharedDtor(*this);
}
inline void PolicyServiceEnableResponse::SharedDtor(MessageLite& self) {
  PolicyServiceEnableResponse& this_ = static_cast<PolicyServiceEnableResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.policy_;
  this_._impl_.~Impl_();
}

inline void* PolicyServiceEnableResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PolicyServiceEnableResponse(arena);
}
constexpr auto PolicyServiceEnableResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(PolicyServiceEnableResponse),
                                            alignof(PolicyServiceEnableResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PolicyServiceEnableResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PolicyServiceEnableResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PolicyServiceEnableResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PolicyServiceEnableResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PolicyServiceEnableResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PolicyServiceEnableResponse>(), &PolicyServiceEnableResponse::ByteSizeLong,
            &PolicyServiceEnableResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PolicyServiceEnableResponse, _impl_._cached_size_),
        false,
    },
    &PolicyServiceEnableResponse::kDescriptorMethods,
    &descriptor_table_kentik_2falerting_2fpublic_2fv202505_2fpolicy_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PolicyServiceEnableResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> PolicyServiceEnableResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PolicyServiceEnableResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::alerting::public_::v202505::PolicyServiceEnableResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .kentik.alerting.public.v202505.Policy policy = 1 [json_name = "policy", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(PolicyServiceEnableResponse, _impl_.policy_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .kentik.alerting.public.v202505.Policy policy = 1 [json_name = "policy", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(PolicyServiceEnableResponse, _impl_.policy_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::kentik::alerting::public_::v202505::Policy>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void PolicyServiceEnableResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.alerting.public.v202505.PolicyServiceEnableResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.policy_ != nullptr);
    _impl_.policy_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PolicyServiceEnableResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PolicyServiceEnableResponse& this_ = static_cast<const PolicyServiceEnableResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PolicyServiceEnableResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PolicyServiceEnableResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.alerting.public.v202505.PolicyServiceEnableResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .kentik.alerting.public.v202505.Policy policy = 1 [json_name = "policy", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.policy_, this_._impl_.policy_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.alerting.public.v202505.PolicyServiceEnableResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PolicyServiceEnableResponse::ByteSizeLong(const MessageLite& base) {
          const PolicyServiceEnableResponse& this_ = static_cast<const PolicyServiceEnableResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PolicyServiceEnableResponse::ByteSizeLong() const {
          const PolicyServiceEnableResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.alerting.public.v202505.PolicyServiceEnableResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .kentik.alerting.public.v202505.Policy policy = 1 [json_name = "policy", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.policy_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PolicyServiceEnableResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PolicyServiceEnableResponse*>(&to_msg);
  auto& from = static_cast<const PolicyServiceEnableResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.alerting.public.v202505.PolicyServiceEnableResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.policy_ != nullptr);
    if (_this->_impl_.policy_ == nullptr) {
      _this->_impl_.policy_ =
          ::google::protobuf::Message::CopyConstruct<::kentik::alerting::public_::v202505::Policy>(arena, *from._impl_.policy_);
    } else {
      _this->_impl_.policy_->MergeFrom(*from._impl_.policy_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PolicyServiceEnableResponse::CopyFrom(const PolicyServiceEnableResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.alerting.public.v202505.PolicyServiceEnableResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PolicyServiceEnableResponse::InternalSwap(PolicyServiceEnableResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.policy_, other->_impl_.policy_);
}

::google::protobuf::Metadata PolicyServiceEnableResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Policy_PolicyErrorInfo::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Policy_PolicyErrorInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Policy_PolicyErrorInfo, _impl_._has_bits_);
};

void Policy_PolicyErrorInfo::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.timestamp_ != nullptr) _impl_.timestamp_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
Policy_PolicyErrorInfo::Policy_PolicyErrorInfo(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.alerting.public.v202505.Policy.PolicyErrorInfo)
}
inline PROTOBUF_NDEBUG_INLINE Policy_PolicyErrorInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::alerting::public_::v202505::Policy_PolicyErrorInfo& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        description_(arena, from.description_) {}

Policy_PolicyErrorInfo::Policy_PolicyErrorInfo(
    ::google::protobuf::Arena* arena,
    const Policy_PolicyErrorInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Policy_PolicyErrorInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.timestamp_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.timestamp_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:kentik.alerting.public.v202505.Policy.PolicyErrorInfo)
}
inline PROTOBUF_NDEBUG_INLINE Policy_PolicyErrorInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        description_(arena) {}

inline void Policy_PolicyErrorInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.timestamp_ = {};
}
Policy_PolicyErrorInfo::~Policy_PolicyErrorInfo() {
  // @@protoc_insertion_point(destructor:kentik.alerting.public.v202505.Policy.PolicyErrorInfo)
  SharedDtor(*this);
}
inline void Policy_PolicyErrorInfo::SharedDtor(MessageLite& self) {
  Policy_PolicyErrorInfo& this_ = static_cast<Policy_PolicyErrorInfo&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.description_.Destroy();
  delete this_._impl_.timestamp_;
  this_._impl_.~Impl_();
}

inline void* Policy_PolicyErrorInfo::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Policy_PolicyErrorInfo(arena);
}
constexpr auto Policy_PolicyErrorInfo::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Policy_PolicyErrorInfo),
                                            alignof(Policy_PolicyErrorInfo));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Policy_PolicyErrorInfo::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Policy_PolicyErrorInfo_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Policy_PolicyErrorInfo::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Policy_PolicyErrorInfo>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Policy_PolicyErrorInfo::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Policy_PolicyErrorInfo>(), &Policy_PolicyErrorInfo::ByteSizeLong,
            &Policy_PolicyErrorInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Policy_PolicyErrorInfo, _impl_._cached_size_),
        false,
    },
    &Policy_PolicyErrorInfo::kDescriptorMethods,
    &descriptor_table_kentik_2falerting_2fpublic_2fv202505_2fpolicy_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Policy_PolicyErrorInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 73, 2> Policy_PolicyErrorInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Policy_PolicyErrorInfo, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::alerting::public_::v202505::Policy_PolicyErrorInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string description = 2 [json_name = "description", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Policy_PolicyErrorInfo, _impl_.description_)}},
    // .google.protobuf.Timestamp timestamp = 1 [json_name = "timestamp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Policy_PolicyErrorInfo, _impl_.timestamp_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .google.protobuf.Timestamp timestamp = 1 [json_name = "timestamp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Policy_PolicyErrorInfo, _impl_.timestamp_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string description = 2 [json_name = "description", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Policy_PolicyErrorInfo, _impl_.description_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
    "\65\0\13\0\0\0\0\0"
    "kentik.alerting.public.v202505.Policy.PolicyErrorInfo"
    "description"
  }},
};

PROTOBUF_NOINLINE void Policy_PolicyErrorInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.alerting.public.v202505.Policy.PolicyErrorInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.description_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.timestamp_ != nullptr);
    _impl_.timestamp_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Policy_PolicyErrorInfo::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Policy_PolicyErrorInfo& this_ = static_cast<const Policy_PolicyErrorInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Policy_PolicyErrorInfo::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Policy_PolicyErrorInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.alerting.public.v202505.Policy.PolicyErrorInfo)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .google.protobuf.Timestamp timestamp = 1 [json_name = "timestamp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.timestamp_, this_._impl_.timestamp_->GetCachedSize(), target,
                stream);
          }

          // string description = 2 [json_name = "description", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_description().empty()) {
            const std::string& _s = this_._internal_description();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.alerting.public.v202505.Policy.PolicyErrorInfo.description");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.alerting.public.v202505.Policy.PolicyErrorInfo)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Policy_PolicyErrorInfo::ByteSizeLong(const MessageLite& base) {
          const Policy_PolicyErrorInfo& this_ = static_cast<const Policy_PolicyErrorInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Policy_PolicyErrorInfo::ByteSizeLong() const {
          const Policy_PolicyErrorInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.alerting.public.v202505.Policy.PolicyErrorInfo)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string description = 2 [json_name = "description", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_description().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_description());
            }
          }
           {
            // .google.protobuf.Timestamp timestamp = 1 [json_name = "timestamp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.timestamp_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Policy_PolicyErrorInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Policy_PolicyErrorInfo*>(&to_msg);
  auto& from = static_cast<const Policy_PolicyErrorInfo&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.alerting.public.v202505.Policy.PolicyErrorInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_description().empty()) {
    _this->_internal_set_description(from._internal_description());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.timestamp_ != nullptr);
    if (_this->_impl_.timestamp_ == nullptr) {
      _this->_impl_.timestamp_ =
          ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.timestamp_);
    } else {
      _this->_impl_.timestamp_->MergeFrom(*from._impl_.timestamp_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Policy_PolicyErrorInfo::CopyFrom(const Policy_PolicyErrorInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.alerting.public.v202505.Policy.PolicyErrorInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Policy_PolicyErrorInfo::InternalSwap(Policy_PolicyErrorInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
  swap(_impl_.timestamp_, other->_impl_.timestamp_);
}

::google::protobuf::Metadata Policy_PolicyErrorInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Policy_PolicyLevel::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::kentik::alerting::public_::v202505::Policy_PolicyLevel, _impl_._oneof_case_);
};

void Policy_PolicyLevel::set_allocated_nms(::kentik::alerting::public_::v202505::NmsPolicyLevelSettings* nms) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_settings();
  if (nms) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(nms)->GetArena();
    if (message_arena != submessage_arena) {
      nms = ::google::protobuf::internal::GetOwnedMessage(message_arena, nms, submessage_arena);
    }
    set_has_nms();
    _impl_.settings_.nms_ = nms;
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.alerting.public.v202505.Policy.PolicyLevel.nms)
}
void Policy_PolicyLevel::clear_nms() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (settings_case() == kNms) {
    if (GetArena() == nullptr) {
      delete _impl_.settings_.nms_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.settings_.nms_);
    }
    clear_has_settings();
  }
}
void Policy_PolicyLevel::set_allocated_flow(::kentik::alerting::public_::v202505::FlowPolicyLevelSettings* flow) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_settings();
  if (flow) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(flow)->GetArena();
    if (message_arena != submessage_arena) {
      flow = ::google::protobuf::internal::GetOwnedMessage(message_arena, flow, submessage_arena);
    }
    set_has_flow();
    _impl_.settings_.flow_ = flow;
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.alerting.public.v202505.Policy.PolicyLevel.flow)
}
void Policy_PolicyLevel::clear_flow() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (settings_case() == kFlow) {
    if (GetArena() == nullptr) {
      delete _impl_.settings_.flow_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.settings_.flow_);
    }
    clear_has_settings();
  }
}
void Policy_PolicyLevel::set_allocated_event(::kentik::alerting::public_::v202505::EventPolicyLevelSettings* event) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_settings();
  if (event) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(event)->GetArena();
    if (message_arena != submessage_arena) {
      event = ::google::protobuf::internal::GetOwnedMessage(message_arena, event, submessage_arena);
    }
    set_has_event();
    _impl_.settings_.event_ = event;
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.alerting.public.v202505.Policy.PolicyLevel.event)
}
void Policy_PolicyLevel::clear_event() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (settings_case() == kEvent) {
    if (GetArena() == nullptr) {
      delete _impl_.settings_.event_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.settings_.event_);
    }
    clear_has_settings();
  }
}
void Policy_PolicyLevel::clear_notifications() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.notifications_.Clear();
}
Policy_PolicyLevel::Policy_PolicyLevel(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.alerting.public.v202505.Policy.PolicyLevel)
}
inline PROTOBUF_NDEBUG_INLINE Policy_PolicyLevel::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::alerting::public_::v202505::Policy_PolicyLevel& from_msg)
      : notifications_{visibility, arena, from.notifications_},
        description_(arena, from.description_),
        settings_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

Policy_PolicyLevel::Policy_PolicyLevel(
    ::google::protobuf::Arena* arena,
    const Policy_PolicyLevel& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Policy_PolicyLevel* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, severity_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, severity_),
           offsetof(Impl_, ack_required_) -
               offsetof(Impl_, severity_) +
               sizeof(Impl_::ack_required_));
  switch (settings_case()) {
    case SETTINGS_NOT_SET:
      break;
      case kNms:
        _impl_.settings_.nms_ = ::google::protobuf::Message::CopyConstruct<::kentik::alerting::public_::v202505::NmsPolicyLevelSettings>(arena, *from._impl_.settings_.nms_);
        break;
      case kFlow:
        _impl_.settings_.flow_ = ::google::protobuf::Message::CopyConstruct<::kentik::alerting::public_::v202505::FlowPolicyLevelSettings>(arena, *from._impl_.settings_.flow_);
        break;
      case kEvent:
        _impl_.settings_.event_ = ::google::protobuf::Message::CopyConstruct<::kentik::alerting::public_::v202505::EventPolicyLevelSettings>(arena, *from._impl_.settings_.event_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:kentik.alerting.public.v202505.Policy.PolicyLevel)
}
inline PROTOBUF_NDEBUG_INLINE Policy_PolicyLevel::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : notifications_{visibility, arena},
        description_(arena),
        settings_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void Policy_PolicyLevel::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, severity_),
           0,
           offsetof(Impl_, ack_required_) -
               offsetof(Impl_, severity_) +
               sizeof(Impl_::ack_required_));
}
Policy_PolicyLevel::~Policy_PolicyLevel() {
  // @@protoc_insertion_point(destructor:kentik.alerting.public.v202505.Policy.PolicyLevel)
  SharedDtor(*this);
}
inline void Policy_PolicyLevel::SharedDtor(MessageLite& self) {
  Policy_PolicyLevel& this_ = static_cast<Policy_PolicyLevel&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.description_.Destroy();
  if (this_.has_settings()) {
    this_.clear_settings();
  }
  this_._impl_.~Impl_();
}

void Policy_PolicyLevel::clear_settings() {
// @@protoc_insertion_point(one_of_clear_start:kentik.alerting.public.v202505.Policy.PolicyLevel)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (settings_case()) {
    case kNms: {
      if (GetArena() == nullptr) {
        delete _impl_.settings_.nms_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.settings_.nms_);
      }
      break;
    }
    case kFlow: {
      if (GetArena() == nullptr) {
        delete _impl_.settings_.flow_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.settings_.flow_);
      }
      break;
    }
    case kEvent: {
      if (GetArena() == nullptr) {
        delete _impl_.settings_.event_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.settings_.event_);
      }
      break;
    }
    case SETTINGS_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = SETTINGS_NOT_SET;
}


inline void* Policy_PolicyLevel::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Policy_PolicyLevel(arena);
}
constexpr auto Policy_PolicyLevel::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Policy_PolicyLevel, _impl_.notifications_) +
          decltype(Policy_PolicyLevel::_impl_.notifications_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(Policy_PolicyLevel), alignof(Policy_PolicyLevel), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Policy_PolicyLevel::PlacementNew_,
                                 sizeof(Policy_PolicyLevel),
                                 alignof(Policy_PolicyLevel));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Policy_PolicyLevel::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Policy_PolicyLevel_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Policy_PolicyLevel::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Policy_PolicyLevel>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Policy_PolicyLevel::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Policy_PolicyLevel>(), &Policy_PolicyLevel::ByteSizeLong,
            &Policy_PolicyLevel::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Policy_PolicyLevel, _impl_._cached_size_),
        false,
    },
    &Policy_PolicyLevel::kDescriptorMethods,
    &descriptor_table_kentik_2falerting_2fpublic_2fv202505_2fpolicy_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Policy_PolicyLevel::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 4, 69, 2> Policy_PolicyLevel::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::alerting::public_::v202505::Policy_PolicyLevel>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .kentik.alerting.types.v202303.Severity severity = 1 [json_name = "severity", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Policy_PolicyLevel, _impl_.severity_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Policy_PolicyLevel, _impl_.severity_)}},
    // string description = 2 [json_name = "description", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Policy_PolicyLevel, _impl_.description_)}},
    // bool ack_required = 3 [json_name = "ackRequired", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Policy_PolicyLevel, _impl_.ack_required_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(Policy_PolicyLevel, _impl_.ack_required_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .kentik.alerting.public.v202505.NotificationChannelAssociation notifications = 7 [json_name = "notifications", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastMtR1,
     {58, 63, 3, PROTOBUF_FIELD_OFFSET(Policy_PolicyLevel, _impl_.notifications_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .kentik.alerting.types.v202303.Severity severity = 1 [json_name = "severity", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Policy_PolicyLevel, _impl_.severity_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string description = 2 [json_name = "description", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Policy_PolicyLevel, _impl_.description_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool ack_required = 3 [json_name = "ackRequired", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Policy_PolicyLevel, _impl_.ack_required_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // .kentik.alerting.public.v202505.NmsPolicyLevelSettings nms = 4 [json_name = "nms", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Policy_PolicyLevel, _impl_.settings_.nms_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .kentik.alerting.public.v202505.FlowPolicyLevelSettings flow = 5 [json_name = "flow", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Policy_PolicyLevel, _impl_.settings_.flow_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .kentik.alerting.public.v202505.EventPolicyLevelSettings event = 6 [json_name = "event", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Policy_PolicyLevel, _impl_.settings_.event_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .kentik.alerting.public.v202505.NotificationChannelAssociation notifications = 7 [json_name = "notifications", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Policy_PolicyLevel, _impl_.notifications_), 0, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::kentik::alerting::public_::v202505::NmsPolicyLevelSettings>()},
    {::_pbi::TcParser::GetTable<::kentik::alerting::public_::v202505::FlowPolicyLevelSettings>()},
    {::_pbi::TcParser::GetTable<::kentik::alerting::public_::v202505::EventPolicyLevelSettings>()},
    {::_pbi::TcParser::GetTable<::kentik::alerting::public_::v202505::NotificationChannelAssociation>()},
  }}, {{
    "\61\0\13\0\0\0\0\0"
    "kentik.alerting.public.v202505.Policy.PolicyLevel"
    "description"
  }},
};

PROTOBUF_NOINLINE void Policy_PolicyLevel::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.alerting.public.v202505.Policy.PolicyLevel)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.notifications_.Clear();
  _impl_.description_.ClearToEmpty();
  ::memset(&_impl_.severity_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.ack_required_) -
      reinterpret_cast<char*>(&_impl_.severity_)) + sizeof(_impl_.ack_required_));
  clear_settings();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Policy_PolicyLevel::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Policy_PolicyLevel& this_ = static_cast<const Policy_PolicyLevel&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Policy_PolicyLevel::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Policy_PolicyLevel& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.alerting.public.v202505.Policy.PolicyLevel)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // .kentik.alerting.types.v202303.Severity severity = 1 [json_name = "severity", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (this_._internal_severity() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                1, this_._internal_severity(), target);
          }

          // string description = 2 [json_name = "description", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_description().empty()) {
            const std::string& _s = this_._internal_description();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.alerting.public.v202505.Policy.PolicyLevel.description");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // bool ack_required = 3 [json_name = "ackRequired", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (this_._internal_ack_required() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                3, this_._internal_ack_required(), target);
          }

          switch (this_.settings_case()) {
            case kNms: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  4, *this_._impl_.settings_.nms_, this_._impl_.settings_.nms_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kFlow: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  5, *this_._impl_.settings_.flow_, this_._impl_.settings_.flow_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kEvent: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  6, *this_._impl_.settings_.event_, this_._impl_.settings_.event_->GetCachedSize(), target,
                  stream);
              break;
            }
            default:
              break;
          }
          // repeated .kentik.alerting.public.v202505.NotificationChannelAssociation notifications = 7 [json_name = "notifications", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_notifications_size());
               i < n; i++) {
            const auto& repfield = this_._internal_notifications().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    7, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.alerting.public.v202505.Policy.PolicyLevel)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Policy_PolicyLevel::ByteSizeLong(const MessageLite& base) {
          const Policy_PolicyLevel& this_ = static_cast<const Policy_PolicyLevel&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Policy_PolicyLevel::ByteSizeLong() const {
          const Policy_PolicyLevel& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.alerting.public.v202505.Policy.PolicyLevel)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .kentik.alerting.public.v202505.NotificationChannelAssociation notifications = 7 [json_name = "notifications", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            {
              total_size += 1UL * this_._internal_notifications_size();
              for (const auto& msg : this_._internal_notifications()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string description = 2 [json_name = "description", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_description().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_description());
            }
            // .kentik.alerting.types.v202303.Severity severity = 1 [json_name = "severity", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (this_._internal_severity() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_severity());
            }
            // bool ack_required = 3 [json_name = "ackRequired", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (this_._internal_ack_required() != 0) {
              total_size += 2;
            }
          }
          switch (this_.settings_case()) {
            // .kentik.alerting.public.v202505.NmsPolicyLevelSettings nms = 4 [json_name = "nms", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            case kNms: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.settings_.nms_);
              break;
            }
            // .kentik.alerting.public.v202505.FlowPolicyLevelSettings flow = 5 [json_name = "flow", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            case kFlow: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.settings_.flow_);
              break;
            }
            // .kentik.alerting.public.v202505.EventPolicyLevelSettings event = 6 [json_name = "event", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            case kEvent: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.settings_.event_);
              break;
            }
            case SETTINGS_NOT_SET: {
              break;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Policy_PolicyLevel::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Policy_PolicyLevel*>(&to_msg);
  auto& from = static_cast<const Policy_PolicyLevel&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.alerting.public.v202505.Policy.PolicyLevel)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_notifications()->MergeFrom(
      from._internal_notifications());
  if (!from._internal_description().empty()) {
    _this->_internal_set_description(from._internal_description());
  }
  if (from._internal_severity() != 0) {
    _this->_impl_.severity_ = from._impl_.severity_;
  }
  if (from._internal_ack_required() != 0) {
    _this->_impl_.ack_required_ = from._impl_.ack_required_;
  }
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_settings();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kNms: {
        if (oneof_needs_init) {
          _this->_impl_.settings_.nms_ =
              ::google::protobuf::Message::CopyConstruct<::kentik::alerting::public_::v202505::NmsPolicyLevelSettings>(arena, *from._impl_.settings_.nms_);
        } else {
          _this->_impl_.settings_.nms_->MergeFrom(from._internal_nms());
        }
        break;
      }
      case kFlow: {
        if (oneof_needs_init) {
          _this->_impl_.settings_.flow_ =
              ::google::protobuf::Message::CopyConstruct<::kentik::alerting::public_::v202505::FlowPolicyLevelSettings>(arena, *from._impl_.settings_.flow_);
        } else {
          _this->_impl_.settings_.flow_->MergeFrom(from._internal_flow());
        }
        break;
      }
      case kEvent: {
        if (oneof_needs_init) {
          _this->_impl_.settings_.event_ =
              ::google::protobuf::Message::CopyConstruct<::kentik::alerting::public_::v202505::EventPolicyLevelSettings>(arena, *from._impl_.settings_.event_);
        } else {
          _this->_impl_.settings_.event_->MergeFrom(from._internal_event());
        }
        break;
      }
      case SETTINGS_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Policy_PolicyLevel::CopyFrom(const Policy_PolicyLevel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.alerting.public.v202505.Policy.PolicyLevel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Policy_PolicyLevel::InternalSwap(Policy_PolicyLevel* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.notifications_.InternalSwap(&other->_impl_.notifications_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Policy_PolicyLevel, _impl_.ack_required_)
      + sizeof(Policy_PolicyLevel::_impl_.ack_required_)
      - PROTOBUF_FIELD_OFFSET(Policy_PolicyLevel, _impl_.severity_)>(
          reinterpret_cast<char*>(&_impl_.severity_),
          reinterpret_cast<char*>(&other->_impl_.severity_));
  swap(_impl_.settings_, other->_impl_.settings_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata Policy_PolicyLevel::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Policy::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Policy>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Policy, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::kentik::alerting::public_::v202505::Policy, _impl_._oneof_case_);
};

void Policy::clear_source() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.source_ != nullptr) _impl_.source_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void Policy::clear_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.created_at_ != nullptr) _impl_.created_at_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void Policy::clear_modified_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.modified_at_ != nullptr) _impl_.modified_at_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void Policy::set_allocated_flow(::kentik::alerting::public_::v202505::FlowPolicySettings* flow) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_settings();
  if (flow) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(flow)->GetArena();
    if (message_arena != submessage_arena) {
      flow = ::google::protobuf::internal::GetOwnedMessage(message_arena, flow, submessage_arena);
    }
    set_has_flow();
    _impl_.settings_.flow_ = flow;
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.alerting.public.v202505.Policy.flow)
}
void Policy::clear_flow() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (settings_case() == kFlow) {
    if (GetArena() == nullptr) {
      delete _impl_.settings_.flow_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.settings_.flow_);
    }
    clear_has_settings();
  }
}
void Policy::set_allocated_nms(::kentik::alerting::public_::v202505::NmsPolicySettings* nms) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_settings();
  if (nms) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(nms)->GetArena();
    if (message_arena != submessage_arena) {
      nms = ::google::protobuf::internal::GetOwnedMessage(message_arena, nms, submessage_arena);
    }
    set_has_nms();
    _impl_.settings_.nms_ = nms;
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.alerting.public.v202505.Policy.nms)
}
void Policy::clear_nms() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (settings_case() == kNms) {
    if (GetArena() == nullptr) {
      delete _impl_.settings_.nms_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.settings_.nms_);
    }
    clear_has_settings();
  }
}
void Policy::set_allocated_event(::kentik::alerting::public_::v202505::EventPolicySettings* event) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_settings();
  if (event) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(event)->GetArena();
    if (message_arena != submessage_arena) {
      event = ::google::protobuf::internal::GetOwnedMessage(message_arena, event, submessage_arena);
    }
    set_has_event();
    _impl_.settings_.event_ = event;
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.alerting.public.v202505.Policy.event)
}
void Policy::clear_event() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (settings_case() == kEvent) {
    if (GetArena() == nullptr) {
      delete _impl_.settings_.event_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.settings_.event_);
    }
    clear_has_settings();
  }
}
Policy::Policy(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.alerting.public.v202505.Policy)
}
inline PROTOBUF_NDEBUG_INLINE Policy::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::alerting::public_::v202505::Policy& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        levels_{visibility, arena, from.levels_},
        created_by_(arena, from.created_by_),
        modified_by_(arena, from.modified_by_),
        name_(arena, from.name_),
        description_(arena, from.description_),
        settings_{},
        _oneof_case_{from._oneof_case_[0]} {}

Policy::Policy(
    ::google::protobuf::Arena* arena,
    const Policy& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Policy* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.source_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::kentik::alerting::public_::v202505::Source>(
                              arena, *from._impl_.source_)
                        : nullptr;
  _impl_.created_at_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.created_at_)
                        : nullptr;
  _impl_.modified_at_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.modified_at_)
                        : nullptr;
  _impl_.last_error_ = (cached_has_bits & 0x00000008u) ? ::google::protobuf::Message::CopyConstruct<::kentik::alerting::public_::v202505::Policy_PolicyErrorInfo>(
                              arena, *from._impl_.last_error_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, enabled_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, enabled_),
           offsetof(Impl_, has_errors_) -
               offsetof(Impl_, enabled_) +
               sizeof(Impl_::has_errors_));
  switch (settings_case()) {
    case SETTINGS_NOT_SET:
      break;
      case kFlow:
        _impl_.settings_.flow_ = ::google::protobuf::Message::CopyConstruct<::kentik::alerting::public_::v202505::FlowPolicySettings>(arena, *from._impl_.settings_.flow_);
        break;
      case kNms:
        _impl_.settings_.nms_ = ::google::protobuf::Message::CopyConstruct<::kentik::alerting::public_::v202505::NmsPolicySettings>(arena, *from._impl_.settings_.nms_);
        break;
      case kEvent:
        _impl_.settings_.event_ = ::google::protobuf::Message::CopyConstruct<::kentik::alerting::public_::v202505::EventPolicySettings>(arena, *from._impl_.settings_.event_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:kentik.alerting.public.v202505.Policy)
}
inline PROTOBUF_NDEBUG_INLINE Policy::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        levels_{visibility, arena},
        created_by_(arena),
        modified_by_(arena),
        name_(arena),
        description_(arena),
        settings_{},
        _oneof_case_{} {}

inline void Policy::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, source_),
           0,
           offsetof(Impl_, has_errors_) -
               offsetof(Impl_, source_) +
               sizeof(Impl_::has_errors_));
}
Policy::~Policy() {
  // @@protoc_insertion_point(destructor:kentik.alerting.public.v202505.Policy)
  SharedDtor(*this);
}
inline void Policy::SharedDtor(MessageLite& self) {
  Policy& this_ = static_cast<Policy&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.created_by_.Destroy();
  this_._impl_.modified_by_.Destroy();
  this_._impl_.name_.Destroy();
  this_._impl_.description_.Destroy();
  delete this_._impl_.source_;
  delete this_._impl_.created_at_;
  delete this_._impl_.modified_at_;
  delete this_._impl_.last_error_;
  if (this_.has_settings()) {
    this_.clear_settings();
  }
  this_._impl_.~Impl_();
}

void Policy::clear_settings() {
// @@protoc_insertion_point(one_of_clear_start:kentik.alerting.public.v202505.Policy)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (settings_case()) {
    case kFlow: {
      if (GetArena() == nullptr) {
        delete _impl_.settings_.flow_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.settings_.flow_);
      }
      break;
    }
    case kNms: {
      if (GetArena() == nullptr) {
        delete _impl_.settings_.nms_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.settings_.nms_);
      }
      break;
    }
    case kEvent: {
      if (GetArena() == nullptr) {
        delete _impl_.settings_.event_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.settings_.event_);
      }
      break;
    }
    case SETTINGS_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = SETTINGS_NOT_SET;
}


inline void* Policy::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Policy(arena);
}
constexpr auto Policy::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Policy, _impl_.levels_) +
          decltype(Policy::_impl_.levels_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(Policy), alignof(Policy), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Policy::PlacementNew_,
                                 sizeof(Policy),
                                 alignof(Policy));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Policy::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Policy_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Policy::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Policy>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Policy::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Policy>(), &Policy::ByteSizeLong,
            &Policy::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Policy, _impl_._cached_size_),
        false,
    },
    &Policy::kDescriptorMethods,
    &descriptor_table_kentik_2falerting_2fpublic_2fv202505_2fpolicy_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Policy::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 14, 8, 90, 2> Policy::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Policy, _impl_._has_bits_),
    0, // no _extensions_
    15, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294934784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    14,  // num_field_entries
    8,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::alerting::public_::v202505::Policy>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .kentik.alerting.public.v202505.Source source = 1 [json_name = "source", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Policy, _impl_.source_)}},
    // .google.protobuf.Timestamp created_at = 2 [json_name = "createdAt", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(Policy, _impl_.created_at_)}},
    // .google.protobuf.Timestamp modified_at = 3 [json_name = "modifiedAt", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(Policy, _impl_.modified_at_)}},
    // string created_by = 4 [json_name = "createdBy", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(Policy, _impl_.created_by_)}},
    // string modified_by = 5 [json_name = "modifiedBy", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(Policy, _impl_.modified_by_)}},
    // string name = 6 [json_name = "name", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(Policy, _impl_.name_)}},
    // string description = 7 [json_name = "description", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(Policy, _impl_.description_)}},
    // optional bool enabled = 8 [json_name = "enabled", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Policy, _impl_.enabled_), 4>(),
     {64, 4, 0, PROTOBUF_FIELD_OFFSET(Policy, _impl_.enabled_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .kentik.alerting.public.v202505.Policy.PolicyLevel levels = 10 [json_name = "levels", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastMtR1,
     {82, 63, 3, PROTOBUF_FIELD_OFFSET(Policy, _impl_.levels_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // bool has_errors = 14 [json_name = "hasErrors", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Policy, _impl_.has_errors_), 63>(),
     {112, 63, 0, PROTOBUF_FIELD_OFFSET(Policy, _impl_.has_errors_)}},
    // .kentik.alerting.public.v202505.Policy.PolicyErrorInfo last_error = 15 [json_name = "lastError", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastMtS1,
     {122, 3, 7, PROTOBUF_FIELD_OFFSET(Policy, _impl_.last_error_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .kentik.alerting.public.v202505.Source source = 1 [json_name = "source", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Policy, _impl_.source_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Timestamp created_at = 2 [json_name = "createdAt", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Policy, _impl_.created_at_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Timestamp modified_at = 3 [json_name = "modifiedAt", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Policy, _impl_.modified_at_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string created_by = 4 [json_name = "createdBy", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Policy, _impl_.created_by_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string modified_by = 5 [json_name = "modifiedBy", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Policy, _impl_.modified_by_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string name = 6 [json_name = "name", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Policy, _impl_.name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string description = 7 [json_name = "description", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Policy, _impl_.description_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional bool enabled = 8 [json_name = "enabled", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Policy, _impl_.enabled_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // repeated .kentik.alerting.public.v202505.Policy.PolicyLevel levels = 10 [json_name = "levels", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Policy, _impl_.levels_), -1, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .kentik.alerting.public.v202505.FlowPolicySettings flow = 11 [json_name = "flow", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Policy, _impl_.settings_.flow_), _Internal::kOneofCaseOffset + 0, 4,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .kentik.alerting.public.v202505.NmsPolicySettings nms = 12 [json_name = "nms", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Policy, _impl_.settings_.nms_), _Internal::kOneofCaseOffset + 0, 5,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .kentik.alerting.public.v202505.EventPolicySettings event = 13 [json_name = "event", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Policy, _impl_.settings_.event_), _Internal::kOneofCaseOffset + 0, 6,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool has_errors = 14 [json_name = "hasErrors", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Policy, _impl_.has_errors_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // .kentik.alerting.public.v202505.Policy.PolicyErrorInfo last_error = 15 [json_name = "lastError", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Policy, _impl_.last_error_), _Internal::kHasBitsOffset + 3, 7,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::kentik::alerting::public_::v202505::Source>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::kentik::alerting::public_::v202505::Policy_PolicyLevel>()},
    {::_pbi::TcParser::GetTable<::kentik::alerting::public_::v202505::FlowPolicySettings>()},
    {::_pbi::TcParser::GetTable<::kentik::alerting::public_::v202505::NmsPolicySettings>()},
    {::_pbi::TcParser::GetTable<::kentik::alerting::public_::v202505::EventPolicySettings>()},
    {::_pbi::TcParser::GetTable<::kentik::alerting::public_::v202505::Policy_PolicyErrorInfo>()},
  }}, {{
    "\45\0\0\0\12\13\4\13\0\0\0\0\0\0\0\0"
    "kentik.alerting.public.v202505.Policy"
    "created_by"
    "modified_by"
    "name"
    "description"
  }},
};

PROTOBUF_NOINLINE void Policy::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.alerting.public.v202505.Policy)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.levels_.Clear();
  _impl_.created_by_.ClearToEmpty();
  _impl_.modified_by_.ClearToEmpty();
  _impl_.name_.ClearToEmpty();
  _impl_.description_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.source_ != nullptr);
      _impl_.source_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.created_at_ != nullptr);
      _impl_.created_at_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.modified_at_ != nullptr);
      _impl_.modified_at_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.last_error_ != nullptr);
      _impl_.last_error_->Clear();
    }
  }
  _impl_.enabled_ = false;
  _impl_.has_errors_ = false;
  clear_settings();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Policy::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Policy& this_ = static_cast<const Policy&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Policy::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Policy& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.alerting.public.v202505.Policy)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .kentik.alerting.public.v202505.Source source = 1 [json_name = "source", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.source_, this_._impl_.source_->GetCachedSize(), target,
                stream);
          }

          // .google.protobuf.Timestamp created_at = 2 [json_name = "createdAt", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.created_at_, this_._impl_.created_at_->GetCachedSize(), target,
                stream);
          }

          // .google.protobuf.Timestamp modified_at = 3 [json_name = "modifiedAt", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.modified_at_, this_._impl_.modified_at_->GetCachedSize(), target,
                stream);
          }

          // string created_by = 4 [json_name = "createdBy", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_created_by().empty()) {
            const std::string& _s = this_._internal_created_by();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.alerting.public.v202505.Policy.created_by");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // string modified_by = 5 [json_name = "modifiedBy", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_modified_by().empty()) {
            const std::string& _s = this_._internal_modified_by();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.alerting.public.v202505.Policy.modified_by");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // string name = 6 [json_name = "name", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_name().empty()) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.alerting.public.v202505.Policy.name");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          // string description = 7 [json_name = "description", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_description().empty()) {
            const std::string& _s = this_._internal_description();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.alerting.public.v202505.Policy.description");
            target = stream->WriteStringMaybeAliased(7, _s, target);
          }

          // optional bool enabled = 8 [json_name = "enabled", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (cached_has_bits & 0x00000010u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                8, this_._internal_enabled(), target);
          }

          // repeated .kentik.alerting.public.v202505.Policy.PolicyLevel levels = 10 [json_name = "levels", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_levels_size());
               i < n; i++) {
            const auto& repfield = this_._internal_levels().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    10, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          switch (this_.settings_case()) {
            case kFlow: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  11, *this_._impl_.settings_.flow_, this_._impl_.settings_.flow_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kNms: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  12, *this_._impl_.settings_.nms_, this_._impl_.settings_.nms_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kEvent: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  13, *this_._impl_.settings_.event_, this_._impl_.settings_.event_->GetCachedSize(), target,
                  stream);
              break;
            }
            default:
              break;
          }
          // bool has_errors = 14 [json_name = "hasErrors", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (this_._internal_has_errors() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                14, this_._internal_has_errors(), target);
          }

          // .kentik.alerting.public.v202505.Policy.PolicyErrorInfo last_error = 15 [json_name = "lastError", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (cached_has_bits & 0x00000008u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                15, *this_._impl_.last_error_, this_._impl_.last_error_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.alerting.public.v202505.Policy)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Policy::ByteSizeLong(const MessageLite& base) {
          const Policy& this_ = static_cast<const Policy&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Policy::ByteSizeLong() const {
          const Policy& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.alerting.public.v202505.Policy)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .kentik.alerting.public.v202505.Policy.PolicyLevel levels = 10 [json_name = "levels", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            {
              total_size += 1UL * this_._internal_levels_size();
              for (const auto& msg : this_._internal_levels()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string created_by = 4 [json_name = "createdBy", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_created_by().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_created_by());
            }
            // string modified_by = 5 [json_name = "modifiedBy", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_modified_by().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_modified_by());
            }
            // string name = 6 [json_name = "name", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
            // string description = 7 [json_name = "description", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_description().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_description());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x0000001fu) {
            // .kentik.alerting.public.v202505.Source source = 1 [json_name = "source", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.source_);
            }
            // .google.protobuf.Timestamp created_at = 2 [json_name = "createdAt", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.created_at_);
            }
            // .google.protobuf.Timestamp modified_at = 3 [json_name = "modifiedAt", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.modified_at_);
            }
            // .kentik.alerting.public.v202505.Policy.PolicyErrorInfo last_error = 15 [json_name = "lastError", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (cached_has_bits & 0x00000008u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.last_error_);
            }
            // optional bool enabled = 8 [json_name = "enabled", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (cached_has_bits & 0x00000010u) {
              total_size += 2;
            }
          }
           {
            // bool has_errors = 14 [json_name = "hasErrors", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (this_._internal_has_errors() != 0) {
              total_size += 2;
            }
          }
          switch (this_.settings_case()) {
            // .kentik.alerting.public.v202505.FlowPolicySettings flow = 11 [json_name = "flow", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            case kFlow: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.settings_.flow_);
              break;
            }
            // .kentik.alerting.public.v202505.NmsPolicySettings nms = 12 [json_name = "nms", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            case kNms: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.settings_.nms_);
              break;
            }
            // .kentik.alerting.public.v202505.EventPolicySettings event = 13 [json_name = "event", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            case kEvent: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.settings_.event_);
              break;
            }
            case SETTINGS_NOT_SET: {
              break;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Policy::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Policy*>(&to_msg);
  auto& from = static_cast<const Policy&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.alerting.public.v202505.Policy)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_levels()->MergeFrom(
      from._internal_levels());
  if (!from._internal_created_by().empty()) {
    _this->_internal_set_created_by(from._internal_created_by());
  }
  if (!from._internal_modified_by().empty()) {
    _this->_internal_set_modified_by(from._internal_modified_by());
  }
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_description().empty()) {
    _this->_internal_set_description(from._internal_description());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.source_ != nullptr);
      if (_this->_impl_.source_ == nullptr) {
        _this->_impl_.source_ =
            ::google::protobuf::Message::CopyConstruct<::kentik::alerting::public_::v202505::Source>(arena, *from._impl_.source_);
      } else {
        _this->_impl_.source_->MergeFrom(*from._impl_.source_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.created_at_ != nullptr);
      if (_this->_impl_.created_at_ == nullptr) {
        _this->_impl_.created_at_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.created_at_);
      } else {
        _this->_impl_.created_at_->MergeFrom(*from._impl_.created_at_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.modified_at_ != nullptr);
      if (_this->_impl_.modified_at_ == nullptr) {
        _this->_impl_.modified_at_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.modified_at_);
      } else {
        _this->_impl_.modified_at_->MergeFrom(*from._impl_.modified_at_);
      }
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(from._impl_.last_error_ != nullptr);
      if (_this->_impl_.last_error_ == nullptr) {
        _this->_impl_.last_error_ =
            ::google::protobuf::Message::CopyConstruct<::kentik::alerting::public_::v202505::Policy_PolicyErrorInfo>(arena, *from._impl_.last_error_);
      } else {
        _this->_impl_.last_error_->MergeFrom(*from._impl_.last_error_);
      }
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.enabled_ = from._impl_.enabled_;
    }
  }
  if (from._internal_has_errors() != 0) {
    _this->_impl_.has_errors_ = from._impl_.has_errors_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_settings();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kFlow: {
        if (oneof_needs_init) {
          _this->_impl_.settings_.flow_ =
              ::google::protobuf::Message::CopyConstruct<::kentik::alerting::public_::v202505::FlowPolicySettings>(arena, *from._impl_.settings_.flow_);
        } else {
          _this->_impl_.settings_.flow_->MergeFrom(from._internal_flow());
        }
        break;
      }
      case kNms: {
        if (oneof_needs_init) {
          _this->_impl_.settings_.nms_ =
              ::google::protobuf::Message::CopyConstruct<::kentik::alerting::public_::v202505::NmsPolicySettings>(arena, *from._impl_.settings_.nms_);
        } else {
          _this->_impl_.settings_.nms_->MergeFrom(from._internal_nms());
        }
        break;
      }
      case kEvent: {
        if (oneof_needs_init) {
          _this->_impl_.settings_.event_ =
              ::google::protobuf::Message::CopyConstruct<::kentik::alerting::public_::v202505::EventPolicySettings>(arena, *from._impl_.settings_.event_);
        } else {
          _this->_impl_.settings_.event_->MergeFrom(from._internal_event());
        }
        break;
      }
      case SETTINGS_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Policy::CopyFrom(const Policy& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.alerting.public.v202505.Policy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Policy::InternalSwap(Policy* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.levels_.InternalSwap(&other->_impl_.levels_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.created_by_, &other->_impl_.created_by_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.modified_by_, &other->_impl_.modified_by_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Policy, _impl_.has_errors_)
      + sizeof(Policy::_impl_.has_errors_)
      - PROTOBUF_FIELD_OFFSET(Policy, _impl_.source_)>(
          reinterpret_cast<char*>(&_impl_.source_),
          reinterpret_cast<char*>(&other->_impl_.source_));
  swap(_impl_.settings_, other->_impl_.settings_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata Policy::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v202505
}  // namespace public_
}  // namespace alerting
}  // namespace kentik
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_kentik_2falerting_2fpublic_2fv202505_2fpolicy_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
