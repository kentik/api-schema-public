// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: kentik/alerting/public/v202505/policy.proto
// Protobuf C++ Version: 5.29.3

#ifndef kentik_2falerting_2fpublic_2fv202505_2fpolicy_2eproto_2epb_2eh
#define kentik_2falerting_2fpublic_2fv202505_2fpolicy_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "google/protobuf/timestamp.pb.h"
#include "google/protobuf/duration.pb.h"
#include "google/protobuf/struct.pb.h"
#include "google/api/annotations.pb.h"
#include "google/api/client.pb.h"
#include "google/api/field_behavior.pb.h"
#include "protoc-gen-openapiv2/options/annotations.pb.h"
#include "kentik/core/v202303/annotations.pb.h"
#include "kentik/alerting/types/v202303/types.pb.h"
#include "kentik/alerting/types/v202506/pagination.pb.h"
#include "kentik/alerting/types/v202506/sorting.pb.h"
#include "kentik/alerting/public/v202505/common.pb.h"
#include "kentik/alerting/public/v202505/policy_filters.pb.h"
#include "kentik/alerting/public/v202505/policy_nms.pb.h"
#include "kentik/alerting/public/v202505/policy_event.pb.h"
#include "kentik/alerting/public/v202505/policy_flow.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_kentik_2falerting_2fpublic_2fv202505_2fpolicy_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_kentik_2falerting_2fpublic_2fv202505_2fpolicy_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_kentik_2falerting_2fpublic_2fv202505_2fpolicy_2eproto;
namespace kentik {
namespace alerting {
namespace public_ {
namespace v202505 {
class Policy;
struct PolicyDefaultTypeInternal;
extern PolicyDefaultTypeInternal _Policy_default_instance_;
class PolicyListFilters;
struct PolicyListFiltersDefaultTypeInternal;
extern PolicyListFiltersDefaultTypeInternal _PolicyListFilters_default_instance_;
class PolicyServiceDisableRequest;
struct PolicyServiceDisableRequestDefaultTypeInternal;
extern PolicyServiceDisableRequestDefaultTypeInternal _PolicyServiceDisableRequest_default_instance_;
class PolicyServiceDisableResponse;
struct PolicyServiceDisableResponseDefaultTypeInternal;
extern PolicyServiceDisableResponseDefaultTypeInternal _PolicyServiceDisableResponse_default_instance_;
class PolicyServiceEnableRequest;
struct PolicyServiceEnableRequestDefaultTypeInternal;
extern PolicyServiceEnableRequestDefaultTypeInternal _PolicyServiceEnableRequest_default_instance_;
class PolicyServiceEnableResponse;
struct PolicyServiceEnableResponseDefaultTypeInternal;
extern PolicyServiceEnableResponseDefaultTypeInternal _PolicyServiceEnableResponse_default_instance_;
class PolicyServiceGetRequest;
struct PolicyServiceGetRequestDefaultTypeInternal;
extern PolicyServiceGetRequestDefaultTypeInternal _PolicyServiceGetRequest_default_instance_;
class PolicyServiceGetResponse;
struct PolicyServiceGetResponseDefaultTypeInternal;
extern PolicyServiceGetResponseDefaultTypeInternal _PolicyServiceGetResponse_default_instance_;
class PolicyServiceListRequest;
struct PolicyServiceListRequestDefaultTypeInternal;
extern PolicyServiceListRequestDefaultTypeInternal _PolicyServiceListRequest_default_instance_;
class PolicyServiceListResponse;
struct PolicyServiceListResponseDefaultTypeInternal;
extern PolicyServiceListResponseDefaultTypeInternal _PolicyServiceListResponse_default_instance_;
class Policy_PolicyErrorInfo;
struct Policy_PolicyErrorInfoDefaultTypeInternal;
extern Policy_PolicyErrorInfoDefaultTypeInternal _Policy_PolicyErrorInfo_default_instance_;
class Policy_PolicyLevel;
struct Policy_PolicyLevelDefaultTypeInternal;
extern Policy_PolicyLevelDefaultTypeInternal _Policy_PolicyLevel_default_instance_;
}  // namespace v202505
}  // namespace public_
}  // namespace alerting
}  // namespace kentik
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace kentik {
namespace alerting {
namespace public_ {
namespace v202505 {

// ===================================================================


// -------------------------------------------------------------------

class PolicyServiceGetRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.alerting.public.v202505.PolicyServiceGetRequest) */ {
 public:
  inline PolicyServiceGetRequest() : PolicyServiceGetRequest(nullptr) {}
  ~PolicyServiceGetRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PolicyServiceGetRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PolicyServiceGetRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PolicyServiceGetRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline PolicyServiceGetRequest(const PolicyServiceGetRequest& from) : PolicyServiceGetRequest(nullptr, from) {}
  inline PolicyServiceGetRequest(PolicyServiceGetRequest&& from) noexcept
      : PolicyServiceGetRequest(nullptr, std::move(from)) {}
  inline PolicyServiceGetRequest& operator=(const PolicyServiceGetRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline PolicyServiceGetRequest& operator=(PolicyServiceGetRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PolicyServiceGetRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const PolicyServiceGetRequest* internal_default_instance() {
    return reinterpret_cast<const PolicyServiceGetRequest*>(
        &_PolicyServiceGetRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(PolicyServiceGetRequest& a, PolicyServiceGetRequest& b) { a.Swap(&b); }
  inline void Swap(PolicyServiceGetRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PolicyServiceGetRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PolicyServiceGetRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PolicyServiceGetRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PolicyServiceGetRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PolicyServiceGetRequest& from) { PolicyServiceGetRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PolicyServiceGetRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.alerting.public.v202505.PolicyServiceGetRequest"; }

 protected:
  explicit PolicyServiceGetRequest(::google::protobuf::Arena* arena);
  PolicyServiceGetRequest(::google::protobuf::Arena* arena, const PolicyServiceGetRequest& from);
  PolicyServiceGetRequest(::google::protobuf::Arena* arena, PolicyServiceGetRequest&& from) noexcept
      : PolicyServiceGetRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 2,
    kPolicyTypeFieldNumber = 1,
  };
  // string id = 2 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // .kentik.alerting.public.v202505.PolicyType policy_type = 1 [json_name = "policyType", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_policy_type() ;
  ::kentik::alerting::public_::v202505::PolicyType policy_type() const;
  void set_policy_type(::kentik::alerting::public_::v202505::PolicyType value);

  private:
  ::kentik::alerting::public_::v202505::PolicyType _internal_policy_type() const;
  void _internal_set_policy_type(::kentik::alerting::public_::v202505::PolicyType value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.alerting.public.v202505.PolicyServiceGetRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      65, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PolicyServiceGetRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr id_;
    int policy_type_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2falerting_2fpublic_2fv202505_2fpolicy_2eproto;
};
// -------------------------------------------------------------------

class PolicyServiceEnableRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.alerting.public.v202505.PolicyServiceEnableRequest) */ {
 public:
  inline PolicyServiceEnableRequest() : PolicyServiceEnableRequest(nullptr) {}
  ~PolicyServiceEnableRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PolicyServiceEnableRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PolicyServiceEnableRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PolicyServiceEnableRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline PolicyServiceEnableRequest(const PolicyServiceEnableRequest& from) : PolicyServiceEnableRequest(nullptr, from) {}
  inline PolicyServiceEnableRequest(PolicyServiceEnableRequest&& from) noexcept
      : PolicyServiceEnableRequest(nullptr, std::move(from)) {}
  inline PolicyServiceEnableRequest& operator=(const PolicyServiceEnableRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline PolicyServiceEnableRequest& operator=(PolicyServiceEnableRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PolicyServiceEnableRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const PolicyServiceEnableRequest* internal_default_instance() {
    return reinterpret_cast<const PolicyServiceEnableRequest*>(
        &_PolicyServiceEnableRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(PolicyServiceEnableRequest& a, PolicyServiceEnableRequest& b) { a.Swap(&b); }
  inline void Swap(PolicyServiceEnableRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PolicyServiceEnableRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PolicyServiceEnableRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PolicyServiceEnableRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PolicyServiceEnableRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PolicyServiceEnableRequest& from) { PolicyServiceEnableRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PolicyServiceEnableRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.alerting.public.v202505.PolicyServiceEnableRequest"; }

 protected:
  explicit PolicyServiceEnableRequest(::google::protobuf::Arena* arena);
  PolicyServiceEnableRequest(::google::protobuf::Arena* arena, const PolicyServiceEnableRequest& from);
  PolicyServiceEnableRequest(::google::protobuf::Arena* arena, PolicyServiceEnableRequest&& from) noexcept
      : PolicyServiceEnableRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 2,
    kPolicyTypeFieldNumber = 1,
  };
  // string id = 2 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // .kentik.alerting.public.v202505.PolicyType policy_type = 1 [json_name = "policyType", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_policy_type() ;
  ::kentik::alerting::public_::v202505::PolicyType policy_type() const;
  void set_policy_type(::kentik::alerting::public_::v202505::PolicyType value);

  private:
  ::kentik::alerting::public_::v202505::PolicyType _internal_policy_type() const;
  void _internal_set_policy_type(::kentik::alerting::public_::v202505::PolicyType value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.alerting.public.v202505.PolicyServiceEnableRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      68, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PolicyServiceEnableRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr id_;
    int policy_type_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2falerting_2fpublic_2fv202505_2fpolicy_2eproto;
};
// -------------------------------------------------------------------

class PolicyServiceDisableRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.alerting.public.v202505.PolicyServiceDisableRequest) */ {
 public:
  inline PolicyServiceDisableRequest() : PolicyServiceDisableRequest(nullptr) {}
  ~PolicyServiceDisableRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PolicyServiceDisableRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PolicyServiceDisableRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PolicyServiceDisableRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline PolicyServiceDisableRequest(const PolicyServiceDisableRequest& from) : PolicyServiceDisableRequest(nullptr, from) {}
  inline PolicyServiceDisableRequest(PolicyServiceDisableRequest&& from) noexcept
      : PolicyServiceDisableRequest(nullptr, std::move(from)) {}
  inline PolicyServiceDisableRequest& operator=(const PolicyServiceDisableRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline PolicyServiceDisableRequest& operator=(PolicyServiceDisableRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PolicyServiceDisableRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const PolicyServiceDisableRequest* internal_default_instance() {
    return reinterpret_cast<const PolicyServiceDisableRequest*>(
        &_PolicyServiceDisableRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(PolicyServiceDisableRequest& a, PolicyServiceDisableRequest& b) { a.Swap(&b); }
  inline void Swap(PolicyServiceDisableRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PolicyServiceDisableRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PolicyServiceDisableRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PolicyServiceDisableRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PolicyServiceDisableRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PolicyServiceDisableRequest& from) { PolicyServiceDisableRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PolicyServiceDisableRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.alerting.public.v202505.PolicyServiceDisableRequest"; }

 protected:
  explicit PolicyServiceDisableRequest(::google::protobuf::Arena* arena);
  PolicyServiceDisableRequest(::google::protobuf::Arena* arena, const PolicyServiceDisableRequest& from);
  PolicyServiceDisableRequest(::google::protobuf::Arena* arena, PolicyServiceDisableRequest&& from) noexcept
      : PolicyServiceDisableRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 2,
    kPolicyTypeFieldNumber = 1,
  };
  // string id = 2 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // .kentik.alerting.public.v202505.PolicyType policy_type = 1 [json_name = "policyType", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_policy_type() ;
  ::kentik::alerting::public_::v202505::PolicyType policy_type() const;
  void set_policy_type(::kentik::alerting::public_::v202505::PolicyType value);

  private:
  ::kentik::alerting::public_::v202505::PolicyType _internal_policy_type() const;
  void _internal_set_policy_type(::kentik::alerting::public_::v202505::PolicyType value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.alerting.public.v202505.PolicyServiceDisableRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      69, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PolicyServiceDisableRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr id_;
    int policy_type_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2falerting_2fpublic_2fv202505_2fpolicy_2eproto;
};
// -------------------------------------------------------------------

class Policy_PolicyErrorInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.alerting.public.v202505.Policy.PolicyErrorInfo) */ {
 public:
  inline Policy_PolicyErrorInfo() : Policy_PolicyErrorInfo(nullptr) {}
  ~Policy_PolicyErrorInfo() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Policy_PolicyErrorInfo* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Policy_PolicyErrorInfo));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Policy_PolicyErrorInfo(
      ::google::protobuf::internal::ConstantInitialized);

  inline Policy_PolicyErrorInfo(const Policy_PolicyErrorInfo& from) : Policy_PolicyErrorInfo(nullptr, from) {}
  inline Policy_PolicyErrorInfo(Policy_PolicyErrorInfo&& from) noexcept
      : Policy_PolicyErrorInfo(nullptr, std::move(from)) {}
  inline Policy_PolicyErrorInfo& operator=(const Policy_PolicyErrorInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline Policy_PolicyErrorInfo& operator=(Policy_PolicyErrorInfo&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Policy_PolicyErrorInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const Policy_PolicyErrorInfo* internal_default_instance() {
    return reinterpret_cast<const Policy_PolicyErrorInfo*>(
        &_Policy_PolicyErrorInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(Policy_PolicyErrorInfo& a, Policy_PolicyErrorInfo& b) { a.Swap(&b); }
  inline void Swap(Policy_PolicyErrorInfo* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Policy_PolicyErrorInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Policy_PolicyErrorInfo* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Policy_PolicyErrorInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Policy_PolicyErrorInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Policy_PolicyErrorInfo& from) { Policy_PolicyErrorInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Policy_PolicyErrorInfo* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.alerting.public.v202505.Policy.PolicyErrorInfo"; }

 protected:
  explicit Policy_PolicyErrorInfo(::google::protobuf::Arena* arena);
  Policy_PolicyErrorInfo(::google::protobuf::Arena* arena, const Policy_PolicyErrorInfo& from);
  Policy_PolicyErrorInfo(::google::protobuf::Arena* arena, Policy_PolicyErrorInfo&& from) noexcept
      : Policy_PolicyErrorInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDescriptionFieldNumber = 2,
    kTimestampFieldNumber = 1,
  };
  // string description = 2 [json_name = "description", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_description() ;
  const std::string& description() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_description(Arg_&& arg, Args_... args);
  std::string* mutable_description();
  PROTOBUF_NODISCARD std::string* release_description();
  void set_allocated_description(std::string* value);

  private:
  const std::string& _internal_description() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_description(
      const std::string& value);
  std::string* _internal_mutable_description();

  public:
  // .google.protobuf.Timestamp timestamp = 1 [json_name = "timestamp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_timestamp() const;
  void clear_timestamp() ;
  const ::google::protobuf::Timestamp& timestamp() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_timestamp();
  ::google::protobuf::Timestamp* mutable_timestamp();
  void set_allocated_timestamp(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_timestamp(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_timestamp();

  private:
  const ::google::protobuf::Timestamp& _internal_timestamp() const;
  ::google::protobuf::Timestamp* _internal_mutable_timestamp();

  public:
  // @@protoc_insertion_point(class_scope:kentik.alerting.public.v202505.Policy.PolicyErrorInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      73, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Policy_PolicyErrorInfo& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr description_;
    ::google::protobuf::Timestamp* timestamp_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2falerting_2fpublic_2fv202505_2fpolicy_2eproto;
};
// -------------------------------------------------------------------

class PolicyListFilters final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.alerting.public.v202505.PolicyListFilters) */ {
 public:
  inline PolicyListFilters() : PolicyListFilters(nullptr) {}
  ~PolicyListFilters() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PolicyListFilters* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PolicyListFilters));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PolicyListFilters(
      ::google::protobuf::internal::ConstantInitialized);

  inline PolicyListFilters(const PolicyListFilters& from) : PolicyListFilters(nullptr, from) {}
  inline PolicyListFilters(PolicyListFilters&& from) noexcept
      : PolicyListFilters(nullptr, std::move(from)) {}
  inline PolicyListFilters& operator=(const PolicyListFilters& from) {
    CopyFrom(from);
    return *this;
  }
  inline PolicyListFilters& operator=(PolicyListFilters&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PolicyListFilters& default_instance() {
    return *internal_default_instance();
  }
  static inline const PolicyListFilters* internal_default_instance() {
    return reinterpret_cast<const PolicyListFilters*>(
        &_PolicyListFilters_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(PolicyListFilters& a, PolicyListFilters& b) { a.Swap(&b); }
  inline void Swap(PolicyListFilters* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PolicyListFilters* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PolicyListFilters* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PolicyListFilters>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PolicyListFilters& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PolicyListFilters& from) { PolicyListFilters::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PolicyListFilters* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.alerting.public.v202505.PolicyListFilters"; }

 protected:
  explicit PolicyListFilters(::google::protobuf::Arena* arena);
  PolicyListFilters(::google::protobuf::Arena* arena, const PolicyListFilters& from);
  PolicyListFilters(::google::protobuf::Arena* arena, PolicyListFilters&& from) noexcept
      : PolicyListFilters(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSourcesFieldNumber = 1,
    kApplicationsFieldNumber = 2,
    kUserIdsFieldNumber = 3,
    kCreatedAtFieldNumber = 4,
    kModifiedAtFieldNumber = 5,
  };
  // repeated .kentik.alerting.public.v202505.Source sources = 1 [json_name = "sources", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int sources_size() const;
  private:
  int _internal_sources_size() const;

  public:
  void clear_sources() ;
  ::kentik::alerting::public_::v202505::Source* mutable_sources(int index);
  ::google::protobuf::RepeatedPtrField<::kentik::alerting::public_::v202505::Source>* mutable_sources();

  private:
  const ::google::protobuf::RepeatedPtrField<::kentik::alerting::public_::v202505::Source>& _internal_sources() const;
  ::google::protobuf::RepeatedPtrField<::kentik::alerting::public_::v202505::Source>* _internal_mutable_sources();
  public:
  const ::kentik::alerting::public_::v202505::Source& sources(int index) const;
  ::kentik::alerting::public_::v202505::Source* add_sources();
  const ::google::protobuf::RepeatedPtrField<::kentik::alerting::public_::v202505::Source>& sources() const;
  // repeated string applications = 2 [json_name = "applications", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int applications_size() const;
  private:
  int _internal_applications_size() const;

  public:
  void clear_applications() ;
  const std::string& applications(int index) const;
  std::string* mutable_applications(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_applications(int index, Arg_&& value, Args_... args);
  std::string* add_applications();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_applications(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& applications() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_applications();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_applications() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_applications();

  public:
  // repeated string user_ids = 3 [json_name = "userIds", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int user_ids_size() const;
  private:
  int _internal_user_ids_size() const;

  public:
  void clear_user_ids() ;
  const std::string& user_ids(int index) const;
  std::string* mutable_user_ids(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_user_ids(int index, Arg_&& value, Args_... args);
  std::string* add_user_ids();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_user_ids(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& user_ids() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_user_ids();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_user_ids() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_user_ids();

  public:
  // .kentik.alerting.types.v202303.TimeRange created_at = 4 [json_name = "createdAt", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_created_at() const;
  void clear_created_at() ;
  const ::kentik::alerting::types::v202303::TimeRange& created_at() const;
  PROTOBUF_NODISCARD ::kentik::alerting::types::v202303::TimeRange* release_created_at();
  ::kentik::alerting::types::v202303::TimeRange* mutable_created_at();
  void set_allocated_created_at(::kentik::alerting::types::v202303::TimeRange* value);
  void unsafe_arena_set_allocated_created_at(::kentik::alerting::types::v202303::TimeRange* value);
  ::kentik::alerting::types::v202303::TimeRange* unsafe_arena_release_created_at();

  private:
  const ::kentik::alerting::types::v202303::TimeRange& _internal_created_at() const;
  ::kentik::alerting::types::v202303::TimeRange* _internal_mutable_created_at();

  public:
  // .kentik.alerting.types.v202303.TimeRange modified_at = 5 [json_name = "modifiedAt", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_modified_at() const;
  void clear_modified_at() ;
  const ::kentik::alerting::types::v202303::TimeRange& modified_at() const;
  PROTOBUF_NODISCARD ::kentik::alerting::types::v202303::TimeRange* release_modified_at();
  ::kentik::alerting::types::v202303::TimeRange* mutable_modified_at();
  void set_allocated_modified_at(::kentik::alerting::types::v202303::TimeRange* value);
  void unsafe_arena_set_allocated_modified_at(::kentik::alerting::types::v202303::TimeRange* value);
  ::kentik::alerting::types::v202303::TimeRange* unsafe_arena_release_modified_at();

  private:
  const ::kentik::alerting::types::v202303::TimeRange& _internal_modified_at() const;
  ::kentik::alerting::types::v202303::TimeRange* _internal_mutable_modified_at();

  public:
  // @@protoc_insertion_point(class_scope:kentik.alerting.public.v202505.PolicyListFilters)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 3,
      77, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PolicyListFilters& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::kentik::alerting::public_::v202505::Source > sources_;
    ::google::protobuf::RepeatedPtrField<std::string> applications_;
    ::google::protobuf::RepeatedPtrField<std::string> user_ids_;
    ::kentik::alerting::types::v202303::TimeRange* created_at_;
    ::kentik::alerting::types::v202303::TimeRange* modified_at_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2falerting_2fpublic_2fv202505_2fpolicy_2eproto;
};
// -------------------------------------------------------------------

class PolicyServiceListRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.alerting.public.v202505.PolicyServiceListRequest) */ {
 public:
  inline PolicyServiceListRequest() : PolicyServiceListRequest(nullptr) {}
  ~PolicyServiceListRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PolicyServiceListRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PolicyServiceListRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PolicyServiceListRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline PolicyServiceListRequest(const PolicyServiceListRequest& from) : PolicyServiceListRequest(nullptr, from) {}
  inline PolicyServiceListRequest(PolicyServiceListRequest&& from) noexcept
      : PolicyServiceListRequest(nullptr, std::move(from)) {}
  inline PolicyServiceListRequest& operator=(const PolicyServiceListRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline PolicyServiceListRequest& operator=(PolicyServiceListRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PolicyServiceListRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const PolicyServiceListRequest* internal_default_instance() {
    return reinterpret_cast<const PolicyServiceListRequest*>(
        &_PolicyServiceListRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(PolicyServiceListRequest& a, PolicyServiceListRequest& b) { a.Swap(&b); }
  inline void Swap(PolicyServiceListRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PolicyServiceListRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PolicyServiceListRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PolicyServiceListRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PolicyServiceListRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PolicyServiceListRequest& from) { PolicyServiceListRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PolicyServiceListRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.alerting.public.v202505.PolicyServiceListRequest"; }

 protected:
  explicit PolicyServiceListRequest(::google::protobuf::Arena* arena);
  PolicyServiceListRequest(::google::protobuf::Arena* arena, const PolicyServiceListRequest& from);
  PolicyServiceListRequest(::google::protobuf::Arena* arena, PolicyServiceListRequest&& from) noexcept
      : PolicyServiceListRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPaginationFieldNumber = 1,
    kSortingFieldNumber = 2,
    kFiltersFieldNumber = 3,
  };
  // .kentik.alerting.types.v202506.PaginationConfig pagination = 1 [json_name = "pagination", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_pagination() const;
  void clear_pagination() ;
  const ::kentik::alerting::types::v202506::PaginationConfig& pagination() const;
  PROTOBUF_NODISCARD ::kentik::alerting::types::v202506::PaginationConfig* release_pagination();
  ::kentik::alerting::types::v202506::PaginationConfig* mutable_pagination();
  void set_allocated_pagination(::kentik::alerting::types::v202506::PaginationConfig* value);
  void unsafe_arena_set_allocated_pagination(::kentik::alerting::types::v202506::PaginationConfig* value);
  ::kentik::alerting::types::v202506::PaginationConfig* unsafe_arena_release_pagination();

  private:
  const ::kentik::alerting::types::v202506::PaginationConfig& _internal_pagination() const;
  ::kentik::alerting::types::v202506::PaginationConfig* _internal_mutable_pagination();

  public:
  // .kentik.alerting.types.v202506.SortingConfig sorting = 2 [json_name = "sorting", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_sorting() const;
  void clear_sorting() ;
  const ::kentik::alerting::types::v202506::SortingConfig& sorting() const;
  PROTOBUF_NODISCARD ::kentik::alerting::types::v202506::SortingConfig* release_sorting();
  ::kentik::alerting::types::v202506::SortingConfig* mutable_sorting();
  void set_allocated_sorting(::kentik::alerting::types::v202506::SortingConfig* value);
  void unsafe_arena_set_allocated_sorting(::kentik::alerting::types::v202506::SortingConfig* value);
  ::kentik::alerting::types::v202506::SortingConfig* unsafe_arena_release_sorting();

  private:
  const ::kentik::alerting::types::v202506::SortingConfig& _internal_sorting() const;
  ::kentik::alerting::types::v202506::SortingConfig* _internal_mutable_sorting();

  public:
  // .kentik.alerting.public.v202505.PolicyListFilters filters = 3 [json_name = "filters", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_filters() const;
  void clear_filters() ;
  const ::kentik::alerting::public_::v202505::PolicyListFilters& filters() const;
  PROTOBUF_NODISCARD ::kentik::alerting::public_::v202505::PolicyListFilters* release_filters();
  ::kentik::alerting::public_::v202505::PolicyListFilters* mutable_filters();
  void set_allocated_filters(::kentik::alerting::public_::v202505::PolicyListFilters* value);
  void unsafe_arena_set_allocated_filters(::kentik::alerting::public_::v202505::PolicyListFilters* value);
  ::kentik::alerting::public_::v202505::PolicyListFilters* unsafe_arena_release_filters();

  private:
  const ::kentik::alerting::public_::v202505::PolicyListFilters& _internal_filters() const;
  ::kentik::alerting::public_::v202505::PolicyListFilters* _internal_mutable_filters();

  public:
  // @@protoc_insertion_point(class_scope:kentik.alerting.public.v202505.PolicyServiceListRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 3,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PolicyServiceListRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::kentik::alerting::types::v202506::PaginationConfig* pagination_;
    ::kentik::alerting::types::v202506::SortingConfig* sorting_;
    ::kentik::alerting::public_::v202505::PolicyListFilters* filters_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2falerting_2fpublic_2fv202505_2fpolicy_2eproto;
};
// -------------------------------------------------------------------

class Policy_PolicyLevel final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.alerting.public.v202505.Policy.PolicyLevel) */ {
 public:
  inline Policy_PolicyLevel() : Policy_PolicyLevel(nullptr) {}
  ~Policy_PolicyLevel() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Policy_PolicyLevel* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Policy_PolicyLevel));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Policy_PolicyLevel(
      ::google::protobuf::internal::ConstantInitialized);

  inline Policy_PolicyLevel(const Policy_PolicyLevel& from) : Policy_PolicyLevel(nullptr, from) {}
  inline Policy_PolicyLevel(Policy_PolicyLevel&& from) noexcept
      : Policy_PolicyLevel(nullptr, std::move(from)) {}
  inline Policy_PolicyLevel& operator=(const Policy_PolicyLevel& from) {
    CopyFrom(from);
    return *this;
  }
  inline Policy_PolicyLevel& operator=(Policy_PolicyLevel&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Policy_PolicyLevel& default_instance() {
    return *internal_default_instance();
  }
  enum SettingsCase {
    kNms = 4,
    kFlow = 5,
    kEvent = 6,
    SETTINGS_NOT_SET = 0,
  };
  static inline const Policy_PolicyLevel* internal_default_instance() {
    return reinterpret_cast<const Policy_PolicyLevel*>(
        &_Policy_PolicyLevel_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(Policy_PolicyLevel& a, Policy_PolicyLevel& b) { a.Swap(&b); }
  inline void Swap(Policy_PolicyLevel* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Policy_PolicyLevel* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Policy_PolicyLevel* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Policy_PolicyLevel>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Policy_PolicyLevel& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Policy_PolicyLevel& from) { Policy_PolicyLevel::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Policy_PolicyLevel* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.alerting.public.v202505.Policy.PolicyLevel"; }

 protected:
  explicit Policy_PolicyLevel(::google::protobuf::Arena* arena);
  Policy_PolicyLevel(::google::protobuf::Arena* arena, const Policy_PolicyLevel& from);
  Policy_PolicyLevel(::google::protobuf::Arena* arena, Policy_PolicyLevel&& from) noexcept
      : Policy_PolicyLevel(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNotificationsFieldNumber = 7,
    kDescriptionFieldNumber = 2,
    kSeverityFieldNumber = 1,
    kAckRequiredFieldNumber = 3,
    kNmsFieldNumber = 4,
    kFlowFieldNumber = 5,
    kEventFieldNumber = 6,
  };
  // repeated .kentik.alerting.public.v202505.NotificationChannelAssociation notifications = 7 [json_name = "notifications", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int notifications_size() const;
  private:
  int _internal_notifications_size() const;

  public:
  void clear_notifications() ;
  ::kentik::alerting::public_::v202505::NotificationChannelAssociation* mutable_notifications(int index);
  ::google::protobuf::RepeatedPtrField<::kentik::alerting::public_::v202505::NotificationChannelAssociation>* mutable_notifications();

  private:
  const ::google::protobuf::RepeatedPtrField<::kentik::alerting::public_::v202505::NotificationChannelAssociation>& _internal_notifications() const;
  ::google::protobuf::RepeatedPtrField<::kentik::alerting::public_::v202505::NotificationChannelAssociation>* _internal_mutable_notifications();
  public:
  const ::kentik::alerting::public_::v202505::NotificationChannelAssociation& notifications(int index) const;
  ::kentik::alerting::public_::v202505::NotificationChannelAssociation* add_notifications();
  const ::google::protobuf::RepeatedPtrField<::kentik::alerting::public_::v202505::NotificationChannelAssociation>& notifications() const;
  // string description = 2 [json_name = "description", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_description() ;
  const std::string& description() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_description(Arg_&& arg, Args_... args);
  std::string* mutable_description();
  PROTOBUF_NODISCARD std::string* release_description();
  void set_allocated_description(std::string* value);

  private:
  const std::string& _internal_description() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_description(
      const std::string& value);
  std::string* _internal_mutable_description();

  public:
  // .kentik.alerting.types.v202303.Severity severity = 1 [json_name = "severity", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_severity() ;
  ::kentik::alerting::types::v202303::Severity severity() const;
  void set_severity(::kentik::alerting::types::v202303::Severity value);

  private:
  ::kentik::alerting::types::v202303::Severity _internal_severity() const;
  void _internal_set_severity(::kentik::alerting::types::v202303::Severity value);

  public:
  // bool ack_required = 3 [json_name = "ackRequired", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_ack_required() ;
  bool ack_required() const;
  void set_ack_required(bool value);

  private:
  bool _internal_ack_required() const;
  void _internal_set_ack_required(bool value);

  public:
  // .kentik.alerting.public.v202505.NmsPolicyLevelSettings nms = 4 [json_name = "nms", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_nms() const;
  private:
  bool _internal_has_nms() const;

  public:
  void clear_nms() ;
  const ::kentik::alerting::public_::v202505::NmsPolicyLevelSettings& nms() const;
  PROTOBUF_NODISCARD ::kentik::alerting::public_::v202505::NmsPolicyLevelSettings* release_nms();
  ::kentik::alerting::public_::v202505::NmsPolicyLevelSettings* mutable_nms();
  void set_allocated_nms(::kentik::alerting::public_::v202505::NmsPolicyLevelSettings* value);
  void unsafe_arena_set_allocated_nms(::kentik::alerting::public_::v202505::NmsPolicyLevelSettings* value);
  ::kentik::alerting::public_::v202505::NmsPolicyLevelSettings* unsafe_arena_release_nms();

  private:
  const ::kentik::alerting::public_::v202505::NmsPolicyLevelSettings& _internal_nms() const;
  ::kentik::alerting::public_::v202505::NmsPolicyLevelSettings* _internal_mutable_nms();

  public:
  // .kentik.alerting.public.v202505.FlowPolicyLevelSettings flow = 5 [json_name = "flow", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_flow() const;
  private:
  bool _internal_has_flow() const;

  public:
  void clear_flow() ;
  const ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings& flow() const;
  PROTOBUF_NODISCARD ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings* release_flow();
  ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings* mutable_flow();
  void set_allocated_flow(::kentik::alerting::public_::v202505::FlowPolicyLevelSettings* value);
  void unsafe_arena_set_allocated_flow(::kentik::alerting::public_::v202505::FlowPolicyLevelSettings* value);
  ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings* unsafe_arena_release_flow();

  private:
  const ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings& _internal_flow() const;
  ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings* _internal_mutable_flow();

  public:
  // .kentik.alerting.public.v202505.EventPolicyLevelSettings event = 6 [json_name = "event", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_event() const;
  private:
  bool _internal_has_event() const;

  public:
  void clear_event() ;
  const ::kentik::alerting::public_::v202505::EventPolicyLevelSettings& event() const;
  PROTOBUF_NODISCARD ::kentik::alerting::public_::v202505::EventPolicyLevelSettings* release_event();
  ::kentik::alerting::public_::v202505::EventPolicyLevelSettings* mutable_event();
  void set_allocated_event(::kentik::alerting::public_::v202505::EventPolicyLevelSettings* value);
  void unsafe_arena_set_allocated_event(::kentik::alerting::public_::v202505::EventPolicyLevelSettings* value);
  ::kentik::alerting::public_::v202505::EventPolicyLevelSettings* unsafe_arena_release_event();

  private:
  const ::kentik::alerting::public_::v202505::EventPolicyLevelSettings& _internal_event() const;
  ::kentik::alerting::public_::v202505::EventPolicyLevelSettings* _internal_mutable_event();

  public:
  void clear_settings();
  SettingsCase settings_case() const;
  // @@protoc_insertion_point(class_scope:kentik.alerting.public.v202505.Policy.PolicyLevel)
 private:
  class _Internal;
  void set_has_nms();
  void set_has_flow();
  void set_has_event();
  inline bool has_settings() const;
  inline void clear_has_settings();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 4,
      69, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Policy_PolicyLevel& from_msg);
    ::google::protobuf::RepeatedPtrField< ::kentik::alerting::public_::v202505::NotificationChannelAssociation > notifications_;
    ::google::protobuf::internal::ArenaStringPtr description_;
    int severity_;
    bool ack_required_;
    union SettingsUnion {
      constexpr SettingsUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::kentik::alerting::public_::v202505::NmsPolicyLevelSettings* nms_;
      ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings* flow_;
      ::kentik::alerting::public_::v202505::EventPolicyLevelSettings* event_;
    } settings_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2falerting_2fpublic_2fv202505_2fpolicy_2eproto;
};
// -------------------------------------------------------------------

class Policy final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.alerting.public.v202505.Policy) */ {
 public:
  inline Policy() : Policy(nullptr) {}
  ~Policy() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Policy* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Policy));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Policy(
      ::google::protobuf::internal::ConstantInitialized);

  inline Policy(const Policy& from) : Policy(nullptr, from) {}
  inline Policy(Policy&& from) noexcept
      : Policy(nullptr, std::move(from)) {}
  inline Policy& operator=(const Policy& from) {
    CopyFrom(from);
    return *this;
  }
  inline Policy& operator=(Policy&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Policy& default_instance() {
    return *internal_default_instance();
  }
  enum SettingsCase {
    kFlow = 11,
    kNms = 12,
    kEvent = 13,
    SETTINGS_NOT_SET = 0,
  };
  static inline const Policy* internal_default_instance() {
    return reinterpret_cast<const Policy*>(
        &_Policy_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(Policy& a, Policy& b) { a.Swap(&b); }
  inline void Swap(Policy* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Policy* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Policy* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Policy>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Policy& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Policy& from) { Policy::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Policy* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.alerting.public.v202505.Policy"; }

 protected:
  explicit Policy(::google::protobuf::Arena* arena);
  Policy(::google::protobuf::Arena* arena, const Policy& from);
  Policy(::google::protobuf::Arena* arena, Policy&& from) noexcept
      : Policy(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using PolicyErrorInfo = Policy_PolicyErrorInfo;
  using PolicyLevel = Policy_PolicyLevel;

  // accessors -------------------------------------------------------
  enum : int {
    kLevelsFieldNumber = 10,
    kCreatedByFieldNumber = 4,
    kModifiedByFieldNumber = 5,
    kNameFieldNumber = 6,
    kDescriptionFieldNumber = 7,
    kSourceFieldNumber = 1,
    kCreatedAtFieldNumber = 2,
    kModifiedAtFieldNumber = 3,
    kLastErrorFieldNumber = 15,
    kEnabledFieldNumber = 8,
    kHasErrorsFieldNumber = 14,
    kFlowFieldNumber = 11,
    kNmsFieldNumber = 12,
    kEventFieldNumber = 13,
  };
  // repeated .kentik.alerting.public.v202505.Policy.PolicyLevel levels = 10 [json_name = "levels", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int levels_size() const;
  private:
  int _internal_levels_size() const;

  public:
  void clear_levels() ;
  ::kentik::alerting::public_::v202505::Policy_PolicyLevel* mutable_levels(int index);
  ::google::protobuf::RepeatedPtrField<::kentik::alerting::public_::v202505::Policy_PolicyLevel>* mutable_levels();

  private:
  const ::google::protobuf::RepeatedPtrField<::kentik::alerting::public_::v202505::Policy_PolicyLevel>& _internal_levels() const;
  ::google::protobuf::RepeatedPtrField<::kentik::alerting::public_::v202505::Policy_PolicyLevel>* _internal_mutable_levels();
  public:
  const ::kentik::alerting::public_::v202505::Policy_PolicyLevel& levels(int index) const;
  ::kentik::alerting::public_::v202505::Policy_PolicyLevel* add_levels();
  const ::google::protobuf::RepeatedPtrField<::kentik::alerting::public_::v202505::Policy_PolicyLevel>& levels() const;
  // string created_by = 4 [json_name = "createdBy", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_created_by() ;
  const std::string& created_by() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_created_by(Arg_&& arg, Args_... args);
  std::string* mutable_created_by();
  PROTOBUF_NODISCARD std::string* release_created_by();
  void set_allocated_created_by(std::string* value);

  private:
  const std::string& _internal_created_by() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_created_by(
      const std::string& value);
  std::string* _internal_mutable_created_by();

  public:
  // string modified_by = 5 [json_name = "modifiedBy", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_modified_by() ;
  const std::string& modified_by() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_modified_by(Arg_&& arg, Args_... args);
  std::string* mutable_modified_by();
  PROTOBUF_NODISCARD std::string* release_modified_by();
  void set_allocated_modified_by(std::string* value);

  private:
  const std::string& _internal_modified_by() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_modified_by(
      const std::string& value);
  std::string* _internal_mutable_modified_by();

  public:
  // string name = 6 [json_name = "name", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // string description = 7 [json_name = "description", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_description() ;
  const std::string& description() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_description(Arg_&& arg, Args_... args);
  std::string* mutable_description();
  PROTOBUF_NODISCARD std::string* release_description();
  void set_allocated_description(std::string* value);

  private:
  const std::string& _internal_description() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_description(
      const std::string& value);
  std::string* _internal_mutable_description();

  public:
  // .kentik.alerting.public.v202505.Source source = 1 [json_name = "source", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_source() const;
  void clear_source() ;
  const ::kentik::alerting::public_::v202505::Source& source() const;
  PROTOBUF_NODISCARD ::kentik::alerting::public_::v202505::Source* release_source();
  ::kentik::alerting::public_::v202505::Source* mutable_source();
  void set_allocated_source(::kentik::alerting::public_::v202505::Source* value);
  void unsafe_arena_set_allocated_source(::kentik::alerting::public_::v202505::Source* value);
  ::kentik::alerting::public_::v202505::Source* unsafe_arena_release_source();

  private:
  const ::kentik::alerting::public_::v202505::Source& _internal_source() const;
  ::kentik::alerting::public_::v202505::Source* _internal_mutable_source();

  public:
  // .google.protobuf.Timestamp created_at = 2 [json_name = "createdAt", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_created_at() const;
  void clear_created_at() ;
  const ::google::protobuf::Timestamp& created_at() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_created_at();
  ::google::protobuf::Timestamp* mutable_created_at();
  void set_allocated_created_at(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_created_at(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_created_at();

  private:
  const ::google::protobuf::Timestamp& _internal_created_at() const;
  ::google::protobuf::Timestamp* _internal_mutable_created_at();

  public:
  // .google.protobuf.Timestamp modified_at = 3 [json_name = "modifiedAt", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_modified_at() const;
  void clear_modified_at() ;
  const ::google::protobuf::Timestamp& modified_at() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_modified_at();
  ::google::protobuf::Timestamp* mutable_modified_at();
  void set_allocated_modified_at(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_modified_at(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_modified_at();

  private:
  const ::google::protobuf::Timestamp& _internal_modified_at() const;
  ::google::protobuf::Timestamp* _internal_mutable_modified_at();

  public:
  // .kentik.alerting.public.v202505.Policy.PolicyErrorInfo last_error = 15 [json_name = "lastError", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_last_error() const;
  void clear_last_error() ;
  const ::kentik::alerting::public_::v202505::Policy_PolicyErrorInfo& last_error() const;
  PROTOBUF_NODISCARD ::kentik::alerting::public_::v202505::Policy_PolicyErrorInfo* release_last_error();
  ::kentik::alerting::public_::v202505::Policy_PolicyErrorInfo* mutable_last_error();
  void set_allocated_last_error(::kentik::alerting::public_::v202505::Policy_PolicyErrorInfo* value);
  void unsafe_arena_set_allocated_last_error(::kentik::alerting::public_::v202505::Policy_PolicyErrorInfo* value);
  ::kentik::alerting::public_::v202505::Policy_PolicyErrorInfo* unsafe_arena_release_last_error();

  private:
  const ::kentik::alerting::public_::v202505::Policy_PolicyErrorInfo& _internal_last_error() const;
  ::kentik::alerting::public_::v202505::Policy_PolicyErrorInfo* _internal_mutable_last_error();

  public:
  // optional bool enabled = 8 [json_name = "enabled", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_enabled() const;
  void clear_enabled() ;
  bool enabled() const;
  void set_enabled(bool value);

  private:
  bool _internal_enabled() const;
  void _internal_set_enabled(bool value);

  public:
  // bool has_errors = 14 [json_name = "hasErrors", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_has_errors() ;
  bool has_errors() const;
  void set_has_errors(bool value);

  private:
  bool _internal_has_errors() const;
  void _internal_set_has_errors(bool value);

  public:
  // .kentik.alerting.public.v202505.FlowPolicySettings flow = 11 [json_name = "flow", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_flow() const;
  private:
  bool _internal_has_flow() const;

  public:
  void clear_flow() ;
  const ::kentik::alerting::public_::v202505::FlowPolicySettings& flow() const;
  PROTOBUF_NODISCARD ::kentik::alerting::public_::v202505::FlowPolicySettings* release_flow();
  ::kentik::alerting::public_::v202505::FlowPolicySettings* mutable_flow();
  void set_allocated_flow(::kentik::alerting::public_::v202505::FlowPolicySettings* value);
  void unsafe_arena_set_allocated_flow(::kentik::alerting::public_::v202505::FlowPolicySettings* value);
  ::kentik::alerting::public_::v202505::FlowPolicySettings* unsafe_arena_release_flow();

  private:
  const ::kentik::alerting::public_::v202505::FlowPolicySettings& _internal_flow() const;
  ::kentik::alerting::public_::v202505::FlowPolicySettings* _internal_mutable_flow();

  public:
  // .kentik.alerting.public.v202505.NmsPolicySettings nms = 12 [json_name = "nms", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_nms() const;
  private:
  bool _internal_has_nms() const;

  public:
  void clear_nms() ;
  const ::kentik::alerting::public_::v202505::NmsPolicySettings& nms() const;
  PROTOBUF_NODISCARD ::kentik::alerting::public_::v202505::NmsPolicySettings* release_nms();
  ::kentik::alerting::public_::v202505::NmsPolicySettings* mutable_nms();
  void set_allocated_nms(::kentik::alerting::public_::v202505::NmsPolicySettings* value);
  void unsafe_arena_set_allocated_nms(::kentik::alerting::public_::v202505::NmsPolicySettings* value);
  ::kentik::alerting::public_::v202505::NmsPolicySettings* unsafe_arena_release_nms();

  private:
  const ::kentik::alerting::public_::v202505::NmsPolicySettings& _internal_nms() const;
  ::kentik::alerting::public_::v202505::NmsPolicySettings* _internal_mutable_nms();

  public:
  // .kentik.alerting.public.v202505.EventPolicySettings event = 13 [json_name = "event", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_event() const;
  private:
  bool _internal_has_event() const;

  public:
  void clear_event() ;
  const ::kentik::alerting::public_::v202505::EventPolicySettings& event() const;
  PROTOBUF_NODISCARD ::kentik::alerting::public_::v202505::EventPolicySettings* release_event();
  ::kentik::alerting::public_::v202505::EventPolicySettings* mutable_event();
  void set_allocated_event(::kentik::alerting::public_::v202505::EventPolicySettings* value);
  void unsafe_arena_set_allocated_event(::kentik::alerting::public_::v202505::EventPolicySettings* value);
  ::kentik::alerting::public_::v202505::EventPolicySettings* unsafe_arena_release_event();

  private:
  const ::kentik::alerting::public_::v202505::EventPolicySettings& _internal_event() const;
  ::kentik::alerting::public_::v202505::EventPolicySettings* _internal_mutable_event();

  public:
  void clear_settings();
  SettingsCase settings_case() const;
  // @@protoc_insertion_point(class_scope:kentik.alerting.public.v202505.Policy)
 private:
  class _Internal;
  void set_has_flow();
  void set_has_nms();
  void set_has_event();
  inline bool has_settings() const;
  inline void clear_has_settings();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 14, 8,
      90, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Policy& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::kentik::alerting::public_::v202505::Policy_PolicyLevel > levels_;
    ::google::protobuf::internal::ArenaStringPtr created_by_;
    ::google::protobuf::internal::ArenaStringPtr modified_by_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr description_;
    ::kentik::alerting::public_::v202505::Source* source_;
    ::google::protobuf::Timestamp* created_at_;
    ::google::protobuf::Timestamp* modified_at_;
    ::kentik::alerting::public_::v202505::Policy_PolicyErrorInfo* last_error_;
    bool enabled_;
    bool has_errors_;
    union SettingsUnion {
      constexpr SettingsUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::kentik::alerting::public_::v202505::FlowPolicySettings* flow_;
      ::kentik::alerting::public_::v202505::NmsPolicySettings* nms_;
      ::kentik::alerting::public_::v202505::EventPolicySettings* event_;
    } settings_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2falerting_2fpublic_2fv202505_2fpolicy_2eproto;
};
// -------------------------------------------------------------------

class PolicyServiceListResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.alerting.public.v202505.PolicyServiceListResponse) */ {
 public:
  inline PolicyServiceListResponse() : PolicyServiceListResponse(nullptr) {}
  ~PolicyServiceListResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PolicyServiceListResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PolicyServiceListResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PolicyServiceListResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline PolicyServiceListResponse(const PolicyServiceListResponse& from) : PolicyServiceListResponse(nullptr, from) {}
  inline PolicyServiceListResponse(PolicyServiceListResponse&& from) noexcept
      : PolicyServiceListResponse(nullptr, std::move(from)) {}
  inline PolicyServiceListResponse& operator=(const PolicyServiceListResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline PolicyServiceListResponse& operator=(PolicyServiceListResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PolicyServiceListResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const PolicyServiceListResponse* internal_default_instance() {
    return reinterpret_cast<const PolicyServiceListResponse*>(
        &_PolicyServiceListResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(PolicyServiceListResponse& a, PolicyServiceListResponse& b) { a.Swap(&b); }
  inline void Swap(PolicyServiceListResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PolicyServiceListResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PolicyServiceListResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PolicyServiceListResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PolicyServiceListResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PolicyServiceListResponse& from) { PolicyServiceListResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PolicyServiceListResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.alerting.public.v202505.PolicyServiceListResponse"; }

 protected:
  explicit PolicyServiceListResponse(::google::protobuf::Arena* arena);
  PolicyServiceListResponse(::google::protobuf::Arena* arena, const PolicyServiceListResponse& from);
  PolicyServiceListResponse(::google::protobuf::Arena* arena, PolicyServiceListResponse&& from) noexcept
      : PolicyServiceListResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPoliciesFieldNumber = 2,
    kPaginationFieldNumber = 1,
  };
  // repeated .kentik.alerting.public.v202505.Policy policies = 2 [json_name = "policies", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int policies_size() const;
  private:
  int _internal_policies_size() const;

  public:
  void clear_policies() ;
  ::kentik::alerting::public_::v202505::Policy* mutable_policies(int index);
  ::google::protobuf::RepeatedPtrField<::kentik::alerting::public_::v202505::Policy>* mutable_policies();

  private:
  const ::google::protobuf::RepeatedPtrField<::kentik::alerting::public_::v202505::Policy>& _internal_policies() const;
  ::google::protobuf::RepeatedPtrField<::kentik::alerting::public_::v202505::Policy>* _internal_mutable_policies();
  public:
  const ::kentik::alerting::public_::v202505::Policy& policies(int index) const;
  ::kentik::alerting::public_::v202505::Policy* add_policies();
  const ::google::protobuf::RepeatedPtrField<::kentik::alerting::public_::v202505::Policy>& policies() const;
  // .kentik.alerting.types.v202506.PaginationInfo pagination = 1 [json_name = "pagination", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_pagination() const;
  void clear_pagination() ;
  const ::kentik::alerting::types::v202506::PaginationInfo& pagination() const;
  PROTOBUF_NODISCARD ::kentik::alerting::types::v202506::PaginationInfo* release_pagination();
  ::kentik::alerting::types::v202506::PaginationInfo* mutable_pagination();
  void set_allocated_pagination(::kentik::alerting::types::v202506::PaginationInfo* value);
  void unsafe_arena_set_allocated_pagination(::kentik::alerting::types::v202506::PaginationInfo* value);
  ::kentik::alerting::types::v202506::PaginationInfo* unsafe_arena_release_pagination();

  private:
  const ::kentik::alerting::types::v202506::PaginationInfo& _internal_pagination() const;
  ::kentik::alerting::types::v202506::PaginationInfo* _internal_mutable_pagination();

  public:
  // @@protoc_insertion_point(class_scope:kentik.alerting.public.v202505.PolicyServiceListResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PolicyServiceListResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::kentik::alerting::public_::v202505::Policy > policies_;
    ::kentik::alerting::types::v202506::PaginationInfo* pagination_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2falerting_2fpublic_2fv202505_2fpolicy_2eproto;
};
// -------------------------------------------------------------------

class PolicyServiceGetResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.alerting.public.v202505.PolicyServiceGetResponse) */ {
 public:
  inline PolicyServiceGetResponse() : PolicyServiceGetResponse(nullptr) {}
  ~PolicyServiceGetResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PolicyServiceGetResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PolicyServiceGetResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PolicyServiceGetResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline PolicyServiceGetResponse(const PolicyServiceGetResponse& from) : PolicyServiceGetResponse(nullptr, from) {}
  inline PolicyServiceGetResponse(PolicyServiceGetResponse&& from) noexcept
      : PolicyServiceGetResponse(nullptr, std::move(from)) {}
  inline PolicyServiceGetResponse& operator=(const PolicyServiceGetResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline PolicyServiceGetResponse& operator=(PolicyServiceGetResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PolicyServiceGetResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const PolicyServiceGetResponse* internal_default_instance() {
    return reinterpret_cast<const PolicyServiceGetResponse*>(
        &_PolicyServiceGetResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(PolicyServiceGetResponse& a, PolicyServiceGetResponse& b) { a.Swap(&b); }
  inline void Swap(PolicyServiceGetResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PolicyServiceGetResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PolicyServiceGetResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PolicyServiceGetResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PolicyServiceGetResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PolicyServiceGetResponse& from) { PolicyServiceGetResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PolicyServiceGetResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.alerting.public.v202505.PolicyServiceGetResponse"; }

 protected:
  explicit PolicyServiceGetResponse(::google::protobuf::Arena* arena);
  PolicyServiceGetResponse(::google::protobuf::Arena* arena, const PolicyServiceGetResponse& from);
  PolicyServiceGetResponse(::google::protobuf::Arena* arena, PolicyServiceGetResponse&& from) noexcept
      : PolicyServiceGetResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPolicyFieldNumber = 1,
  };
  // .kentik.alerting.public.v202505.Policy policy = 1 [json_name = "policy", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_policy() const;
  void clear_policy() ;
  const ::kentik::alerting::public_::v202505::Policy& policy() const;
  PROTOBUF_NODISCARD ::kentik::alerting::public_::v202505::Policy* release_policy();
  ::kentik::alerting::public_::v202505::Policy* mutable_policy();
  void set_allocated_policy(::kentik::alerting::public_::v202505::Policy* value);
  void unsafe_arena_set_allocated_policy(::kentik::alerting::public_::v202505::Policy* value);
  ::kentik::alerting::public_::v202505::Policy* unsafe_arena_release_policy();

  private:
  const ::kentik::alerting::public_::v202505::Policy& _internal_policy() const;
  ::kentik::alerting::public_::v202505::Policy* _internal_mutable_policy();

  public:
  // @@protoc_insertion_point(class_scope:kentik.alerting.public.v202505.PolicyServiceGetResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PolicyServiceGetResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::kentik::alerting::public_::v202505::Policy* policy_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2falerting_2fpublic_2fv202505_2fpolicy_2eproto;
};
// -------------------------------------------------------------------

class PolicyServiceEnableResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.alerting.public.v202505.PolicyServiceEnableResponse) */ {
 public:
  inline PolicyServiceEnableResponse() : PolicyServiceEnableResponse(nullptr) {}
  ~PolicyServiceEnableResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PolicyServiceEnableResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PolicyServiceEnableResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PolicyServiceEnableResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline PolicyServiceEnableResponse(const PolicyServiceEnableResponse& from) : PolicyServiceEnableResponse(nullptr, from) {}
  inline PolicyServiceEnableResponse(PolicyServiceEnableResponse&& from) noexcept
      : PolicyServiceEnableResponse(nullptr, std::move(from)) {}
  inline PolicyServiceEnableResponse& operator=(const PolicyServiceEnableResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline PolicyServiceEnableResponse& operator=(PolicyServiceEnableResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PolicyServiceEnableResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const PolicyServiceEnableResponse* internal_default_instance() {
    return reinterpret_cast<const PolicyServiceEnableResponse*>(
        &_PolicyServiceEnableResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(PolicyServiceEnableResponse& a, PolicyServiceEnableResponse& b) { a.Swap(&b); }
  inline void Swap(PolicyServiceEnableResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PolicyServiceEnableResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PolicyServiceEnableResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PolicyServiceEnableResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PolicyServiceEnableResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PolicyServiceEnableResponse& from) { PolicyServiceEnableResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PolicyServiceEnableResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.alerting.public.v202505.PolicyServiceEnableResponse"; }

 protected:
  explicit PolicyServiceEnableResponse(::google::protobuf::Arena* arena);
  PolicyServiceEnableResponse(::google::protobuf::Arena* arena, const PolicyServiceEnableResponse& from);
  PolicyServiceEnableResponse(::google::protobuf::Arena* arena, PolicyServiceEnableResponse&& from) noexcept
      : PolicyServiceEnableResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPolicyFieldNumber = 1,
  };
  // .kentik.alerting.public.v202505.Policy policy = 1 [json_name = "policy", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_policy() const;
  void clear_policy() ;
  const ::kentik::alerting::public_::v202505::Policy& policy() const;
  PROTOBUF_NODISCARD ::kentik::alerting::public_::v202505::Policy* release_policy();
  ::kentik::alerting::public_::v202505::Policy* mutable_policy();
  void set_allocated_policy(::kentik::alerting::public_::v202505::Policy* value);
  void unsafe_arena_set_allocated_policy(::kentik::alerting::public_::v202505::Policy* value);
  ::kentik::alerting::public_::v202505::Policy* unsafe_arena_release_policy();

  private:
  const ::kentik::alerting::public_::v202505::Policy& _internal_policy() const;
  ::kentik::alerting::public_::v202505::Policy* _internal_mutable_policy();

  public:
  // @@protoc_insertion_point(class_scope:kentik.alerting.public.v202505.PolicyServiceEnableResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PolicyServiceEnableResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::kentik::alerting::public_::v202505::Policy* policy_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2falerting_2fpublic_2fv202505_2fpolicy_2eproto;
};
// -------------------------------------------------------------------

class PolicyServiceDisableResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.alerting.public.v202505.PolicyServiceDisableResponse) */ {
 public:
  inline PolicyServiceDisableResponse() : PolicyServiceDisableResponse(nullptr) {}
  ~PolicyServiceDisableResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PolicyServiceDisableResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PolicyServiceDisableResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PolicyServiceDisableResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline PolicyServiceDisableResponse(const PolicyServiceDisableResponse& from) : PolicyServiceDisableResponse(nullptr, from) {}
  inline PolicyServiceDisableResponse(PolicyServiceDisableResponse&& from) noexcept
      : PolicyServiceDisableResponse(nullptr, std::move(from)) {}
  inline PolicyServiceDisableResponse& operator=(const PolicyServiceDisableResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline PolicyServiceDisableResponse& operator=(PolicyServiceDisableResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PolicyServiceDisableResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const PolicyServiceDisableResponse* internal_default_instance() {
    return reinterpret_cast<const PolicyServiceDisableResponse*>(
        &_PolicyServiceDisableResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(PolicyServiceDisableResponse& a, PolicyServiceDisableResponse& b) { a.Swap(&b); }
  inline void Swap(PolicyServiceDisableResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PolicyServiceDisableResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PolicyServiceDisableResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PolicyServiceDisableResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PolicyServiceDisableResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PolicyServiceDisableResponse& from) { PolicyServiceDisableResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PolicyServiceDisableResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.alerting.public.v202505.PolicyServiceDisableResponse"; }

 protected:
  explicit PolicyServiceDisableResponse(::google::protobuf::Arena* arena);
  PolicyServiceDisableResponse(::google::protobuf::Arena* arena, const PolicyServiceDisableResponse& from);
  PolicyServiceDisableResponse(::google::protobuf::Arena* arena, PolicyServiceDisableResponse&& from) noexcept
      : PolicyServiceDisableResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPolicyFieldNumber = 1,
  };
  // .kentik.alerting.public.v202505.Policy policy = 1 [json_name = "policy", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_policy() const;
  void clear_policy() ;
  const ::kentik::alerting::public_::v202505::Policy& policy() const;
  PROTOBUF_NODISCARD ::kentik::alerting::public_::v202505::Policy* release_policy();
  ::kentik::alerting::public_::v202505::Policy* mutable_policy();
  void set_allocated_policy(::kentik::alerting::public_::v202505::Policy* value);
  void unsafe_arena_set_allocated_policy(::kentik::alerting::public_::v202505::Policy* value);
  ::kentik::alerting::public_::v202505::Policy* unsafe_arena_release_policy();

  private:
  const ::kentik::alerting::public_::v202505::Policy& _internal_policy() const;
  ::kentik::alerting::public_::v202505::Policy* _internal_mutable_policy();

  public:
  // @@protoc_insertion_point(class_scope:kentik.alerting.public.v202505.PolicyServiceDisableResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PolicyServiceDisableResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::kentik::alerting::public_::v202505::Policy* policy_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2falerting_2fpublic_2fv202505_2fpolicy_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// PolicyServiceGetRequest

// .kentik.alerting.public.v202505.PolicyType policy_type = 1 [json_name = "policyType", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void PolicyServiceGetRequest::clear_policy_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.policy_type_ = 0;
}
inline ::kentik::alerting::public_::v202505::PolicyType PolicyServiceGetRequest::policy_type() const {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.PolicyServiceGetRequest.policy_type)
  return _internal_policy_type();
}
inline void PolicyServiceGetRequest::set_policy_type(::kentik::alerting::public_::v202505::PolicyType value) {
  _internal_set_policy_type(value);
  // @@protoc_insertion_point(field_set:kentik.alerting.public.v202505.PolicyServiceGetRequest.policy_type)
}
inline ::kentik::alerting::public_::v202505::PolicyType PolicyServiceGetRequest::_internal_policy_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::kentik::alerting::public_::v202505::PolicyType>(_impl_.policy_type_);
}
inline void PolicyServiceGetRequest::_internal_set_policy_type(::kentik::alerting::public_::v202505::PolicyType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.policy_type_ = value;
}

// string id = 2 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void PolicyServiceGetRequest::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& PolicyServiceGetRequest::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.PolicyServiceGetRequest.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PolicyServiceGetRequest::set_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.alerting.public.v202505.PolicyServiceGetRequest.id)
}
inline std::string* PolicyServiceGetRequest::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:kentik.alerting.public.v202505.PolicyServiceGetRequest.id)
  return _s;
}
inline const std::string& PolicyServiceGetRequest::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void PolicyServiceGetRequest::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(value, GetArena());
}
inline std::string* PolicyServiceGetRequest::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* PolicyServiceGetRequest::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.alerting.public.v202505.PolicyServiceGetRequest.id)
  return _impl_.id_.Release();
}
inline void PolicyServiceGetRequest::set_allocated_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.id_.IsDefault()) {
    _impl_.id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.alerting.public.v202505.PolicyServiceGetRequest.id)
}

// -------------------------------------------------------------------

// PolicyServiceGetResponse

// .kentik.alerting.public.v202505.Policy policy = 1 [json_name = "policy", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool PolicyServiceGetResponse::has_policy() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.policy_ != nullptr);
  return value;
}
inline void PolicyServiceGetResponse::clear_policy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.policy_ != nullptr) _impl_.policy_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::kentik::alerting::public_::v202505::Policy& PolicyServiceGetResponse::_internal_policy() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::alerting::public_::v202505::Policy* p = _impl_.policy_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::alerting::public_::v202505::Policy&>(::kentik::alerting::public_::v202505::_Policy_default_instance_);
}
inline const ::kentik::alerting::public_::v202505::Policy& PolicyServiceGetResponse::policy() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.PolicyServiceGetResponse.policy)
  return _internal_policy();
}
inline void PolicyServiceGetResponse::unsafe_arena_set_allocated_policy(::kentik::alerting::public_::v202505::Policy* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.policy_);
  }
  _impl_.policy_ = reinterpret_cast<::kentik::alerting::public_::v202505::Policy*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.alerting.public.v202505.PolicyServiceGetResponse.policy)
}
inline ::kentik::alerting::public_::v202505::Policy* PolicyServiceGetResponse::release_policy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::alerting::public_::v202505::Policy* released = _impl_.policy_;
  _impl_.policy_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::alerting::public_::v202505::Policy* PolicyServiceGetResponse::unsafe_arena_release_policy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.alerting.public.v202505.PolicyServiceGetResponse.policy)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::alerting::public_::v202505::Policy* temp = _impl_.policy_;
  _impl_.policy_ = nullptr;
  return temp;
}
inline ::kentik::alerting::public_::v202505::Policy* PolicyServiceGetResponse::_internal_mutable_policy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.policy_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::alerting::public_::v202505::Policy>(GetArena());
    _impl_.policy_ = reinterpret_cast<::kentik::alerting::public_::v202505::Policy*>(p);
  }
  return _impl_.policy_;
}
inline ::kentik::alerting::public_::v202505::Policy* PolicyServiceGetResponse::mutable_policy() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::kentik::alerting::public_::v202505::Policy* _msg = _internal_mutable_policy();
  // @@protoc_insertion_point(field_mutable:kentik.alerting.public.v202505.PolicyServiceGetResponse.policy)
  return _msg;
}
inline void PolicyServiceGetResponse::set_allocated_policy(::kentik::alerting::public_::v202505::Policy* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.policy_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.policy_ = reinterpret_cast<::kentik::alerting::public_::v202505::Policy*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.alerting.public.v202505.PolicyServiceGetResponse.policy)
}

// -------------------------------------------------------------------

// PolicyServiceListRequest

// .kentik.alerting.types.v202506.PaginationConfig pagination = 1 [json_name = "pagination", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool PolicyServiceListRequest::has_pagination() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pagination_ != nullptr);
  return value;
}
inline const ::kentik::alerting::types::v202506::PaginationConfig& PolicyServiceListRequest::_internal_pagination() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::alerting::types::v202506::PaginationConfig* p = _impl_.pagination_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::alerting::types::v202506::PaginationConfig&>(::kentik::alerting::types::v202506::_PaginationConfig_default_instance_);
}
inline const ::kentik::alerting::types::v202506::PaginationConfig& PolicyServiceListRequest::pagination() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.PolicyServiceListRequest.pagination)
  return _internal_pagination();
}
inline void PolicyServiceListRequest::unsafe_arena_set_allocated_pagination(::kentik::alerting::types::v202506::PaginationConfig* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }
  _impl_.pagination_ = reinterpret_cast<::kentik::alerting::types::v202506::PaginationConfig*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.alerting.public.v202505.PolicyServiceListRequest.pagination)
}
inline ::kentik::alerting::types::v202506::PaginationConfig* PolicyServiceListRequest::release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::alerting::types::v202506::PaginationConfig* released = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::alerting::types::v202506::PaginationConfig* PolicyServiceListRequest::unsafe_arena_release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.alerting.public.v202505.PolicyServiceListRequest.pagination)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::alerting::types::v202506::PaginationConfig* temp = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  return temp;
}
inline ::kentik::alerting::types::v202506::PaginationConfig* PolicyServiceListRequest::_internal_mutable_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pagination_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::alerting::types::v202506::PaginationConfig>(GetArena());
    _impl_.pagination_ = reinterpret_cast<::kentik::alerting::types::v202506::PaginationConfig*>(p);
  }
  return _impl_.pagination_;
}
inline ::kentik::alerting::types::v202506::PaginationConfig* PolicyServiceListRequest::mutable_pagination() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::kentik::alerting::types::v202506::PaginationConfig* _msg = _internal_mutable_pagination();
  // @@protoc_insertion_point(field_mutable:kentik.alerting.public.v202505.PolicyServiceListRequest.pagination)
  return _msg;
}
inline void PolicyServiceListRequest::set_allocated_pagination(::kentik::alerting::types::v202506::PaginationConfig* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.pagination_ = reinterpret_cast<::kentik::alerting::types::v202506::PaginationConfig*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.alerting.public.v202505.PolicyServiceListRequest.pagination)
}

// .kentik.alerting.types.v202506.SortingConfig sorting = 2 [json_name = "sorting", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool PolicyServiceListRequest::has_sorting() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.sorting_ != nullptr);
  return value;
}
inline const ::kentik::alerting::types::v202506::SortingConfig& PolicyServiceListRequest::_internal_sorting() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::alerting::types::v202506::SortingConfig* p = _impl_.sorting_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::alerting::types::v202506::SortingConfig&>(::kentik::alerting::types::v202506::_SortingConfig_default_instance_);
}
inline const ::kentik::alerting::types::v202506::SortingConfig& PolicyServiceListRequest::sorting() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.PolicyServiceListRequest.sorting)
  return _internal_sorting();
}
inline void PolicyServiceListRequest::unsafe_arena_set_allocated_sorting(::kentik::alerting::types::v202506::SortingConfig* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.sorting_);
  }
  _impl_.sorting_ = reinterpret_cast<::kentik::alerting::types::v202506::SortingConfig*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.alerting.public.v202505.PolicyServiceListRequest.sorting)
}
inline ::kentik::alerting::types::v202506::SortingConfig* PolicyServiceListRequest::release_sorting() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::kentik::alerting::types::v202506::SortingConfig* released = _impl_.sorting_;
  _impl_.sorting_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::alerting::types::v202506::SortingConfig* PolicyServiceListRequest::unsafe_arena_release_sorting() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.alerting.public.v202505.PolicyServiceListRequest.sorting)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::kentik::alerting::types::v202506::SortingConfig* temp = _impl_.sorting_;
  _impl_.sorting_ = nullptr;
  return temp;
}
inline ::kentik::alerting::types::v202506::SortingConfig* PolicyServiceListRequest::_internal_mutable_sorting() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.sorting_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::alerting::types::v202506::SortingConfig>(GetArena());
    _impl_.sorting_ = reinterpret_cast<::kentik::alerting::types::v202506::SortingConfig*>(p);
  }
  return _impl_.sorting_;
}
inline ::kentik::alerting::types::v202506::SortingConfig* PolicyServiceListRequest::mutable_sorting() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::kentik::alerting::types::v202506::SortingConfig* _msg = _internal_mutable_sorting();
  // @@protoc_insertion_point(field_mutable:kentik.alerting.public.v202505.PolicyServiceListRequest.sorting)
  return _msg;
}
inline void PolicyServiceListRequest::set_allocated_sorting(::kentik::alerting::types::v202506::SortingConfig* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.sorting_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.sorting_ = reinterpret_cast<::kentik::alerting::types::v202506::SortingConfig*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.alerting.public.v202505.PolicyServiceListRequest.sorting)
}

// .kentik.alerting.public.v202505.PolicyListFilters filters = 3 [json_name = "filters", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool PolicyServiceListRequest::has_filters() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.filters_ != nullptr);
  return value;
}
inline void PolicyServiceListRequest::clear_filters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.filters_ != nullptr) _impl_.filters_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::kentik::alerting::public_::v202505::PolicyListFilters& PolicyServiceListRequest::_internal_filters() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::alerting::public_::v202505::PolicyListFilters* p = _impl_.filters_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::alerting::public_::v202505::PolicyListFilters&>(::kentik::alerting::public_::v202505::_PolicyListFilters_default_instance_);
}
inline const ::kentik::alerting::public_::v202505::PolicyListFilters& PolicyServiceListRequest::filters() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.PolicyServiceListRequest.filters)
  return _internal_filters();
}
inline void PolicyServiceListRequest::unsafe_arena_set_allocated_filters(::kentik::alerting::public_::v202505::PolicyListFilters* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.filters_);
  }
  _impl_.filters_ = reinterpret_cast<::kentik::alerting::public_::v202505::PolicyListFilters*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.alerting.public.v202505.PolicyServiceListRequest.filters)
}
inline ::kentik::alerting::public_::v202505::PolicyListFilters* PolicyServiceListRequest::release_filters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::kentik::alerting::public_::v202505::PolicyListFilters* released = _impl_.filters_;
  _impl_.filters_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::alerting::public_::v202505::PolicyListFilters* PolicyServiceListRequest::unsafe_arena_release_filters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.alerting.public.v202505.PolicyServiceListRequest.filters)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::kentik::alerting::public_::v202505::PolicyListFilters* temp = _impl_.filters_;
  _impl_.filters_ = nullptr;
  return temp;
}
inline ::kentik::alerting::public_::v202505::PolicyListFilters* PolicyServiceListRequest::_internal_mutable_filters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.filters_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::alerting::public_::v202505::PolicyListFilters>(GetArena());
    _impl_.filters_ = reinterpret_cast<::kentik::alerting::public_::v202505::PolicyListFilters*>(p);
  }
  return _impl_.filters_;
}
inline ::kentik::alerting::public_::v202505::PolicyListFilters* PolicyServiceListRequest::mutable_filters() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::kentik::alerting::public_::v202505::PolicyListFilters* _msg = _internal_mutable_filters();
  // @@protoc_insertion_point(field_mutable:kentik.alerting.public.v202505.PolicyServiceListRequest.filters)
  return _msg;
}
inline void PolicyServiceListRequest::set_allocated_filters(::kentik::alerting::public_::v202505::PolicyListFilters* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.filters_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.filters_ = reinterpret_cast<::kentik::alerting::public_::v202505::PolicyListFilters*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.alerting.public.v202505.PolicyServiceListRequest.filters)
}

// -------------------------------------------------------------------

// PolicyListFilters

// repeated .kentik.alerting.public.v202505.Source sources = 1 [json_name = "sources", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int PolicyListFilters::_internal_sources_size() const {
  return _internal_sources().size();
}
inline int PolicyListFilters::sources_size() const {
  return _internal_sources_size();
}
inline ::kentik::alerting::public_::v202505::Source* PolicyListFilters::mutable_sources(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.alerting.public.v202505.PolicyListFilters.sources)
  return _internal_mutable_sources()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::kentik::alerting::public_::v202505::Source>* PolicyListFilters::mutable_sources()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.alerting.public.v202505.PolicyListFilters.sources)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_sources();
}
inline const ::kentik::alerting::public_::v202505::Source& PolicyListFilters::sources(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.PolicyListFilters.sources)
  return _internal_sources().Get(index);
}
inline ::kentik::alerting::public_::v202505::Source* PolicyListFilters::add_sources() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::kentik::alerting::public_::v202505::Source* _add = _internal_mutable_sources()->Add();
  // @@protoc_insertion_point(field_add:kentik.alerting.public.v202505.PolicyListFilters.sources)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::alerting::public_::v202505::Source>& PolicyListFilters::sources() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.alerting.public.v202505.PolicyListFilters.sources)
  return _internal_sources();
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::alerting::public_::v202505::Source>&
PolicyListFilters::_internal_sources() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sources_;
}
inline ::google::protobuf::RepeatedPtrField<::kentik::alerting::public_::v202505::Source>*
PolicyListFilters::_internal_mutable_sources() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.sources_;
}

// repeated string applications = 2 [json_name = "applications", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int PolicyListFilters::_internal_applications_size() const {
  return _internal_applications().size();
}
inline int PolicyListFilters::applications_size() const {
  return _internal_applications_size();
}
inline void PolicyListFilters::clear_applications() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.applications_.Clear();
}
inline std::string* PolicyListFilters::add_applications() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_applications()->Add();
  // @@protoc_insertion_point(field_add_mutable:kentik.alerting.public.v202505.PolicyListFilters.applications)
  return _s;
}
inline const std::string& PolicyListFilters::applications(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.PolicyListFilters.applications)
  return _internal_applications().Get(index);
}
inline std::string* PolicyListFilters::mutable_applications(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.alerting.public.v202505.PolicyListFilters.applications)
  return _internal_mutable_applications()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void PolicyListFilters::set_applications(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_applications()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:kentik.alerting.public.v202505.PolicyListFilters.applications)
}
template <typename Arg_, typename... Args_>
inline void PolicyListFilters::add_applications(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_applications(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:kentik.alerting.public.v202505.PolicyListFilters.applications)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
PolicyListFilters::applications() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.alerting.public.v202505.PolicyListFilters.applications)
  return _internal_applications();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
PolicyListFilters::mutable_applications() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.alerting.public.v202505.PolicyListFilters.applications)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_applications();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
PolicyListFilters::_internal_applications() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.applications_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
PolicyListFilters::_internal_mutable_applications() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.applications_;
}

// repeated string user_ids = 3 [json_name = "userIds", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int PolicyListFilters::_internal_user_ids_size() const {
  return _internal_user_ids().size();
}
inline int PolicyListFilters::user_ids_size() const {
  return _internal_user_ids_size();
}
inline void PolicyListFilters::clear_user_ids() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.user_ids_.Clear();
}
inline std::string* PolicyListFilters::add_user_ids() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_user_ids()->Add();
  // @@protoc_insertion_point(field_add_mutable:kentik.alerting.public.v202505.PolicyListFilters.user_ids)
  return _s;
}
inline const std::string& PolicyListFilters::user_ids(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.PolicyListFilters.user_ids)
  return _internal_user_ids().Get(index);
}
inline std::string* PolicyListFilters::mutable_user_ids(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.alerting.public.v202505.PolicyListFilters.user_ids)
  return _internal_mutable_user_ids()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void PolicyListFilters::set_user_ids(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_user_ids()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:kentik.alerting.public.v202505.PolicyListFilters.user_ids)
}
template <typename Arg_, typename... Args_>
inline void PolicyListFilters::add_user_ids(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_user_ids(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:kentik.alerting.public.v202505.PolicyListFilters.user_ids)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
PolicyListFilters::user_ids() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.alerting.public.v202505.PolicyListFilters.user_ids)
  return _internal_user_ids();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
PolicyListFilters::mutable_user_ids() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.alerting.public.v202505.PolicyListFilters.user_ids)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_user_ids();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
PolicyListFilters::_internal_user_ids() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.user_ids_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
PolicyListFilters::_internal_mutable_user_ids() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.user_ids_;
}

// .kentik.alerting.types.v202303.TimeRange created_at = 4 [json_name = "createdAt", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool PolicyListFilters::has_created_at() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.created_at_ != nullptr);
  return value;
}
inline const ::kentik::alerting::types::v202303::TimeRange& PolicyListFilters::_internal_created_at() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::alerting::types::v202303::TimeRange* p = _impl_.created_at_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::alerting::types::v202303::TimeRange&>(::kentik::alerting::types::v202303::_TimeRange_default_instance_);
}
inline const ::kentik::alerting::types::v202303::TimeRange& PolicyListFilters::created_at() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.PolicyListFilters.created_at)
  return _internal_created_at();
}
inline void PolicyListFilters::unsafe_arena_set_allocated_created_at(::kentik::alerting::types::v202303::TimeRange* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.created_at_);
  }
  _impl_.created_at_ = reinterpret_cast<::kentik::alerting::types::v202303::TimeRange*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.alerting.public.v202505.PolicyListFilters.created_at)
}
inline ::kentik::alerting::types::v202303::TimeRange* PolicyListFilters::release_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::alerting::types::v202303::TimeRange* released = _impl_.created_at_;
  _impl_.created_at_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::alerting::types::v202303::TimeRange* PolicyListFilters::unsafe_arena_release_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.alerting.public.v202505.PolicyListFilters.created_at)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::alerting::types::v202303::TimeRange* temp = _impl_.created_at_;
  _impl_.created_at_ = nullptr;
  return temp;
}
inline ::kentik::alerting::types::v202303::TimeRange* PolicyListFilters::_internal_mutable_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.created_at_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::alerting::types::v202303::TimeRange>(GetArena());
    _impl_.created_at_ = reinterpret_cast<::kentik::alerting::types::v202303::TimeRange*>(p);
  }
  return _impl_.created_at_;
}
inline ::kentik::alerting::types::v202303::TimeRange* PolicyListFilters::mutable_created_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::kentik::alerting::types::v202303::TimeRange* _msg = _internal_mutable_created_at();
  // @@protoc_insertion_point(field_mutable:kentik.alerting.public.v202505.PolicyListFilters.created_at)
  return _msg;
}
inline void PolicyListFilters::set_allocated_created_at(::kentik::alerting::types::v202303::TimeRange* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.created_at_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.created_at_ = reinterpret_cast<::kentik::alerting::types::v202303::TimeRange*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.alerting.public.v202505.PolicyListFilters.created_at)
}

// .kentik.alerting.types.v202303.TimeRange modified_at = 5 [json_name = "modifiedAt", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool PolicyListFilters::has_modified_at() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.modified_at_ != nullptr);
  return value;
}
inline const ::kentik::alerting::types::v202303::TimeRange& PolicyListFilters::_internal_modified_at() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::alerting::types::v202303::TimeRange* p = _impl_.modified_at_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::alerting::types::v202303::TimeRange&>(::kentik::alerting::types::v202303::_TimeRange_default_instance_);
}
inline const ::kentik::alerting::types::v202303::TimeRange& PolicyListFilters::modified_at() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.PolicyListFilters.modified_at)
  return _internal_modified_at();
}
inline void PolicyListFilters::unsafe_arena_set_allocated_modified_at(::kentik::alerting::types::v202303::TimeRange* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.modified_at_);
  }
  _impl_.modified_at_ = reinterpret_cast<::kentik::alerting::types::v202303::TimeRange*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.alerting.public.v202505.PolicyListFilters.modified_at)
}
inline ::kentik::alerting::types::v202303::TimeRange* PolicyListFilters::release_modified_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::kentik::alerting::types::v202303::TimeRange* released = _impl_.modified_at_;
  _impl_.modified_at_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::alerting::types::v202303::TimeRange* PolicyListFilters::unsafe_arena_release_modified_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.alerting.public.v202505.PolicyListFilters.modified_at)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::kentik::alerting::types::v202303::TimeRange* temp = _impl_.modified_at_;
  _impl_.modified_at_ = nullptr;
  return temp;
}
inline ::kentik::alerting::types::v202303::TimeRange* PolicyListFilters::_internal_mutable_modified_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.modified_at_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::alerting::types::v202303::TimeRange>(GetArena());
    _impl_.modified_at_ = reinterpret_cast<::kentik::alerting::types::v202303::TimeRange*>(p);
  }
  return _impl_.modified_at_;
}
inline ::kentik::alerting::types::v202303::TimeRange* PolicyListFilters::mutable_modified_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::kentik::alerting::types::v202303::TimeRange* _msg = _internal_mutable_modified_at();
  // @@protoc_insertion_point(field_mutable:kentik.alerting.public.v202505.PolicyListFilters.modified_at)
  return _msg;
}
inline void PolicyListFilters::set_allocated_modified_at(::kentik::alerting::types::v202303::TimeRange* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.modified_at_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.modified_at_ = reinterpret_cast<::kentik::alerting::types::v202303::TimeRange*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.alerting.public.v202505.PolicyListFilters.modified_at)
}

// -------------------------------------------------------------------

// PolicyServiceListResponse

// .kentik.alerting.types.v202506.PaginationInfo pagination = 1 [json_name = "pagination", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool PolicyServiceListResponse::has_pagination() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pagination_ != nullptr);
  return value;
}
inline const ::kentik::alerting::types::v202506::PaginationInfo& PolicyServiceListResponse::_internal_pagination() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::alerting::types::v202506::PaginationInfo* p = _impl_.pagination_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::alerting::types::v202506::PaginationInfo&>(::kentik::alerting::types::v202506::_PaginationInfo_default_instance_);
}
inline const ::kentik::alerting::types::v202506::PaginationInfo& PolicyServiceListResponse::pagination() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.PolicyServiceListResponse.pagination)
  return _internal_pagination();
}
inline void PolicyServiceListResponse::unsafe_arena_set_allocated_pagination(::kentik::alerting::types::v202506::PaginationInfo* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }
  _impl_.pagination_ = reinterpret_cast<::kentik::alerting::types::v202506::PaginationInfo*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.alerting.public.v202505.PolicyServiceListResponse.pagination)
}
inline ::kentik::alerting::types::v202506::PaginationInfo* PolicyServiceListResponse::release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::alerting::types::v202506::PaginationInfo* released = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::alerting::types::v202506::PaginationInfo* PolicyServiceListResponse::unsafe_arena_release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.alerting.public.v202505.PolicyServiceListResponse.pagination)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::alerting::types::v202506::PaginationInfo* temp = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  return temp;
}
inline ::kentik::alerting::types::v202506::PaginationInfo* PolicyServiceListResponse::_internal_mutable_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pagination_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::alerting::types::v202506::PaginationInfo>(GetArena());
    _impl_.pagination_ = reinterpret_cast<::kentik::alerting::types::v202506::PaginationInfo*>(p);
  }
  return _impl_.pagination_;
}
inline ::kentik::alerting::types::v202506::PaginationInfo* PolicyServiceListResponse::mutable_pagination() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::kentik::alerting::types::v202506::PaginationInfo* _msg = _internal_mutable_pagination();
  // @@protoc_insertion_point(field_mutable:kentik.alerting.public.v202505.PolicyServiceListResponse.pagination)
  return _msg;
}
inline void PolicyServiceListResponse::set_allocated_pagination(::kentik::alerting::types::v202506::PaginationInfo* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.pagination_ = reinterpret_cast<::kentik::alerting::types::v202506::PaginationInfo*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.alerting.public.v202505.PolicyServiceListResponse.pagination)
}

// repeated .kentik.alerting.public.v202505.Policy policies = 2 [json_name = "policies", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int PolicyServiceListResponse::_internal_policies_size() const {
  return _internal_policies().size();
}
inline int PolicyServiceListResponse::policies_size() const {
  return _internal_policies_size();
}
inline void PolicyServiceListResponse::clear_policies() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.policies_.Clear();
}
inline ::kentik::alerting::public_::v202505::Policy* PolicyServiceListResponse::mutable_policies(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.alerting.public.v202505.PolicyServiceListResponse.policies)
  return _internal_mutable_policies()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::kentik::alerting::public_::v202505::Policy>* PolicyServiceListResponse::mutable_policies()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.alerting.public.v202505.PolicyServiceListResponse.policies)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_policies();
}
inline const ::kentik::alerting::public_::v202505::Policy& PolicyServiceListResponse::policies(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.PolicyServiceListResponse.policies)
  return _internal_policies().Get(index);
}
inline ::kentik::alerting::public_::v202505::Policy* PolicyServiceListResponse::add_policies() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::kentik::alerting::public_::v202505::Policy* _add = _internal_mutable_policies()->Add();
  // @@protoc_insertion_point(field_add:kentik.alerting.public.v202505.PolicyServiceListResponse.policies)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::alerting::public_::v202505::Policy>& PolicyServiceListResponse::policies() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.alerting.public.v202505.PolicyServiceListResponse.policies)
  return _internal_policies();
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::alerting::public_::v202505::Policy>&
PolicyServiceListResponse::_internal_policies() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.policies_;
}
inline ::google::protobuf::RepeatedPtrField<::kentik::alerting::public_::v202505::Policy>*
PolicyServiceListResponse::_internal_mutable_policies() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.policies_;
}

// -------------------------------------------------------------------

// PolicyServiceDisableRequest

// .kentik.alerting.public.v202505.PolicyType policy_type = 1 [json_name = "policyType", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void PolicyServiceDisableRequest::clear_policy_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.policy_type_ = 0;
}
inline ::kentik::alerting::public_::v202505::PolicyType PolicyServiceDisableRequest::policy_type() const {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.PolicyServiceDisableRequest.policy_type)
  return _internal_policy_type();
}
inline void PolicyServiceDisableRequest::set_policy_type(::kentik::alerting::public_::v202505::PolicyType value) {
  _internal_set_policy_type(value);
  // @@protoc_insertion_point(field_set:kentik.alerting.public.v202505.PolicyServiceDisableRequest.policy_type)
}
inline ::kentik::alerting::public_::v202505::PolicyType PolicyServiceDisableRequest::_internal_policy_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::kentik::alerting::public_::v202505::PolicyType>(_impl_.policy_type_);
}
inline void PolicyServiceDisableRequest::_internal_set_policy_type(::kentik::alerting::public_::v202505::PolicyType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.policy_type_ = value;
}

// string id = 2 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void PolicyServiceDisableRequest::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& PolicyServiceDisableRequest::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.PolicyServiceDisableRequest.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PolicyServiceDisableRequest::set_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.alerting.public.v202505.PolicyServiceDisableRequest.id)
}
inline std::string* PolicyServiceDisableRequest::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:kentik.alerting.public.v202505.PolicyServiceDisableRequest.id)
  return _s;
}
inline const std::string& PolicyServiceDisableRequest::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void PolicyServiceDisableRequest::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(value, GetArena());
}
inline std::string* PolicyServiceDisableRequest::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* PolicyServiceDisableRequest::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.alerting.public.v202505.PolicyServiceDisableRequest.id)
  return _impl_.id_.Release();
}
inline void PolicyServiceDisableRequest::set_allocated_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.id_.IsDefault()) {
    _impl_.id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.alerting.public.v202505.PolicyServiceDisableRequest.id)
}

// -------------------------------------------------------------------

// PolicyServiceDisableResponse

// .kentik.alerting.public.v202505.Policy policy = 1 [json_name = "policy", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool PolicyServiceDisableResponse::has_policy() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.policy_ != nullptr);
  return value;
}
inline void PolicyServiceDisableResponse::clear_policy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.policy_ != nullptr) _impl_.policy_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::kentik::alerting::public_::v202505::Policy& PolicyServiceDisableResponse::_internal_policy() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::alerting::public_::v202505::Policy* p = _impl_.policy_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::alerting::public_::v202505::Policy&>(::kentik::alerting::public_::v202505::_Policy_default_instance_);
}
inline const ::kentik::alerting::public_::v202505::Policy& PolicyServiceDisableResponse::policy() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.PolicyServiceDisableResponse.policy)
  return _internal_policy();
}
inline void PolicyServiceDisableResponse::unsafe_arena_set_allocated_policy(::kentik::alerting::public_::v202505::Policy* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.policy_);
  }
  _impl_.policy_ = reinterpret_cast<::kentik::alerting::public_::v202505::Policy*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.alerting.public.v202505.PolicyServiceDisableResponse.policy)
}
inline ::kentik::alerting::public_::v202505::Policy* PolicyServiceDisableResponse::release_policy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::alerting::public_::v202505::Policy* released = _impl_.policy_;
  _impl_.policy_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::alerting::public_::v202505::Policy* PolicyServiceDisableResponse::unsafe_arena_release_policy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.alerting.public.v202505.PolicyServiceDisableResponse.policy)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::alerting::public_::v202505::Policy* temp = _impl_.policy_;
  _impl_.policy_ = nullptr;
  return temp;
}
inline ::kentik::alerting::public_::v202505::Policy* PolicyServiceDisableResponse::_internal_mutable_policy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.policy_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::alerting::public_::v202505::Policy>(GetArena());
    _impl_.policy_ = reinterpret_cast<::kentik::alerting::public_::v202505::Policy*>(p);
  }
  return _impl_.policy_;
}
inline ::kentik::alerting::public_::v202505::Policy* PolicyServiceDisableResponse::mutable_policy() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::kentik::alerting::public_::v202505::Policy* _msg = _internal_mutable_policy();
  // @@protoc_insertion_point(field_mutable:kentik.alerting.public.v202505.PolicyServiceDisableResponse.policy)
  return _msg;
}
inline void PolicyServiceDisableResponse::set_allocated_policy(::kentik::alerting::public_::v202505::Policy* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.policy_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.policy_ = reinterpret_cast<::kentik::alerting::public_::v202505::Policy*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.alerting.public.v202505.PolicyServiceDisableResponse.policy)
}

// -------------------------------------------------------------------

// PolicyServiceEnableRequest

// .kentik.alerting.public.v202505.PolicyType policy_type = 1 [json_name = "policyType", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void PolicyServiceEnableRequest::clear_policy_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.policy_type_ = 0;
}
inline ::kentik::alerting::public_::v202505::PolicyType PolicyServiceEnableRequest::policy_type() const {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.PolicyServiceEnableRequest.policy_type)
  return _internal_policy_type();
}
inline void PolicyServiceEnableRequest::set_policy_type(::kentik::alerting::public_::v202505::PolicyType value) {
  _internal_set_policy_type(value);
  // @@protoc_insertion_point(field_set:kentik.alerting.public.v202505.PolicyServiceEnableRequest.policy_type)
}
inline ::kentik::alerting::public_::v202505::PolicyType PolicyServiceEnableRequest::_internal_policy_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::kentik::alerting::public_::v202505::PolicyType>(_impl_.policy_type_);
}
inline void PolicyServiceEnableRequest::_internal_set_policy_type(::kentik::alerting::public_::v202505::PolicyType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.policy_type_ = value;
}

// string id = 2 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void PolicyServiceEnableRequest::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& PolicyServiceEnableRequest::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.PolicyServiceEnableRequest.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PolicyServiceEnableRequest::set_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.alerting.public.v202505.PolicyServiceEnableRequest.id)
}
inline std::string* PolicyServiceEnableRequest::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:kentik.alerting.public.v202505.PolicyServiceEnableRequest.id)
  return _s;
}
inline const std::string& PolicyServiceEnableRequest::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void PolicyServiceEnableRequest::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(value, GetArena());
}
inline std::string* PolicyServiceEnableRequest::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* PolicyServiceEnableRequest::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.alerting.public.v202505.PolicyServiceEnableRequest.id)
  return _impl_.id_.Release();
}
inline void PolicyServiceEnableRequest::set_allocated_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.id_.IsDefault()) {
    _impl_.id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.alerting.public.v202505.PolicyServiceEnableRequest.id)
}

// -------------------------------------------------------------------

// PolicyServiceEnableResponse

// .kentik.alerting.public.v202505.Policy policy = 1 [json_name = "policy", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool PolicyServiceEnableResponse::has_policy() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.policy_ != nullptr);
  return value;
}
inline void PolicyServiceEnableResponse::clear_policy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.policy_ != nullptr) _impl_.policy_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::kentik::alerting::public_::v202505::Policy& PolicyServiceEnableResponse::_internal_policy() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::alerting::public_::v202505::Policy* p = _impl_.policy_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::alerting::public_::v202505::Policy&>(::kentik::alerting::public_::v202505::_Policy_default_instance_);
}
inline const ::kentik::alerting::public_::v202505::Policy& PolicyServiceEnableResponse::policy() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.PolicyServiceEnableResponse.policy)
  return _internal_policy();
}
inline void PolicyServiceEnableResponse::unsafe_arena_set_allocated_policy(::kentik::alerting::public_::v202505::Policy* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.policy_);
  }
  _impl_.policy_ = reinterpret_cast<::kentik::alerting::public_::v202505::Policy*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.alerting.public.v202505.PolicyServiceEnableResponse.policy)
}
inline ::kentik::alerting::public_::v202505::Policy* PolicyServiceEnableResponse::release_policy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::alerting::public_::v202505::Policy* released = _impl_.policy_;
  _impl_.policy_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::alerting::public_::v202505::Policy* PolicyServiceEnableResponse::unsafe_arena_release_policy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.alerting.public.v202505.PolicyServiceEnableResponse.policy)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::alerting::public_::v202505::Policy* temp = _impl_.policy_;
  _impl_.policy_ = nullptr;
  return temp;
}
inline ::kentik::alerting::public_::v202505::Policy* PolicyServiceEnableResponse::_internal_mutable_policy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.policy_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::alerting::public_::v202505::Policy>(GetArena());
    _impl_.policy_ = reinterpret_cast<::kentik::alerting::public_::v202505::Policy*>(p);
  }
  return _impl_.policy_;
}
inline ::kentik::alerting::public_::v202505::Policy* PolicyServiceEnableResponse::mutable_policy() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::kentik::alerting::public_::v202505::Policy* _msg = _internal_mutable_policy();
  // @@protoc_insertion_point(field_mutable:kentik.alerting.public.v202505.PolicyServiceEnableResponse.policy)
  return _msg;
}
inline void PolicyServiceEnableResponse::set_allocated_policy(::kentik::alerting::public_::v202505::Policy* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.policy_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.policy_ = reinterpret_cast<::kentik::alerting::public_::v202505::Policy*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.alerting.public.v202505.PolicyServiceEnableResponse.policy)
}

// -------------------------------------------------------------------

// Policy_PolicyErrorInfo

// .google.protobuf.Timestamp timestamp = 1 [json_name = "timestamp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool Policy_PolicyErrorInfo::has_timestamp() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.timestamp_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& Policy_PolicyErrorInfo::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.timestamp_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& Policy_PolicyErrorInfo::timestamp() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.Policy.PolicyErrorInfo.timestamp)
  return _internal_timestamp();
}
inline void Policy_PolicyErrorInfo::unsafe_arena_set_allocated_timestamp(::google::protobuf::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.timestamp_);
  }
  _impl_.timestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.alerting.public.v202505.Policy.PolicyErrorInfo.timestamp)
}
inline ::google::protobuf::Timestamp* Policy_PolicyErrorInfo::release_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* released = _impl_.timestamp_;
  _impl_.timestamp_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* Policy_PolicyErrorInfo::unsafe_arena_release_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.alerting.public.v202505.Policy.PolicyErrorInfo.timestamp)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* temp = _impl_.timestamp_;
  _impl_.timestamp_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* Policy_PolicyErrorInfo::_internal_mutable_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.timestamp_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.timestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.timestamp_;
}
inline ::google::protobuf::Timestamp* Policy_PolicyErrorInfo::mutable_timestamp() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_timestamp();
  // @@protoc_insertion_point(field_mutable:kentik.alerting.public.v202505.Policy.PolicyErrorInfo.timestamp)
  return _msg;
}
inline void Policy_PolicyErrorInfo::set_allocated_timestamp(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.timestamp_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.timestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.alerting.public.v202505.Policy.PolicyErrorInfo.timestamp)
}

// string description = 2 [json_name = "description", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Policy_PolicyErrorInfo::clear_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.ClearToEmpty();
}
inline const std::string& Policy_PolicyErrorInfo::description() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.Policy.PolicyErrorInfo.description)
  return _internal_description();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Policy_PolicyErrorInfo::set_description(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.alerting.public.v202505.Policy.PolicyErrorInfo.description)
}
inline std::string* Policy_PolicyErrorInfo::mutable_description() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_description();
  // @@protoc_insertion_point(field_mutable:kentik.alerting.public.v202505.Policy.PolicyErrorInfo.description)
  return _s;
}
inline const std::string& Policy_PolicyErrorInfo::_internal_description() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.description_.Get();
}
inline void Policy_PolicyErrorInfo::_internal_set_description(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.Set(value, GetArena());
}
inline std::string* Policy_PolicyErrorInfo::_internal_mutable_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.description_.Mutable( GetArena());
}
inline std::string* Policy_PolicyErrorInfo::release_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.alerting.public.v202505.Policy.PolicyErrorInfo.description)
  return _impl_.description_.Release();
}
inline void Policy_PolicyErrorInfo::set_allocated_description(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.description_.IsDefault()) {
    _impl_.description_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.alerting.public.v202505.Policy.PolicyErrorInfo.description)
}

// -------------------------------------------------------------------

// Policy_PolicyLevel

// .kentik.alerting.types.v202303.Severity severity = 1 [json_name = "severity", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Policy_PolicyLevel::clear_severity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.severity_ = 0;
}
inline ::kentik::alerting::types::v202303::Severity Policy_PolicyLevel::severity() const {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.Policy.PolicyLevel.severity)
  return _internal_severity();
}
inline void Policy_PolicyLevel::set_severity(::kentik::alerting::types::v202303::Severity value) {
  _internal_set_severity(value);
  // @@protoc_insertion_point(field_set:kentik.alerting.public.v202505.Policy.PolicyLevel.severity)
}
inline ::kentik::alerting::types::v202303::Severity Policy_PolicyLevel::_internal_severity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::kentik::alerting::types::v202303::Severity>(_impl_.severity_);
}
inline void Policy_PolicyLevel::_internal_set_severity(::kentik::alerting::types::v202303::Severity value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.severity_ = value;
}

// string description = 2 [json_name = "description", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Policy_PolicyLevel::clear_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.ClearToEmpty();
}
inline const std::string& Policy_PolicyLevel::description() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.Policy.PolicyLevel.description)
  return _internal_description();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Policy_PolicyLevel::set_description(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.alerting.public.v202505.Policy.PolicyLevel.description)
}
inline std::string* Policy_PolicyLevel::mutable_description() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_description();
  // @@protoc_insertion_point(field_mutable:kentik.alerting.public.v202505.Policy.PolicyLevel.description)
  return _s;
}
inline const std::string& Policy_PolicyLevel::_internal_description() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.description_.Get();
}
inline void Policy_PolicyLevel::_internal_set_description(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.Set(value, GetArena());
}
inline std::string* Policy_PolicyLevel::_internal_mutable_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.description_.Mutable( GetArena());
}
inline std::string* Policy_PolicyLevel::release_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.alerting.public.v202505.Policy.PolicyLevel.description)
  return _impl_.description_.Release();
}
inline void Policy_PolicyLevel::set_allocated_description(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.description_.IsDefault()) {
    _impl_.description_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.alerting.public.v202505.Policy.PolicyLevel.description)
}

// bool ack_required = 3 [json_name = "ackRequired", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Policy_PolicyLevel::clear_ack_required() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ack_required_ = false;
}
inline bool Policy_PolicyLevel::ack_required() const {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.Policy.PolicyLevel.ack_required)
  return _internal_ack_required();
}
inline void Policy_PolicyLevel::set_ack_required(bool value) {
  _internal_set_ack_required(value);
  // @@protoc_insertion_point(field_set:kentik.alerting.public.v202505.Policy.PolicyLevel.ack_required)
}
inline bool Policy_PolicyLevel::_internal_ack_required() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ack_required_;
}
inline void Policy_PolicyLevel::_internal_set_ack_required(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ack_required_ = value;
}

// .kentik.alerting.public.v202505.NmsPolicyLevelSettings nms = 4 [json_name = "nms", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool Policy_PolicyLevel::has_nms() const {
  return settings_case() == kNms;
}
inline bool Policy_PolicyLevel::_internal_has_nms() const {
  return settings_case() == kNms;
}
inline void Policy_PolicyLevel::set_has_nms() {
  _impl_._oneof_case_[0] = kNms;
}
inline ::kentik::alerting::public_::v202505::NmsPolicyLevelSettings* Policy_PolicyLevel::release_nms() {
  // @@protoc_insertion_point(field_release:kentik.alerting.public.v202505.Policy.PolicyLevel.nms)
  if (settings_case() == kNms) {
    clear_has_settings();
    auto* temp = _impl_.settings_.nms_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.settings_.nms_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::kentik::alerting::public_::v202505::NmsPolicyLevelSettings& Policy_PolicyLevel::_internal_nms() const {
  return settings_case() == kNms ? *_impl_.settings_.nms_ : reinterpret_cast<::kentik::alerting::public_::v202505::NmsPolicyLevelSettings&>(::kentik::alerting::public_::v202505::_NmsPolicyLevelSettings_default_instance_);
}
inline const ::kentik::alerting::public_::v202505::NmsPolicyLevelSettings& Policy_PolicyLevel::nms() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.Policy.PolicyLevel.nms)
  return _internal_nms();
}
inline ::kentik::alerting::public_::v202505::NmsPolicyLevelSettings* Policy_PolicyLevel::unsafe_arena_release_nms() {
  // @@protoc_insertion_point(field_unsafe_arena_release:kentik.alerting.public.v202505.Policy.PolicyLevel.nms)
  if (settings_case() == kNms) {
    clear_has_settings();
    auto* temp = _impl_.settings_.nms_;
    _impl_.settings_.nms_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Policy_PolicyLevel::unsafe_arena_set_allocated_nms(::kentik::alerting::public_::v202505::NmsPolicyLevelSettings* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_settings();
  if (value) {
    set_has_nms();
    _impl_.settings_.nms_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.alerting.public.v202505.Policy.PolicyLevel.nms)
}
inline ::kentik::alerting::public_::v202505::NmsPolicyLevelSettings* Policy_PolicyLevel::_internal_mutable_nms() {
  if (settings_case() != kNms) {
    clear_settings();
    set_has_nms();
    _impl_.settings_.nms_ =
        ::google::protobuf::Message::DefaultConstruct<::kentik::alerting::public_::v202505::NmsPolicyLevelSettings>(GetArena());
  }
  return _impl_.settings_.nms_;
}
inline ::kentik::alerting::public_::v202505::NmsPolicyLevelSettings* Policy_PolicyLevel::mutable_nms() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::kentik::alerting::public_::v202505::NmsPolicyLevelSettings* _msg = _internal_mutable_nms();
  // @@protoc_insertion_point(field_mutable:kentik.alerting.public.v202505.Policy.PolicyLevel.nms)
  return _msg;
}

// .kentik.alerting.public.v202505.FlowPolicyLevelSettings flow = 5 [json_name = "flow", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool Policy_PolicyLevel::has_flow() const {
  return settings_case() == kFlow;
}
inline bool Policy_PolicyLevel::_internal_has_flow() const {
  return settings_case() == kFlow;
}
inline void Policy_PolicyLevel::set_has_flow() {
  _impl_._oneof_case_[0] = kFlow;
}
inline ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings* Policy_PolicyLevel::release_flow() {
  // @@protoc_insertion_point(field_release:kentik.alerting.public.v202505.Policy.PolicyLevel.flow)
  if (settings_case() == kFlow) {
    clear_has_settings();
    auto* temp = _impl_.settings_.flow_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.settings_.flow_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings& Policy_PolicyLevel::_internal_flow() const {
  return settings_case() == kFlow ? *_impl_.settings_.flow_ : reinterpret_cast<::kentik::alerting::public_::v202505::FlowPolicyLevelSettings&>(::kentik::alerting::public_::v202505::_FlowPolicyLevelSettings_default_instance_);
}
inline const ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings& Policy_PolicyLevel::flow() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.Policy.PolicyLevel.flow)
  return _internal_flow();
}
inline ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings* Policy_PolicyLevel::unsafe_arena_release_flow() {
  // @@protoc_insertion_point(field_unsafe_arena_release:kentik.alerting.public.v202505.Policy.PolicyLevel.flow)
  if (settings_case() == kFlow) {
    clear_has_settings();
    auto* temp = _impl_.settings_.flow_;
    _impl_.settings_.flow_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Policy_PolicyLevel::unsafe_arena_set_allocated_flow(::kentik::alerting::public_::v202505::FlowPolicyLevelSettings* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_settings();
  if (value) {
    set_has_flow();
    _impl_.settings_.flow_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.alerting.public.v202505.Policy.PolicyLevel.flow)
}
inline ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings* Policy_PolicyLevel::_internal_mutable_flow() {
  if (settings_case() != kFlow) {
    clear_settings();
    set_has_flow();
    _impl_.settings_.flow_ =
        ::google::protobuf::Message::DefaultConstruct<::kentik::alerting::public_::v202505::FlowPolicyLevelSettings>(GetArena());
  }
  return _impl_.settings_.flow_;
}
inline ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings* Policy_PolicyLevel::mutable_flow() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::kentik::alerting::public_::v202505::FlowPolicyLevelSettings* _msg = _internal_mutable_flow();
  // @@protoc_insertion_point(field_mutable:kentik.alerting.public.v202505.Policy.PolicyLevel.flow)
  return _msg;
}

// .kentik.alerting.public.v202505.EventPolicyLevelSettings event = 6 [json_name = "event", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool Policy_PolicyLevel::has_event() const {
  return settings_case() == kEvent;
}
inline bool Policy_PolicyLevel::_internal_has_event() const {
  return settings_case() == kEvent;
}
inline void Policy_PolicyLevel::set_has_event() {
  _impl_._oneof_case_[0] = kEvent;
}
inline ::kentik::alerting::public_::v202505::EventPolicyLevelSettings* Policy_PolicyLevel::release_event() {
  // @@protoc_insertion_point(field_release:kentik.alerting.public.v202505.Policy.PolicyLevel.event)
  if (settings_case() == kEvent) {
    clear_has_settings();
    auto* temp = _impl_.settings_.event_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.settings_.event_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::kentik::alerting::public_::v202505::EventPolicyLevelSettings& Policy_PolicyLevel::_internal_event() const {
  return settings_case() == kEvent ? *_impl_.settings_.event_ : reinterpret_cast<::kentik::alerting::public_::v202505::EventPolicyLevelSettings&>(::kentik::alerting::public_::v202505::_EventPolicyLevelSettings_default_instance_);
}
inline const ::kentik::alerting::public_::v202505::EventPolicyLevelSettings& Policy_PolicyLevel::event() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.Policy.PolicyLevel.event)
  return _internal_event();
}
inline ::kentik::alerting::public_::v202505::EventPolicyLevelSettings* Policy_PolicyLevel::unsafe_arena_release_event() {
  // @@protoc_insertion_point(field_unsafe_arena_release:kentik.alerting.public.v202505.Policy.PolicyLevel.event)
  if (settings_case() == kEvent) {
    clear_has_settings();
    auto* temp = _impl_.settings_.event_;
    _impl_.settings_.event_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Policy_PolicyLevel::unsafe_arena_set_allocated_event(::kentik::alerting::public_::v202505::EventPolicyLevelSettings* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_settings();
  if (value) {
    set_has_event();
    _impl_.settings_.event_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.alerting.public.v202505.Policy.PolicyLevel.event)
}
inline ::kentik::alerting::public_::v202505::EventPolicyLevelSettings* Policy_PolicyLevel::_internal_mutable_event() {
  if (settings_case() != kEvent) {
    clear_settings();
    set_has_event();
    _impl_.settings_.event_ =
        ::google::protobuf::Message::DefaultConstruct<::kentik::alerting::public_::v202505::EventPolicyLevelSettings>(GetArena());
  }
  return _impl_.settings_.event_;
}
inline ::kentik::alerting::public_::v202505::EventPolicyLevelSettings* Policy_PolicyLevel::mutable_event() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::kentik::alerting::public_::v202505::EventPolicyLevelSettings* _msg = _internal_mutable_event();
  // @@protoc_insertion_point(field_mutable:kentik.alerting.public.v202505.Policy.PolicyLevel.event)
  return _msg;
}

// repeated .kentik.alerting.public.v202505.NotificationChannelAssociation notifications = 7 [json_name = "notifications", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int Policy_PolicyLevel::_internal_notifications_size() const {
  return _internal_notifications().size();
}
inline int Policy_PolicyLevel::notifications_size() const {
  return _internal_notifications_size();
}
inline ::kentik::alerting::public_::v202505::NotificationChannelAssociation* Policy_PolicyLevel::mutable_notifications(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.alerting.public.v202505.Policy.PolicyLevel.notifications)
  return _internal_mutable_notifications()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::kentik::alerting::public_::v202505::NotificationChannelAssociation>* Policy_PolicyLevel::mutable_notifications()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.alerting.public.v202505.Policy.PolicyLevel.notifications)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_notifications();
}
inline const ::kentik::alerting::public_::v202505::NotificationChannelAssociation& Policy_PolicyLevel::notifications(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.Policy.PolicyLevel.notifications)
  return _internal_notifications().Get(index);
}
inline ::kentik::alerting::public_::v202505::NotificationChannelAssociation* Policy_PolicyLevel::add_notifications() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::kentik::alerting::public_::v202505::NotificationChannelAssociation* _add = _internal_mutable_notifications()->Add();
  // @@protoc_insertion_point(field_add:kentik.alerting.public.v202505.Policy.PolicyLevel.notifications)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::alerting::public_::v202505::NotificationChannelAssociation>& Policy_PolicyLevel::notifications() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.alerting.public.v202505.Policy.PolicyLevel.notifications)
  return _internal_notifications();
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::alerting::public_::v202505::NotificationChannelAssociation>&
Policy_PolicyLevel::_internal_notifications() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.notifications_;
}
inline ::google::protobuf::RepeatedPtrField<::kentik::alerting::public_::v202505::NotificationChannelAssociation>*
Policy_PolicyLevel::_internal_mutable_notifications() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.notifications_;
}

inline bool Policy_PolicyLevel::has_settings() const {
  return settings_case() != SETTINGS_NOT_SET;
}
inline void Policy_PolicyLevel::clear_has_settings() {
  _impl_._oneof_case_[0] = SETTINGS_NOT_SET;
}
inline Policy_PolicyLevel::SettingsCase Policy_PolicyLevel::settings_case() const {
  return Policy_PolicyLevel::SettingsCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// Policy

// .kentik.alerting.public.v202505.Source source = 1 [json_name = "source", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool Policy::has_source() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.source_ != nullptr);
  return value;
}
inline const ::kentik::alerting::public_::v202505::Source& Policy::_internal_source() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::alerting::public_::v202505::Source* p = _impl_.source_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::alerting::public_::v202505::Source&>(::kentik::alerting::public_::v202505::_Source_default_instance_);
}
inline const ::kentik::alerting::public_::v202505::Source& Policy::source() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.Policy.source)
  return _internal_source();
}
inline void Policy::unsafe_arena_set_allocated_source(::kentik::alerting::public_::v202505::Source* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.source_);
  }
  _impl_.source_ = reinterpret_cast<::kentik::alerting::public_::v202505::Source*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.alerting.public.v202505.Policy.source)
}
inline ::kentik::alerting::public_::v202505::Source* Policy::release_source() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::alerting::public_::v202505::Source* released = _impl_.source_;
  _impl_.source_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::alerting::public_::v202505::Source* Policy::unsafe_arena_release_source() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.alerting.public.v202505.Policy.source)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::alerting::public_::v202505::Source* temp = _impl_.source_;
  _impl_.source_ = nullptr;
  return temp;
}
inline ::kentik::alerting::public_::v202505::Source* Policy::_internal_mutable_source() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.source_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::alerting::public_::v202505::Source>(GetArena());
    _impl_.source_ = reinterpret_cast<::kentik::alerting::public_::v202505::Source*>(p);
  }
  return _impl_.source_;
}
inline ::kentik::alerting::public_::v202505::Source* Policy::mutable_source() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::kentik::alerting::public_::v202505::Source* _msg = _internal_mutable_source();
  // @@protoc_insertion_point(field_mutable:kentik.alerting.public.v202505.Policy.source)
  return _msg;
}
inline void Policy::set_allocated_source(::kentik::alerting::public_::v202505::Source* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.source_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.source_ = reinterpret_cast<::kentik::alerting::public_::v202505::Source*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.alerting.public.v202505.Policy.source)
}

// .google.protobuf.Timestamp created_at = 2 [json_name = "createdAt", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool Policy::has_created_at() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.created_at_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& Policy::_internal_created_at() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.created_at_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& Policy::created_at() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.Policy.created_at)
  return _internal_created_at();
}
inline void Policy::unsafe_arena_set_allocated_created_at(::google::protobuf::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.created_at_);
  }
  _impl_.created_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.alerting.public.v202505.Policy.created_at)
}
inline ::google::protobuf::Timestamp* Policy::release_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* released = _impl_.created_at_;
  _impl_.created_at_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* Policy::unsafe_arena_release_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.alerting.public.v202505.Policy.created_at)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* temp = _impl_.created_at_;
  _impl_.created_at_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* Policy::_internal_mutable_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.created_at_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.created_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.created_at_;
}
inline ::google::protobuf::Timestamp* Policy::mutable_created_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_created_at();
  // @@protoc_insertion_point(field_mutable:kentik.alerting.public.v202505.Policy.created_at)
  return _msg;
}
inline void Policy::set_allocated_created_at(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.created_at_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.created_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.alerting.public.v202505.Policy.created_at)
}

// .google.protobuf.Timestamp modified_at = 3 [json_name = "modifiedAt", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool Policy::has_modified_at() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.modified_at_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& Policy::_internal_modified_at() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.modified_at_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& Policy::modified_at() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.Policy.modified_at)
  return _internal_modified_at();
}
inline void Policy::unsafe_arena_set_allocated_modified_at(::google::protobuf::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.modified_at_);
  }
  _impl_.modified_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.alerting.public.v202505.Policy.modified_at)
}
inline ::google::protobuf::Timestamp* Policy::release_modified_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::google::protobuf::Timestamp* released = _impl_.modified_at_;
  _impl_.modified_at_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* Policy::unsafe_arena_release_modified_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.alerting.public.v202505.Policy.modified_at)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::google::protobuf::Timestamp* temp = _impl_.modified_at_;
  _impl_.modified_at_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* Policy::_internal_mutable_modified_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.modified_at_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.modified_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.modified_at_;
}
inline ::google::protobuf::Timestamp* Policy::mutable_modified_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_modified_at();
  // @@protoc_insertion_point(field_mutable:kentik.alerting.public.v202505.Policy.modified_at)
  return _msg;
}
inline void Policy::set_allocated_modified_at(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.modified_at_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.modified_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.alerting.public.v202505.Policy.modified_at)
}

// string created_by = 4 [json_name = "createdBy", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Policy::clear_created_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_by_.ClearToEmpty();
}
inline const std::string& Policy::created_by() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.Policy.created_by)
  return _internal_created_by();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Policy::set_created_by(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_by_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.alerting.public.v202505.Policy.created_by)
}
inline std::string* Policy::mutable_created_by() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_created_by();
  // @@protoc_insertion_point(field_mutable:kentik.alerting.public.v202505.Policy.created_by)
  return _s;
}
inline const std::string& Policy::_internal_created_by() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.created_by_.Get();
}
inline void Policy::_internal_set_created_by(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_by_.Set(value, GetArena());
}
inline std::string* Policy::_internal_mutable_created_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.created_by_.Mutable( GetArena());
}
inline std::string* Policy::release_created_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.alerting.public.v202505.Policy.created_by)
  return _impl_.created_by_.Release();
}
inline void Policy::set_allocated_created_by(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_by_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.created_by_.IsDefault()) {
    _impl_.created_by_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.alerting.public.v202505.Policy.created_by)
}

// string modified_by = 5 [json_name = "modifiedBy", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Policy::clear_modified_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.modified_by_.ClearToEmpty();
}
inline const std::string& Policy::modified_by() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.Policy.modified_by)
  return _internal_modified_by();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Policy::set_modified_by(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.modified_by_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.alerting.public.v202505.Policy.modified_by)
}
inline std::string* Policy::mutable_modified_by() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_modified_by();
  // @@protoc_insertion_point(field_mutable:kentik.alerting.public.v202505.Policy.modified_by)
  return _s;
}
inline const std::string& Policy::_internal_modified_by() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.modified_by_.Get();
}
inline void Policy::_internal_set_modified_by(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.modified_by_.Set(value, GetArena());
}
inline std::string* Policy::_internal_mutable_modified_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.modified_by_.Mutable( GetArena());
}
inline std::string* Policy::release_modified_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.alerting.public.v202505.Policy.modified_by)
  return _impl_.modified_by_.Release();
}
inline void Policy::set_allocated_modified_by(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.modified_by_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.modified_by_.IsDefault()) {
    _impl_.modified_by_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.alerting.public.v202505.Policy.modified_by)
}

// string name = 6 [json_name = "name", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Policy::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& Policy::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.Policy.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Policy::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.alerting.public.v202505.Policy.name)
}
inline std::string* Policy::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:kentik.alerting.public.v202505.Policy.name)
  return _s;
}
inline const std::string& Policy::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void Policy::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* Policy::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* Policy::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.alerting.public.v202505.Policy.name)
  return _impl_.name_.Release();
}
inline void Policy::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.alerting.public.v202505.Policy.name)
}

// string description = 7 [json_name = "description", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Policy::clear_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.ClearToEmpty();
}
inline const std::string& Policy::description() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.Policy.description)
  return _internal_description();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Policy::set_description(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.alerting.public.v202505.Policy.description)
}
inline std::string* Policy::mutable_description() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_description();
  // @@protoc_insertion_point(field_mutable:kentik.alerting.public.v202505.Policy.description)
  return _s;
}
inline const std::string& Policy::_internal_description() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.description_.Get();
}
inline void Policy::_internal_set_description(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.Set(value, GetArena());
}
inline std::string* Policy::_internal_mutable_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.description_.Mutable( GetArena());
}
inline std::string* Policy::release_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.alerting.public.v202505.Policy.description)
  return _impl_.description_.Release();
}
inline void Policy::set_allocated_description(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.description_.IsDefault()) {
    _impl_.description_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.alerting.public.v202505.Policy.description)
}

// optional bool enabled = 8 [json_name = "enabled", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool Policy::has_enabled() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void Policy::clear_enabled() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enabled_ = false;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline bool Policy::enabled() const {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.Policy.enabled)
  return _internal_enabled();
}
inline void Policy::set_enabled(bool value) {
  _internal_set_enabled(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:kentik.alerting.public.v202505.Policy.enabled)
}
inline bool Policy::_internal_enabled() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.enabled_;
}
inline void Policy::_internal_set_enabled(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enabled_ = value;
}

// repeated .kentik.alerting.public.v202505.Policy.PolicyLevel levels = 10 [json_name = "levels", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int Policy::_internal_levels_size() const {
  return _internal_levels().size();
}
inline int Policy::levels_size() const {
  return _internal_levels_size();
}
inline void Policy::clear_levels() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.levels_.Clear();
}
inline ::kentik::alerting::public_::v202505::Policy_PolicyLevel* Policy::mutable_levels(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.alerting.public.v202505.Policy.levels)
  return _internal_mutable_levels()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::kentik::alerting::public_::v202505::Policy_PolicyLevel>* Policy::mutable_levels()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.alerting.public.v202505.Policy.levels)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_levels();
}
inline const ::kentik::alerting::public_::v202505::Policy_PolicyLevel& Policy::levels(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.Policy.levels)
  return _internal_levels().Get(index);
}
inline ::kentik::alerting::public_::v202505::Policy_PolicyLevel* Policy::add_levels() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::kentik::alerting::public_::v202505::Policy_PolicyLevel* _add = _internal_mutable_levels()->Add();
  // @@protoc_insertion_point(field_add:kentik.alerting.public.v202505.Policy.levels)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::alerting::public_::v202505::Policy_PolicyLevel>& Policy::levels() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.alerting.public.v202505.Policy.levels)
  return _internal_levels();
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::alerting::public_::v202505::Policy_PolicyLevel>&
Policy::_internal_levels() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.levels_;
}
inline ::google::protobuf::RepeatedPtrField<::kentik::alerting::public_::v202505::Policy_PolicyLevel>*
Policy::_internal_mutable_levels() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.levels_;
}

// .kentik.alerting.public.v202505.FlowPolicySettings flow = 11 [json_name = "flow", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool Policy::has_flow() const {
  return settings_case() == kFlow;
}
inline bool Policy::_internal_has_flow() const {
  return settings_case() == kFlow;
}
inline void Policy::set_has_flow() {
  _impl_._oneof_case_[0] = kFlow;
}
inline ::kentik::alerting::public_::v202505::FlowPolicySettings* Policy::release_flow() {
  // @@protoc_insertion_point(field_release:kentik.alerting.public.v202505.Policy.flow)
  if (settings_case() == kFlow) {
    clear_has_settings();
    auto* temp = _impl_.settings_.flow_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.settings_.flow_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::kentik::alerting::public_::v202505::FlowPolicySettings& Policy::_internal_flow() const {
  return settings_case() == kFlow ? *_impl_.settings_.flow_ : reinterpret_cast<::kentik::alerting::public_::v202505::FlowPolicySettings&>(::kentik::alerting::public_::v202505::_FlowPolicySettings_default_instance_);
}
inline const ::kentik::alerting::public_::v202505::FlowPolicySettings& Policy::flow() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.Policy.flow)
  return _internal_flow();
}
inline ::kentik::alerting::public_::v202505::FlowPolicySettings* Policy::unsafe_arena_release_flow() {
  // @@protoc_insertion_point(field_unsafe_arena_release:kentik.alerting.public.v202505.Policy.flow)
  if (settings_case() == kFlow) {
    clear_has_settings();
    auto* temp = _impl_.settings_.flow_;
    _impl_.settings_.flow_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Policy::unsafe_arena_set_allocated_flow(::kentik::alerting::public_::v202505::FlowPolicySettings* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_settings();
  if (value) {
    set_has_flow();
    _impl_.settings_.flow_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.alerting.public.v202505.Policy.flow)
}
inline ::kentik::alerting::public_::v202505::FlowPolicySettings* Policy::_internal_mutable_flow() {
  if (settings_case() != kFlow) {
    clear_settings();
    set_has_flow();
    _impl_.settings_.flow_ =
        ::google::protobuf::Message::DefaultConstruct<::kentik::alerting::public_::v202505::FlowPolicySettings>(GetArena());
  }
  return _impl_.settings_.flow_;
}
inline ::kentik::alerting::public_::v202505::FlowPolicySettings* Policy::mutable_flow() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::kentik::alerting::public_::v202505::FlowPolicySettings* _msg = _internal_mutable_flow();
  // @@protoc_insertion_point(field_mutable:kentik.alerting.public.v202505.Policy.flow)
  return _msg;
}

// .kentik.alerting.public.v202505.NmsPolicySettings nms = 12 [json_name = "nms", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool Policy::has_nms() const {
  return settings_case() == kNms;
}
inline bool Policy::_internal_has_nms() const {
  return settings_case() == kNms;
}
inline void Policy::set_has_nms() {
  _impl_._oneof_case_[0] = kNms;
}
inline ::kentik::alerting::public_::v202505::NmsPolicySettings* Policy::release_nms() {
  // @@protoc_insertion_point(field_release:kentik.alerting.public.v202505.Policy.nms)
  if (settings_case() == kNms) {
    clear_has_settings();
    auto* temp = _impl_.settings_.nms_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.settings_.nms_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::kentik::alerting::public_::v202505::NmsPolicySettings& Policy::_internal_nms() const {
  return settings_case() == kNms ? *_impl_.settings_.nms_ : reinterpret_cast<::kentik::alerting::public_::v202505::NmsPolicySettings&>(::kentik::alerting::public_::v202505::_NmsPolicySettings_default_instance_);
}
inline const ::kentik::alerting::public_::v202505::NmsPolicySettings& Policy::nms() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.Policy.nms)
  return _internal_nms();
}
inline ::kentik::alerting::public_::v202505::NmsPolicySettings* Policy::unsafe_arena_release_nms() {
  // @@protoc_insertion_point(field_unsafe_arena_release:kentik.alerting.public.v202505.Policy.nms)
  if (settings_case() == kNms) {
    clear_has_settings();
    auto* temp = _impl_.settings_.nms_;
    _impl_.settings_.nms_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Policy::unsafe_arena_set_allocated_nms(::kentik::alerting::public_::v202505::NmsPolicySettings* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_settings();
  if (value) {
    set_has_nms();
    _impl_.settings_.nms_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.alerting.public.v202505.Policy.nms)
}
inline ::kentik::alerting::public_::v202505::NmsPolicySettings* Policy::_internal_mutable_nms() {
  if (settings_case() != kNms) {
    clear_settings();
    set_has_nms();
    _impl_.settings_.nms_ =
        ::google::protobuf::Message::DefaultConstruct<::kentik::alerting::public_::v202505::NmsPolicySettings>(GetArena());
  }
  return _impl_.settings_.nms_;
}
inline ::kentik::alerting::public_::v202505::NmsPolicySettings* Policy::mutable_nms() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::kentik::alerting::public_::v202505::NmsPolicySettings* _msg = _internal_mutable_nms();
  // @@protoc_insertion_point(field_mutable:kentik.alerting.public.v202505.Policy.nms)
  return _msg;
}

// .kentik.alerting.public.v202505.EventPolicySettings event = 13 [json_name = "event", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool Policy::has_event() const {
  return settings_case() == kEvent;
}
inline bool Policy::_internal_has_event() const {
  return settings_case() == kEvent;
}
inline void Policy::set_has_event() {
  _impl_._oneof_case_[0] = kEvent;
}
inline ::kentik::alerting::public_::v202505::EventPolicySettings* Policy::release_event() {
  // @@protoc_insertion_point(field_release:kentik.alerting.public.v202505.Policy.event)
  if (settings_case() == kEvent) {
    clear_has_settings();
    auto* temp = _impl_.settings_.event_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.settings_.event_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::kentik::alerting::public_::v202505::EventPolicySettings& Policy::_internal_event() const {
  return settings_case() == kEvent ? *_impl_.settings_.event_ : reinterpret_cast<::kentik::alerting::public_::v202505::EventPolicySettings&>(::kentik::alerting::public_::v202505::_EventPolicySettings_default_instance_);
}
inline const ::kentik::alerting::public_::v202505::EventPolicySettings& Policy::event() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.Policy.event)
  return _internal_event();
}
inline ::kentik::alerting::public_::v202505::EventPolicySettings* Policy::unsafe_arena_release_event() {
  // @@protoc_insertion_point(field_unsafe_arena_release:kentik.alerting.public.v202505.Policy.event)
  if (settings_case() == kEvent) {
    clear_has_settings();
    auto* temp = _impl_.settings_.event_;
    _impl_.settings_.event_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Policy::unsafe_arena_set_allocated_event(::kentik::alerting::public_::v202505::EventPolicySettings* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_settings();
  if (value) {
    set_has_event();
    _impl_.settings_.event_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.alerting.public.v202505.Policy.event)
}
inline ::kentik::alerting::public_::v202505::EventPolicySettings* Policy::_internal_mutable_event() {
  if (settings_case() != kEvent) {
    clear_settings();
    set_has_event();
    _impl_.settings_.event_ =
        ::google::protobuf::Message::DefaultConstruct<::kentik::alerting::public_::v202505::EventPolicySettings>(GetArena());
  }
  return _impl_.settings_.event_;
}
inline ::kentik::alerting::public_::v202505::EventPolicySettings* Policy::mutable_event() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::kentik::alerting::public_::v202505::EventPolicySettings* _msg = _internal_mutable_event();
  // @@protoc_insertion_point(field_mutable:kentik.alerting.public.v202505.Policy.event)
  return _msg;
}

// bool has_errors = 14 [json_name = "hasErrors", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Policy::clear_has_errors() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.has_errors_ = false;
}
inline bool Policy::has_errors() const {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.Policy.has_errors)
  return _internal_has_errors();
}
inline void Policy::set_has_errors(bool value) {
  _internal_set_has_errors(value);
  // @@protoc_insertion_point(field_set:kentik.alerting.public.v202505.Policy.has_errors)
}
inline bool Policy::_internal_has_errors() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.has_errors_;
}
inline void Policy::_internal_set_has_errors(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.has_errors_ = value;
}

// .kentik.alerting.public.v202505.Policy.PolicyErrorInfo last_error = 15 [json_name = "lastError", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool Policy::has_last_error() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.last_error_ != nullptr);
  return value;
}
inline void Policy::clear_last_error() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.last_error_ != nullptr) _impl_.last_error_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const ::kentik::alerting::public_::v202505::Policy_PolicyErrorInfo& Policy::_internal_last_error() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::alerting::public_::v202505::Policy_PolicyErrorInfo* p = _impl_.last_error_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::alerting::public_::v202505::Policy_PolicyErrorInfo&>(::kentik::alerting::public_::v202505::_Policy_PolicyErrorInfo_default_instance_);
}
inline const ::kentik::alerting::public_::v202505::Policy_PolicyErrorInfo& Policy::last_error() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.Policy.last_error)
  return _internal_last_error();
}
inline void Policy::unsafe_arena_set_allocated_last_error(::kentik::alerting::public_::v202505::Policy_PolicyErrorInfo* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.last_error_);
  }
  _impl_.last_error_ = reinterpret_cast<::kentik::alerting::public_::v202505::Policy_PolicyErrorInfo*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.alerting.public.v202505.Policy.last_error)
}
inline ::kentik::alerting::public_::v202505::Policy_PolicyErrorInfo* Policy::release_last_error() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::kentik::alerting::public_::v202505::Policy_PolicyErrorInfo* released = _impl_.last_error_;
  _impl_.last_error_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::alerting::public_::v202505::Policy_PolicyErrorInfo* Policy::unsafe_arena_release_last_error() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.alerting.public.v202505.Policy.last_error)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::kentik::alerting::public_::v202505::Policy_PolicyErrorInfo* temp = _impl_.last_error_;
  _impl_.last_error_ = nullptr;
  return temp;
}
inline ::kentik::alerting::public_::v202505::Policy_PolicyErrorInfo* Policy::_internal_mutable_last_error() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.last_error_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::alerting::public_::v202505::Policy_PolicyErrorInfo>(GetArena());
    _impl_.last_error_ = reinterpret_cast<::kentik::alerting::public_::v202505::Policy_PolicyErrorInfo*>(p);
  }
  return _impl_.last_error_;
}
inline ::kentik::alerting::public_::v202505::Policy_PolicyErrorInfo* Policy::mutable_last_error() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::kentik::alerting::public_::v202505::Policy_PolicyErrorInfo* _msg = _internal_mutable_last_error();
  // @@protoc_insertion_point(field_mutable:kentik.alerting.public.v202505.Policy.last_error)
  return _msg;
}
inline void Policy::set_allocated_last_error(::kentik::alerting::public_::v202505::Policy_PolicyErrorInfo* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.last_error_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.last_error_ = reinterpret_cast<::kentik::alerting::public_::v202505::Policy_PolicyErrorInfo*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.alerting.public.v202505.Policy.last_error)
}

inline bool Policy::has_settings() const {
  return settings_case() != SETTINGS_NOT_SET;
}
inline void Policy::clear_has_settings() {
  _impl_._oneof_case_[0] = SETTINGS_NOT_SET;
}
inline Policy::SettingsCase Policy::settings_case() const {
  return Policy::SettingsCase(_impl_._oneof_case_[0]);
}
#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v202505
}  // namespace public_
}  // namespace alerting
}  // namespace kentik


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // kentik_2falerting_2fpublic_2fv202505_2fpolicy_2eproto_2epb_2eh
