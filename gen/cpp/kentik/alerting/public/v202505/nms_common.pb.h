// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: kentik/alerting/public/v202505/nms_common.proto
// Protobuf C++ Version: 5.29.3

#ifndef kentik_2falerting_2fpublic_2fv202505_2fnms_5fcommon_2eproto_2epb_2eh
#define kentik_2falerting_2fpublic_2fv202505_2fnms_5fcommon_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "google/api/field_behavior.pb.h"
#include "protoc-gen-openapiv2/options/annotations.pb.h"
#include "kentik/core/v202303/annotations.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_kentik_2falerting_2fpublic_2fv202505_2fnms_5fcommon_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_kentik_2falerting_2fpublic_2fv202505_2fnms_5fcommon_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_kentik_2falerting_2fpublic_2fv202505_2fnms_5fcommon_2eproto;
namespace kentik {
namespace alerting {
namespace public_ {
namespace v202505 {
class NmsActivateOrClearConditions;
struct NmsActivateOrClearConditionsDefaultTypeInternal;
extern NmsActivateOrClearConditionsDefaultTypeInternal _NmsActivateOrClearConditions_default_instance_;
class NmsCondition;
struct NmsConditionDefaultTypeInternal;
extern NmsConditionDefaultTypeInternal _NmsCondition_default_instance_;
class NmsConditionGroup;
struct NmsConditionGroupDefaultTypeInternal;
extern NmsConditionGroupDefaultTypeInternal _NmsConditionGroup_default_instance_;
class NmsStateChangeCondition;
struct NmsStateChangeConditionDefaultTypeInternal;
extern NmsStateChangeConditionDefaultTypeInternal _NmsStateChangeCondition_default_instance_;
class NmsStateSet;
struct NmsStateSetDefaultTypeInternal;
extern NmsStateSetDefaultTypeInternal _NmsStateSet_default_instance_;
class NmsThresholdCondition;
struct NmsThresholdConditionDefaultTypeInternal;
extern NmsThresholdConditionDefaultTypeInternal _NmsThresholdCondition_default_instance_;
}  // namespace v202505
}  // namespace public_
}  // namespace alerting
}  // namespace kentik
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace kentik {
namespace alerting {
namespace public_ {
namespace v202505 {
enum NmsConditionConnector : int {
  NMS_CONDITION_CONNECTOR_UNSPECIFIED = 0,
  NMS_CONDITION_CONNECTOR_ANY = 1,
  NMS_CONDITION_CONNECTOR_ALL = 2,
  NmsConditionConnector_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  NmsConditionConnector_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool NmsConditionConnector_IsValid(int value);
extern const uint32_t NmsConditionConnector_internal_data_[];
constexpr NmsConditionConnector NmsConditionConnector_MIN = static_cast<NmsConditionConnector>(0);
constexpr NmsConditionConnector NmsConditionConnector_MAX = static_cast<NmsConditionConnector>(2);
constexpr int NmsConditionConnector_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor*
NmsConditionConnector_descriptor();
template <typename T>
const std::string& NmsConditionConnector_Name(T value) {
  static_assert(std::is_same<T, NmsConditionConnector>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to NmsConditionConnector_Name().");
  return NmsConditionConnector_Name(static_cast<NmsConditionConnector>(value));
}
template <>
inline const std::string& NmsConditionConnector_Name(NmsConditionConnector value) {
  return ::google::protobuf::internal::NameOfDenseEnum<NmsConditionConnector_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool NmsConditionConnector_Parse(absl::string_view name, NmsConditionConnector* value) {
  return ::google::protobuf::internal::ParseNamedEnum<NmsConditionConnector>(
      NmsConditionConnector_descriptor(), name, value);
}
enum NmsConditionOperator : int {
  NMS_CONDITION_OPERATOR_UNSPECIFIED = 0,
  NMS_CONDITION_OPERATOR_EQUALS = 1,
  NMS_CONDITION_OPERATOR_LESS_THAN = 2,
  NMS_CONDITION_OPERATOR_GREATER_THAN = 3,
  NMS_CONDITION_OPERATOR_LESS_THAN_OR_EQUALS = 4,
  NMS_CONDITION_OPERATOR_GREATER_THAN_OR_EQUALS = 5,
  NmsConditionOperator_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  NmsConditionOperator_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool NmsConditionOperator_IsValid(int value);
extern const uint32_t NmsConditionOperator_internal_data_[];
constexpr NmsConditionOperator NmsConditionOperator_MIN = static_cast<NmsConditionOperator>(0);
constexpr NmsConditionOperator NmsConditionOperator_MAX = static_cast<NmsConditionOperator>(5);
constexpr int NmsConditionOperator_ARRAYSIZE = 5 + 1;
const ::google::protobuf::EnumDescriptor*
NmsConditionOperator_descriptor();
template <typename T>
const std::string& NmsConditionOperator_Name(T value) {
  static_assert(std::is_same<T, NmsConditionOperator>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to NmsConditionOperator_Name().");
  return NmsConditionOperator_Name(static_cast<NmsConditionOperator>(value));
}
template <>
inline const std::string& NmsConditionOperator_Name(NmsConditionOperator value) {
  return ::google::protobuf::internal::NameOfDenseEnum<NmsConditionOperator_descriptor,
                                                 0, 5>(
      static_cast<int>(value));
}
inline bool NmsConditionOperator_Parse(absl::string_view name, NmsConditionOperator* value) {
  return ::google::protobuf::internal::ParseNamedEnum<NmsConditionOperator>(
      NmsConditionOperator_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class NmsThresholdCondition final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.alerting.public.v202505.NmsThresholdCondition) */ {
 public:
  inline NmsThresholdCondition() : NmsThresholdCondition(nullptr) {}
  ~NmsThresholdCondition() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(NmsThresholdCondition* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(NmsThresholdCondition));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NmsThresholdCondition(
      ::google::protobuf::internal::ConstantInitialized);

  inline NmsThresholdCondition(const NmsThresholdCondition& from) : NmsThresholdCondition(nullptr, from) {}
  inline NmsThresholdCondition(NmsThresholdCondition&& from) noexcept
      : NmsThresholdCondition(nullptr, std::move(from)) {}
  inline NmsThresholdCondition& operator=(const NmsThresholdCondition& from) {
    CopyFrom(from);
    return *this;
  }
  inline NmsThresholdCondition& operator=(NmsThresholdCondition&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NmsThresholdCondition& default_instance() {
    return *internal_default_instance();
  }
  static inline const NmsThresholdCondition* internal_default_instance() {
    return reinterpret_cast<const NmsThresholdCondition*>(
        &_NmsThresholdCondition_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(NmsThresholdCondition& a, NmsThresholdCondition& b) { a.Swap(&b); }
  inline void Swap(NmsThresholdCondition* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NmsThresholdCondition* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NmsThresholdCondition* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<NmsThresholdCondition>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NmsThresholdCondition& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NmsThresholdCondition& from) { NmsThresholdCondition::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(NmsThresholdCondition* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.alerting.public.v202505.NmsThresholdCondition"; }

 protected:
  explicit NmsThresholdCondition(::google::protobuf::Arena* arena);
  NmsThresholdCondition(::google::protobuf::Arena* arena, const NmsThresholdCondition& from);
  NmsThresholdCondition(::google::protobuf::Arena* arena, NmsThresholdCondition&& from) noexcept
      : NmsThresholdCondition(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kConditionValueFieldNumber = 2,
    kOperatorFieldNumber = 1,
  };
  // string condition_value = 2 [json_name = "conditionValue"];
  void clear_condition_value() ;
  const std::string& condition_value() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_condition_value(Arg_&& arg, Args_... args);
  std::string* mutable_condition_value();
  PROTOBUF_NODISCARD std::string* release_condition_value();
  void set_allocated_condition_value(std::string* value);

  private:
  const std::string& _internal_condition_value() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_condition_value(
      const std::string& value);
  std::string* _internal_mutable_condition_value();

  public:
  // .kentik.alerting.public.v202505.NmsConditionOperator operator = 1 [json_name = "operator"];
  void clear_operator_() ;
  ::kentik::alerting::public_::v202505::NmsConditionOperator operator_() const;
  void set_operator_(::kentik::alerting::public_::v202505::NmsConditionOperator value);

  private:
  ::kentik::alerting::public_::v202505::NmsConditionOperator _internal_operator_() const;
  void _internal_set_operator_(::kentik::alerting::public_::v202505::NmsConditionOperator value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.alerting.public.v202505.NmsThresholdCondition)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      76, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const NmsThresholdCondition& from_msg);
    ::google::protobuf::internal::ArenaStringPtr condition_value_;
    int operator__;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2falerting_2fpublic_2fv202505_2fnms_5fcommon_2eproto;
};
// -------------------------------------------------------------------

class NmsStateSet final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.alerting.public.v202505.NmsStateSet) */ {
 public:
  inline NmsStateSet() : NmsStateSet(nullptr) {}
  ~NmsStateSet() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(NmsStateSet* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(NmsStateSet));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NmsStateSet(
      ::google::protobuf::internal::ConstantInitialized);

  inline NmsStateSet(const NmsStateSet& from) : NmsStateSet(nullptr, from) {}
  inline NmsStateSet(NmsStateSet&& from) noexcept
      : NmsStateSet(nullptr, std::move(from)) {}
  inline NmsStateSet& operator=(const NmsStateSet& from) {
    CopyFrom(from);
    return *this;
  }
  inline NmsStateSet& operator=(NmsStateSet&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NmsStateSet& default_instance() {
    return *internal_default_instance();
  }
  static inline const NmsStateSet* internal_default_instance() {
    return reinterpret_cast<const NmsStateSet*>(
        &_NmsStateSet_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(NmsStateSet& a, NmsStateSet& b) { a.Swap(&b); }
  inline void Swap(NmsStateSet* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NmsStateSet* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NmsStateSet* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<NmsStateSet>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NmsStateSet& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NmsStateSet& from) { NmsStateSet::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(NmsStateSet* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.alerting.public.v202505.NmsStateSet"; }

 protected:
  explicit NmsStateSet(::google::protobuf::Arena* arena);
  NmsStateSet(::google::protobuf::Arena* arena, const NmsStateSet& from);
  NmsStateSet(::google::protobuf::Arena* arena, NmsStateSet&& from) noexcept
      : NmsStateSet(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kStatesFieldNumber = 2,
    kNotFieldNumber = 1,
  };
  // repeated string states = 2 [json_name = "states"];
  int states_size() const;
  private:
  int _internal_states_size() const;

  public:
  void clear_states() ;
  const std::string& states(int index) const;
  std::string* mutable_states(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_states(int index, Arg_&& value, Args_... args);
  std::string* add_states();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_states(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& states() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_states();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_states() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_states();

  public:
  // bool not = 1 [json_name = "not"];
  void clear_not_() ;
  bool not_() const;
  void set_not_(bool value);

  private:
  bool _internal_not_() const;
  void _internal_set_not_(bool value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.alerting.public.v202505.NmsStateSet)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      57, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const NmsStateSet& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> states_;
    bool not__;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2falerting_2fpublic_2fv202505_2fnms_5fcommon_2eproto;
};
// -------------------------------------------------------------------

class NmsStateChangeCondition final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.alerting.public.v202505.NmsStateChangeCondition) */ {
 public:
  inline NmsStateChangeCondition() : NmsStateChangeCondition(nullptr) {}
  ~NmsStateChangeCondition() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(NmsStateChangeCondition* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(NmsStateChangeCondition));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NmsStateChangeCondition(
      ::google::protobuf::internal::ConstantInitialized);

  inline NmsStateChangeCondition(const NmsStateChangeCondition& from) : NmsStateChangeCondition(nullptr, from) {}
  inline NmsStateChangeCondition(NmsStateChangeCondition&& from) noexcept
      : NmsStateChangeCondition(nullptr, std::move(from)) {}
  inline NmsStateChangeCondition& operator=(const NmsStateChangeCondition& from) {
    CopyFrom(from);
    return *this;
  }
  inline NmsStateChangeCondition& operator=(NmsStateChangeCondition&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NmsStateChangeCondition& default_instance() {
    return *internal_default_instance();
  }
  static inline const NmsStateChangeCondition* internal_default_instance() {
    return reinterpret_cast<const NmsStateChangeCondition*>(
        &_NmsStateChangeCondition_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(NmsStateChangeCondition& a, NmsStateChangeCondition& b) { a.Swap(&b); }
  inline void Swap(NmsStateChangeCondition* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NmsStateChangeCondition* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NmsStateChangeCondition* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<NmsStateChangeCondition>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NmsStateChangeCondition& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NmsStateChangeCondition& from) { NmsStateChangeCondition::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(NmsStateChangeCondition* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.alerting.public.v202505.NmsStateChangeCondition"; }

 protected:
  explicit NmsStateChangeCondition(::google::protobuf::Arena* arena);
  NmsStateChangeCondition(::google::protobuf::Arena* arena, const NmsStateChangeCondition& from);
  NmsStateChangeCondition(::google::protobuf::Arena* arena, NmsStateChangeCondition&& from) noexcept
      : NmsStateChangeCondition(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFromFieldNumber = 1,
    kToFieldNumber = 2,
  };
  // .kentik.alerting.public.v202505.NmsStateSet from = 1 [json_name = "from"];
  bool has_from() const;
  void clear_from() ;
  const ::kentik::alerting::public_::v202505::NmsStateSet& from() const;
  PROTOBUF_NODISCARD ::kentik::alerting::public_::v202505::NmsStateSet* release_from();
  ::kentik::alerting::public_::v202505::NmsStateSet* mutable_from();
  void set_allocated_from(::kentik::alerting::public_::v202505::NmsStateSet* value);
  void unsafe_arena_set_allocated_from(::kentik::alerting::public_::v202505::NmsStateSet* value);
  ::kentik::alerting::public_::v202505::NmsStateSet* unsafe_arena_release_from();

  private:
  const ::kentik::alerting::public_::v202505::NmsStateSet& _internal_from() const;
  ::kentik::alerting::public_::v202505::NmsStateSet* _internal_mutable_from();

  public:
  // .kentik.alerting.public.v202505.NmsStateSet to = 2 [json_name = "to"];
  bool has_to() const;
  void clear_to() ;
  const ::kentik::alerting::public_::v202505::NmsStateSet& to() const;
  PROTOBUF_NODISCARD ::kentik::alerting::public_::v202505::NmsStateSet* release_to();
  ::kentik::alerting::public_::v202505::NmsStateSet* mutable_to();
  void set_allocated_to(::kentik::alerting::public_::v202505::NmsStateSet* value);
  void unsafe_arena_set_allocated_to(::kentik::alerting::public_::v202505::NmsStateSet* value);
  ::kentik::alerting::public_::v202505::NmsStateSet* unsafe_arena_release_to();

  private:
  const ::kentik::alerting::public_::v202505::NmsStateSet& _internal_to() const;
  ::kentik::alerting::public_::v202505::NmsStateSet* _internal_mutable_to();

  public:
  // @@protoc_insertion_point(class_scope:kentik.alerting.public.v202505.NmsStateChangeCondition)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const NmsStateChangeCondition& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::kentik::alerting::public_::v202505::NmsStateSet* from_;
    ::kentik::alerting::public_::v202505::NmsStateSet* to_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2falerting_2fpublic_2fv202505_2fnms_5fcommon_2eproto;
};
// -------------------------------------------------------------------

class NmsCondition final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.alerting.public.v202505.NmsCondition) */ {
 public:
  inline NmsCondition() : NmsCondition(nullptr) {}
  ~NmsCondition() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(NmsCondition* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(NmsCondition));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NmsCondition(
      ::google::protobuf::internal::ConstantInitialized);

  inline NmsCondition(const NmsCondition& from) : NmsCondition(nullptr, from) {}
  inline NmsCondition(NmsCondition&& from) noexcept
      : NmsCondition(nullptr, std::move(from)) {}
  inline NmsCondition& operator=(const NmsCondition& from) {
    CopyFrom(from);
    return *this;
  }
  inline NmsCondition& operator=(NmsCondition&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NmsCondition& default_instance() {
    return *internal_default_instance();
  }
  enum SettingsCase {
    kThreshold = 3,
    kStateChange = 4,
    kStateInCondition = 5,
    SETTINGS_NOT_SET = 0,
  };
  static inline const NmsCondition* internal_default_instance() {
    return reinterpret_cast<const NmsCondition*>(
        &_NmsCondition_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(NmsCondition& a, NmsCondition& b) { a.Swap(&b); }
  inline void Swap(NmsCondition* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NmsCondition* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NmsCondition* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<NmsCondition>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NmsCondition& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NmsCondition& from) { NmsCondition::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(NmsCondition* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.alerting.public.v202505.NmsCondition"; }

 protected:
  explicit NmsCondition(::google::protobuf::Arena* arena);
  NmsCondition(::google::protobuf::Arena* arena, const NmsCondition& from);
  NmsCondition(::google::protobuf::Arena* arena, NmsCondition&& from) noexcept
      : NmsCondition(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMeasurementFieldNumber = 1,
    kMetricFieldNumber = 2,
    kThresholdFieldNumber = 3,
    kStateChangeFieldNumber = 4,
    kStateInConditionFieldNumber = 5,
  };
  // string measurement = 1 [json_name = "measurement"];
  void clear_measurement() ;
  const std::string& measurement() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_measurement(Arg_&& arg, Args_... args);
  std::string* mutable_measurement();
  PROTOBUF_NODISCARD std::string* release_measurement();
  void set_allocated_measurement(std::string* value);

  private:
  const std::string& _internal_measurement() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_measurement(
      const std::string& value);
  std::string* _internal_mutable_measurement();

  public:
  // string metric = 2 [json_name = "metric"];
  void clear_metric() ;
  const std::string& metric() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_metric(Arg_&& arg, Args_... args);
  std::string* mutable_metric();
  PROTOBUF_NODISCARD std::string* release_metric();
  void set_allocated_metric(std::string* value);

  private:
  const std::string& _internal_metric() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_metric(
      const std::string& value);
  std::string* _internal_mutable_metric();

  public:
  // .kentik.alerting.public.v202505.NmsThresholdCondition threshold = 3 [json_name = "threshold"];
  bool has_threshold() const;
  private:
  bool _internal_has_threshold() const;

  public:
  void clear_threshold() ;
  const ::kentik::alerting::public_::v202505::NmsThresholdCondition& threshold() const;
  PROTOBUF_NODISCARD ::kentik::alerting::public_::v202505::NmsThresholdCondition* release_threshold();
  ::kentik::alerting::public_::v202505::NmsThresholdCondition* mutable_threshold();
  void set_allocated_threshold(::kentik::alerting::public_::v202505::NmsThresholdCondition* value);
  void unsafe_arena_set_allocated_threshold(::kentik::alerting::public_::v202505::NmsThresholdCondition* value);
  ::kentik::alerting::public_::v202505::NmsThresholdCondition* unsafe_arena_release_threshold();

  private:
  const ::kentik::alerting::public_::v202505::NmsThresholdCondition& _internal_threshold() const;
  ::kentik::alerting::public_::v202505::NmsThresholdCondition* _internal_mutable_threshold();

  public:
  // .kentik.alerting.public.v202505.NmsStateChangeCondition state_change = 4 [json_name = "stateChange"];
  bool has_state_change() const;
  private:
  bool _internal_has_state_change() const;

  public:
  void clear_state_change() ;
  const ::kentik::alerting::public_::v202505::NmsStateChangeCondition& state_change() const;
  PROTOBUF_NODISCARD ::kentik::alerting::public_::v202505::NmsStateChangeCondition* release_state_change();
  ::kentik::alerting::public_::v202505::NmsStateChangeCondition* mutable_state_change();
  void set_allocated_state_change(::kentik::alerting::public_::v202505::NmsStateChangeCondition* value);
  void unsafe_arena_set_allocated_state_change(::kentik::alerting::public_::v202505::NmsStateChangeCondition* value);
  ::kentik::alerting::public_::v202505::NmsStateChangeCondition* unsafe_arena_release_state_change();

  private:
  const ::kentik::alerting::public_::v202505::NmsStateChangeCondition& _internal_state_change() const;
  ::kentik::alerting::public_::v202505::NmsStateChangeCondition* _internal_mutable_state_change();

  public:
  // .kentik.alerting.public.v202505.NmsStateSet state_in_condition = 5 [json_name = "stateInCondition"];
  bool has_state_in_condition() const;
  private:
  bool _internal_has_state_in_condition() const;

  public:
  void clear_state_in_condition() ;
  const ::kentik::alerting::public_::v202505::NmsStateSet& state_in_condition() const;
  PROTOBUF_NODISCARD ::kentik::alerting::public_::v202505::NmsStateSet* release_state_in_condition();
  ::kentik::alerting::public_::v202505::NmsStateSet* mutable_state_in_condition();
  void set_allocated_state_in_condition(::kentik::alerting::public_::v202505::NmsStateSet* value);
  void unsafe_arena_set_allocated_state_in_condition(::kentik::alerting::public_::v202505::NmsStateSet* value);
  ::kentik::alerting::public_::v202505::NmsStateSet* unsafe_arena_release_state_in_condition();

  private:
  const ::kentik::alerting::public_::v202505::NmsStateSet& _internal_state_in_condition() const;
  ::kentik::alerting::public_::v202505::NmsStateSet* _internal_mutable_state_in_condition();

  public:
  void clear_settings();
  SettingsCase settings_case() const;
  // @@protoc_insertion_point(class_scope:kentik.alerting.public.v202505.NmsCondition)
 private:
  class _Internal;
  void set_has_threshold();
  void set_has_state_change();
  void set_has_state_in_condition();
  inline bool has_settings() const;
  inline void clear_has_settings();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 5, 3,
      69, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const NmsCondition& from_msg);
    ::google::protobuf::internal::ArenaStringPtr measurement_;
    ::google::protobuf::internal::ArenaStringPtr metric_;
    union SettingsUnion {
      constexpr SettingsUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::kentik::alerting::public_::v202505::NmsThresholdCondition* threshold_;
      ::kentik::alerting::public_::v202505::NmsStateChangeCondition* state_change_;
      ::kentik::alerting::public_::v202505::NmsStateSet* state_in_condition_;
    } settings_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2falerting_2fpublic_2fv202505_2fnms_5fcommon_2eproto;
};
// -------------------------------------------------------------------

class NmsConditionGroup final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.alerting.public.v202505.NmsConditionGroup) */ {
 public:
  inline NmsConditionGroup() : NmsConditionGroup(nullptr) {}
  ~NmsConditionGroup() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(NmsConditionGroup* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(NmsConditionGroup));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NmsConditionGroup(
      ::google::protobuf::internal::ConstantInitialized);

  inline NmsConditionGroup(const NmsConditionGroup& from) : NmsConditionGroup(nullptr, from) {}
  inline NmsConditionGroup(NmsConditionGroup&& from) noexcept
      : NmsConditionGroup(nullptr, std::move(from)) {}
  inline NmsConditionGroup& operator=(const NmsConditionGroup& from) {
    CopyFrom(from);
    return *this;
  }
  inline NmsConditionGroup& operator=(NmsConditionGroup&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NmsConditionGroup& default_instance() {
    return *internal_default_instance();
  }
  static inline const NmsConditionGroup* internal_default_instance() {
    return reinterpret_cast<const NmsConditionGroup*>(
        &_NmsConditionGroup_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(NmsConditionGroup& a, NmsConditionGroup& b) { a.Swap(&b); }
  inline void Swap(NmsConditionGroup* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NmsConditionGroup* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NmsConditionGroup* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<NmsConditionGroup>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NmsConditionGroup& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NmsConditionGroup& from) { NmsConditionGroup::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(NmsConditionGroup* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.alerting.public.v202505.NmsConditionGroup"; }

 protected:
  explicit NmsConditionGroup(::google::protobuf::Arena* arena);
  NmsConditionGroup(::google::protobuf::Arena* arena, const NmsConditionGroup& from);
  NmsConditionGroup(::google::protobuf::Arena* arena, NmsConditionGroup&& from) noexcept
      : NmsConditionGroup(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kConditionsFieldNumber = 3,
    kConditionGroupsFieldNumber = 4,
    kConnectorFieldNumber = 1,
    kNotFieldNumber = 2,
  };
  // repeated .kentik.alerting.public.v202505.NmsCondition conditions = 3 [json_name = "conditions"];
  int conditions_size() const;
  private:
  int _internal_conditions_size() const;

  public:
  void clear_conditions() ;
  ::kentik::alerting::public_::v202505::NmsCondition* mutable_conditions(int index);
  ::google::protobuf::RepeatedPtrField<::kentik::alerting::public_::v202505::NmsCondition>* mutable_conditions();

  private:
  const ::google::protobuf::RepeatedPtrField<::kentik::alerting::public_::v202505::NmsCondition>& _internal_conditions() const;
  ::google::protobuf::RepeatedPtrField<::kentik::alerting::public_::v202505::NmsCondition>* _internal_mutable_conditions();
  public:
  const ::kentik::alerting::public_::v202505::NmsCondition& conditions(int index) const;
  ::kentik::alerting::public_::v202505::NmsCondition* add_conditions();
  const ::google::protobuf::RepeatedPtrField<::kentik::alerting::public_::v202505::NmsCondition>& conditions() const;
  // repeated .kentik.alerting.public.v202505.NmsConditionGroup condition_groups = 4 [json_name = "conditionGroups"];
  int condition_groups_size() const;
  private:
  int _internal_condition_groups_size() const;

  public:
  void clear_condition_groups() ;
  ::kentik::alerting::public_::v202505::NmsConditionGroup* mutable_condition_groups(int index);
  ::google::protobuf::RepeatedPtrField<::kentik::alerting::public_::v202505::NmsConditionGroup>* mutable_condition_groups();

  private:
  const ::google::protobuf::RepeatedPtrField<::kentik::alerting::public_::v202505::NmsConditionGroup>& _internal_condition_groups() const;
  ::google::protobuf::RepeatedPtrField<::kentik::alerting::public_::v202505::NmsConditionGroup>* _internal_mutable_condition_groups();
  public:
  const ::kentik::alerting::public_::v202505::NmsConditionGroup& condition_groups(int index) const;
  ::kentik::alerting::public_::v202505::NmsConditionGroup* add_condition_groups();
  const ::google::protobuf::RepeatedPtrField<::kentik::alerting::public_::v202505::NmsConditionGroup>& condition_groups() const;
  // .kentik.alerting.public.v202505.NmsConditionConnector connector = 1 [json_name = "connector"];
  void clear_connector() ;
  ::kentik::alerting::public_::v202505::NmsConditionConnector connector() const;
  void set_connector(::kentik::alerting::public_::v202505::NmsConditionConnector value);

  private:
  ::kentik::alerting::public_::v202505::NmsConditionConnector _internal_connector() const;
  void _internal_set_connector(::kentik::alerting::public_::v202505::NmsConditionConnector value);

  public:
  // bool not = 2 [json_name = "not"];
  void clear_not_() ;
  bool not_() const;
  void set_not_(bool value);

  private:
  bool _internal_not_() const;
  void _internal_set_not_(bool value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.alerting.public.v202505.NmsConditionGroup)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 2,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const NmsConditionGroup& from_msg);
    ::google::protobuf::RepeatedPtrField< ::kentik::alerting::public_::v202505::NmsCondition > conditions_;
    ::google::protobuf::RepeatedPtrField< ::kentik::alerting::public_::v202505::NmsConditionGroup > condition_groups_;
    int connector_;
    bool not__;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2falerting_2fpublic_2fv202505_2fnms_5fcommon_2eproto;
};
// -------------------------------------------------------------------

class NmsActivateOrClearConditions final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.alerting.public.v202505.NmsActivateOrClearConditions) */ {
 public:
  inline NmsActivateOrClearConditions() : NmsActivateOrClearConditions(nullptr) {}
  ~NmsActivateOrClearConditions() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(NmsActivateOrClearConditions* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(NmsActivateOrClearConditions));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NmsActivateOrClearConditions(
      ::google::protobuf::internal::ConstantInitialized);

  inline NmsActivateOrClearConditions(const NmsActivateOrClearConditions& from) : NmsActivateOrClearConditions(nullptr, from) {}
  inline NmsActivateOrClearConditions(NmsActivateOrClearConditions&& from) noexcept
      : NmsActivateOrClearConditions(nullptr, std::move(from)) {}
  inline NmsActivateOrClearConditions& operator=(const NmsActivateOrClearConditions& from) {
    CopyFrom(from);
    return *this;
  }
  inline NmsActivateOrClearConditions& operator=(NmsActivateOrClearConditions&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NmsActivateOrClearConditions& default_instance() {
    return *internal_default_instance();
  }
  static inline const NmsActivateOrClearConditions* internal_default_instance() {
    return reinterpret_cast<const NmsActivateOrClearConditions*>(
        &_NmsActivateOrClearConditions_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(NmsActivateOrClearConditions& a, NmsActivateOrClearConditions& b) { a.Swap(&b); }
  inline void Swap(NmsActivateOrClearConditions* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NmsActivateOrClearConditions* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NmsActivateOrClearConditions* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<NmsActivateOrClearConditions>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NmsActivateOrClearConditions& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NmsActivateOrClearConditions& from) { NmsActivateOrClearConditions::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(NmsActivateOrClearConditions* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.alerting.public.v202505.NmsActivateOrClearConditions"; }

 protected:
  explicit NmsActivateOrClearConditions(::google::protobuf::Arena* arena);
  NmsActivateOrClearConditions(::google::protobuf::Arena* arena, const NmsActivateOrClearConditions& from);
  NmsActivateOrClearConditions(::google::protobuf::Arena* arena, NmsActivateOrClearConditions&& from) noexcept
      : NmsActivateOrClearConditions(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kConditionGroupsFieldNumber = 2,
    kConnectorFieldNumber = 1,
  };
  // repeated .kentik.alerting.public.v202505.NmsConditionGroup condition_groups = 2 [json_name = "conditionGroups"];
  int condition_groups_size() const;
  private:
  int _internal_condition_groups_size() const;

  public:
  void clear_condition_groups() ;
  ::kentik::alerting::public_::v202505::NmsConditionGroup* mutable_condition_groups(int index);
  ::google::protobuf::RepeatedPtrField<::kentik::alerting::public_::v202505::NmsConditionGroup>* mutable_condition_groups();

  private:
  const ::google::protobuf::RepeatedPtrField<::kentik::alerting::public_::v202505::NmsConditionGroup>& _internal_condition_groups() const;
  ::google::protobuf::RepeatedPtrField<::kentik::alerting::public_::v202505::NmsConditionGroup>* _internal_mutable_condition_groups();
  public:
  const ::kentik::alerting::public_::v202505::NmsConditionGroup& condition_groups(int index) const;
  ::kentik::alerting::public_::v202505::NmsConditionGroup* add_condition_groups();
  const ::google::protobuf::RepeatedPtrField<::kentik::alerting::public_::v202505::NmsConditionGroup>& condition_groups() const;
  // .kentik.alerting.public.v202505.NmsConditionConnector connector = 1 [json_name = "connector"];
  void clear_connector() ;
  ::kentik::alerting::public_::v202505::NmsConditionConnector connector() const;
  void set_connector(::kentik::alerting::public_::v202505::NmsConditionConnector value);

  private:
  ::kentik::alerting::public_::v202505::NmsConditionConnector _internal_connector() const;
  void _internal_set_connector(::kentik::alerting::public_::v202505::NmsConditionConnector value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.alerting.public.v202505.NmsActivateOrClearConditions)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const NmsActivateOrClearConditions& from_msg);
    ::google::protobuf::RepeatedPtrField< ::kentik::alerting::public_::v202505::NmsConditionGroup > condition_groups_;
    int connector_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2falerting_2fpublic_2fv202505_2fnms_5fcommon_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// NmsStateSet

// bool not = 1 [json_name = "not"];
inline void NmsStateSet::clear_not_() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.not__ = false;
}
inline bool NmsStateSet::not_() const {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.NmsStateSet.not)
  return _internal_not_();
}
inline void NmsStateSet::set_not_(bool value) {
  _internal_set_not_(value);
  // @@protoc_insertion_point(field_set:kentik.alerting.public.v202505.NmsStateSet.not)
}
inline bool NmsStateSet::_internal_not_() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.not__;
}
inline void NmsStateSet::_internal_set_not_(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.not__ = value;
}

// repeated string states = 2 [json_name = "states"];
inline int NmsStateSet::_internal_states_size() const {
  return _internal_states().size();
}
inline int NmsStateSet::states_size() const {
  return _internal_states_size();
}
inline void NmsStateSet::clear_states() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.states_.Clear();
}
inline std::string* NmsStateSet::add_states() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_states()->Add();
  // @@protoc_insertion_point(field_add_mutable:kentik.alerting.public.v202505.NmsStateSet.states)
  return _s;
}
inline const std::string& NmsStateSet::states(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.NmsStateSet.states)
  return _internal_states().Get(index);
}
inline std::string* NmsStateSet::mutable_states(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.alerting.public.v202505.NmsStateSet.states)
  return _internal_mutable_states()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void NmsStateSet::set_states(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_states()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:kentik.alerting.public.v202505.NmsStateSet.states)
}
template <typename Arg_, typename... Args_>
inline void NmsStateSet::add_states(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_states(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:kentik.alerting.public.v202505.NmsStateSet.states)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
NmsStateSet::states() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.alerting.public.v202505.NmsStateSet.states)
  return _internal_states();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
NmsStateSet::mutable_states() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.alerting.public.v202505.NmsStateSet.states)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_states();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
NmsStateSet::_internal_states() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.states_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
NmsStateSet::_internal_mutable_states() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.states_;
}

// -------------------------------------------------------------------

// NmsCondition

// string measurement = 1 [json_name = "measurement"];
inline void NmsCondition::clear_measurement() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.measurement_.ClearToEmpty();
}
inline const std::string& NmsCondition::measurement() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.NmsCondition.measurement)
  return _internal_measurement();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void NmsCondition::set_measurement(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.measurement_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.alerting.public.v202505.NmsCondition.measurement)
}
inline std::string* NmsCondition::mutable_measurement() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_measurement();
  // @@protoc_insertion_point(field_mutable:kentik.alerting.public.v202505.NmsCondition.measurement)
  return _s;
}
inline const std::string& NmsCondition::_internal_measurement() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.measurement_.Get();
}
inline void NmsCondition::_internal_set_measurement(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.measurement_.Set(value, GetArena());
}
inline std::string* NmsCondition::_internal_mutable_measurement() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.measurement_.Mutable( GetArena());
}
inline std::string* NmsCondition::release_measurement() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.alerting.public.v202505.NmsCondition.measurement)
  return _impl_.measurement_.Release();
}
inline void NmsCondition::set_allocated_measurement(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.measurement_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.measurement_.IsDefault()) {
    _impl_.measurement_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.alerting.public.v202505.NmsCondition.measurement)
}

// string metric = 2 [json_name = "metric"];
inline void NmsCondition::clear_metric() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.metric_.ClearToEmpty();
}
inline const std::string& NmsCondition::metric() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.NmsCondition.metric)
  return _internal_metric();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void NmsCondition::set_metric(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.metric_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.alerting.public.v202505.NmsCondition.metric)
}
inline std::string* NmsCondition::mutable_metric() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_metric();
  // @@protoc_insertion_point(field_mutable:kentik.alerting.public.v202505.NmsCondition.metric)
  return _s;
}
inline const std::string& NmsCondition::_internal_metric() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.metric_.Get();
}
inline void NmsCondition::_internal_set_metric(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.metric_.Set(value, GetArena());
}
inline std::string* NmsCondition::_internal_mutable_metric() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.metric_.Mutable( GetArena());
}
inline std::string* NmsCondition::release_metric() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.alerting.public.v202505.NmsCondition.metric)
  return _impl_.metric_.Release();
}
inline void NmsCondition::set_allocated_metric(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.metric_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.metric_.IsDefault()) {
    _impl_.metric_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.alerting.public.v202505.NmsCondition.metric)
}

// .kentik.alerting.public.v202505.NmsThresholdCondition threshold = 3 [json_name = "threshold"];
inline bool NmsCondition::has_threshold() const {
  return settings_case() == kThreshold;
}
inline bool NmsCondition::_internal_has_threshold() const {
  return settings_case() == kThreshold;
}
inline void NmsCondition::set_has_threshold() {
  _impl_._oneof_case_[0] = kThreshold;
}
inline void NmsCondition::clear_threshold() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (settings_case() == kThreshold) {
    if (GetArena() == nullptr) {
      delete _impl_.settings_.threshold_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.settings_.threshold_);
    }
    clear_has_settings();
  }
}
inline ::kentik::alerting::public_::v202505::NmsThresholdCondition* NmsCondition::release_threshold() {
  // @@protoc_insertion_point(field_release:kentik.alerting.public.v202505.NmsCondition.threshold)
  if (settings_case() == kThreshold) {
    clear_has_settings();
    auto* temp = _impl_.settings_.threshold_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.settings_.threshold_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::kentik::alerting::public_::v202505::NmsThresholdCondition& NmsCondition::_internal_threshold() const {
  return settings_case() == kThreshold ? *_impl_.settings_.threshold_ : reinterpret_cast<::kentik::alerting::public_::v202505::NmsThresholdCondition&>(::kentik::alerting::public_::v202505::_NmsThresholdCondition_default_instance_);
}
inline const ::kentik::alerting::public_::v202505::NmsThresholdCondition& NmsCondition::threshold() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.NmsCondition.threshold)
  return _internal_threshold();
}
inline ::kentik::alerting::public_::v202505::NmsThresholdCondition* NmsCondition::unsafe_arena_release_threshold() {
  // @@protoc_insertion_point(field_unsafe_arena_release:kentik.alerting.public.v202505.NmsCondition.threshold)
  if (settings_case() == kThreshold) {
    clear_has_settings();
    auto* temp = _impl_.settings_.threshold_;
    _impl_.settings_.threshold_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void NmsCondition::unsafe_arena_set_allocated_threshold(::kentik::alerting::public_::v202505::NmsThresholdCondition* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_settings();
  if (value) {
    set_has_threshold();
    _impl_.settings_.threshold_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.alerting.public.v202505.NmsCondition.threshold)
}
inline ::kentik::alerting::public_::v202505::NmsThresholdCondition* NmsCondition::_internal_mutable_threshold() {
  if (settings_case() != kThreshold) {
    clear_settings();
    set_has_threshold();
    _impl_.settings_.threshold_ =
        ::google::protobuf::Message::DefaultConstruct<::kentik::alerting::public_::v202505::NmsThresholdCondition>(GetArena());
  }
  return _impl_.settings_.threshold_;
}
inline ::kentik::alerting::public_::v202505::NmsThresholdCondition* NmsCondition::mutable_threshold() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::kentik::alerting::public_::v202505::NmsThresholdCondition* _msg = _internal_mutable_threshold();
  // @@protoc_insertion_point(field_mutable:kentik.alerting.public.v202505.NmsCondition.threshold)
  return _msg;
}

// .kentik.alerting.public.v202505.NmsStateChangeCondition state_change = 4 [json_name = "stateChange"];
inline bool NmsCondition::has_state_change() const {
  return settings_case() == kStateChange;
}
inline bool NmsCondition::_internal_has_state_change() const {
  return settings_case() == kStateChange;
}
inline void NmsCondition::set_has_state_change() {
  _impl_._oneof_case_[0] = kStateChange;
}
inline void NmsCondition::clear_state_change() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (settings_case() == kStateChange) {
    if (GetArena() == nullptr) {
      delete _impl_.settings_.state_change_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.settings_.state_change_);
    }
    clear_has_settings();
  }
}
inline ::kentik::alerting::public_::v202505::NmsStateChangeCondition* NmsCondition::release_state_change() {
  // @@protoc_insertion_point(field_release:kentik.alerting.public.v202505.NmsCondition.state_change)
  if (settings_case() == kStateChange) {
    clear_has_settings();
    auto* temp = _impl_.settings_.state_change_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.settings_.state_change_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::kentik::alerting::public_::v202505::NmsStateChangeCondition& NmsCondition::_internal_state_change() const {
  return settings_case() == kStateChange ? *_impl_.settings_.state_change_ : reinterpret_cast<::kentik::alerting::public_::v202505::NmsStateChangeCondition&>(::kentik::alerting::public_::v202505::_NmsStateChangeCondition_default_instance_);
}
inline const ::kentik::alerting::public_::v202505::NmsStateChangeCondition& NmsCondition::state_change() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.NmsCondition.state_change)
  return _internal_state_change();
}
inline ::kentik::alerting::public_::v202505::NmsStateChangeCondition* NmsCondition::unsafe_arena_release_state_change() {
  // @@protoc_insertion_point(field_unsafe_arena_release:kentik.alerting.public.v202505.NmsCondition.state_change)
  if (settings_case() == kStateChange) {
    clear_has_settings();
    auto* temp = _impl_.settings_.state_change_;
    _impl_.settings_.state_change_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void NmsCondition::unsafe_arena_set_allocated_state_change(::kentik::alerting::public_::v202505::NmsStateChangeCondition* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_settings();
  if (value) {
    set_has_state_change();
    _impl_.settings_.state_change_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.alerting.public.v202505.NmsCondition.state_change)
}
inline ::kentik::alerting::public_::v202505::NmsStateChangeCondition* NmsCondition::_internal_mutable_state_change() {
  if (settings_case() != kStateChange) {
    clear_settings();
    set_has_state_change();
    _impl_.settings_.state_change_ =
        ::google::protobuf::Message::DefaultConstruct<::kentik::alerting::public_::v202505::NmsStateChangeCondition>(GetArena());
  }
  return _impl_.settings_.state_change_;
}
inline ::kentik::alerting::public_::v202505::NmsStateChangeCondition* NmsCondition::mutable_state_change() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::kentik::alerting::public_::v202505::NmsStateChangeCondition* _msg = _internal_mutable_state_change();
  // @@protoc_insertion_point(field_mutable:kentik.alerting.public.v202505.NmsCondition.state_change)
  return _msg;
}

// .kentik.alerting.public.v202505.NmsStateSet state_in_condition = 5 [json_name = "stateInCondition"];
inline bool NmsCondition::has_state_in_condition() const {
  return settings_case() == kStateInCondition;
}
inline bool NmsCondition::_internal_has_state_in_condition() const {
  return settings_case() == kStateInCondition;
}
inline void NmsCondition::set_has_state_in_condition() {
  _impl_._oneof_case_[0] = kStateInCondition;
}
inline void NmsCondition::clear_state_in_condition() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (settings_case() == kStateInCondition) {
    if (GetArena() == nullptr) {
      delete _impl_.settings_.state_in_condition_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.settings_.state_in_condition_);
    }
    clear_has_settings();
  }
}
inline ::kentik::alerting::public_::v202505::NmsStateSet* NmsCondition::release_state_in_condition() {
  // @@protoc_insertion_point(field_release:kentik.alerting.public.v202505.NmsCondition.state_in_condition)
  if (settings_case() == kStateInCondition) {
    clear_has_settings();
    auto* temp = _impl_.settings_.state_in_condition_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.settings_.state_in_condition_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::kentik::alerting::public_::v202505::NmsStateSet& NmsCondition::_internal_state_in_condition() const {
  return settings_case() == kStateInCondition ? *_impl_.settings_.state_in_condition_ : reinterpret_cast<::kentik::alerting::public_::v202505::NmsStateSet&>(::kentik::alerting::public_::v202505::_NmsStateSet_default_instance_);
}
inline const ::kentik::alerting::public_::v202505::NmsStateSet& NmsCondition::state_in_condition() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.NmsCondition.state_in_condition)
  return _internal_state_in_condition();
}
inline ::kentik::alerting::public_::v202505::NmsStateSet* NmsCondition::unsafe_arena_release_state_in_condition() {
  // @@protoc_insertion_point(field_unsafe_arena_release:kentik.alerting.public.v202505.NmsCondition.state_in_condition)
  if (settings_case() == kStateInCondition) {
    clear_has_settings();
    auto* temp = _impl_.settings_.state_in_condition_;
    _impl_.settings_.state_in_condition_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void NmsCondition::unsafe_arena_set_allocated_state_in_condition(::kentik::alerting::public_::v202505::NmsStateSet* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_settings();
  if (value) {
    set_has_state_in_condition();
    _impl_.settings_.state_in_condition_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.alerting.public.v202505.NmsCondition.state_in_condition)
}
inline ::kentik::alerting::public_::v202505::NmsStateSet* NmsCondition::_internal_mutable_state_in_condition() {
  if (settings_case() != kStateInCondition) {
    clear_settings();
    set_has_state_in_condition();
    _impl_.settings_.state_in_condition_ =
        ::google::protobuf::Message::DefaultConstruct<::kentik::alerting::public_::v202505::NmsStateSet>(GetArena());
  }
  return _impl_.settings_.state_in_condition_;
}
inline ::kentik::alerting::public_::v202505::NmsStateSet* NmsCondition::mutable_state_in_condition() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::kentik::alerting::public_::v202505::NmsStateSet* _msg = _internal_mutable_state_in_condition();
  // @@protoc_insertion_point(field_mutable:kentik.alerting.public.v202505.NmsCondition.state_in_condition)
  return _msg;
}

inline bool NmsCondition::has_settings() const {
  return settings_case() != SETTINGS_NOT_SET;
}
inline void NmsCondition::clear_has_settings() {
  _impl_._oneof_case_[0] = SETTINGS_NOT_SET;
}
inline NmsCondition::SettingsCase NmsCondition::settings_case() const {
  return NmsCondition::SettingsCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// NmsThresholdCondition

// .kentik.alerting.public.v202505.NmsConditionOperator operator = 1 [json_name = "operator"];
inline void NmsThresholdCondition::clear_operator_() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.operator__ = 0;
}
inline ::kentik::alerting::public_::v202505::NmsConditionOperator NmsThresholdCondition::operator_() const {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.NmsThresholdCondition.operator)
  return _internal_operator_();
}
inline void NmsThresholdCondition::set_operator_(::kentik::alerting::public_::v202505::NmsConditionOperator value) {
  _internal_set_operator_(value);
  // @@protoc_insertion_point(field_set:kentik.alerting.public.v202505.NmsThresholdCondition.operator)
}
inline ::kentik::alerting::public_::v202505::NmsConditionOperator NmsThresholdCondition::_internal_operator_() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::kentik::alerting::public_::v202505::NmsConditionOperator>(_impl_.operator__);
}
inline void NmsThresholdCondition::_internal_set_operator_(::kentik::alerting::public_::v202505::NmsConditionOperator value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.operator__ = value;
}

// string condition_value = 2 [json_name = "conditionValue"];
inline void NmsThresholdCondition::clear_condition_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.condition_value_.ClearToEmpty();
}
inline const std::string& NmsThresholdCondition::condition_value() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.NmsThresholdCondition.condition_value)
  return _internal_condition_value();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void NmsThresholdCondition::set_condition_value(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.condition_value_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.alerting.public.v202505.NmsThresholdCondition.condition_value)
}
inline std::string* NmsThresholdCondition::mutable_condition_value() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_condition_value();
  // @@protoc_insertion_point(field_mutable:kentik.alerting.public.v202505.NmsThresholdCondition.condition_value)
  return _s;
}
inline const std::string& NmsThresholdCondition::_internal_condition_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.condition_value_.Get();
}
inline void NmsThresholdCondition::_internal_set_condition_value(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.condition_value_.Set(value, GetArena());
}
inline std::string* NmsThresholdCondition::_internal_mutable_condition_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.condition_value_.Mutable( GetArena());
}
inline std::string* NmsThresholdCondition::release_condition_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.alerting.public.v202505.NmsThresholdCondition.condition_value)
  return _impl_.condition_value_.Release();
}
inline void NmsThresholdCondition::set_allocated_condition_value(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.condition_value_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.condition_value_.IsDefault()) {
    _impl_.condition_value_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.alerting.public.v202505.NmsThresholdCondition.condition_value)
}

// -------------------------------------------------------------------

// NmsStateChangeCondition

// .kentik.alerting.public.v202505.NmsStateSet from = 1 [json_name = "from"];
inline bool NmsStateChangeCondition::has_from() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.from_ != nullptr);
  return value;
}
inline void NmsStateChangeCondition::clear_from() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.from_ != nullptr) _impl_.from_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::kentik::alerting::public_::v202505::NmsStateSet& NmsStateChangeCondition::_internal_from() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::alerting::public_::v202505::NmsStateSet* p = _impl_.from_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::alerting::public_::v202505::NmsStateSet&>(::kentik::alerting::public_::v202505::_NmsStateSet_default_instance_);
}
inline const ::kentik::alerting::public_::v202505::NmsStateSet& NmsStateChangeCondition::from() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.NmsStateChangeCondition.from)
  return _internal_from();
}
inline void NmsStateChangeCondition::unsafe_arena_set_allocated_from(::kentik::alerting::public_::v202505::NmsStateSet* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.from_);
  }
  _impl_.from_ = reinterpret_cast<::kentik::alerting::public_::v202505::NmsStateSet*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.alerting.public.v202505.NmsStateChangeCondition.from)
}
inline ::kentik::alerting::public_::v202505::NmsStateSet* NmsStateChangeCondition::release_from() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::alerting::public_::v202505::NmsStateSet* released = _impl_.from_;
  _impl_.from_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::alerting::public_::v202505::NmsStateSet* NmsStateChangeCondition::unsafe_arena_release_from() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.alerting.public.v202505.NmsStateChangeCondition.from)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::alerting::public_::v202505::NmsStateSet* temp = _impl_.from_;
  _impl_.from_ = nullptr;
  return temp;
}
inline ::kentik::alerting::public_::v202505::NmsStateSet* NmsStateChangeCondition::_internal_mutable_from() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.from_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::alerting::public_::v202505::NmsStateSet>(GetArena());
    _impl_.from_ = reinterpret_cast<::kentik::alerting::public_::v202505::NmsStateSet*>(p);
  }
  return _impl_.from_;
}
inline ::kentik::alerting::public_::v202505::NmsStateSet* NmsStateChangeCondition::mutable_from() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::kentik::alerting::public_::v202505::NmsStateSet* _msg = _internal_mutable_from();
  // @@protoc_insertion_point(field_mutable:kentik.alerting.public.v202505.NmsStateChangeCondition.from)
  return _msg;
}
inline void NmsStateChangeCondition::set_allocated_from(::kentik::alerting::public_::v202505::NmsStateSet* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.from_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.from_ = reinterpret_cast<::kentik::alerting::public_::v202505::NmsStateSet*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.alerting.public.v202505.NmsStateChangeCondition.from)
}

// .kentik.alerting.public.v202505.NmsStateSet to = 2 [json_name = "to"];
inline bool NmsStateChangeCondition::has_to() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.to_ != nullptr);
  return value;
}
inline void NmsStateChangeCondition::clear_to() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.to_ != nullptr) _impl_.to_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::kentik::alerting::public_::v202505::NmsStateSet& NmsStateChangeCondition::_internal_to() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::alerting::public_::v202505::NmsStateSet* p = _impl_.to_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::alerting::public_::v202505::NmsStateSet&>(::kentik::alerting::public_::v202505::_NmsStateSet_default_instance_);
}
inline const ::kentik::alerting::public_::v202505::NmsStateSet& NmsStateChangeCondition::to() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.NmsStateChangeCondition.to)
  return _internal_to();
}
inline void NmsStateChangeCondition::unsafe_arena_set_allocated_to(::kentik::alerting::public_::v202505::NmsStateSet* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.to_);
  }
  _impl_.to_ = reinterpret_cast<::kentik::alerting::public_::v202505::NmsStateSet*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.alerting.public.v202505.NmsStateChangeCondition.to)
}
inline ::kentik::alerting::public_::v202505::NmsStateSet* NmsStateChangeCondition::release_to() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::kentik::alerting::public_::v202505::NmsStateSet* released = _impl_.to_;
  _impl_.to_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::alerting::public_::v202505::NmsStateSet* NmsStateChangeCondition::unsafe_arena_release_to() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.alerting.public.v202505.NmsStateChangeCondition.to)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::kentik::alerting::public_::v202505::NmsStateSet* temp = _impl_.to_;
  _impl_.to_ = nullptr;
  return temp;
}
inline ::kentik::alerting::public_::v202505::NmsStateSet* NmsStateChangeCondition::_internal_mutable_to() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.to_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::alerting::public_::v202505::NmsStateSet>(GetArena());
    _impl_.to_ = reinterpret_cast<::kentik::alerting::public_::v202505::NmsStateSet*>(p);
  }
  return _impl_.to_;
}
inline ::kentik::alerting::public_::v202505::NmsStateSet* NmsStateChangeCondition::mutable_to() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::kentik::alerting::public_::v202505::NmsStateSet* _msg = _internal_mutable_to();
  // @@protoc_insertion_point(field_mutable:kentik.alerting.public.v202505.NmsStateChangeCondition.to)
  return _msg;
}
inline void NmsStateChangeCondition::set_allocated_to(::kentik::alerting::public_::v202505::NmsStateSet* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.to_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.to_ = reinterpret_cast<::kentik::alerting::public_::v202505::NmsStateSet*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.alerting.public.v202505.NmsStateChangeCondition.to)
}

// -------------------------------------------------------------------

// NmsConditionGroup

// .kentik.alerting.public.v202505.NmsConditionConnector connector = 1 [json_name = "connector"];
inline void NmsConditionGroup::clear_connector() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.connector_ = 0;
}
inline ::kentik::alerting::public_::v202505::NmsConditionConnector NmsConditionGroup::connector() const {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.NmsConditionGroup.connector)
  return _internal_connector();
}
inline void NmsConditionGroup::set_connector(::kentik::alerting::public_::v202505::NmsConditionConnector value) {
  _internal_set_connector(value);
  // @@protoc_insertion_point(field_set:kentik.alerting.public.v202505.NmsConditionGroup.connector)
}
inline ::kentik::alerting::public_::v202505::NmsConditionConnector NmsConditionGroup::_internal_connector() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::kentik::alerting::public_::v202505::NmsConditionConnector>(_impl_.connector_);
}
inline void NmsConditionGroup::_internal_set_connector(::kentik::alerting::public_::v202505::NmsConditionConnector value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.connector_ = value;
}

// bool not = 2 [json_name = "not"];
inline void NmsConditionGroup::clear_not_() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.not__ = false;
}
inline bool NmsConditionGroup::not_() const {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.NmsConditionGroup.not)
  return _internal_not_();
}
inline void NmsConditionGroup::set_not_(bool value) {
  _internal_set_not_(value);
  // @@protoc_insertion_point(field_set:kentik.alerting.public.v202505.NmsConditionGroup.not)
}
inline bool NmsConditionGroup::_internal_not_() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.not__;
}
inline void NmsConditionGroup::_internal_set_not_(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.not__ = value;
}

// repeated .kentik.alerting.public.v202505.NmsCondition conditions = 3 [json_name = "conditions"];
inline int NmsConditionGroup::_internal_conditions_size() const {
  return _internal_conditions().size();
}
inline int NmsConditionGroup::conditions_size() const {
  return _internal_conditions_size();
}
inline void NmsConditionGroup::clear_conditions() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.conditions_.Clear();
}
inline ::kentik::alerting::public_::v202505::NmsCondition* NmsConditionGroup::mutable_conditions(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.alerting.public.v202505.NmsConditionGroup.conditions)
  return _internal_mutable_conditions()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::kentik::alerting::public_::v202505::NmsCondition>* NmsConditionGroup::mutable_conditions()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.alerting.public.v202505.NmsConditionGroup.conditions)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_conditions();
}
inline const ::kentik::alerting::public_::v202505::NmsCondition& NmsConditionGroup::conditions(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.NmsConditionGroup.conditions)
  return _internal_conditions().Get(index);
}
inline ::kentik::alerting::public_::v202505::NmsCondition* NmsConditionGroup::add_conditions() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::kentik::alerting::public_::v202505::NmsCondition* _add = _internal_mutable_conditions()->Add();
  // @@protoc_insertion_point(field_add:kentik.alerting.public.v202505.NmsConditionGroup.conditions)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::alerting::public_::v202505::NmsCondition>& NmsConditionGroup::conditions() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.alerting.public.v202505.NmsConditionGroup.conditions)
  return _internal_conditions();
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::alerting::public_::v202505::NmsCondition>&
NmsConditionGroup::_internal_conditions() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.conditions_;
}
inline ::google::protobuf::RepeatedPtrField<::kentik::alerting::public_::v202505::NmsCondition>*
NmsConditionGroup::_internal_mutable_conditions() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.conditions_;
}

// repeated .kentik.alerting.public.v202505.NmsConditionGroup condition_groups = 4 [json_name = "conditionGroups"];
inline int NmsConditionGroup::_internal_condition_groups_size() const {
  return _internal_condition_groups().size();
}
inline int NmsConditionGroup::condition_groups_size() const {
  return _internal_condition_groups_size();
}
inline void NmsConditionGroup::clear_condition_groups() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.condition_groups_.Clear();
}
inline ::kentik::alerting::public_::v202505::NmsConditionGroup* NmsConditionGroup::mutable_condition_groups(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.alerting.public.v202505.NmsConditionGroup.condition_groups)
  return _internal_mutable_condition_groups()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::kentik::alerting::public_::v202505::NmsConditionGroup>* NmsConditionGroup::mutable_condition_groups()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.alerting.public.v202505.NmsConditionGroup.condition_groups)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_condition_groups();
}
inline const ::kentik::alerting::public_::v202505::NmsConditionGroup& NmsConditionGroup::condition_groups(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.NmsConditionGroup.condition_groups)
  return _internal_condition_groups().Get(index);
}
inline ::kentik::alerting::public_::v202505::NmsConditionGroup* NmsConditionGroup::add_condition_groups() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::kentik::alerting::public_::v202505::NmsConditionGroup* _add = _internal_mutable_condition_groups()->Add();
  // @@protoc_insertion_point(field_add:kentik.alerting.public.v202505.NmsConditionGroup.condition_groups)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::alerting::public_::v202505::NmsConditionGroup>& NmsConditionGroup::condition_groups() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.alerting.public.v202505.NmsConditionGroup.condition_groups)
  return _internal_condition_groups();
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::alerting::public_::v202505::NmsConditionGroup>&
NmsConditionGroup::_internal_condition_groups() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.condition_groups_;
}
inline ::google::protobuf::RepeatedPtrField<::kentik::alerting::public_::v202505::NmsConditionGroup>*
NmsConditionGroup::_internal_mutable_condition_groups() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.condition_groups_;
}

// -------------------------------------------------------------------

// NmsActivateOrClearConditions

// .kentik.alerting.public.v202505.NmsConditionConnector connector = 1 [json_name = "connector"];
inline void NmsActivateOrClearConditions::clear_connector() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.connector_ = 0;
}
inline ::kentik::alerting::public_::v202505::NmsConditionConnector NmsActivateOrClearConditions::connector() const {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.NmsActivateOrClearConditions.connector)
  return _internal_connector();
}
inline void NmsActivateOrClearConditions::set_connector(::kentik::alerting::public_::v202505::NmsConditionConnector value) {
  _internal_set_connector(value);
  // @@protoc_insertion_point(field_set:kentik.alerting.public.v202505.NmsActivateOrClearConditions.connector)
}
inline ::kentik::alerting::public_::v202505::NmsConditionConnector NmsActivateOrClearConditions::_internal_connector() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::kentik::alerting::public_::v202505::NmsConditionConnector>(_impl_.connector_);
}
inline void NmsActivateOrClearConditions::_internal_set_connector(::kentik::alerting::public_::v202505::NmsConditionConnector value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.connector_ = value;
}

// repeated .kentik.alerting.public.v202505.NmsConditionGroup condition_groups = 2 [json_name = "conditionGroups"];
inline int NmsActivateOrClearConditions::_internal_condition_groups_size() const {
  return _internal_condition_groups().size();
}
inline int NmsActivateOrClearConditions::condition_groups_size() const {
  return _internal_condition_groups_size();
}
inline void NmsActivateOrClearConditions::clear_condition_groups() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.condition_groups_.Clear();
}
inline ::kentik::alerting::public_::v202505::NmsConditionGroup* NmsActivateOrClearConditions::mutable_condition_groups(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.alerting.public.v202505.NmsActivateOrClearConditions.condition_groups)
  return _internal_mutable_condition_groups()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::kentik::alerting::public_::v202505::NmsConditionGroup>* NmsActivateOrClearConditions::mutable_condition_groups()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.alerting.public.v202505.NmsActivateOrClearConditions.condition_groups)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_condition_groups();
}
inline const ::kentik::alerting::public_::v202505::NmsConditionGroup& NmsActivateOrClearConditions::condition_groups(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.NmsActivateOrClearConditions.condition_groups)
  return _internal_condition_groups().Get(index);
}
inline ::kentik::alerting::public_::v202505::NmsConditionGroup* NmsActivateOrClearConditions::add_condition_groups() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::kentik::alerting::public_::v202505::NmsConditionGroup* _add = _internal_mutable_condition_groups()->Add();
  // @@protoc_insertion_point(field_add:kentik.alerting.public.v202505.NmsActivateOrClearConditions.condition_groups)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::alerting::public_::v202505::NmsConditionGroup>& NmsActivateOrClearConditions::condition_groups() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.alerting.public.v202505.NmsActivateOrClearConditions.condition_groups)
  return _internal_condition_groups();
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::alerting::public_::v202505::NmsConditionGroup>&
NmsActivateOrClearConditions::_internal_condition_groups() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.condition_groups_;
}
inline ::google::protobuf::RepeatedPtrField<::kentik::alerting::public_::v202505::NmsConditionGroup>*
NmsActivateOrClearConditions::_internal_mutable_condition_groups() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.condition_groups_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v202505
}  // namespace public_
}  // namespace alerting
}  // namespace kentik


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::kentik::alerting::public_::v202505::NmsConditionConnector> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::kentik::alerting::public_::v202505::NmsConditionConnector>() {
  return ::kentik::alerting::public_::v202505::NmsConditionConnector_descriptor();
}
template <>
struct is_proto_enum<::kentik::alerting::public_::v202505::NmsConditionOperator> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::kentik::alerting::public_::v202505::NmsConditionOperator>() {
  return ::kentik::alerting::public_::v202505::NmsConditionOperator_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // kentik_2falerting_2fpublic_2fv202505_2fnms_5fcommon_2eproto_2epb_2eh
