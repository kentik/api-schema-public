// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: kentik/alerting/public/v202505/policy_nms.proto
// Protobuf C++ Version: 5.29.3

#ifndef kentik_2falerting_2fpublic_2fv202505_2fpolicy_5fnms_2eproto_2epb_2eh
#define kentik_2falerting_2fpublic_2fv202505_2fpolicy_5fnms_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "google/protobuf/duration.pb.h"
#include "google/protobuf/timestamp.pb.h"
#include "google/protobuf/struct.pb.h"
#include "google/api/annotations.pb.h"
#include "google/api/client.pb.h"
#include "google/api/field_behavior.pb.h"
#include "protoc-gen-openapiv2/options/annotations.pb.h"
#include "kentik/core/v202303/annotations.pb.h"
#include "kentik/alerting/types/v202303/types.pb.h"
#include "kentik/alerting/types/v202506/sorting.pb.h"
#include "kentik/alerting/public/v202505/common.pb.h"
#include "kentik/alerting/public/v202505/nms_common.pb.h"
#include "kentik/alerting/public/v202505/policy_filters.pb.h"
#include "kentik/alerting/public/v202505/policy_datasources.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_kentik_2falerting_2fpublic_2fv202505_2fpolicy_5fnms_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_kentik_2falerting_2fpublic_2fv202505_2fpolicy_5fnms_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_kentik_2falerting_2fpublic_2fv202505_2fpolicy_5fnms_2eproto;
namespace kentik {
namespace alerting {
namespace public_ {
namespace v202505 {
class NmsPolicyLevelSettings;
struct NmsPolicyLevelSettingsDefaultTypeInternal;
extern NmsPolicyLevelSettingsDefaultTypeInternal _NmsPolicyLevelSettings_default_instance_;
class NmsPolicySettings;
struct NmsPolicySettingsDefaultTypeInternal;
extern NmsPolicySettingsDefaultTypeInternal _NmsPolicySettings_default_instance_;
class NmsPolicySettings_DatasetConfig;
struct NmsPolicySettings_DatasetConfigDefaultTypeInternal;
extern NmsPolicySettings_DatasetConfigDefaultTypeInternal _NmsPolicySettings_DatasetConfig_default_instance_;
class NmsPolicySettings_EvaluationConfig;
struct NmsPolicySettings_EvaluationConfigDefaultTypeInternal;
extern NmsPolicySettings_EvaluationConfigDefaultTypeInternal _NmsPolicySettings_EvaluationConfig_default_instance_;
}  // namespace v202505
}  // namespace public_
}  // namespace alerting
}  // namespace kentik
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace kentik {
namespace alerting {
namespace public_ {
namespace v202505 {
enum NmsPolicyLevelSettings_ClearType : int {
  NmsPolicyLevelSettings_ClearType_CLEAR_TYPE_UNSPECIFIED = 0,
  NmsPolicyLevelSettings_ClearType_CLEAR_TYPE_CLEAR_MANUAL = 2,
  NmsPolicyLevelSettings_ClearType_CLEAR_TYPE_CLEAR_UNLESS_ACTIVATED = 3,
  NmsPolicyLevelSettings_ClearType_NmsPolicyLevelSettings_ClearType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  NmsPolicyLevelSettings_ClearType_NmsPolicyLevelSettings_ClearType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool NmsPolicyLevelSettings_ClearType_IsValid(int value);
extern const uint32_t NmsPolicyLevelSettings_ClearType_internal_data_[];
constexpr NmsPolicyLevelSettings_ClearType NmsPolicyLevelSettings_ClearType_ClearType_MIN = static_cast<NmsPolicyLevelSettings_ClearType>(0);
constexpr NmsPolicyLevelSettings_ClearType NmsPolicyLevelSettings_ClearType_ClearType_MAX = static_cast<NmsPolicyLevelSettings_ClearType>(3);
constexpr int NmsPolicyLevelSettings_ClearType_ClearType_ARRAYSIZE = 3 + 1;
const ::google::protobuf::EnumDescriptor*
NmsPolicyLevelSettings_ClearType_descriptor();
template <typename T>
const std::string& NmsPolicyLevelSettings_ClearType_Name(T value) {
  static_assert(std::is_same<T, NmsPolicyLevelSettings_ClearType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to ClearType_Name().");
  return NmsPolicyLevelSettings_ClearType_Name(static_cast<NmsPolicyLevelSettings_ClearType>(value));
}
template <>
inline const std::string& NmsPolicyLevelSettings_ClearType_Name(NmsPolicyLevelSettings_ClearType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<NmsPolicyLevelSettings_ClearType_descriptor,
                                                 0, 3>(
      static_cast<int>(value));
}
inline bool NmsPolicyLevelSettings_ClearType_Parse(absl::string_view name, NmsPolicyLevelSettings_ClearType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<NmsPolicyLevelSettings_ClearType>(
      NmsPolicyLevelSettings_ClearType_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class NmsPolicySettings_EvaluationConfig final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.alerting.public.v202505.NmsPolicySettings.EvaluationConfig) */ {
 public:
  inline NmsPolicySettings_EvaluationConfig() : NmsPolicySettings_EvaluationConfig(nullptr) {}
  ~NmsPolicySettings_EvaluationConfig() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(NmsPolicySettings_EvaluationConfig* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(NmsPolicySettings_EvaluationConfig));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NmsPolicySettings_EvaluationConfig(
      ::google::protobuf::internal::ConstantInitialized);

  inline NmsPolicySettings_EvaluationConfig(const NmsPolicySettings_EvaluationConfig& from) : NmsPolicySettings_EvaluationConfig(nullptr, from) {}
  inline NmsPolicySettings_EvaluationConfig(NmsPolicySettings_EvaluationConfig&& from) noexcept
      : NmsPolicySettings_EvaluationConfig(nullptr, std::move(from)) {}
  inline NmsPolicySettings_EvaluationConfig& operator=(const NmsPolicySettings_EvaluationConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline NmsPolicySettings_EvaluationConfig& operator=(NmsPolicySettings_EvaluationConfig&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NmsPolicySettings_EvaluationConfig& default_instance() {
    return *internal_default_instance();
  }
  static inline const NmsPolicySettings_EvaluationConfig* internal_default_instance() {
    return reinterpret_cast<const NmsPolicySettings_EvaluationConfig*>(
        &_NmsPolicySettings_EvaluationConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(NmsPolicySettings_EvaluationConfig& a, NmsPolicySettings_EvaluationConfig& b) { a.Swap(&b); }
  inline void Swap(NmsPolicySettings_EvaluationConfig* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NmsPolicySettings_EvaluationConfig* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NmsPolicySettings_EvaluationConfig* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<NmsPolicySettings_EvaluationConfig>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NmsPolicySettings_EvaluationConfig& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NmsPolicySettings_EvaluationConfig& from) { NmsPolicySettings_EvaluationConfig::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(NmsPolicySettings_EvaluationConfig* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.alerting.public.v202505.NmsPolicySettings.EvaluationConfig"; }

 protected:
  explicit NmsPolicySettings_EvaluationConfig(::google::protobuf::Arena* arena);
  NmsPolicySettings_EvaluationConfig(::google::protobuf::Arena* arena, const NmsPolicySettings_EvaluationConfig& from);
  NmsPolicySettings_EvaluationConfig(::google::protobuf::Arena* arena, NmsPolicySettings_EvaluationConfig&& from) noexcept
      : NmsPolicySettings_EvaluationConfig(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kActivationDelayFieldNumber = 1,
    kClearanceDelayFieldNumber = 2,
  };
  // .google.protobuf.Duration activation_delay = 1 [json_name = "activationDelay"];
  bool has_activation_delay() const;
  void clear_activation_delay() ;
  const ::google::protobuf::Duration& activation_delay() const;
  PROTOBUF_NODISCARD ::google::protobuf::Duration* release_activation_delay();
  ::google::protobuf::Duration* mutable_activation_delay();
  void set_allocated_activation_delay(::google::protobuf::Duration* value);
  void unsafe_arena_set_allocated_activation_delay(::google::protobuf::Duration* value);
  ::google::protobuf::Duration* unsafe_arena_release_activation_delay();

  private:
  const ::google::protobuf::Duration& _internal_activation_delay() const;
  ::google::protobuf::Duration* _internal_mutable_activation_delay();

  public:
  // .google.protobuf.Duration clearance_delay = 2 [json_name = "clearanceDelay"];
  bool has_clearance_delay() const;
  void clear_clearance_delay() ;
  const ::google::protobuf::Duration& clearance_delay() const;
  PROTOBUF_NODISCARD ::google::protobuf::Duration* release_clearance_delay();
  ::google::protobuf::Duration* mutable_clearance_delay();
  void set_allocated_clearance_delay(::google::protobuf::Duration* value);
  void unsafe_arena_set_allocated_clearance_delay(::google::protobuf::Duration* value);
  ::google::protobuf::Duration* unsafe_arena_release_clearance_delay();

  private:
  const ::google::protobuf::Duration& _internal_clearance_delay() const;
  ::google::protobuf::Duration* _internal_mutable_clearance_delay();

  public:
  // @@protoc_insertion_point(class_scope:kentik.alerting.public.v202505.NmsPolicySettings.EvaluationConfig)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const NmsPolicySettings_EvaluationConfig& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::Duration* activation_delay_;
    ::google::protobuf::Duration* clearance_delay_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2falerting_2fpublic_2fv202505_2fpolicy_5fnms_2eproto;
};
// -------------------------------------------------------------------

class NmsPolicySettings_DatasetConfig final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.alerting.public.v202505.NmsPolicySettings.DatasetConfig) */ {
 public:
  inline NmsPolicySettings_DatasetConfig() : NmsPolicySettings_DatasetConfig(nullptr) {}
  ~NmsPolicySettings_DatasetConfig() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(NmsPolicySettings_DatasetConfig* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(NmsPolicySettings_DatasetConfig));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NmsPolicySettings_DatasetConfig(
      ::google::protobuf::internal::ConstantInitialized);

  inline NmsPolicySettings_DatasetConfig(const NmsPolicySettings_DatasetConfig& from) : NmsPolicySettings_DatasetConfig(nullptr, from) {}
  inline NmsPolicySettings_DatasetConfig(NmsPolicySettings_DatasetConfig&& from) noexcept
      : NmsPolicySettings_DatasetConfig(nullptr, std::move(from)) {}
  inline NmsPolicySettings_DatasetConfig& operator=(const NmsPolicySettings_DatasetConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline NmsPolicySettings_DatasetConfig& operator=(NmsPolicySettings_DatasetConfig&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NmsPolicySettings_DatasetConfig& default_instance() {
    return *internal_default_instance();
  }
  static inline const NmsPolicySettings_DatasetConfig* internal_default_instance() {
    return reinterpret_cast<const NmsPolicySettings_DatasetConfig*>(
        &_NmsPolicySettings_DatasetConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(NmsPolicySettings_DatasetConfig& a, NmsPolicySettings_DatasetConfig& b) { a.Swap(&b); }
  inline void Swap(NmsPolicySettings_DatasetConfig* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NmsPolicySettings_DatasetConfig* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NmsPolicySettings_DatasetConfig* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<NmsPolicySettings_DatasetConfig>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NmsPolicySettings_DatasetConfig& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NmsPolicySettings_DatasetConfig& from) { NmsPolicySettings_DatasetConfig::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(NmsPolicySettings_DatasetConfig* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.alerting.public.v202505.NmsPolicySettings.DatasetConfig"; }

 protected:
  explicit NmsPolicySettings_DatasetConfig(::google::protobuf::Arena* arena);
  NmsPolicySettings_DatasetConfig(::google::protobuf::Arena* arena, const NmsPolicySettings_DatasetConfig& from);
  NmsPolicySettings_DatasetConfig(::google::protobuf::Arena* arena, NmsPolicySettings_DatasetConfig&& from) noexcept
      : NmsPolicySettings_DatasetConfig(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMeasurementsFieldNumber = 3,
    kCustomDimensionsFieldNumber = 4,
    kSourcesFieldNumber = 1,
    kFiltersFieldNumber = 2,
  };
  // repeated string measurements = 3 [json_name = "measurements"];
  int measurements_size() const;
  private:
  int _internal_measurements_size() const;

  public:
  void clear_measurements() ;
  const std::string& measurements(int index) const;
  std::string* mutable_measurements(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_measurements(int index, Arg_&& value, Args_... args);
  std::string* add_measurements();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_measurements(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& measurements() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_measurements();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_measurements() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_measurements();

  public:
  // repeated string custom_dimensions = 4 [json_name = "customDimensions"];
  int custom_dimensions_size() const;
  private:
  int _internal_custom_dimensions_size() const;

  public:
  void clear_custom_dimensions() ;
  const std::string& custom_dimensions(int index) const;
  std::string* mutable_custom_dimensions(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_custom_dimensions(int index, Arg_&& value, Args_... args);
  std::string* add_custom_dimensions();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_custom_dimensions(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& custom_dimensions() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_custom_dimensions();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_custom_dimensions() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_custom_dimensions();

  public:
  // .kentik.alerting.public.v202505.PolicyDataSources sources = 1 [json_name = "sources"];
  bool has_sources() const;
  void clear_sources() ;
  const ::kentik::alerting::public_::v202505::PolicyDataSources& sources() const;
  PROTOBUF_NODISCARD ::kentik::alerting::public_::v202505::PolicyDataSources* release_sources();
  ::kentik::alerting::public_::v202505::PolicyDataSources* mutable_sources();
  void set_allocated_sources(::kentik::alerting::public_::v202505::PolicyDataSources* value);
  void unsafe_arena_set_allocated_sources(::kentik::alerting::public_::v202505::PolicyDataSources* value);
  ::kentik::alerting::public_::v202505::PolicyDataSources* unsafe_arena_release_sources();

  private:
  const ::kentik::alerting::public_::v202505::PolicyDataSources& _internal_sources() const;
  ::kentik::alerting::public_::v202505::PolicyDataSources* _internal_mutable_sources();

  public:
  // .kentik.alerting.public.v202505.PolicyFilters filters = 2 [json_name = "filters"];
  bool has_filters() const;
  void clear_filters() ;
  const ::kentik::alerting::public_::v202505::PolicyFilters& filters() const;
  PROTOBUF_NODISCARD ::kentik::alerting::public_::v202505::PolicyFilters* release_filters();
  ::kentik::alerting::public_::v202505::PolicyFilters* mutable_filters();
  void set_allocated_filters(::kentik::alerting::public_::v202505::PolicyFilters* value);
  void unsafe_arena_set_allocated_filters(::kentik::alerting::public_::v202505::PolicyFilters* value);
  ::kentik::alerting::public_::v202505::PolicyFilters* unsafe_arena_release_filters();

  private:
  const ::kentik::alerting::public_::v202505::PolicyFilters& _internal_filters() const;
  ::kentik::alerting::public_::v202505::PolicyFilters* _internal_mutable_filters();

  public:
  // @@protoc_insertion_point(class_scope:kentik.alerting.public.v202505.NmsPolicySettings.DatasetConfig)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 2,
      100, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const NmsPolicySettings_DatasetConfig& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<std::string> measurements_;
    ::google::protobuf::RepeatedPtrField<std::string> custom_dimensions_;
    ::kentik::alerting::public_::v202505::PolicyDataSources* sources_;
    ::kentik::alerting::public_::v202505::PolicyFilters* filters_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2falerting_2fpublic_2fv202505_2fpolicy_5fnms_2eproto;
};
// -------------------------------------------------------------------

class NmsPolicySettings final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.alerting.public.v202505.NmsPolicySettings) */ {
 public:
  inline NmsPolicySettings() : NmsPolicySettings(nullptr) {}
  ~NmsPolicySettings() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(NmsPolicySettings* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(NmsPolicySettings));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NmsPolicySettings(
      ::google::protobuf::internal::ConstantInitialized);

  inline NmsPolicySettings(const NmsPolicySettings& from) : NmsPolicySettings(nullptr, from) {}
  inline NmsPolicySettings(NmsPolicySettings&& from) noexcept
      : NmsPolicySettings(nullptr, std::move(from)) {}
  inline NmsPolicySettings& operator=(const NmsPolicySettings& from) {
    CopyFrom(from);
    return *this;
  }
  inline NmsPolicySettings& operator=(NmsPolicySettings&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NmsPolicySettings& default_instance() {
    return *internal_default_instance();
  }
  static inline const NmsPolicySettings* internal_default_instance() {
    return reinterpret_cast<const NmsPolicySettings*>(
        &_NmsPolicySettings_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(NmsPolicySettings& a, NmsPolicySettings& b) { a.Swap(&b); }
  inline void Swap(NmsPolicySettings* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NmsPolicySettings* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NmsPolicySettings* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<NmsPolicySettings>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NmsPolicySettings& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NmsPolicySettings& from) { NmsPolicySettings::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(NmsPolicySettings* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.alerting.public.v202505.NmsPolicySettings"; }

 protected:
  explicit NmsPolicySettings(::google::protobuf::Arena* arena);
  NmsPolicySettings(::google::protobuf::Arena* arena, const NmsPolicySettings& from);
  NmsPolicySettings(::google::protobuf::Arena* arena, NmsPolicySettings&& from) noexcept
      : NmsPolicySettings(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using DatasetConfig = NmsPolicySettings_DatasetConfig;
  using EvaluationConfig = NmsPolicySettings_EvaluationConfig;

  // accessors -------------------------------------------------------
  enum : int {
    kDatasetFieldNumber = 1,
    kEvaluationFieldNumber = 2,
  };
  // .kentik.alerting.public.v202505.NmsPolicySettings.DatasetConfig dataset = 1 [json_name = "dataset"];
  bool has_dataset() const;
  void clear_dataset() ;
  const ::kentik::alerting::public_::v202505::NmsPolicySettings_DatasetConfig& dataset() const;
  PROTOBUF_NODISCARD ::kentik::alerting::public_::v202505::NmsPolicySettings_DatasetConfig* release_dataset();
  ::kentik::alerting::public_::v202505::NmsPolicySettings_DatasetConfig* mutable_dataset();
  void set_allocated_dataset(::kentik::alerting::public_::v202505::NmsPolicySettings_DatasetConfig* value);
  void unsafe_arena_set_allocated_dataset(::kentik::alerting::public_::v202505::NmsPolicySettings_DatasetConfig* value);
  ::kentik::alerting::public_::v202505::NmsPolicySettings_DatasetConfig* unsafe_arena_release_dataset();

  private:
  const ::kentik::alerting::public_::v202505::NmsPolicySettings_DatasetConfig& _internal_dataset() const;
  ::kentik::alerting::public_::v202505::NmsPolicySettings_DatasetConfig* _internal_mutable_dataset();

  public:
  // .kentik.alerting.public.v202505.NmsPolicySettings.EvaluationConfig evaluation = 2 [json_name = "evaluation"];
  bool has_evaluation() const;
  void clear_evaluation() ;
  const ::kentik::alerting::public_::v202505::NmsPolicySettings_EvaluationConfig& evaluation() const;
  PROTOBUF_NODISCARD ::kentik::alerting::public_::v202505::NmsPolicySettings_EvaluationConfig* release_evaluation();
  ::kentik::alerting::public_::v202505::NmsPolicySettings_EvaluationConfig* mutable_evaluation();
  void set_allocated_evaluation(::kentik::alerting::public_::v202505::NmsPolicySettings_EvaluationConfig* value);
  void unsafe_arena_set_allocated_evaluation(::kentik::alerting::public_::v202505::NmsPolicySettings_EvaluationConfig* value);
  ::kentik::alerting::public_::v202505::NmsPolicySettings_EvaluationConfig* unsafe_arena_release_evaluation();

  private:
  const ::kentik::alerting::public_::v202505::NmsPolicySettings_EvaluationConfig& _internal_evaluation() const;
  ::kentik::alerting::public_::v202505::NmsPolicySettings_EvaluationConfig* _internal_mutable_evaluation();

  public:
  // @@protoc_insertion_point(class_scope:kentik.alerting.public.v202505.NmsPolicySettings)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const NmsPolicySettings& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::kentik::alerting::public_::v202505::NmsPolicySettings_DatasetConfig* dataset_;
    ::kentik::alerting::public_::v202505::NmsPolicySettings_EvaluationConfig* evaluation_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2falerting_2fpublic_2fv202505_2fpolicy_5fnms_2eproto;
};
// -------------------------------------------------------------------

class NmsPolicyLevelSettings final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.alerting.public.v202505.NmsPolicyLevelSettings) */ {
 public:
  inline NmsPolicyLevelSettings() : NmsPolicyLevelSettings(nullptr) {}
  ~NmsPolicyLevelSettings() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(NmsPolicyLevelSettings* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(NmsPolicyLevelSettings));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NmsPolicyLevelSettings(
      ::google::protobuf::internal::ConstantInitialized);

  inline NmsPolicyLevelSettings(const NmsPolicyLevelSettings& from) : NmsPolicyLevelSettings(nullptr, from) {}
  inline NmsPolicyLevelSettings(NmsPolicyLevelSettings&& from) noexcept
      : NmsPolicyLevelSettings(nullptr, std::move(from)) {}
  inline NmsPolicyLevelSettings& operator=(const NmsPolicyLevelSettings& from) {
    CopyFrom(from);
    return *this;
  }
  inline NmsPolicyLevelSettings& operator=(NmsPolicyLevelSettings&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NmsPolicyLevelSettings& default_instance() {
    return *internal_default_instance();
  }
  static inline const NmsPolicyLevelSettings* internal_default_instance() {
    return reinterpret_cast<const NmsPolicyLevelSettings*>(
        &_NmsPolicyLevelSettings_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(NmsPolicyLevelSettings& a, NmsPolicyLevelSettings& b) { a.Swap(&b); }
  inline void Swap(NmsPolicyLevelSettings* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NmsPolicyLevelSettings* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NmsPolicyLevelSettings* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<NmsPolicyLevelSettings>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NmsPolicyLevelSettings& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NmsPolicyLevelSettings& from) { NmsPolicyLevelSettings::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(NmsPolicyLevelSettings* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.alerting.public.v202505.NmsPolicyLevelSettings"; }

 protected:
  explicit NmsPolicyLevelSettings(::google::protobuf::Arena* arena);
  NmsPolicyLevelSettings(::google::protobuf::Arena* arena, const NmsPolicyLevelSettings& from);
  NmsPolicyLevelSettings(::google::protobuf::Arena* arena, NmsPolicyLevelSettings&& from) noexcept
      : NmsPolicyLevelSettings(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using ClearType = NmsPolicyLevelSettings_ClearType;
  static constexpr ClearType CLEAR_TYPE_UNSPECIFIED = NmsPolicyLevelSettings_ClearType_CLEAR_TYPE_UNSPECIFIED;
  static constexpr ClearType CLEAR_TYPE_CLEAR_MANUAL = NmsPolicyLevelSettings_ClearType_CLEAR_TYPE_CLEAR_MANUAL;
  static constexpr ClearType CLEAR_TYPE_CLEAR_UNLESS_ACTIVATED = NmsPolicyLevelSettings_ClearType_CLEAR_TYPE_CLEAR_UNLESS_ACTIVATED;
  static inline bool ClearType_IsValid(int value) {
    return NmsPolicyLevelSettings_ClearType_IsValid(value);
  }
  static constexpr ClearType ClearType_MIN = NmsPolicyLevelSettings_ClearType_ClearType_MIN;
  static constexpr ClearType ClearType_MAX = NmsPolicyLevelSettings_ClearType_ClearType_MAX;
  static constexpr int ClearType_ARRAYSIZE = NmsPolicyLevelSettings_ClearType_ClearType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* ClearType_descriptor() {
    return NmsPolicyLevelSettings_ClearType_descriptor();
  }
  template <typename T>
  static inline const std::string& ClearType_Name(T value) {
    return NmsPolicyLevelSettings_ClearType_Name(value);
  }
  static inline bool ClearType_Parse(absl::string_view name, ClearType* value) {
    return NmsPolicyLevelSettings_ClearType_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kActivateFieldNumber = 1,
    kConditionalFieldNumber = 3,
    kClearTypeFieldNumber = 2,
  };
  // .kentik.alerting.public.v202505.NmsActivateOrClearConditions activate = 1 [json_name = "activate"];
  bool has_activate() const;
  void clear_activate() ;
  const ::kentik::alerting::public_::v202505::NmsActivateOrClearConditions& activate() const;
  PROTOBUF_NODISCARD ::kentik::alerting::public_::v202505::NmsActivateOrClearConditions* release_activate();
  ::kentik::alerting::public_::v202505::NmsActivateOrClearConditions* mutable_activate();
  void set_allocated_activate(::kentik::alerting::public_::v202505::NmsActivateOrClearConditions* value);
  void unsafe_arena_set_allocated_activate(::kentik::alerting::public_::v202505::NmsActivateOrClearConditions* value);
  ::kentik::alerting::public_::v202505::NmsActivateOrClearConditions* unsafe_arena_release_activate();

  private:
  const ::kentik::alerting::public_::v202505::NmsActivateOrClearConditions& _internal_activate() const;
  ::kentik::alerting::public_::v202505::NmsActivateOrClearConditions* _internal_mutable_activate();

  public:
  // .kentik.alerting.public.v202505.NmsActivateOrClearConditions conditional = 3 [json_name = "conditional"];
  bool has_conditional() const;
  void clear_conditional() ;
  const ::kentik::alerting::public_::v202505::NmsActivateOrClearConditions& conditional() const;
  PROTOBUF_NODISCARD ::kentik::alerting::public_::v202505::NmsActivateOrClearConditions* release_conditional();
  ::kentik::alerting::public_::v202505::NmsActivateOrClearConditions* mutable_conditional();
  void set_allocated_conditional(::kentik::alerting::public_::v202505::NmsActivateOrClearConditions* value);
  void unsafe_arena_set_allocated_conditional(::kentik::alerting::public_::v202505::NmsActivateOrClearConditions* value);
  ::kentik::alerting::public_::v202505::NmsActivateOrClearConditions* unsafe_arena_release_conditional();

  private:
  const ::kentik::alerting::public_::v202505::NmsActivateOrClearConditions& _internal_conditional() const;
  ::kentik::alerting::public_::v202505::NmsActivateOrClearConditions* _internal_mutable_conditional();

  public:
  // .kentik.alerting.public.v202505.NmsPolicyLevelSettings.ClearType clear_type = 2 [json_name = "clearType"];
  void clear_clear_type() ;
  ::kentik::alerting::public_::v202505::NmsPolicyLevelSettings_ClearType clear_type() const;
  void set_clear_type(::kentik::alerting::public_::v202505::NmsPolicyLevelSettings_ClearType value);

  private:
  ::kentik::alerting::public_::v202505::NmsPolicyLevelSettings_ClearType _internal_clear_type() const;
  void _internal_set_clear_type(::kentik::alerting::public_::v202505::NmsPolicyLevelSettings_ClearType value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.alerting.public.v202505.NmsPolicyLevelSettings)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 2,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const NmsPolicyLevelSettings& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::kentik::alerting::public_::v202505::NmsActivateOrClearConditions* activate_;
    ::kentik::alerting::public_::v202505::NmsActivateOrClearConditions* conditional_;
    int clear_type_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2falerting_2fpublic_2fv202505_2fpolicy_5fnms_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// NmsPolicySettings_DatasetConfig

// .kentik.alerting.public.v202505.PolicyDataSources sources = 1 [json_name = "sources"];
inline bool NmsPolicySettings_DatasetConfig::has_sources() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.sources_ != nullptr);
  return value;
}
inline const ::kentik::alerting::public_::v202505::PolicyDataSources& NmsPolicySettings_DatasetConfig::_internal_sources() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::alerting::public_::v202505::PolicyDataSources* p = _impl_.sources_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::alerting::public_::v202505::PolicyDataSources&>(::kentik::alerting::public_::v202505::_PolicyDataSources_default_instance_);
}
inline const ::kentik::alerting::public_::v202505::PolicyDataSources& NmsPolicySettings_DatasetConfig::sources() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.NmsPolicySettings.DatasetConfig.sources)
  return _internal_sources();
}
inline void NmsPolicySettings_DatasetConfig::unsafe_arena_set_allocated_sources(::kentik::alerting::public_::v202505::PolicyDataSources* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.sources_);
  }
  _impl_.sources_ = reinterpret_cast<::kentik::alerting::public_::v202505::PolicyDataSources*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.alerting.public.v202505.NmsPolicySettings.DatasetConfig.sources)
}
inline ::kentik::alerting::public_::v202505::PolicyDataSources* NmsPolicySettings_DatasetConfig::release_sources() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::alerting::public_::v202505::PolicyDataSources* released = _impl_.sources_;
  _impl_.sources_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::alerting::public_::v202505::PolicyDataSources* NmsPolicySettings_DatasetConfig::unsafe_arena_release_sources() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.alerting.public.v202505.NmsPolicySettings.DatasetConfig.sources)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::alerting::public_::v202505::PolicyDataSources* temp = _impl_.sources_;
  _impl_.sources_ = nullptr;
  return temp;
}
inline ::kentik::alerting::public_::v202505::PolicyDataSources* NmsPolicySettings_DatasetConfig::_internal_mutable_sources() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.sources_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::alerting::public_::v202505::PolicyDataSources>(GetArena());
    _impl_.sources_ = reinterpret_cast<::kentik::alerting::public_::v202505::PolicyDataSources*>(p);
  }
  return _impl_.sources_;
}
inline ::kentik::alerting::public_::v202505::PolicyDataSources* NmsPolicySettings_DatasetConfig::mutable_sources() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::kentik::alerting::public_::v202505::PolicyDataSources* _msg = _internal_mutable_sources();
  // @@protoc_insertion_point(field_mutable:kentik.alerting.public.v202505.NmsPolicySettings.DatasetConfig.sources)
  return _msg;
}
inline void NmsPolicySettings_DatasetConfig::set_allocated_sources(::kentik::alerting::public_::v202505::PolicyDataSources* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.sources_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.sources_ = reinterpret_cast<::kentik::alerting::public_::v202505::PolicyDataSources*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.alerting.public.v202505.NmsPolicySettings.DatasetConfig.sources)
}

// .kentik.alerting.public.v202505.PolicyFilters filters = 2 [json_name = "filters"];
inline bool NmsPolicySettings_DatasetConfig::has_filters() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.filters_ != nullptr);
  return value;
}
inline const ::kentik::alerting::public_::v202505::PolicyFilters& NmsPolicySettings_DatasetConfig::_internal_filters() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::alerting::public_::v202505::PolicyFilters* p = _impl_.filters_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::alerting::public_::v202505::PolicyFilters&>(::kentik::alerting::public_::v202505::_PolicyFilters_default_instance_);
}
inline const ::kentik::alerting::public_::v202505::PolicyFilters& NmsPolicySettings_DatasetConfig::filters() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.NmsPolicySettings.DatasetConfig.filters)
  return _internal_filters();
}
inline void NmsPolicySettings_DatasetConfig::unsafe_arena_set_allocated_filters(::kentik::alerting::public_::v202505::PolicyFilters* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.filters_);
  }
  _impl_.filters_ = reinterpret_cast<::kentik::alerting::public_::v202505::PolicyFilters*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.alerting.public.v202505.NmsPolicySettings.DatasetConfig.filters)
}
inline ::kentik::alerting::public_::v202505::PolicyFilters* NmsPolicySettings_DatasetConfig::release_filters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::kentik::alerting::public_::v202505::PolicyFilters* released = _impl_.filters_;
  _impl_.filters_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::alerting::public_::v202505::PolicyFilters* NmsPolicySettings_DatasetConfig::unsafe_arena_release_filters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.alerting.public.v202505.NmsPolicySettings.DatasetConfig.filters)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::kentik::alerting::public_::v202505::PolicyFilters* temp = _impl_.filters_;
  _impl_.filters_ = nullptr;
  return temp;
}
inline ::kentik::alerting::public_::v202505::PolicyFilters* NmsPolicySettings_DatasetConfig::_internal_mutable_filters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.filters_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::alerting::public_::v202505::PolicyFilters>(GetArena());
    _impl_.filters_ = reinterpret_cast<::kentik::alerting::public_::v202505::PolicyFilters*>(p);
  }
  return _impl_.filters_;
}
inline ::kentik::alerting::public_::v202505::PolicyFilters* NmsPolicySettings_DatasetConfig::mutable_filters() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::kentik::alerting::public_::v202505::PolicyFilters* _msg = _internal_mutable_filters();
  // @@protoc_insertion_point(field_mutable:kentik.alerting.public.v202505.NmsPolicySettings.DatasetConfig.filters)
  return _msg;
}
inline void NmsPolicySettings_DatasetConfig::set_allocated_filters(::kentik::alerting::public_::v202505::PolicyFilters* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.filters_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.filters_ = reinterpret_cast<::kentik::alerting::public_::v202505::PolicyFilters*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.alerting.public.v202505.NmsPolicySettings.DatasetConfig.filters)
}

// repeated string measurements = 3 [json_name = "measurements"];
inline int NmsPolicySettings_DatasetConfig::_internal_measurements_size() const {
  return _internal_measurements().size();
}
inline int NmsPolicySettings_DatasetConfig::measurements_size() const {
  return _internal_measurements_size();
}
inline void NmsPolicySettings_DatasetConfig::clear_measurements() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.measurements_.Clear();
}
inline std::string* NmsPolicySettings_DatasetConfig::add_measurements() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_measurements()->Add();
  // @@protoc_insertion_point(field_add_mutable:kentik.alerting.public.v202505.NmsPolicySettings.DatasetConfig.measurements)
  return _s;
}
inline const std::string& NmsPolicySettings_DatasetConfig::measurements(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.NmsPolicySettings.DatasetConfig.measurements)
  return _internal_measurements().Get(index);
}
inline std::string* NmsPolicySettings_DatasetConfig::mutable_measurements(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.alerting.public.v202505.NmsPolicySettings.DatasetConfig.measurements)
  return _internal_mutable_measurements()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void NmsPolicySettings_DatasetConfig::set_measurements(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_measurements()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:kentik.alerting.public.v202505.NmsPolicySettings.DatasetConfig.measurements)
}
template <typename Arg_, typename... Args_>
inline void NmsPolicySettings_DatasetConfig::add_measurements(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_measurements(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:kentik.alerting.public.v202505.NmsPolicySettings.DatasetConfig.measurements)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
NmsPolicySettings_DatasetConfig::measurements() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.alerting.public.v202505.NmsPolicySettings.DatasetConfig.measurements)
  return _internal_measurements();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
NmsPolicySettings_DatasetConfig::mutable_measurements() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.alerting.public.v202505.NmsPolicySettings.DatasetConfig.measurements)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_measurements();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
NmsPolicySettings_DatasetConfig::_internal_measurements() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.measurements_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
NmsPolicySettings_DatasetConfig::_internal_mutable_measurements() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.measurements_;
}

// repeated string custom_dimensions = 4 [json_name = "customDimensions"];
inline int NmsPolicySettings_DatasetConfig::_internal_custom_dimensions_size() const {
  return _internal_custom_dimensions().size();
}
inline int NmsPolicySettings_DatasetConfig::custom_dimensions_size() const {
  return _internal_custom_dimensions_size();
}
inline void NmsPolicySettings_DatasetConfig::clear_custom_dimensions() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.custom_dimensions_.Clear();
}
inline std::string* NmsPolicySettings_DatasetConfig::add_custom_dimensions() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_custom_dimensions()->Add();
  // @@protoc_insertion_point(field_add_mutable:kentik.alerting.public.v202505.NmsPolicySettings.DatasetConfig.custom_dimensions)
  return _s;
}
inline const std::string& NmsPolicySettings_DatasetConfig::custom_dimensions(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.NmsPolicySettings.DatasetConfig.custom_dimensions)
  return _internal_custom_dimensions().Get(index);
}
inline std::string* NmsPolicySettings_DatasetConfig::mutable_custom_dimensions(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.alerting.public.v202505.NmsPolicySettings.DatasetConfig.custom_dimensions)
  return _internal_mutable_custom_dimensions()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void NmsPolicySettings_DatasetConfig::set_custom_dimensions(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_custom_dimensions()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:kentik.alerting.public.v202505.NmsPolicySettings.DatasetConfig.custom_dimensions)
}
template <typename Arg_, typename... Args_>
inline void NmsPolicySettings_DatasetConfig::add_custom_dimensions(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_custom_dimensions(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:kentik.alerting.public.v202505.NmsPolicySettings.DatasetConfig.custom_dimensions)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
NmsPolicySettings_DatasetConfig::custom_dimensions() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.alerting.public.v202505.NmsPolicySettings.DatasetConfig.custom_dimensions)
  return _internal_custom_dimensions();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
NmsPolicySettings_DatasetConfig::mutable_custom_dimensions() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.alerting.public.v202505.NmsPolicySettings.DatasetConfig.custom_dimensions)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_custom_dimensions();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
NmsPolicySettings_DatasetConfig::_internal_custom_dimensions() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.custom_dimensions_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
NmsPolicySettings_DatasetConfig::_internal_mutable_custom_dimensions() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.custom_dimensions_;
}

// -------------------------------------------------------------------

// NmsPolicySettings_EvaluationConfig

// .google.protobuf.Duration activation_delay = 1 [json_name = "activationDelay"];
inline bool NmsPolicySettings_EvaluationConfig::has_activation_delay() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.activation_delay_ != nullptr);
  return value;
}
inline const ::google::protobuf::Duration& NmsPolicySettings_EvaluationConfig::_internal_activation_delay() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Duration* p = _impl_.activation_delay_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Duration&>(::google::protobuf::_Duration_default_instance_);
}
inline const ::google::protobuf::Duration& NmsPolicySettings_EvaluationConfig::activation_delay() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.NmsPolicySettings.EvaluationConfig.activation_delay)
  return _internal_activation_delay();
}
inline void NmsPolicySettings_EvaluationConfig::unsafe_arena_set_allocated_activation_delay(::google::protobuf::Duration* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.activation_delay_);
  }
  _impl_.activation_delay_ = reinterpret_cast<::google::protobuf::Duration*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.alerting.public.v202505.NmsPolicySettings.EvaluationConfig.activation_delay)
}
inline ::google::protobuf::Duration* NmsPolicySettings_EvaluationConfig::release_activation_delay() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Duration* released = _impl_.activation_delay_;
  _impl_.activation_delay_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Duration* NmsPolicySettings_EvaluationConfig::unsafe_arena_release_activation_delay() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.alerting.public.v202505.NmsPolicySettings.EvaluationConfig.activation_delay)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Duration* temp = _impl_.activation_delay_;
  _impl_.activation_delay_ = nullptr;
  return temp;
}
inline ::google::protobuf::Duration* NmsPolicySettings_EvaluationConfig::_internal_mutable_activation_delay() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.activation_delay_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Duration>(GetArena());
    _impl_.activation_delay_ = reinterpret_cast<::google::protobuf::Duration*>(p);
  }
  return _impl_.activation_delay_;
}
inline ::google::protobuf::Duration* NmsPolicySettings_EvaluationConfig::mutable_activation_delay() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::google::protobuf::Duration* _msg = _internal_mutable_activation_delay();
  // @@protoc_insertion_point(field_mutable:kentik.alerting.public.v202505.NmsPolicySettings.EvaluationConfig.activation_delay)
  return _msg;
}
inline void NmsPolicySettings_EvaluationConfig::set_allocated_activation_delay(::google::protobuf::Duration* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.activation_delay_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.activation_delay_ = reinterpret_cast<::google::protobuf::Duration*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.alerting.public.v202505.NmsPolicySettings.EvaluationConfig.activation_delay)
}

// .google.protobuf.Duration clearance_delay = 2 [json_name = "clearanceDelay"];
inline bool NmsPolicySettings_EvaluationConfig::has_clearance_delay() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.clearance_delay_ != nullptr);
  return value;
}
inline const ::google::protobuf::Duration& NmsPolicySettings_EvaluationConfig::_internal_clearance_delay() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Duration* p = _impl_.clearance_delay_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Duration&>(::google::protobuf::_Duration_default_instance_);
}
inline const ::google::protobuf::Duration& NmsPolicySettings_EvaluationConfig::clearance_delay() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.NmsPolicySettings.EvaluationConfig.clearance_delay)
  return _internal_clearance_delay();
}
inline void NmsPolicySettings_EvaluationConfig::unsafe_arena_set_allocated_clearance_delay(::google::protobuf::Duration* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.clearance_delay_);
  }
  _impl_.clearance_delay_ = reinterpret_cast<::google::protobuf::Duration*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.alerting.public.v202505.NmsPolicySettings.EvaluationConfig.clearance_delay)
}
inline ::google::protobuf::Duration* NmsPolicySettings_EvaluationConfig::release_clearance_delay() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Duration* released = _impl_.clearance_delay_;
  _impl_.clearance_delay_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Duration* NmsPolicySettings_EvaluationConfig::unsafe_arena_release_clearance_delay() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.alerting.public.v202505.NmsPolicySettings.EvaluationConfig.clearance_delay)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Duration* temp = _impl_.clearance_delay_;
  _impl_.clearance_delay_ = nullptr;
  return temp;
}
inline ::google::protobuf::Duration* NmsPolicySettings_EvaluationConfig::_internal_mutable_clearance_delay() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.clearance_delay_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Duration>(GetArena());
    _impl_.clearance_delay_ = reinterpret_cast<::google::protobuf::Duration*>(p);
  }
  return _impl_.clearance_delay_;
}
inline ::google::protobuf::Duration* NmsPolicySettings_EvaluationConfig::mutable_clearance_delay() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::google::protobuf::Duration* _msg = _internal_mutable_clearance_delay();
  // @@protoc_insertion_point(field_mutable:kentik.alerting.public.v202505.NmsPolicySettings.EvaluationConfig.clearance_delay)
  return _msg;
}
inline void NmsPolicySettings_EvaluationConfig::set_allocated_clearance_delay(::google::protobuf::Duration* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.clearance_delay_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.clearance_delay_ = reinterpret_cast<::google::protobuf::Duration*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.alerting.public.v202505.NmsPolicySettings.EvaluationConfig.clearance_delay)
}

// -------------------------------------------------------------------

// NmsPolicySettings

// .kentik.alerting.public.v202505.NmsPolicySettings.DatasetConfig dataset = 1 [json_name = "dataset"];
inline bool NmsPolicySettings::has_dataset() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.dataset_ != nullptr);
  return value;
}
inline void NmsPolicySettings::clear_dataset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.dataset_ != nullptr) _impl_.dataset_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::kentik::alerting::public_::v202505::NmsPolicySettings_DatasetConfig& NmsPolicySettings::_internal_dataset() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::alerting::public_::v202505::NmsPolicySettings_DatasetConfig* p = _impl_.dataset_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::alerting::public_::v202505::NmsPolicySettings_DatasetConfig&>(::kentik::alerting::public_::v202505::_NmsPolicySettings_DatasetConfig_default_instance_);
}
inline const ::kentik::alerting::public_::v202505::NmsPolicySettings_DatasetConfig& NmsPolicySettings::dataset() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.NmsPolicySettings.dataset)
  return _internal_dataset();
}
inline void NmsPolicySettings::unsafe_arena_set_allocated_dataset(::kentik::alerting::public_::v202505::NmsPolicySettings_DatasetConfig* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.dataset_);
  }
  _impl_.dataset_ = reinterpret_cast<::kentik::alerting::public_::v202505::NmsPolicySettings_DatasetConfig*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.alerting.public.v202505.NmsPolicySettings.dataset)
}
inline ::kentik::alerting::public_::v202505::NmsPolicySettings_DatasetConfig* NmsPolicySettings::release_dataset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::alerting::public_::v202505::NmsPolicySettings_DatasetConfig* released = _impl_.dataset_;
  _impl_.dataset_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::alerting::public_::v202505::NmsPolicySettings_DatasetConfig* NmsPolicySettings::unsafe_arena_release_dataset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.alerting.public.v202505.NmsPolicySettings.dataset)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::alerting::public_::v202505::NmsPolicySettings_DatasetConfig* temp = _impl_.dataset_;
  _impl_.dataset_ = nullptr;
  return temp;
}
inline ::kentik::alerting::public_::v202505::NmsPolicySettings_DatasetConfig* NmsPolicySettings::_internal_mutable_dataset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.dataset_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::alerting::public_::v202505::NmsPolicySettings_DatasetConfig>(GetArena());
    _impl_.dataset_ = reinterpret_cast<::kentik::alerting::public_::v202505::NmsPolicySettings_DatasetConfig*>(p);
  }
  return _impl_.dataset_;
}
inline ::kentik::alerting::public_::v202505::NmsPolicySettings_DatasetConfig* NmsPolicySettings::mutable_dataset() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::kentik::alerting::public_::v202505::NmsPolicySettings_DatasetConfig* _msg = _internal_mutable_dataset();
  // @@protoc_insertion_point(field_mutable:kentik.alerting.public.v202505.NmsPolicySettings.dataset)
  return _msg;
}
inline void NmsPolicySettings::set_allocated_dataset(::kentik::alerting::public_::v202505::NmsPolicySettings_DatasetConfig* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.dataset_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.dataset_ = reinterpret_cast<::kentik::alerting::public_::v202505::NmsPolicySettings_DatasetConfig*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.alerting.public.v202505.NmsPolicySettings.dataset)
}

// .kentik.alerting.public.v202505.NmsPolicySettings.EvaluationConfig evaluation = 2 [json_name = "evaluation"];
inline bool NmsPolicySettings::has_evaluation() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.evaluation_ != nullptr);
  return value;
}
inline void NmsPolicySettings::clear_evaluation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.evaluation_ != nullptr) _impl_.evaluation_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::kentik::alerting::public_::v202505::NmsPolicySettings_EvaluationConfig& NmsPolicySettings::_internal_evaluation() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::alerting::public_::v202505::NmsPolicySettings_EvaluationConfig* p = _impl_.evaluation_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::alerting::public_::v202505::NmsPolicySettings_EvaluationConfig&>(::kentik::alerting::public_::v202505::_NmsPolicySettings_EvaluationConfig_default_instance_);
}
inline const ::kentik::alerting::public_::v202505::NmsPolicySettings_EvaluationConfig& NmsPolicySettings::evaluation() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.NmsPolicySettings.evaluation)
  return _internal_evaluation();
}
inline void NmsPolicySettings::unsafe_arena_set_allocated_evaluation(::kentik::alerting::public_::v202505::NmsPolicySettings_EvaluationConfig* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.evaluation_);
  }
  _impl_.evaluation_ = reinterpret_cast<::kentik::alerting::public_::v202505::NmsPolicySettings_EvaluationConfig*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.alerting.public.v202505.NmsPolicySettings.evaluation)
}
inline ::kentik::alerting::public_::v202505::NmsPolicySettings_EvaluationConfig* NmsPolicySettings::release_evaluation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::kentik::alerting::public_::v202505::NmsPolicySettings_EvaluationConfig* released = _impl_.evaluation_;
  _impl_.evaluation_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::alerting::public_::v202505::NmsPolicySettings_EvaluationConfig* NmsPolicySettings::unsafe_arena_release_evaluation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.alerting.public.v202505.NmsPolicySettings.evaluation)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::kentik::alerting::public_::v202505::NmsPolicySettings_EvaluationConfig* temp = _impl_.evaluation_;
  _impl_.evaluation_ = nullptr;
  return temp;
}
inline ::kentik::alerting::public_::v202505::NmsPolicySettings_EvaluationConfig* NmsPolicySettings::_internal_mutable_evaluation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.evaluation_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::alerting::public_::v202505::NmsPolicySettings_EvaluationConfig>(GetArena());
    _impl_.evaluation_ = reinterpret_cast<::kentik::alerting::public_::v202505::NmsPolicySettings_EvaluationConfig*>(p);
  }
  return _impl_.evaluation_;
}
inline ::kentik::alerting::public_::v202505::NmsPolicySettings_EvaluationConfig* NmsPolicySettings::mutable_evaluation() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::kentik::alerting::public_::v202505::NmsPolicySettings_EvaluationConfig* _msg = _internal_mutable_evaluation();
  // @@protoc_insertion_point(field_mutable:kentik.alerting.public.v202505.NmsPolicySettings.evaluation)
  return _msg;
}
inline void NmsPolicySettings::set_allocated_evaluation(::kentik::alerting::public_::v202505::NmsPolicySettings_EvaluationConfig* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.evaluation_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.evaluation_ = reinterpret_cast<::kentik::alerting::public_::v202505::NmsPolicySettings_EvaluationConfig*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.alerting.public.v202505.NmsPolicySettings.evaluation)
}

// -------------------------------------------------------------------

// NmsPolicyLevelSettings

// .kentik.alerting.public.v202505.NmsActivateOrClearConditions activate = 1 [json_name = "activate"];
inline bool NmsPolicyLevelSettings::has_activate() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.activate_ != nullptr);
  return value;
}
inline const ::kentik::alerting::public_::v202505::NmsActivateOrClearConditions& NmsPolicyLevelSettings::_internal_activate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::alerting::public_::v202505::NmsActivateOrClearConditions* p = _impl_.activate_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::alerting::public_::v202505::NmsActivateOrClearConditions&>(::kentik::alerting::public_::v202505::_NmsActivateOrClearConditions_default_instance_);
}
inline const ::kentik::alerting::public_::v202505::NmsActivateOrClearConditions& NmsPolicyLevelSettings::activate() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.NmsPolicyLevelSettings.activate)
  return _internal_activate();
}
inline void NmsPolicyLevelSettings::unsafe_arena_set_allocated_activate(::kentik::alerting::public_::v202505::NmsActivateOrClearConditions* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.activate_);
  }
  _impl_.activate_ = reinterpret_cast<::kentik::alerting::public_::v202505::NmsActivateOrClearConditions*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.alerting.public.v202505.NmsPolicyLevelSettings.activate)
}
inline ::kentik::alerting::public_::v202505::NmsActivateOrClearConditions* NmsPolicyLevelSettings::release_activate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::alerting::public_::v202505::NmsActivateOrClearConditions* released = _impl_.activate_;
  _impl_.activate_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::alerting::public_::v202505::NmsActivateOrClearConditions* NmsPolicyLevelSettings::unsafe_arena_release_activate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.alerting.public.v202505.NmsPolicyLevelSettings.activate)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::alerting::public_::v202505::NmsActivateOrClearConditions* temp = _impl_.activate_;
  _impl_.activate_ = nullptr;
  return temp;
}
inline ::kentik::alerting::public_::v202505::NmsActivateOrClearConditions* NmsPolicyLevelSettings::_internal_mutable_activate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.activate_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::alerting::public_::v202505::NmsActivateOrClearConditions>(GetArena());
    _impl_.activate_ = reinterpret_cast<::kentik::alerting::public_::v202505::NmsActivateOrClearConditions*>(p);
  }
  return _impl_.activate_;
}
inline ::kentik::alerting::public_::v202505::NmsActivateOrClearConditions* NmsPolicyLevelSettings::mutable_activate() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::kentik::alerting::public_::v202505::NmsActivateOrClearConditions* _msg = _internal_mutable_activate();
  // @@protoc_insertion_point(field_mutable:kentik.alerting.public.v202505.NmsPolicyLevelSettings.activate)
  return _msg;
}
inline void NmsPolicyLevelSettings::set_allocated_activate(::kentik::alerting::public_::v202505::NmsActivateOrClearConditions* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.activate_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.activate_ = reinterpret_cast<::kentik::alerting::public_::v202505::NmsActivateOrClearConditions*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.alerting.public.v202505.NmsPolicyLevelSettings.activate)
}

// .kentik.alerting.public.v202505.NmsPolicyLevelSettings.ClearType clear_type = 2 [json_name = "clearType"];
inline void NmsPolicyLevelSettings::clear_clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.clear_type_ = 0;
}
inline ::kentik::alerting::public_::v202505::NmsPolicyLevelSettings_ClearType NmsPolicyLevelSettings::clear_type() const {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.NmsPolicyLevelSettings.clear_type)
  return _internal_clear_type();
}
inline void NmsPolicyLevelSettings::set_clear_type(::kentik::alerting::public_::v202505::NmsPolicyLevelSettings_ClearType value) {
  _internal_set_clear_type(value);
  // @@protoc_insertion_point(field_set:kentik.alerting.public.v202505.NmsPolicyLevelSettings.clear_type)
}
inline ::kentik::alerting::public_::v202505::NmsPolicyLevelSettings_ClearType NmsPolicyLevelSettings::_internal_clear_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::kentik::alerting::public_::v202505::NmsPolicyLevelSettings_ClearType>(_impl_.clear_type_);
}
inline void NmsPolicyLevelSettings::_internal_set_clear_type(::kentik::alerting::public_::v202505::NmsPolicyLevelSettings_ClearType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.clear_type_ = value;
}

// .kentik.alerting.public.v202505.NmsActivateOrClearConditions conditional = 3 [json_name = "conditional"];
inline bool NmsPolicyLevelSettings::has_conditional() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.conditional_ != nullptr);
  return value;
}
inline const ::kentik::alerting::public_::v202505::NmsActivateOrClearConditions& NmsPolicyLevelSettings::_internal_conditional() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::alerting::public_::v202505::NmsActivateOrClearConditions* p = _impl_.conditional_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::alerting::public_::v202505::NmsActivateOrClearConditions&>(::kentik::alerting::public_::v202505::_NmsActivateOrClearConditions_default_instance_);
}
inline const ::kentik::alerting::public_::v202505::NmsActivateOrClearConditions& NmsPolicyLevelSettings::conditional() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.alerting.public.v202505.NmsPolicyLevelSettings.conditional)
  return _internal_conditional();
}
inline void NmsPolicyLevelSettings::unsafe_arena_set_allocated_conditional(::kentik::alerting::public_::v202505::NmsActivateOrClearConditions* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.conditional_);
  }
  _impl_.conditional_ = reinterpret_cast<::kentik::alerting::public_::v202505::NmsActivateOrClearConditions*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.alerting.public.v202505.NmsPolicyLevelSettings.conditional)
}
inline ::kentik::alerting::public_::v202505::NmsActivateOrClearConditions* NmsPolicyLevelSettings::release_conditional() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::kentik::alerting::public_::v202505::NmsActivateOrClearConditions* released = _impl_.conditional_;
  _impl_.conditional_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::alerting::public_::v202505::NmsActivateOrClearConditions* NmsPolicyLevelSettings::unsafe_arena_release_conditional() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.alerting.public.v202505.NmsPolicyLevelSettings.conditional)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::kentik::alerting::public_::v202505::NmsActivateOrClearConditions* temp = _impl_.conditional_;
  _impl_.conditional_ = nullptr;
  return temp;
}
inline ::kentik::alerting::public_::v202505::NmsActivateOrClearConditions* NmsPolicyLevelSettings::_internal_mutable_conditional() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.conditional_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::alerting::public_::v202505::NmsActivateOrClearConditions>(GetArena());
    _impl_.conditional_ = reinterpret_cast<::kentik::alerting::public_::v202505::NmsActivateOrClearConditions*>(p);
  }
  return _impl_.conditional_;
}
inline ::kentik::alerting::public_::v202505::NmsActivateOrClearConditions* NmsPolicyLevelSettings::mutable_conditional() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::kentik::alerting::public_::v202505::NmsActivateOrClearConditions* _msg = _internal_mutable_conditional();
  // @@protoc_insertion_point(field_mutable:kentik.alerting.public.v202505.NmsPolicyLevelSettings.conditional)
  return _msg;
}
inline void NmsPolicyLevelSettings::set_allocated_conditional(::kentik::alerting::public_::v202505::NmsActivateOrClearConditions* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.conditional_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.conditional_ = reinterpret_cast<::kentik::alerting::public_::v202505::NmsActivateOrClearConditions*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.alerting.public.v202505.NmsPolicyLevelSettings.conditional)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v202505
}  // namespace public_
}  // namespace alerting
}  // namespace kentik


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::kentik::alerting::public_::v202505::NmsPolicyLevelSettings_ClearType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::kentik::alerting::public_::v202505::NmsPolicyLevelSettings_ClearType>() {
  return ::kentik::alerting::public_::v202505::NmsPolicyLevelSettings_ClearType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // kentik_2falerting_2fpublic_2fv202505_2fpolicy_5fnms_2eproto_2epb_2eh
