// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: kentik/alerting/types/v202506/pagination.proto
// Protobuf C++ Version: 5.29.3

#include "kentik/alerting/types/v202506/pagination.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace kentik {
namespace alerting {
namespace types {
namespace v202506 {

inline constexpr PaginationInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : info_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR PaginationInfo::PaginationInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PaginationInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PaginationInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PaginationInfoDefaultTypeInternal() {}
  union {
    PaginationInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PaginationInfoDefaultTypeInternal _PaginationInfo_default_instance_;

inline constexpr PaginationConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : limit_{::uint64_t{0u}},
        offset_{::uint64_t{0u}},
        include_total_count_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PaginationConfig::PaginationConfig(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PaginationConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PaginationConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PaginationConfigDefaultTypeInternal() {}
  union {
    PaginationConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PaginationConfigDefaultTypeInternal _PaginationConfig_default_instance_;
}  // namespace v202506
}  // namespace types
}  // namespace alerting
}  // namespace kentik
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_kentik_2falerting_2ftypes_2fv202506_2fpagination_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_kentik_2falerting_2ftypes_2fv202506_2fpagination_2eproto = nullptr;
const ::uint32_t
    TableStruct_kentik_2falerting_2ftypes_2fv202506_2fpagination_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::alerting::types::v202506::PaginationConfig, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::alerting::types::v202506::PaginationConfig, _impl_.limit_),
        PROTOBUF_FIELD_OFFSET(::kentik::alerting::types::v202506::PaginationConfig, _impl_.offset_),
        PROTOBUF_FIELD_OFFSET(::kentik::alerting::types::v202506::PaginationConfig, _impl_.include_total_count_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::alerting::types::v202506::PaginationInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::kentik::alerting::types::v202506::PaginationInfo, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::kentik::alerting::types::v202506::PaginationInfo, _impl_.info_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::kentik::alerting::types::v202506::PaginationConfig)},
        {11, -1, -1, sizeof(::kentik::alerting::types::v202506::PaginationInfo)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::kentik::alerting::types::v202506::_PaginationConfig_default_instance_._instance,
    &::kentik::alerting::types::v202506::_PaginationInfo_default_instance_._instance,
};
const char descriptor_table_protodef_kentik_2falerting_2ftypes_2fv202506_2fpagination_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n.kentik/alerting/types/v202506/paginati"
    "on.proto\022\035kentik.alerting.types.v202506\032"
    "\037google/protobuf/timestamp.proto\"p\n\020Pagi"
    "nationConfig\022\024\n\005limit\030\001 \001(\004R\005limit\022\026\n\006of"
    "fset\030\002 \001(\004R\006offset\022.\n\023include_total_coun"
    "t\030\003 \001(\010R\021includeTotalCount\"g\n\016Pagination"
    "Info\022!\n\013total_count\030\001 \001(\004H\000R\ntotalCount\022"
    "*\n\020has_more_results\030\002 \001(\010H\000R\016hasMoreResu"
    "ltsB\006\n\004infoBJZHgithub.com/kentik/api-sch"
    "ema-public/gen/go/kentik/alerting/types/"
    "v202506b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_kentik_2falerting_2ftypes_2fv202506_2fpagination_2eproto_deps[1] =
    {
        &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::absl::once_flag descriptor_table_kentik_2falerting_2ftypes_2fv202506_2fpagination_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_kentik_2falerting_2ftypes_2fv202506_2fpagination_2eproto = {
    false,
    false,
    415,
    descriptor_table_protodef_kentik_2falerting_2ftypes_2fv202506_2fpagination_2eproto,
    "kentik/alerting/types/v202506/pagination.proto",
    &descriptor_table_kentik_2falerting_2ftypes_2fv202506_2fpagination_2eproto_once,
    descriptor_table_kentik_2falerting_2ftypes_2fv202506_2fpagination_2eproto_deps,
    1,
    2,
    schemas,
    file_default_instances,
    TableStruct_kentik_2falerting_2ftypes_2fv202506_2fpagination_2eproto::offsets,
    file_level_enum_descriptors_kentik_2falerting_2ftypes_2fv202506_2fpagination_2eproto,
    file_level_service_descriptors_kentik_2falerting_2ftypes_2fv202506_2fpagination_2eproto,
};
namespace kentik {
namespace alerting {
namespace types {
namespace v202506 {
// ===================================================================

class PaginationConfig::_Internal {
 public:
};

PaginationConfig::PaginationConfig(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.alerting.types.v202506.PaginationConfig)
}
PaginationConfig::PaginationConfig(
    ::google::protobuf::Arena* arena, const PaginationConfig& from)
    : PaginationConfig(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE PaginationConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void PaginationConfig::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, limit_),
           0,
           offsetof(Impl_, include_total_count_) -
               offsetof(Impl_, limit_) +
               sizeof(Impl_::include_total_count_));
}
PaginationConfig::~PaginationConfig() {
  // @@protoc_insertion_point(destructor:kentik.alerting.types.v202506.PaginationConfig)
  SharedDtor(*this);
}
inline void PaginationConfig::SharedDtor(MessageLite& self) {
  PaginationConfig& this_ = static_cast<PaginationConfig&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PaginationConfig::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PaginationConfig(arena);
}
constexpr auto PaginationConfig::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(PaginationConfig),
                                            alignof(PaginationConfig));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PaginationConfig::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PaginationConfig_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PaginationConfig::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PaginationConfig>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PaginationConfig::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PaginationConfig>(), &PaginationConfig::ByteSizeLong,
            &PaginationConfig::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PaginationConfig, _impl_._cached_size_),
        false,
    },
    &PaginationConfig::kDescriptorMethods,
    &descriptor_table_kentik_2falerting_2ftypes_2fv202506_2fpagination_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PaginationConfig::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> PaginationConfig::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::alerting::types::v202506::PaginationConfig>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 limit = 1 [json_name = "limit"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(PaginationConfig, _impl_.limit_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(PaginationConfig, _impl_.limit_)}},
    // uint64 offset = 2 [json_name = "offset"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(PaginationConfig, _impl_.offset_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(PaginationConfig, _impl_.offset_)}},
    // bool include_total_count = 3 [json_name = "includeTotalCount"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(PaginationConfig, _impl_.include_total_count_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(PaginationConfig, _impl_.include_total_count_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 limit = 1 [json_name = "limit"];
    {PROTOBUF_FIELD_OFFSET(PaginationConfig, _impl_.limit_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 offset = 2 [json_name = "offset"];
    {PROTOBUF_FIELD_OFFSET(PaginationConfig, _impl_.offset_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // bool include_total_count = 3 [json_name = "includeTotalCount"];
    {PROTOBUF_FIELD_OFFSET(PaginationConfig, _impl_.include_total_count_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void PaginationConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.alerting.types.v202506.PaginationConfig)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.limit_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.include_total_count_) -
      reinterpret_cast<char*>(&_impl_.limit_)) + sizeof(_impl_.include_total_count_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PaginationConfig::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PaginationConfig& this_ = static_cast<const PaginationConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PaginationConfig::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PaginationConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.alerting.types.v202506.PaginationConfig)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 limit = 1 [json_name = "limit"];
          if (this_._internal_limit() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_limit(), target);
          }

          // uint64 offset = 2 [json_name = "offset"];
          if (this_._internal_offset() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                2, this_._internal_offset(), target);
          }

          // bool include_total_count = 3 [json_name = "includeTotalCount"];
          if (this_._internal_include_total_count() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                3, this_._internal_include_total_count(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.alerting.types.v202506.PaginationConfig)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PaginationConfig::ByteSizeLong(const MessageLite& base) {
          const PaginationConfig& this_ = static_cast<const PaginationConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PaginationConfig::ByteSizeLong() const {
          const PaginationConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.alerting.types.v202506.PaginationConfig)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // uint64 limit = 1 [json_name = "limit"];
            if (this_._internal_limit() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_limit());
            }
            // uint64 offset = 2 [json_name = "offset"];
            if (this_._internal_offset() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_offset());
            }
            // bool include_total_count = 3 [json_name = "includeTotalCount"];
            if (this_._internal_include_total_count() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PaginationConfig::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PaginationConfig*>(&to_msg);
  auto& from = static_cast<const PaginationConfig&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.alerting.types.v202506.PaginationConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_limit() != 0) {
    _this->_impl_.limit_ = from._impl_.limit_;
  }
  if (from._internal_offset() != 0) {
    _this->_impl_.offset_ = from._impl_.offset_;
  }
  if (from._internal_include_total_count() != 0) {
    _this->_impl_.include_total_count_ = from._impl_.include_total_count_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PaginationConfig::CopyFrom(const PaginationConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.alerting.types.v202506.PaginationConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PaginationConfig::InternalSwap(PaginationConfig* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PaginationConfig, _impl_.include_total_count_)
      + sizeof(PaginationConfig::_impl_.include_total_count_)
      - PROTOBUF_FIELD_OFFSET(PaginationConfig, _impl_.limit_)>(
          reinterpret_cast<char*>(&_impl_.limit_),
          reinterpret_cast<char*>(&other->_impl_.limit_));
}

::google::protobuf::Metadata PaginationConfig::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PaginationInfo::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::kentik::alerting::types::v202506::PaginationInfo, _impl_._oneof_case_);
};

PaginationInfo::PaginationInfo(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.alerting.types.v202506.PaginationInfo)
}
inline PROTOBUF_NDEBUG_INLINE PaginationInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::alerting::types::v202506::PaginationInfo& from_msg)
      : info_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

PaginationInfo::PaginationInfo(
    ::google::protobuf::Arena* arena,
    const PaginationInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PaginationInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (info_case()) {
    case INFO_NOT_SET:
      break;
      case kTotalCount:
        _impl_.info_.total_count_ = from._impl_.info_.total_count_;
        break;
      case kHasMoreResults:
        _impl_.info_.has_more_results_ = from._impl_.info_.has_more_results_;
        break;
  }

  // @@protoc_insertion_point(copy_constructor:kentik.alerting.types.v202506.PaginationInfo)
}
inline PROTOBUF_NDEBUG_INLINE PaginationInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : info_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void PaginationInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
PaginationInfo::~PaginationInfo() {
  // @@protoc_insertion_point(destructor:kentik.alerting.types.v202506.PaginationInfo)
  SharedDtor(*this);
}
inline void PaginationInfo::SharedDtor(MessageLite& self) {
  PaginationInfo& this_ = static_cast<PaginationInfo&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  if (this_.has_info()) {
    this_.clear_info();
  }
  this_._impl_.~Impl_();
}

void PaginationInfo::clear_info() {
// @@protoc_insertion_point(one_of_clear_start:kentik.alerting.types.v202506.PaginationInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (info_case()) {
    case kTotalCount: {
      // No need to clear
      break;
    }
    case kHasMoreResults: {
      // No need to clear
      break;
    }
    case INFO_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = INFO_NOT_SET;
}


inline void* PaginationInfo::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PaginationInfo(arena);
}
constexpr auto PaginationInfo::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(PaginationInfo),
                                            alignof(PaginationInfo));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PaginationInfo::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PaginationInfo_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PaginationInfo::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PaginationInfo>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PaginationInfo::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PaginationInfo>(), &PaginationInfo::ByteSizeLong,
            &PaginationInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PaginationInfo, _impl_._cached_size_),
        false,
    },
    &PaginationInfo::kDescriptorMethods,
    &descriptor_table_kentik_2falerting_2ftypes_2fv202506_2fpagination_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PaginationInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 2, 0, 0, 2> PaginationInfo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::alerting::types::v202506::PaginationInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 total_count = 1 [json_name = "totalCount"];
    {PROTOBUF_FIELD_OFFSET(PaginationInfo, _impl_.info_.total_count_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kUInt64)},
    // bool has_more_results = 2 [json_name = "hasMoreResults"];
    {PROTOBUF_FIELD_OFFSET(PaginationInfo, _impl_.info_.has_more_results_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void PaginationInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.alerting.types.v202506.PaginationInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_info();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PaginationInfo::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PaginationInfo& this_ = static_cast<const PaginationInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PaginationInfo::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PaginationInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.alerting.types.v202506.PaginationInfo)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          switch (this_.info_case()) {
            case kTotalCount: {
              target = stream->EnsureSpace(target);
              target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                  1, this_._internal_total_count(), target);
              break;
            }
            case kHasMoreResults: {
              target = stream->EnsureSpace(target);
              target = ::_pbi::WireFormatLite::WriteBoolToArray(
                  2, this_._internal_has_more_results(), target);
              break;
            }
            default:
              break;
          }
          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.alerting.types.v202506.PaginationInfo)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PaginationInfo::ByteSizeLong(const MessageLite& base) {
          const PaginationInfo& this_ = static_cast<const PaginationInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PaginationInfo::ByteSizeLong() const {
          const PaginationInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.alerting.types.v202506.PaginationInfo)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          switch (this_.info_case()) {
            // uint64 total_count = 1 [json_name = "totalCount"];
            case kTotalCount: {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_total_count());
              break;
            }
            // bool has_more_results = 2 [json_name = "hasMoreResults"];
            case kHasMoreResults: {
              total_size += 2;
              break;
            }
            case INFO_NOT_SET: {
              break;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PaginationInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PaginationInfo*>(&to_msg);
  auto& from = static_cast<const PaginationInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.alerting.types.v202506.PaginationInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_info();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kTotalCount: {
        _this->_impl_.info_.total_count_ = from._impl_.info_.total_count_;
        break;
      }
      case kHasMoreResults: {
        _this->_impl_.info_.has_more_results_ = from._impl_.info_.has_more_results_;
        break;
      }
      case INFO_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PaginationInfo::CopyFrom(const PaginationInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.alerting.types.v202506.PaginationInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PaginationInfo::InternalSwap(PaginationInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.info_, other->_impl_.info_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata PaginationInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v202506
}  // namespace types
}  // namespace alerting
}  // namespace kentik
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_kentik_2falerting_2ftypes_2fv202506_2fpagination_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
