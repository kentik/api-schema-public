// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: kentik/alerting/types/v202506/pagination.proto
// Protobuf C++ Version: 5.29.3

#ifndef kentik_2falerting_2ftypes_2fv202506_2fpagination_2eproto_2epb_2eh
#define kentik_2falerting_2ftypes_2fv202506_2fpagination_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "google/protobuf/timestamp.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_kentik_2falerting_2ftypes_2fv202506_2fpagination_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_kentik_2falerting_2ftypes_2fv202506_2fpagination_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_kentik_2falerting_2ftypes_2fv202506_2fpagination_2eproto;
namespace kentik {
namespace alerting {
namespace types {
namespace v202506 {
class PaginationConfig;
struct PaginationConfigDefaultTypeInternal;
extern PaginationConfigDefaultTypeInternal _PaginationConfig_default_instance_;
class PaginationInfo;
struct PaginationInfoDefaultTypeInternal;
extern PaginationInfoDefaultTypeInternal _PaginationInfo_default_instance_;
}  // namespace v202506
}  // namespace types
}  // namespace alerting
}  // namespace kentik
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace kentik {
namespace alerting {
namespace types {
namespace v202506 {

// ===================================================================


// -------------------------------------------------------------------

class PaginationInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.alerting.types.v202506.PaginationInfo) */ {
 public:
  inline PaginationInfo() : PaginationInfo(nullptr) {}
  ~PaginationInfo() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PaginationInfo* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PaginationInfo));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PaginationInfo(
      ::google::protobuf::internal::ConstantInitialized);

  inline PaginationInfo(const PaginationInfo& from) : PaginationInfo(nullptr, from) {}
  inline PaginationInfo(PaginationInfo&& from) noexcept
      : PaginationInfo(nullptr, std::move(from)) {}
  inline PaginationInfo& operator=(const PaginationInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline PaginationInfo& operator=(PaginationInfo&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PaginationInfo& default_instance() {
    return *internal_default_instance();
  }
  enum InfoCase {
    kTotalCount = 1,
    kHasMoreResults = 2,
    INFO_NOT_SET = 0,
  };
  static inline const PaginationInfo* internal_default_instance() {
    return reinterpret_cast<const PaginationInfo*>(
        &_PaginationInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(PaginationInfo& a, PaginationInfo& b) { a.Swap(&b); }
  inline void Swap(PaginationInfo* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PaginationInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PaginationInfo* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PaginationInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PaginationInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PaginationInfo& from) { PaginationInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PaginationInfo* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.alerting.types.v202506.PaginationInfo"; }

 protected:
  explicit PaginationInfo(::google::protobuf::Arena* arena);
  PaginationInfo(::google::protobuf::Arena* arena, const PaginationInfo& from);
  PaginationInfo(::google::protobuf::Arena* arena, PaginationInfo&& from) noexcept
      : PaginationInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTotalCountFieldNumber = 1,
    kHasMoreResultsFieldNumber = 2,
  };
  // uint64 total_count = 1 [json_name = "totalCount"];
  bool has_total_count() const;
  void clear_total_count() ;
  ::uint64_t total_count() const;
  void set_total_count(::uint64_t value);

  private:
  ::uint64_t _internal_total_count() const;
  void _internal_set_total_count(::uint64_t value);

  public:
  // bool has_more_results = 2 [json_name = "hasMoreResults"];
  bool has_has_more_results() const;
  void clear_has_more_results() ;
  bool has_more_results() const;
  void set_has_more_results(bool value);

  private:
  bool _internal_has_more_results() const;
  void _internal_set_has_more_results(bool value);

  public:
  void clear_info();
  InfoCase info_case() const;
  // @@protoc_insertion_point(class_scope:kentik.alerting.types.v202506.PaginationInfo)
 private:
  class _Internal;
  void set_has_total_count();
  void set_has_has_more_results();
  inline bool has_info() const;
  inline void clear_has_info();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 2, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PaginationInfo& from_msg);
    union InfoUnion {
      constexpr InfoUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::uint64_t total_count_;
      bool has_more_results_;
    } info_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2falerting_2ftypes_2fv202506_2fpagination_2eproto;
};
// -------------------------------------------------------------------

class PaginationConfig final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.alerting.types.v202506.PaginationConfig) */ {
 public:
  inline PaginationConfig() : PaginationConfig(nullptr) {}
  ~PaginationConfig() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PaginationConfig* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PaginationConfig));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PaginationConfig(
      ::google::protobuf::internal::ConstantInitialized);

  inline PaginationConfig(const PaginationConfig& from) : PaginationConfig(nullptr, from) {}
  inline PaginationConfig(PaginationConfig&& from) noexcept
      : PaginationConfig(nullptr, std::move(from)) {}
  inline PaginationConfig& operator=(const PaginationConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline PaginationConfig& operator=(PaginationConfig&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PaginationConfig& default_instance() {
    return *internal_default_instance();
  }
  static inline const PaginationConfig* internal_default_instance() {
    return reinterpret_cast<const PaginationConfig*>(
        &_PaginationConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(PaginationConfig& a, PaginationConfig& b) { a.Swap(&b); }
  inline void Swap(PaginationConfig* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PaginationConfig* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PaginationConfig* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PaginationConfig>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PaginationConfig& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PaginationConfig& from) { PaginationConfig::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PaginationConfig* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.alerting.types.v202506.PaginationConfig"; }

 protected:
  explicit PaginationConfig(::google::protobuf::Arena* arena);
  PaginationConfig(::google::protobuf::Arena* arena, const PaginationConfig& from);
  PaginationConfig(::google::protobuf::Arena* arena, PaginationConfig&& from) noexcept
      : PaginationConfig(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLimitFieldNumber = 1,
    kOffsetFieldNumber = 2,
    kIncludeTotalCountFieldNumber = 3,
  };
  // uint64 limit = 1 [json_name = "limit"];
  void clear_limit() ;
  ::uint64_t limit() const;
  void set_limit(::uint64_t value);

  private:
  ::uint64_t _internal_limit() const;
  void _internal_set_limit(::uint64_t value);

  public:
  // uint64 offset = 2 [json_name = "offset"];
  void clear_offset() ;
  ::uint64_t offset() const;
  void set_offset(::uint64_t value);

  private:
  ::uint64_t _internal_offset() const;
  void _internal_set_offset(::uint64_t value);

  public:
  // bool include_total_count = 3 [json_name = "includeTotalCount"];
  void clear_include_total_count() ;
  bool include_total_count() const;
  void set_include_total_count(bool value);

  private:
  bool _internal_include_total_count() const;
  void _internal_set_include_total_count(bool value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.alerting.types.v202506.PaginationConfig)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PaginationConfig& from_msg);
    ::uint64_t limit_;
    ::uint64_t offset_;
    bool include_total_count_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2falerting_2ftypes_2fv202506_2fpagination_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// PaginationConfig

// uint64 limit = 1 [json_name = "limit"];
inline void PaginationConfig::clear_limit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.limit_ = ::uint64_t{0u};
}
inline ::uint64_t PaginationConfig::limit() const {
  // @@protoc_insertion_point(field_get:kentik.alerting.types.v202506.PaginationConfig.limit)
  return _internal_limit();
}
inline void PaginationConfig::set_limit(::uint64_t value) {
  _internal_set_limit(value);
  // @@protoc_insertion_point(field_set:kentik.alerting.types.v202506.PaginationConfig.limit)
}
inline ::uint64_t PaginationConfig::_internal_limit() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.limit_;
}
inline void PaginationConfig::_internal_set_limit(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.limit_ = value;
}

// uint64 offset = 2 [json_name = "offset"];
inline void PaginationConfig::clear_offset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.offset_ = ::uint64_t{0u};
}
inline ::uint64_t PaginationConfig::offset() const {
  // @@protoc_insertion_point(field_get:kentik.alerting.types.v202506.PaginationConfig.offset)
  return _internal_offset();
}
inline void PaginationConfig::set_offset(::uint64_t value) {
  _internal_set_offset(value);
  // @@protoc_insertion_point(field_set:kentik.alerting.types.v202506.PaginationConfig.offset)
}
inline ::uint64_t PaginationConfig::_internal_offset() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.offset_;
}
inline void PaginationConfig::_internal_set_offset(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.offset_ = value;
}

// bool include_total_count = 3 [json_name = "includeTotalCount"];
inline void PaginationConfig::clear_include_total_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.include_total_count_ = false;
}
inline bool PaginationConfig::include_total_count() const {
  // @@protoc_insertion_point(field_get:kentik.alerting.types.v202506.PaginationConfig.include_total_count)
  return _internal_include_total_count();
}
inline void PaginationConfig::set_include_total_count(bool value) {
  _internal_set_include_total_count(value);
  // @@protoc_insertion_point(field_set:kentik.alerting.types.v202506.PaginationConfig.include_total_count)
}
inline bool PaginationConfig::_internal_include_total_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.include_total_count_;
}
inline void PaginationConfig::_internal_set_include_total_count(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.include_total_count_ = value;
}

// -------------------------------------------------------------------

// PaginationInfo

// uint64 total_count = 1 [json_name = "totalCount"];
inline bool PaginationInfo::has_total_count() const {
  return info_case() == kTotalCount;
}
inline void PaginationInfo::set_has_total_count() {
  _impl_._oneof_case_[0] = kTotalCount;
}
inline void PaginationInfo::clear_total_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (info_case() == kTotalCount) {
    _impl_.info_.total_count_ = ::uint64_t{0u};
    clear_has_info();
  }
}
inline ::uint64_t PaginationInfo::total_count() const {
  // @@protoc_insertion_point(field_get:kentik.alerting.types.v202506.PaginationInfo.total_count)
  return _internal_total_count();
}
inline void PaginationInfo::set_total_count(::uint64_t value) {
  if (info_case() != kTotalCount) {
    clear_info();
    set_has_total_count();
  }
  _impl_.info_.total_count_ = value;
  // @@protoc_insertion_point(field_set:kentik.alerting.types.v202506.PaginationInfo.total_count)
}
inline ::uint64_t PaginationInfo::_internal_total_count() const {
  if (info_case() == kTotalCount) {
    return _impl_.info_.total_count_;
  }
  return ::uint64_t{0u};
}

// bool has_more_results = 2 [json_name = "hasMoreResults"];
inline bool PaginationInfo::has_has_more_results() const {
  return info_case() == kHasMoreResults;
}
inline void PaginationInfo::set_has_has_more_results() {
  _impl_._oneof_case_[0] = kHasMoreResults;
}
inline void PaginationInfo::clear_has_more_results() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (info_case() == kHasMoreResults) {
    _impl_.info_.has_more_results_ = false;
    clear_has_info();
  }
}
inline bool PaginationInfo::has_more_results() const {
  // @@protoc_insertion_point(field_get:kentik.alerting.types.v202506.PaginationInfo.has_more_results)
  return _internal_has_more_results();
}
inline void PaginationInfo::set_has_more_results(bool value) {
  if (info_case() != kHasMoreResults) {
    clear_info();
    set_has_has_more_results();
  }
  _impl_.info_.has_more_results_ = value;
  // @@protoc_insertion_point(field_set:kentik.alerting.types.v202506.PaginationInfo.has_more_results)
}
inline bool PaginationInfo::_internal_has_more_results() const {
  if (info_case() == kHasMoreResults) {
    return _impl_.info_.has_more_results_;
  }
  return false;
}

inline bool PaginationInfo::has_info() const {
  return info_case() != INFO_NOT_SET;
}
inline void PaginationInfo::clear_has_info() {
  _impl_._oneof_case_[0] = INFO_NOT_SET;
}
inline PaginationInfo::InfoCase PaginationInfo::info_case() const {
  return PaginationInfo::InfoCase(_impl_._oneof_case_[0]);
}
#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v202506
}  // namespace types
}  // namespace alerting
}  // namespace kentik


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // kentik_2falerting_2ftypes_2fv202506_2fpagination_2eproto_2epb_2eh
