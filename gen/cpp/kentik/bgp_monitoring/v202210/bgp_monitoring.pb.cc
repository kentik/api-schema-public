// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: kentik/bgp_monitoring/v202210/bgp_monitoring.proto

#include "kentik/bgp_monitoring/v202210/bgp_monitoring.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2ftimestamp_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BgpHealthSettings_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_BgpMetric_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_BgpMonitor_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_BgpMonitorSettings_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetRoutesForTargetResponse_AsNamesEntry_DoNotUse_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Nlri_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_RouteInfo_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_kentik_2fcore_2fv202303_2fuser_5finfo_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UserInfo_kentik_2fcore_2fv202303_2fuser_5finfo_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_kentik_2fnet_2fv202303_2fbgp_5ftypes_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_VantagePoint_kentik_2fnet_2fv202303_2fbgp_5ftypes_2eproto;
namespace kentik {
namespace bgp_monitoring {
namespace v202210 {
class NlriDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Nlri> _instance;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr prefix_;
} _Nlri_default_instance_;
class BgpHealthSettingsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<BgpHealthSettings> _instance;
} _BgpHealthSettings_default_instance_;
class BgpMonitorSettingsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<BgpMonitorSettings> _instance;
} _BgpMonitorSettings_default_instance_;
class BgpMonitorDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<BgpMonitor> _instance;
} _BgpMonitor_default_instance_;
class RouteInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RouteInfo> _instance;
} _RouteInfo_default_instance_;
class BgpMetricDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<BgpMetric> _instance;
  float reachability_;
  ::PROTOBUF_NAMESPACE_ID::uint32 path_changes_;
} _BgpMetric_default_instance_;
class ListMonitorsRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ListMonitorsRequest> _instance;
} _ListMonitorsRequest_default_instance_;
class ListMonitorsResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ListMonitorsResponse> _instance;
} _ListMonitorsResponse_default_instance_;
class CreateMonitorRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateMonitorRequest> _instance;
} _CreateMonitorRequest_default_instance_;
class CreateMonitorResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateMonitorResponse> _instance;
} _CreateMonitorResponse_default_instance_;
class GetMonitorRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetMonitorRequest> _instance;
} _GetMonitorRequest_default_instance_;
class GetMonitorResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetMonitorResponse> _instance;
} _GetMonitorResponse_default_instance_;
class UpdateMonitorRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdateMonitorRequest> _instance;
} _UpdateMonitorRequest_default_instance_;
class UpdateMonitorResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdateMonitorResponse> _instance;
} _UpdateMonitorResponse_default_instance_;
class DeleteMonitorRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteMonitorRequest> _instance;
} _DeleteMonitorRequest_default_instance_;
class DeleteMonitorResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteMonitorResponse> _instance;
} _DeleteMonitorResponse_default_instance_;
class SetMonitorStatusRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SetMonitorStatusRequest> _instance;
} _SetMonitorStatusRequest_default_instance_;
class SetMonitorStatusResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SetMonitorStatusResponse> _instance;
} _SetMonitorStatusResponse_default_instance_;
class GetMetricsForTargetRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetMetricsForTargetRequest> _instance;
} _GetMetricsForTargetRequest_default_instance_;
class GetMetricsForTargetResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetMetricsForTargetResponse> _instance;
} _GetMetricsForTargetResponse_default_instance_;
class GetRoutesForTargetRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetRoutesForTargetRequest> _instance;
} _GetRoutesForTargetRequest_default_instance_;
class GetRoutesForTargetResponse_AsNamesEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetRoutesForTargetResponse_AsNamesEntry_DoNotUse> _instance;
} _GetRoutesForTargetResponse_AsNamesEntry_DoNotUse_default_instance_;
class GetRoutesForTargetResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetRoutesForTargetResponse> _instance;
} _GetRoutesForTargetResponse_default_instance_;
}  // namespace v202210
}  // namespace bgp_monitoring
}  // namespace kentik
static void InitDefaultsscc_info_BgpHealthSettings_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kentik::bgp_monitoring::v202210::_BgpHealthSettings_default_instance_;
    new (ptr) ::kentik::bgp_monitoring::v202210::BgpHealthSettings();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kentik::bgp_monitoring::v202210::BgpHealthSettings::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BgpHealthSettings_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_BgpHealthSettings_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto}, {}};

static void InitDefaultsscc_info_BgpMetric_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kentik::bgp_monitoring::v202210::_BgpMetric_default_instance_;
    new (ptr) ::kentik::bgp_monitoring::v202210::BgpMetric();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kentik::bgp_monitoring::v202210::BgpMetric::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_BgpMetric_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_BgpMetric_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto}, {
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,
      &scc_info_Nlri_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto.base,}};

static void InitDefaultsscc_info_BgpMonitor_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kentik::bgp_monitoring::v202210::_BgpMonitor_default_instance_;
    new (ptr) ::kentik::bgp_monitoring::v202210::BgpMonitor();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kentik::bgp_monitoring::v202210::BgpMonitor::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_BgpMonitor_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, 0, InitDefaultsscc_info_BgpMonitor_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto}, {
      &scc_info_BgpMonitorSettings_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto.base,
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,
      &scc_info_UserInfo_kentik_2fcore_2fv202303_2fuser_5finfo_2eproto.base,}};

static void InitDefaultsscc_info_BgpMonitorSettings_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kentik::bgp_monitoring::v202210::_BgpMonitorSettings_default_instance_;
    new (ptr) ::kentik::bgp_monitoring::v202210::BgpMonitorSettings();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kentik::bgp_monitoring::v202210::BgpMonitorSettings::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_BgpMonitorSettings_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_BgpMonitorSettings_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto}, {
      &scc_info_Nlri_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto.base,
      &scc_info_BgpHealthSettings_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto.base,}};

static void InitDefaultsscc_info_CreateMonitorRequest_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kentik::bgp_monitoring::v202210::_CreateMonitorRequest_default_instance_;
    new (ptr) ::kentik::bgp_monitoring::v202210::CreateMonitorRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kentik::bgp_monitoring::v202210::CreateMonitorRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CreateMonitorRequest_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_CreateMonitorRequest_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto}, {
      &scc_info_BgpMonitor_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto.base,}};

static void InitDefaultsscc_info_CreateMonitorResponse_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kentik::bgp_monitoring::v202210::_CreateMonitorResponse_default_instance_;
    new (ptr) ::kentik::bgp_monitoring::v202210::CreateMonitorResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kentik::bgp_monitoring::v202210::CreateMonitorResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CreateMonitorResponse_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_CreateMonitorResponse_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto}, {
      &scc_info_BgpMonitor_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto.base,}};

static void InitDefaultsscc_info_DeleteMonitorRequest_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kentik::bgp_monitoring::v202210::_DeleteMonitorRequest_default_instance_;
    new (ptr) ::kentik::bgp_monitoring::v202210::DeleteMonitorRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kentik::bgp_monitoring::v202210::DeleteMonitorRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteMonitorRequest_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteMonitorRequest_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto}, {}};

static void InitDefaultsscc_info_DeleteMonitorResponse_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kentik::bgp_monitoring::v202210::_DeleteMonitorResponse_default_instance_;
    new (ptr) ::kentik::bgp_monitoring::v202210::DeleteMonitorResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kentik::bgp_monitoring::v202210::DeleteMonitorResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteMonitorResponse_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteMonitorResponse_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto}, {}};

static void InitDefaultsscc_info_GetMetricsForTargetRequest_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kentik::bgp_monitoring::v202210::_GetMetricsForTargetRequest_default_instance_;
    new (ptr) ::kentik::bgp_monitoring::v202210::GetMetricsForTargetRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kentik::bgp_monitoring::v202210::GetMetricsForTargetRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_GetMetricsForTargetRequest_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_GetMetricsForTargetRequest_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto}, {
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,
      &scc_info_Nlri_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto.base,}};

static void InitDefaultsscc_info_GetMetricsForTargetResponse_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kentik::bgp_monitoring::v202210::_GetMetricsForTargetResponse_default_instance_;
    new (ptr) ::kentik::bgp_monitoring::v202210::GetMetricsForTargetResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kentik::bgp_monitoring::v202210::GetMetricsForTargetResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetMetricsForTargetResponse_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetMetricsForTargetResponse_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto}, {
      &scc_info_BgpMetric_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto.base,}};

static void InitDefaultsscc_info_GetMonitorRequest_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kentik::bgp_monitoring::v202210::_GetMonitorRequest_default_instance_;
    new (ptr) ::kentik::bgp_monitoring::v202210::GetMonitorRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kentik::bgp_monitoring::v202210::GetMonitorRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetMonitorRequest_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetMonitorRequest_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto}, {}};

static void InitDefaultsscc_info_GetMonitorResponse_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kentik::bgp_monitoring::v202210::_GetMonitorResponse_default_instance_;
    new (ptr) ::kentik::bgp_monitoring::v202210::GetMonitorResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kentik::bgp_monitoring::v202210::GetMonitorResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetMonitorResponse_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetMonitorResponse_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto}, {
      &scc_info_BgpMonitor_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto.base,}};

static void InitDefaultsscc_info_GetRoutesForTargetRequest_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kentik::bgp_monitoring::v202210::_GetRoutesForTargetRequest_default_instance_;
    new (ptr) ::kentik::bgp_monitoring::v202210::GetRoutesForTargetRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kentik::bgp_monitoring::v202210::GetRoutesForTargetRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_GetRoutesForTargetRequest_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_GetRoutesForTargetRequest_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto}, {
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,
      &scc_info_Nlri_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto.base,}};

static void InitDefaultsscc_info_GetRoutesForTargetResponse_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kentik::bgp_monitoring::v202210::_GetRoutesForTargetResponse_default_instance_;
    new (ptr) ::kentik::bgp_monitoring::v202210::GetRoutesForTargetResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kentik::bgp_monitoring::v202210::GetRoutesForTargetResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_GetRoutesForTargetResponse_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_GetRoutesForTargetResponse_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto}, {
      &scc_info_RouteInfo_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto.base,
      &scc_info_GetRoutesForTargetResponse_AsNamesEntry_DoNotUse_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto.base,}};

static void InitDefaultsscc_info_GetRoutesForTargetResponse_AsNamesEntry_DoNotUse_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kentik::bgp_monitoring::v202210::_GetRoutesForTargetResponse_AsNamesEntry_DoNotUse_default_instance_;
    new (ptr) ::kentik::bgp_monitoring::v202210::GetRoutesForTargetResponse_AsNamesEntry_DoNotUse();
  }
  ::kentik::bgp_monitoring::v202210::GetRoutesForTargetResponse_AsNamesEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetRoutesForTargetResponse_AsNamesEntry_DoNotUse_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetRoutesForTargetResponse_AsNamesEntry_DoNotUse_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto}, {}};

static void InitDefaultsscc_info_ListMonitorsRequest_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kentik::bgp_monitoring::v202210::_ListMonitorsRequest_default_instance_;
    new (ptr) ::kentik::bgp_monitoring::v202210::ListMonitorsRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kentik::bgp_monitoring::v202210::ListMonitorsRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ListMonitorsRequest_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ListMonitorsRequest_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto}, {}};

static void InitDefaultsscc_info_ListMonitorsResponse_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kentik::bgp_monitoring::v202210::_ListMonitorsResponse_default_instance_;
    new (ptr) ::kentik::bgp_monitoring::v202210::ListMonitorsResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kentik::bgp_monitoring::v202210::ListMonitorsResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ListMonitorsResponse_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ListMonitorsResponse_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto}, {
      &scc_info_BgpMonitor_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto.base,}};

static void InitDefaultsscc_info_Nlri_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kentik::bgp_monitoring::v202210::_Nlri_default_instance_;
    new (ptr) ::kentik::bgp_monitoring::v202210::Nlri();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kentik::bgp_monitoring::v202210::Nlri::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Nlri_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Nlri_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto}, {}};

static void InitDefaultsscc_info_RouteInfo_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kentik::bgp_monitoring::v202210::_RouteInfo_default_instance_;
    new (ptr) ::kentik::bgp_monitoring::v202210::RouteInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kentik::bgp_monitoring::v202210::RouteInfo::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_RouteInfo_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_RouteInfo_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto}, {
      &scc_info_Nlri_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto.base,
      &scc_info_VantagePoint_kentik_2fnet_2fv202303_2fbgp_5ftypes_2eproto.base,}};

static void InitDefaultsscc_info_SetMonitorStatusRequest_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kentik::bgp_monitoring::v202210::_SetMonitorStatusRequest_default_instance_;
    new (ptr) ::kentik::bgp_monitoring::v202210::SetMonitorStatusRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kentik::bgp_monitoring::v202210::SetMonitorStatusRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SetMonitorStatusRequest_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SetMonitorStatusRequest_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto}, {}};

static void InitDefaultsscc_info_SetMonitorStatusResponse_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kentik::bgp_monitoring::v202210::_SetMonitorStatusResponse_default_instance_;
    new (ptr) ::kentik::bgp_monitoring::v202210::SetMonitorStatusResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kentik::bgp_monitoring::v202210::SetMonitorStatusResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SetMonitorStatusResponse_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SetMonitorStatusResponse_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto}, {}};

static void InitDefaultsscc_info_UpdateMonitorRequest_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kentik::bgp_monitoring::v202210::_UpdateMonitorRequest_default_instance_;
    new (ptr) ::kentik::bgp_monitoring::v202210::UpdateMonitorRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kentik::bgp_monitoring::v202210::UpdateMonitorRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_UpdateMonitorRequest_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_UpdateMonitorRequest_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto}, {
      &scc_info_BgpMonitor_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto.base,}};

static void InitDefaultsscc_info_UpdateMonitorResponse_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kentik::bgp_monitoring::v202210::_UpdateMonitorResponse_default_instance_;
    new (ptr) ::kentik::bgp_monitoring::v202210::UpdateMonitorResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kentik::bgp_monitoring::v202210::UpdateMonitorResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_UpdateMonitorResponse_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_UpdateMonitorResponse_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto}, {
      &scc_info_BgpMonitor_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto[23];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kentik::bgp_monitoring::v202210::Nlri, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::kentik::bgp_monitoring::v202210::Nlri, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kentik::bgp_monitoring::v202210::Nlri, afi_),
  PROTOBUF_FIELD_OFFSET(::kentik::bgp_monitoring::v202210::Nlri, safi_),
  offsetof(::kentik::bgp_monitoring::v202210::NlriDefaultTypeInternal, prefix_),
  PROTOBUF_FIELD_OFFSET(::kentik::bgp_monitoring::v202210::Nlri, type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kentik::bgp_monitoring::v202210::BgpHealthSettings, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kentik::bgp_monitoring::v202210::BgpHealthSettings, reachability_warning_),
  PROTOBUF_FIELD_OFFSET(::kentik::bgp_monitoring::v202210::BgpHealthSettings, reachability_critical_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kentik::bgp_monitoring::v202210::BgpMonitorSettings, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kentik::bgp_monitoring::v202210::BgpMonitorSettings, allowed_asns_),
  PROTOBUF_FIELD_OFFSET(::kentik::bgp_monitoring::v202210::BgpMonitorSettings, targets_),
  PROTOBUF_FIELD_OFFSET(::kentik::bgp_monitoring::v202210::BgpMonitorSettings, check_rpki_),
  PROTOBUF_FIELD_OFFSET(::kentik::bgp_monitoring::v202210::BgpMonitorSettings, include_covered_prefixes_),
  PROTOBUF_FIELD_OFFSET(::kentik::bgp_monitoring::v202210::BgpMonitorSettings, health_settings_),
  PROTOBUF_FIELD_OFFSET(::kentik::bgp_monitoring::v202210::BgpMonitorSettings, notification_channels_),
  PROTOBUF_FIELD_OFFSET(::kentik::bgp_monitoring::v202210::BgpMonitorSettings, notes_),
  PROTOBUF_FIELD_OFFSET(::kentik::bgp_monitoring::v202210::BgpMonitorSettings, allowed_upstreams_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kentik::bgp_monitoring::v202210::BgpMonitor, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kentik::bgp_monitoring::v202210::BgpMonitor, id_),
  PROTOBUF_FIELD_OFFSET(::kentik::bgp_monitoring::v202210::BgpMonitor, name_),
  PROTOBUF_FIELD_OFFSET(::kentik::bgp_monitoring::v202210::BgpMonitor, status_),
  PROTOBUF_FIELD_OFFSET(::kentik::bgp_monitoring::v202210::BgpMonitor, settings_),
  PROTOBUF_FIELD_OFFSET(::kentik::bgp_monitoring::v202210::BgpMonitor, cdate_),
  PROTOBUF_FIELD_OFFSET(::kentik::bgp_monitoring::v202210::BgpMonitor, edate_),
  PROTOBUF_FIELD_OFFSET(::kentik::bgp_monitoring::v202210::BgpMonitor, created_by_),
  PROTOBUF_FIELD_OFFSET(::kentik::bgp_monitoring::v202210::BgpMonitor, last_updated_by_),
  PROTOBUF_FIELD_OFFSET(::kentik::bgp_monitoring::v202210::BgpMonitor, labels_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kentik::bgp_monitoring::v202210::RouteInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kentik::bgp_monitoring::v202210::RouteInfo, nlri_),
  PROTOBUF_FIELD_OFFSET(::kentik::bgp_monitoring::v202210::RouteInfo, origin_asn_),
  PROTOBUF_FIELD_OFFSET(::kentik::bgp_monitoring::v202210::RouteInfo, as_path_),
  PROTOBUF_FIELD_OFFSET(::kentik::bgp_monitoring::v202210::RouteInfo, vantage_point_),
  PROTOBUF_FIELD_OFFSET(::kentik::bgp_monitoring::v202210::RouteInfo, rpki_status_),
  PROTOBUF_FIELD_OFFSET(::kentik::bgp_monitoring::v202210::RouteInfo, nexthop_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kentik::bgp_monitoring::v202210::BgpMetric, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::kentik::bgp_monitoring::v202210::BgpMetric, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kentik::bgp_monitoring::v202210::BgpMetric, timestamp_),
  PROTOBUF_FIELD_OFFSET(::kentik::bgp_monitoring::v202210::BgpMetric, nlri_),
  offsetof(::kentik::bgp_monitoring::v202210::BgpMetricDefaultTypeInternal, reachability_),
  offsetof(::kentik::bgp_monitoring::v202210::BgpMetricDefaultTypeInternal, path_changes_),
  PROTOBUF_FIELD_OFFSET(::kentik::bgp_monitoring::v202210::BgpMetric, type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kentik::bgp_monitoring::v202210::ListMonitorsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kentik::bgp_monitoring::v202210::ListMonitorsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kentik::bgp_monitoring::v202210::ListMonitorsResponse, monitors_),
  PROTOBUF_FIELD_OFFSET(::kentik::bgp_monitoring::v202210::ListMonitorsResponse, invalid_count_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kentik::bgp_monitoring::v202210::CreateMonitorRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kentik::bgp_monitoring::v202210::CreateMonitorRequest, monitor_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kentik::bgp_monitoring::v202210::CreateMonitorResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kentik::bgp_monitoring::v202210::CreateMonitorResponse, monitor_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kentik::bgp_monitoring::v202210::GetMonitorRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kentik::bgp_monitoring::v202210::GetMonitorRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kentik::bgp_monitoring::v202210::GetMonitorResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kentik::bgp_monitoring::v202210::GetMonitorResponse, monitor_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kentik::bgp_monitoring::v202210::UpdateMonitorRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kentik::bgp_monitoring::v202210::UpdateMonitorRequest, monitor_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kentik::bgp_monitoring::v202210::UpdateMonitorResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kentik::bgp_monitoring::v202210::UpdateMonitorResponse, monitor_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kentik::bgp_monitoring::v202210::DeleteMonitorRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kentik::bgp_monitoring::v202210::DeleteMonitorRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kentik::bgp_monitoring::v202210::DeleteMonitorResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kentik::bgp_monitoring::v202210::SetMonitorStatusRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kentik::bgp_monitoring::v202210::SetMonitorStatusRequest, id_),
  PROTOBUF_FIELD_OFFSET(::kentik::bgp_monitoring::v202210::SetMonitorStatusRequest, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kentik::bgp_monitoring::v202210::SetMonitorStatusResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kentik::bgp_monitoring::v202210::GetMetricsForTargetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kentik::bgp_monitoring::v202210::GetMetricsForTargetRequest, start_time_),
  PROTOBUF_FIELD_OFFSET(::kentik::bgp_monitoring::v202210::GetMetricsForTargetRequest, end_time_),
  PROTOBUF_FIELD_OFFSET(::kentik::bgp_monitoring::v202210::GetMetricsForTargetRequest, target_),
  PROTOBUF_FIELD_OFFSET(::kentik::bgp_monitoring::v202210::GetMetricsForTargetRequest, include_covered_),
  PROTOBUF_FIELD_OFFSET(::kentik::bgp_monitoring::v202210::GetMetricsForTargetRequest, metrics_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kentik::bgp_monitoring::v202210::GetMetricsForTargetResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kentik::bgp_monitoring::v202210::GetMetricsForTargetResponse, metrics_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kentik::bgp_monitoring::v202210::GetRoutesForTargetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kentik::bgp_monitoring::v202210::GetRoutesForTargetRequest, time_),
  PROTOBUF_FIELD_OFFSET(::kentik::bgp_monitoring::v202210::GetRoutesForTargetRequest, target_),
  PROTOBUF_FIELD_OFFSET(::kentik::bgp_monitoring::v202210::GetRoutesForTargetRequest, include_covered_),
  PROTOBUF_FIELD_OFFSET(::kentik::bgp_monitoring::v202210::GetRoutesForTargetRequest, check_rpki_),
  PROTOBUF_FIELD_OFFSET(::kentik::bgp_monitoring::v202210::GetRoutesForTargetResponse_AsNamesEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::kentik::bgp_monitoring::v202210::GetRoutesForTargetResponse_AsNamesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kentik::bgp_monitoring::v202210::GetRoutesForTargetResponse_AsNamesEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::kentik::bgp_monitoring::v202210::GetRoutesForTargetResponse_AsNamesEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kentik::bgp_monitoring::v202210::GetRoutesForTargetResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kentik::bgp_monitoring::v202210::GetRoutesForTargetResponse, routes_),
  PROTOBUF_FIELD_OFFSET(::kentik::bgp_monitoring::v202210::GetRoutesForTargetResponse, as_names_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::kentik::bgp_monitoring::v202210::Nlri)},
  { 9, -1, sizeof(::kentik::bgp_monitoring::v202210::BgpHealthSettings)},
  { 16, -1, sizeof(::kentik::bgp_monitoring::v202210::BgpMonitorSettings)},
  { 29, -1, sizeof(::kentik::bgp_monitoring::v202210::BgpMonitor)},
  { 43, -1, sizeof(::kentik::bgp_monitoring::v202210::RouteInfo)},
  { 54, -1, sizeof(::kentik::bgp_monitoring::v202210::BgpMetric)},
  { 64, -1, sizeof(::kentik::bgp_monitoring::v202210::ListMonitorsRequest)},
  { 69, -1, sizeof(::kentik::bgp_monitoring::v202210::ListMonitorsResponse)},
  { 76, -1, sizeof(::kentik::bgp_monitoring::v202210::CreateMonitorRequest)},
  { 82, -1, sizeof(::kentik::bgp_monitoring::v202210::CreateMonitorResponse)},
  { 88, -1, sizeof(::kentik::bgp_monitoring::v202210::GetMonitorRequest)},
  { 94, -1, sizeof(::kentik::bgp_monitoring::v202210::GetMonitorResponse)},
  { 100, -1, sizeof(::kentik::bgp_monitoring::v202210::UpdateMonitorRequest)},
  { 106, -1, sizeof(::kentik::bgp_monitoring::v202210::UpdateMonitorResponse)},
  { 112, -1, sizeof(::kentik::bgp_monitoring::v202210::DeleteMonitorRequest)},
  { 118, -1, sizeof(::kentik::bgp_monitoring::v202210::DeleteMonitorResponse)},
  { 123, -1, sizeof(::kentik::bgp_monitoring::v202210::SetMonitorStatusRequest)},
  { 130, -1, sizeof(::kentik::bgp_monitoring::v202210::SetMonitorStatusResponse)},
  { 135, -1, sizeof(::kentik::bgp_monitoring::v202210::GetMetricsForTargetRequest)},
  { 145, -1, sizeof(::kentik::bgp_monitoring::v202210::GetMetricsForTargetResponse)},
  { 151, -1, sizeof(::kentik::bgp_monitoring::v202210::GetRoutesForTargetRequest)},
  { 160, 167, sizeof(::kentik::bgp_monitoring::v202210::GetRoutesForTargetResponse_AsNamesEntry_DoNotUse)},
  { 169, -1, sizeof(::kentik::bgp_monitoring::v202210::GetRoutesForTargetResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::kentik::bgp_monitoring::v202210::_Nlri_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::kentik::bgp_monitoring::v202210::_BgpHealthSettings_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::kentik::bgp_monitoring::v202210::_BgpMonitorSettings_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::kentik::bgp_monitoring::v202210::_BgpMonitor_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::kentik::bgp_monitoring::v202210::_RouteInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::kentik::bgp_monitoring::v202210::_BgpMetric_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::kentik::bgp_monitoring::v202210::_ListMonitorsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::kentik::bgp_monitoring::v202210::_ListMonitorsResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::kentik::bgp_monitoring::v202210::_CreateMonitorRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::kentik::bgp_monitoring::v202210::_CreateMonitorResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::kentik::bgp_monitoring::v202210::_GetMonitorRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::kentik::bgp_monitoring::v202210::_GetMonitorResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::kentik::bgp_monitoring::v202210::_UpdateMonitorRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::kentik::bgp_monitoring::v202210::_UpdateMonitorResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::kentik::bgp_monitoring::v202210::_DeleteMonitorRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::kentik::bgp_monitoring::v202210::_DeleteMonitorResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::kentik::bgp_monitoring::v202210::_SetMonitorStatusRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::kentik::bgp_monitoring::v202210::_SetMonitorStatusResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::kentik::bgp_monitoring::v202210::_GetMetricsForTargetRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::kentik::bgp_monitoring::v202210::_GetMetricsForTargetResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::kentik::bgp_monitoring::v202210::_GetRoutesForTargetRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::kentik::bgp_monitoring::v202210::_GetRoutesForTargetResponse_AsNamesEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::kentik::bgp_monitoring::v202210::_GetRoutesForTargetResponse_default_instance_),
};

const char descriptor_table_protodef_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n2kentik/bgp_monitoring/v202210/bgp_moni"
  "toring.proto\022\035kentik.bgp_monitoring.v202"
  "210\032\034google/api/annotations.proto\032\027googl"
  "e/api/client.proto\032\037google/api/field_beh"
  "avior.proto\032\037google/protobuf/timestamp.p"
  "roto\032.protoc-gen-openapiv2/options/annot"
  "ations.proto\032%kentik/core/v202303/annota"
  "tions.proto\032#kentik/core/v202303/user_in"
  "fo.proto\032\"kentik/net/v202303/bgp_types.p"
  "roto\"\211\002\n\004Nlri\022M\n\003afi\030\001 \001(\0162\027.kentik.net."
  "v202303.AfiB\"\222A\0332\031Address Family Identif"
  "ier\342A\001\002R\003afi\022[\n\004safi\030\002 \001(\0162\030.kentik.net."
  "v202303.SafiB-\222A&2$Subsequent Address Fa"
  "mily Identifier\342A\001\002R\004safi\022M\n\006prefix\030\003 \001("
  "\tB3\222A,2*Actual prefix data (format depen"
  "ds on AFI)\342A\001\002H\000R\006prefixB\006\n\004type\"\376\001\n\021Bgp"
  "HealthSettings\022r\n\024reachability_warning\030\001"
  " \001(\002B\?\222A<2:Threshold (in percents) for t"
  "riggering warning level alertR\023reachabil"
  "ityWarning\022u\n\025reachability_critical\030\002 \001("
  "\002B@\222A=2;Threshold (in percents) for trig"
  "gering critical level alertR\024reachabilit"
  "yCritical\"\226\007\n\022BgpMonitorSettings\022e\n\014allo"
  "wed_asns\030\001 \003(\rBB\222A\?2=List of ASNs that a"
  "re valid originators of monitored prefix"
  "esR\013allowedAsns\022c\n\007targets\030\002 \003(\0132#.kenti"
  "k.bgp_monitoring.v202210.NlriB$\222A\0352\033List"
  " of prefixes to monitor\342A\001\002R\007targets\022\200\001\n"
  "\ncheck_rpki\030\003 \001(\010Ba\222A^2\\Enable verificat"
  "ion of validity of advertisements of mon"
  "itored prefixes with respect to RPKIR\tch"
  "eckRpki\022~\n\030include_covered_prefixes\030\004 \001("
  "\010BD\222AA2\?Include advertised subnets (sub-"
  "prefixes) of monitored prefixesR\026include"
  "CoveredPrefixes\022\203\001\n\017health_settings\030\005 \001("
  "\01320.kentik.bgp_monitoring.v202210.BgpHea"
  "lthSettingsB(\222A%2#Parameters for trigger"
  "ing of alertsR\016healthSettings\022u\n\025notific"
  "ation_channels\030\006 \003(\tB@\222A=2;List of IDs o"
  "f notification channels for delivery of "
  "alertsR\024notificationChannels\022B\n\005notes\030\007 "
  "\001(\tB,\222A)2\'Free form notes documenting th"
  "e monitorR\005notes\022p\n\021allowed_upstreams\030\010 "
  "\003(\rBC\222A@2>List of ASNs that are expected"
  " to propagate monitored prefixesR\020allowe"
  "dUpstreams\"\240\006\n\nBgpMonitor\022;\n\002id\030\001 \001(\tB+\222"
  "A$2\"System generated unique identifier\342A"
  "\001\003R\002id\022>\n\004name\030\002 \001(\tB*\222A#2!User selected"
  " name of the monitor\342A\001\002R\004name\022r\n\006status"
  "\030\003 \001(\0162/.kentik.bgp_monitoring.v202210.B"
  "gpMonitorStatusB)\222A&2$Administrative sta"
  "tus of the monitorR\006status\022l\n\010settings\030\004"
  " \001(\01321.kentik.bgp_monitoring.v202210.Bgp"
  "MonitorSettingsB\035\222A\0322\030Configuration para"
  "metersR\010settings\022S\n\005cdate\030\005 \001(\0132\032.google"
  ".protobuf.TimestampB!\222A\0322\030Creation times"
  "tamp (UTC)\342A\001\003R\005cdate\022\\\n\005edate\030\006 \001(\0132\032.g"
  "oogle.protobuf.TimestampB*\222A#2!Last modi"
  "fication timestamp (UTC)\342A\001\003R\005edate\022b\n\nc"
  "reated_by\030\007 \001(\0132\035.kentik.core.v202303.Us"
  "erInfoB$\222A\0352\033Identity of monitor creator"
  "\342A\001\003R\tcreatedBy\022\203\001\n\017last_updated_by\030\010 \001("
  "\0132\035.kentik.core.v202303.UserInfoB<\222A523I"
  "dentity of user that has modified the mo"
  "nitor last\342A\001\003R\rlastUpdatedBy\022\026\n\006labels\030"
  "\t \003(\tR\006labels\"\205\005\n\tRouteInfo\022^\n\004nlri\030\001 \001("
  "\0132#.kentik.bgp_monitoring.v202210.NlriB%"
  "\222A\0362\034Prefix (target of the route)\342A\001\003R\004n"
  "lri\022Y\n\norigin_asn\030\002 \001(\rB:\222A321The autono"
  "mous system number originating the NLRI\342"
  "A\001\003R\toriginAsn\022P\n\007as_path\030\003 \003(\tB7\222A422AS"
  " path observed at the vantage point for "
  "the NLRIR\006asPath\022\203\001\n\rvantage_point\030\004 \001(\013"
  "2 .kentik.net.v202303.VantagePointB<\222A52"
  "3Name of the vantage point providing the"
  " observation\342A\001\003R\014vantagePoint\022v\n\013rpki_s"
  "tatus\030\005 \001(\0162\036.kentik.net.v202303.RpkiSta"
  "tusB5\222A.2,Validation status of prefix\'s "
  "advertisements\342A\001\003R\nrpkiStatus\022m\n\007nextho"
  "p\030\006 \001(\tBS\222AL2JIP address of the first ro"
  "ute hop from the vantage point toward th"
  "e target\342A\001\003R\007nexthop\"\300\003\n\tBgpMetric\022^\n\tt"
  "imestamp\030\001 \001(\0132\032.google.protobuf.Timesta"
  "mpB$\222A\0352\033UTC time of the observation\342A\001\003"
  "R\ttimestamp\022O\n\004nlri\030\002 \001(\0132#.kentik.bgp_m"
  "onitoring.v202210.NlriB\026\222A\0172\rTarget pref"
  "ix\342A\001\003R\004nlri\022j\n\014reachability\030\003 \001(\002BD\222A=2"
  ";Percentage of vantage points reporting "
  "the prefix reachable\342A\001\003H\000R\014reachability"
  "\022\215\001\n\014path_changes\030\005 \001(\rBh\222Aa2_Number of "
  "AS path changes for the prefix across al"
  "l vantage points in the queried time int"
  "erval\342A\001\003H\000R\013pathChangesB\006\n\004type\"\025\n\023List"
  "MonitorsRequest\"\367\001\n\024ListMonitorsResponse"
  "\022~\n\010monitors\030\001 \003(\0132).kentik.bgp_monitori"
  "ng.v202210.BgpMonitorB7\222A02.List of BGP "
  "monitors configured in the account\342A\001\003R\010"
  "monitors\022_\n\rinvalid_count\030\002 \001(\rB:\222A321Nu"
  "mber of invalid objects (should be alway"
  "s zero)\342A\001\003R\014invalidCount\"\224\001\n\024CreateMoni"
  "torRequest\022|\n\007monitor\030\001 \001(\0132).kentik.bgp"
  "_monitoring.v202210.BgpMonitorB7\222A02.Con"
  "figuration of the BGP monitor to be crea"
  "ted\342A\001\002R\007monitor\"\225\001\n\025CreateMonitorRespon"
  "se\022|\n\007monitor\030\001 \001(\0132).kentik.bgp_monitor"
  "ing.v202210.BgpMonitorB7\222A02.Configurati"
  "on of the newly created BGP monitor\342A\001\003R"
  "\007monitor\"S\n\021GetMonitorRequest\022>\n\002id\030\001 \001("
  "\tB.\222A\'2%ID of the BGP monitor to be retr"
  "ieved\342A\001\002R\002id\"\216\001\n\022GetMonitorResponse\022x\n\007"
  "monitor\030\001 \001(\0132).kentik.bgp_monitoring.v2"
  "02210.BgpMonitorB3\222A,2*Configuration of "
  "the requested BGP monitor\342A\001\003R\007monitor\"\231"
  "\001\n\024UpdateMonitorRequest\022\200\001\n\007monitor\030\001 \001("
  "\0132).kentik.bgp_monitoring.v202210.BgpMon"
  "itorB;\222A422New configuration of the BGP "
  "monitor to be updated\342A\001\002R\007monitor\"\217\001\n\025U"
  "pdateMonitorResponse\022v\n\007monitor\030\001 \001(\0132)."
  "kentik.bgp_monitoring.v202210.BgpMonitor"
  "B1\222A*2(Configuration of the updated BGP "
  "monitor\342A\001\003R\007monitor\"T\n\024DeleteMonitorReq"
  "uest\022<\n\002id\030\001 \001(\tB,\222A%2#ID of the BGP mon"
  "itor to be deleted\342A\001\002R\002id\"\027\n\025DeleteMoni"
  "torResponse\"\350\001\n\027SetMonitorStatusRequest\022"
  "M\n\002id\030\001 \001(\tB=\222A624ID of the BGP monitor "
  "whose status is to be modified\342A\001\002R\002id\022~"
  "\n\006status\030\002 \001(\0162/.kentik.bgp_monitoring.v"
  "202210.BgpMonitorStatusB5\222A.2,Desired ad"
  "ministrative status of the monitor\342A\001\002R\006"
  "status\"\032\n\030SetMonitorStatusResponse\"\344\004\n\032G"
  "etMetricsForTargetRequest\022v\n\nstart_time\030"
  "\001 \001(\0132\032.google.protobuf.TimestampB;\222A422"
  "UTC timestamp of the beginning of querie"
  "d interval\342A\001\002R\tstartTime\022l\n\010end_time\030\002 "
  "\001(\0132\032.google.protobuf.TimestampB5\222A.2,UT"
  "C timestamp of the end of queried interv"
  "al\342A\001\002R\007endTime\022`\n\006target\030\003 \001(\0132#.kentik"
  ".bgp_monitoring.v202210.NlriB#\222A\0342\032Targe"
  "t prefix of the query\342A\001\002R\006target\022}\n\017inc"
  "lude_covered\030\004 \001(\010BT\222AQ2OReturn metrics "
  "for subnets (sub-prefixes) of the target"
  " prefix (default: false)R\016includeCovered"
  "\022\177\n\007metrics\030\005 \003(\0162,.kentik.bgp_monitorin"
  "g.v202210.BgpMetricTypeB7\222A02.List of on"
  "e or more BGP metric types to return\342A\001\002"
  "R\007metrics\"\220\001\n\033GetMetricsForTargetRespons"
  "e\022q\n\007metrics\030\001 \003(\0132(.kentik.bgp_monitori"
  "ng.v202210.BgpMetricB-\222A&2$List of obser"
  "vations (metric values)\342A\001\003R\007metrics\"\345\003\n"
  "\031GetRoutesForTargetRequest\022n\n\004time\030\001 \001(\013"
  "2\032.google.protobuf.TimestampB>\222A725Refer"
  "ence UTC time for the route information "
  "snapshot\342A\001\002R\004time\022S\n\006target\030\002 \001(\0132#.ken"
  "tik.bgp_monitoring.v202210.NlriB\026\222A\0172\rTa"
  "rget prefix\342A\001\002R\006target\022|\n\017include_cover"
  "ed\030\004 \001(\010BS\222AP2NReturn routes for subnets"
  " (sub-prefixes) of the target prefix (de"
  "fault: false)R\016includeCovered\022\204\001\n\ncheck_"
  "rpki\030\005 \001(\010Be\222Ab2`Return information abou"
  "t validity of prefix advertisements with"
  " respect to RPKI (default: false)R\tcheck"
  "Rpki\"\307\002\n\032GetRoutesForTargetResponse\022Y\n\006r"
  "outes\030\001 \003(\0132(.kentik.bgp_monitoring.v202"
  "210.RouteInfoB\027\222A\0202\016List of routes\342A\001\003R\006"
  "routes\022\221\001\n\010as_names\030\005 \003(\0132F.kentik.bgp_m"
  "onitoring.v202210.GetRoutesForTargetResp"
  "onse.AsNamesEntryB.\222A\'2%look-aside map A"
  "S names keyed by ASNs\342A\001\003R\007asNames\032:\n\014As"
  "NamesEntry\022\020\n\003key\030\001 \001(\rR\003key\022\024\n\005value\030\002 "
  "\001(\tR\005value:\0028\001*\224\001\n\020BgpMonitorStatus\022\"\n\036B"
  "GP_MONITOR_STATUS_UNSPECIFIED\020\000\022\035\n\031BGP_M"
  "ONITOR_STATUS_ACTIVE\020\001\022\035\n\031BGP_MONITOR_ST"
  "ATUS_PAUSED\020\002\022\036\n\032BGP_MONITOR_STATUS_DELE"
  "TED\020\003*t\n\rBgpMetricType\022\037\n\033BGP_METRIC_TYP"
  "E_UNSPECIFIED\020\000\022 \n\034BGP_METRIC_TYPE_REACH"
  "ABILITY\020\001\022 \n\034BGP_METRIC_TYPE_PATH_CHANGE"
  "S\020\0022\270\017\n\031BgpMonitoringAdminService\022\232\002\n\014Li"
  "stMonitors\0222.kentik.bgp_monitoring.v2022"
  "10.ListMonitorsRequest\0323.kentik.bgp_moni"
  "toring.v202210.ListMonitorsResponse\"\240\001\222A"
  "\\\022\022List BGP Monitors.\0328Returns list of a"
  "ll BGP monitors present in the account.*"
  "\014ListMonitors\362\327\002\025admin.synthetics:read\202\323"
  "\344\223\002\"\022 /bgp_monitoring/v202210/monitors\022\274"
  "\002\n\rCreateMonitor\0223.kentik.bgp_monitoring"
  ".v202210.CreateMonitorRequest\0324.kentik.b"
  "gp_monitoring.v202210.CreateMonitorRespo"
  "nse\"\277\001\222Aw\022 Create new BGP Monitor instan"
  "ce.\032DCreates new BGP Monitor and if succ"
  "essful returns its configuration.*\rCreat"
  "eMonitor\362\327\002\026admin.synthetics:write\202\323\344\223\002%"
  "\" /bgp_monitoring/v202210/monitors:\001*\022\252\002"
  "\n\nGetMonitor\0220.kentik.bgp_monitoring.v20"
  "2210.GetMonitorRequest\0321.kentik.bgp_moni"
  "toring.v202210.GetMonitorResponse\"\266\001\222Am\022"
  "\036Get BGP Monitor configuration.\032\?Returns"
  " configuration of existing BGP monitor w"
  "ith specific ID.*\nGetMonitor\362\327\002\025admin.sy"
  "nthetics:read\202\323\344\223\002\'\022%/bgp_monitoring/v20"
  "2210/monitors/{id}\022\345\002\n\rUpdateMonitor\0223.k"
  "entik.bgp_monitoring.v202210.UpdateMonit"
  "orRequest\0324.kentik.bgp_monitoring.v20221"
  "0.UpdateMonitorResponse\"\350\001\222A\222\001\022&Update c"
  "onfiguration of a BGP monitor.\032YUpdates "
  "configuration of BGP monitor with specif"
  "ic ID and returns updated  configuration"
  ".*\rUpdateMonitor\362\327\002\026admin.synthetics:wri"
  "te\202\323\344\223\0022\032-/bgp_monitoring/v202210/monito"
  "rs/{monitor.id}:\001*\022\237\002\n\rDeleteMonitor\0223.k"
  "entik.bgp_monitoring.v202210.DeleteMonit"
  "orRequest\0324.kentik.bgp_monitoring.v20221"
  "0.DeleteMonitorResponse\"\242\001\222AX\022\034Delete ex"
  "isting BGP Monitor.\032)Delete BGP monitor "
  "with with specific ID.*\rDeleteMonitor\362\327\002"
  "\026admin.synthetics:write\202\323\344\223\002\'*%/bgp_moni"
  "toring/v202210/monitors/{id}\022\327\002\n\020SetMoni"
  "torStatus\0226.kentik.bgp_monitoring.v20221"
  "0.SetMonitorStatusRequest\0327.kentik.bgp_m"
  "onitoring.v202210.SetMonitorStatusRespon"
  "se\"\321\001\222A}\022,Sets administrative status of "
  "a BGP monitor.\032;Sets administrative stat"
  "us of BGP monitor with specific ID.*\020Set"
  "MonitorStatus\362\327\002\026admin.synthetics:write\202"
  "\323\344\223\0021\032,/bgp_monitoring/v202210/monitors/"
  "{id}/status:\001*\032.\312A\023grpc.api.kentik.com\352\327"
  "\002\020admin.synthetics\220\330\002\0032\332\005\n\030BgpMonitoring"
  "DataService\022\302\002\n\023GetMetricsForTarget\0229.ke"
  "ntik.bgp_monitoring.v202210.GetMetricsFo"
  "rTargetRequest\032:.kentik.bgp_monitoring.v"
  "202210.GetMetricsForTargetResponse\"\263\001\222As"
  "\022\035Get metrics for a BGP prefix.\032=Retriev"
  "e metric data for single BGP prefix and "
  "time interval.*\023GetMetricsForTarget\362\327\002\017s"
  "ynthetics:read\202\323\344\223\002$\"\037/bgp_monitoring/v2"
  "02210/metrics:\001*\022\316\002\n\022GetRoutesForTarget\022"
  "8.kentik.bgp_monitoring.v202210.GetRoute"
  "sForTargetRequest\0329.kentik.bgp_monitorin"
  "g.v202210.GetRoutesForTargetResponse\"\302\001\222"
  "A\202\001\022\034Get routes for a BGP prefix.\032NRetri"
  "eve snapshot of route information for si"
  "ngle BGP prefix at specific time.*\022GetRo"
  "utesForTarget\362\327\002\017synthetics:read\202\323\344\223\002#\"\036"
  "/bgp_monitoring/v202210/routes:\001*\032(\312A\023gr"
  "pc.api.kentik.com\352\327\002\nsynthetics\220\330\002\003B\372\032ZW"
  "github.com/kentik/api-schema-public/gen/"
  "go/kentik/bgp_monitoring/v202210;bgp_mon"
  "itoring\222A\235\032\022\260\030\n\022BGP Monitoring API\022\311\027# O"
  "verview\nThe BGP Monitoring API provides "
  "programmatic access to Kentik\'s BGP moni"
  "toring system. The APIs handle two disti"
  "nct functions:\n* **Admin service**: mana"
  "ges monitoring of advertised BGP prefixe"
  "s as collected from global vantage point"
  "s.\n* **Data service**: handles retrieval"
  " of two classes of data for any IP prefi"
  "x:\n    - metrics for reachability and pa"
  "th changes, which provide a time series "
  "for a specified interval;\n    - routes, "
  "which provide a snapshot of routing info"
  "rmation for particular timestamp.\n\nThe s"
  "ervices described above use the followin"
  "g endpoints:\n| Endpoint | Purpose |\n|---"
  "--------|---------|\n| BgpMonitoringAdmin"
  "Service | CRUD operations for BGP monito"
  "rs |\n| BgpMonitoringDataService  | Retri"
  "eval of BGP monitoring data |\n\nBoth REST"
  " endpoints and gRPC RPCs are provided.\n#"
  "## Known Limitations\nThe API currently d"
  "oes not support retrieval of BGP event h"
  "istory.\n# BGP Monitoring Data\n\nKentik\'s "
  "BGP monitoring API provides the followin"
  "g information about network prefixes:\n* "
  "**Reachability**: expressed as the perce"
  "ntage of vantage points reporting the pr"
  "efix\n* **Path changes**: the number of c"
  "hanges in a given time range\n* **Routes*"
  "*: AS Path, next hop\n### Data Retrieval "
  "Limitations\n\nThe following consideration"
  "s apply to data retrieval using these AP"
  "Is:\n* BGP metrics and routes can be retr"
  "ieved for any prefix with prefix length "
  "greater than 14 and any time interval. P"
  "refixes with smaller length must be spli"
  "t into subnets (sub-prefixes) and reques"
  "ted individually.\n* Requests for BGP met"
  "rics can can specify one or more metric "
  "types to be retrieved for a single prefi"
  "x. Observed data are returned as a seque"
  "nce of messages, one for each metric typ"
  "e and observation time.\n* Route requests"
  " retrieve snapshot of information for sp"
  "ecified prefix and time. Responses conta"
  "in also mapping of ASNs to AS names for "
  "convenience.\n# Working with BGP Monitori"
  "ng\n\nThe topics below cover important inf"
  "ormation related to using Kentik\'s BGP m"
  "onitoring APIs.\n### BGP Prefixes\n\nThese "
  "APIs represent BGP prefixes using NLRI ("
  "Network Layer Reachability Information) "
  "objects. While NLRI objects allow repres"
  "entation of any type of network address,"
  " the system currently supports only IPv4"
  " and IPv6 unicast in standard textual re"
  "presentation:\n* **IPv4**: dotted-decimal"
  " notation\n* **IPv6**: [RFC 5952](https:/"
  "/www.rfc-editor.org/rfc/rfc5952) syntax\n"
  "### BGP Monitor Tests\n\nBGP Monitors enab"
  "le the generation of alerts for group ne"
  "twork prefixes (IPv4 or IPv6) based on t"
  "he following factors:\n* Visibility/reach"
  "ability of prefixes\n* Mismatch of origin"
  "ating ASNs with a specified list of vali"
  "d originators\n* Validity of advertisemen"
  "ts with respect to RPKI (Resource Public"
  " Key Infrastructure)\n\n### Configuration "
  "Limitations \n\nThe following consideratio"
  "ns apply when configuring a BGP monitor "
  "test:\n* Each BGP monitor instance can mo"
  "nitor up to 10 prefixes.\n* The length of"
  " each monitored (IPv4 or IPv6) prefix mu"
  "st be greater than 14. Prefixes with sma"
  "ller length must be split into subnets ("
  "sub-prefixes).\"E\n\026Kentik API Engineering"
  "\022+https://github.com/kentik/api-schema-p"
  "ublic2\007v202210*\001\0022\020application/json:\020app"
  "lication/jsonZD\n\036\n\005email\022\025\010\002\032\017X-CH-Auth-"
  "Email \002\n\"\n\005token\022\031\010\002\032\023X-CH-Auth-API-Toke"
  "n \002b\026\n\t\n\005email\022\000\n\t\n\005token\022\000rc\n More abou"
  "t Kentik BGP monitoring\022\?https://kb.kent"
  "ik.com/v4/Ma03.htm#Ma03-BGP_Monitor_Deta"
  "ils_Pageb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto_deps[8] = {
  &::descriptor_table_google_2fapi_2fannotations_2eproto,
  &::descriptor_table_google_2fapi_2fclient_2eproto,
  &::descriptor_table_google_2fapi_2ffield_5fbehavior_2eproto,
  &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
  &::descriptor_table_kentik_2fcore_2fv202303_2fannotations_2eproto,
  &::descriptor_table_kentik_2fcore_2fv202303_2fuser_5finfo_2eproto,
  &::descriptor_table_kentik_2fnet_2fv202303_2fbgp_5ftypes_2eproto,
  &::descriptor_table_protoc_2dgen_2dopenapiv2_2foptions_2fannotations_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto_sccs[23] = {
  &scc_info_BgpHealthSettings_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto.base,
  &scc_info_BgpMetric_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto.base,
  &scc_info_BgpMonitor_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto.base,
  &scc_info_BgpMonitorSettings_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto.base,
  &scc_info_CreateMonitorRequest_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto.base,
  &scc_info_CreateMonitorResponse_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto.base,
  &scc_info_DeleteMonitorRequest_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto.base,
  &scc_info_DeleteMonitorResponse_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto.base,
  &scc_info_GetMetricsForTargetRequest_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto.base,
  &scc_info_GetMetricsForTargetResponse_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto.base,
  &scc_info_GetMonitorRequest_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto.base,
  &scc_info_GetMonitorResponse_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto.base,
  &scc_info_GetRoutesForTargetRequest_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto.base,
  &scc_info_GetRoutesForTargetResponse_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto.base,
  &scc_info_GetRoutesForTargetResponse_AsNamesEntry_DoNotUse_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto.base,
  &scc_info_ListMonitorsRequest_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto.base,
  &scc_info_ListMonitorsResponse_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto.base,
  &scc_info_Nlri_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto.base,
  &scc_info_RouteInfo_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto.base,
  &scc_info_SetMonitorStatusRequest_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto.base,
  &scc_info_SetMonitorStatusResponse_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto.base,
  &scc_info_UpdateMonitorRequest_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto.base,
  &scc_info_UpdateMonitorResponse_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto = {
  false, false, descriptor_table_protodef_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto, "kentik/bgp_monitoring/v202210/bgp_monitoring.proto", 13216,
  &descriptor_table_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto_once, descriptor_table_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto_sccs, descriptor_table_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto_deps, 23, 8,
  schemas, file_default_instances, TableStruct_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto::offsets,
  file_level_metadata_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto, 23, file_level_enum_descriptors_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto, file_level_service_descriptors_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto)), true);
namespace kentik {
namespace bgp_monitoring {
namespace v202210 {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* BgpMonitorStatus_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto);
  return file_level_enum_descriptors_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto[0];
}
bool BgpMonitorStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* BgpMetricType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto);
  return file_level_enum_descriptors_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto[1];
}
bool BgpMetricType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void Nlri::InitAsDefaultInstance() {
  ::kentik::bgp_monitoring::v202210::_Nlri_default_instance_.prefix_.UnsafeSetDefault(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
class Nlri::_Internal {
 public:
};

Nlri::Nlri(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.bgp_monitoring.v202210.Nlri)
}
Nlri::Nlri(const Nlri& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&afi_, &from.afi_,
    static_cast<size_t>(reinterpret_cast<char*>(&safi_) -
    reinterpret_cast<char*>(&afi_)) + sizeof(safi_));
  clear_has_type();
  switch (from.type_case()) {
    case kPrefix: {
      _internal_set_prefix(from._internal_prefix());
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:kentik.bgp_monitoring.v202210.Nlri)
}

void Nlri::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Nlri_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto.base);
  ::memset(&afi_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&safi_) -
      reinterpret_cast<char*>(&afi_)) + sizeof(safi_));
  clear_has_type();
}

Nlri::~Nlri() {
  // @@protoc_insertion_point(destructor:kentik.bgp_monitoring.v202210.Nlri)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Nlri::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (has_type()) {
    clear_type();
  }
}

void Nlri::ArenaDtor(void* object) {
  Nlri* _this = reinterpret_cast< Nlri* >(object);
  (void)_this;
}
void Nlri::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Nlri::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Nlri& Nlri::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Nlri_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto.base);
  return *internal_default_instance();
}


void Nlri::clear_type() {
// @@protoc_insertion_point(one_of_clear_start:kentik.bgp_monitoring.v202210.Nlri)
  switch (type_case()) {
    case kPrefix: {
      type_.prefix_.Destroy(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = TYPE_NOT_SET;
}


void Nlri::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.bgp_monitoring.v202210.Nlri)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&afi_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&safi_) -
      reinterpret_cast<char*>(&afi_)) + sizeof(safi_));
  clear_type();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Nlri::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .kentik.net.v202303.Afi afi = 1[json_name = "afi", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_afi(static_cast<::kentik::net::v202303::Afi>(val));
        } else goto handle_unusual;
        continue;
      // .kentik.net.v202303.Safi safi = 2[json_name = "safi", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_safi(static_cast<::kentik::net::v202303::Safi>(val));
        } else goto handle_unusual;
        continue;
      // string prefix = 3[json_name = "prefix", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_prefix();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "kentik.bgp_monitoring.v202210.Nlri.prefix"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Nlri::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kentik.bgp_monitoring.v202210.Nlri)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kentik.net.v202303.Afi afi = 1[json_name = "afi", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->afi() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_afi(), target);
  }

  // .kentik.net.v202303.Safi safi = 2[json_name = "safi", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->safi() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_safi(), target);
  }

  // string prefix = 3[json_name = "prefix", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (_internal_has_prefix()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_prefix().data(), static_cast<int>(this->_internal_prefix().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "kentik.bgp_monitoring.v202210.Nlri.prefix");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_prefix(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kentik.bgp_monitoring.v202210.Nlri)
  return target;
}

size_t Nlri::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kentik.bgp_monitoring.v202210.Nlri)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .kentik.net.v202303.Afi afi = 1[json_name = "afi", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->afi() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_afi());
  }

  // .kentik.net.v202303.Safi safi = 2[json_name = "safi", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->safi() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_safi());
  }

  switch (type_case()) {
    // string prefix = 3[json_name = "prefix", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    case kPrefix: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_prefix());
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Nlri::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kentik.bgp_monitoring.v202210.Nlri)
  GOOGLE_DCHECK_NE(&from, this);
  const Nlri* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Nlri>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kentik.bgp_monitoring.v202210.Nlri)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kentik.bgp_monitoring.v202210.Nlri)
    MergeFrom(*source);
  }
}

void Nlri::MergeFrom(const Nlri& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kentik.bgp_monitoring.v202210.Nlri)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.afi() != 0) {
    _internal_set_afi(from._internal_afi());
  }
  if (from.safi() != 0) {
    _internal_set_safi(from._internal_safi());
  }
  switch (from.type_case()) {
    case kPrefix: {
      _internal_set_prefix(from._internal_prefix());
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
}

void Nlri::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kentik.bgp_monitoring.v202210.Nlri)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Nlri::CopyFrom(const Nlri& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.bgp_monitoring.v202210.Nlri)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Nlri::IsInitialized() const {
  return true;
}

void Nlri::InternalSwap(Nlri* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Nlri, safi_)
      + sizeof(Nlri::safi_)
      - PROTOBUF_FIELD_OFFSET(Nlri, afi_)>(
          reinterpret_cast<char*>(&afi_),
          reinterpret_cast<char*>(&other->afi_));
  swap(type_, other->type_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata Nlri::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void BgpHealthSettings::InitAsDefaultInstance() {
}
class BgpHealthSettings::_Internal {
 public:
};

BgpHealthSettings::BgpHealthSettings(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.bgp_monitoring.v202210.BgpHealthSettings)
}
BgpHealthSettings::BgpHealthSettings(const BgpHealthSettings& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&reachability_warning_, &from.reachability_warning_,
    static_cast<size_t>(reinterpret_cast<char*>(&reachability_critical_) -
    reinterpret_cast<char*>(&reachability_warning_)) + sizeof(reachability_critical_));
  // @@protoc_insertion_point(copy_constructor:kentik.bgp_monitoring.v202210.BgpHealthSettings)
}

void BgpHealthSettings::SharedCtor() {
  ::memset(&reachability_warning_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reachability_critical_) -
      reinterpret_cast<char*>(&reachability_warning_)) + sizeof(reachability_critical_));
}

BgpHealthSettings::~BgpHealthSettings() {
  // @@protoc_insertion_point(destructor:kentik.bgp_monitoring.v202210.BgpHealthSettings)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BgpHealthSettings::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void BgpHealthSettings::ArenaDtor(void* object) {
  BgpHealthSettings* _this = reinterpret_cast< BgpHealthSettings* >(object);
  (void)_this;
}
void BgpHealthSettings::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BgpHealthSettings::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BgpHealthSettings& BgpHealthSettings::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_BgpHealthSettings_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto.base);
  return *internal_default_instance();
}


void BgpHealthSettings::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.bgp_monitoring.v202210.BgpHealthSettings)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&reachability_warning_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reachability_critical_) -
      reinterpret_cast<char*>(&reachability_warning_)) + sizeof(reachability_critical_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BgpHealthSettings::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // float reachability_warning = 1[json_name = "reachabilityWarning", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 13)) {
          reachability_warning_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float reachability_critical = 2[json_name = "reachabilityCritical", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 21)) {
          reachability_critical_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BgpHealthSettings::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kentik.bgp_monitoring.v202210.BgpHealthSettings)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float reachability_warning = 1[json_name = "reachabilityWarning", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (!(this->reachability_warning() <= 0 && this->reachability_warning() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(1, this->_internal_reachability_warning(), target);
  }

  // float reachability_critical = 2[json_name = "reachabilityCritical", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (!(this->reachability_critical() <= 0 && this->reachability_critical() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(2, this->_internal_reachability_critical(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kentik.bgp_monitoring.v202210.BgpHealthSettings)
  return target;
}

size_t BgpHealthSettings::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kentik.bgp_monitoring.v202210.BgpHealthSettings)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float reachability_warning = 1[json_name = "reachabilityWarning", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (!(this->reachability_warning() <= 0 && this->reachability_warning() >= 0)) {
    total_size += 1 + 4;
  }

  // float reachability_critical = 2[json_name = "reachabilityCritical", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (!(this->reachability_critical() <= 0 && this->reachability_critical() >= 0)) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BgpHealthSettings::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kentik.bgp_monitoring.v202210.BgpHealthSettings)
  GOOGLE_DCHECK_NE(&from, this);
  const BgpHealthSettings* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BgpHealthSettings>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kentik.bgp_monitoring.v202210.BgpHealthSettings)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kentik.bgp_monitoring.v202210.BgpHealthSettings)
    MergeFrom(*source);
  }
}

void BgpHealthSettings::MergeFrom(const BgpHealthSettings& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kentik.bgp_monitoring.v202210.BgpHealthSettings)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!(from.reachability_warning() <= 0 && from.reachability_warning() >= 0)) {
    _internal_set_reachability_warning(from._internal_reachability_warning());
  }
  if (!(from.reachability_critical() <= 0 && from.reachability_critical() >= 0)) {
    _internal_set_reachability_critical(from._internal_reachability_critical());
  }
}

void BgpHealthSettings::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kentik.bgp_monitoring.v202210.BgpHealthSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BgpHealthSettings::CopyFrom(const BgpHealthSettings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.bgp_monitoring.v202210.BgpHealthSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BgpHealthSettings::IsInitialized() const {
  return true;
}

void BgpHealthSettings::InternalSwap(BgpHealthSettings* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BgpHealthSettings, reachability_critical_)
      + sizeof(BgpHealthSettings::reachability_critical_)
      - PROTOBUF_FIELD_OFFSET(BgpHealthSettings, reachability_warning_)>(
          reinterpret_cast<char*>(&reachability_warning_),
          reinterpret_cast<char*>(&other->reachability_warning_));
}

::PROTOBUF_NAMESPACE_ID::Metadata BgpHealthSettings::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void BgpMonitorSettings::InitAsDefaultInstance() {
  ::kentik::bgp_monitoring::v202210::_BgpMonitorSettings_default_instance_._instance.get_mutable()->health_settings_ = const_cast< ::kentik::bgp_monitoring::v202210::BgpHealthSettings*>(
      ::kentik::bgp_monitoring::v202210::BgpHealthSettings::internal_default_instance());
}
class BgpMonitorSettings::_Internal {
 public:
  static const ::kentik::bgp_monitoring::v202210::BgpHealthSettings& health_settings(const BgpMonitorSettings* msg);
};

const ::kentik::bgp_monitoring::v202210::BgpHealthSettings&
BgpMonitorSettings::_Internal::health_settings(const BgpMonitorSettings* msg) {
  return *msg->health_settings_;
}
BgpMonitorSettings::BgpMonitorSettings(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  allowed_asns_(arena),
  targets_(arena),
  notification_channels_(arena),
  allowed_upstreams_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.bgp_monitoring.v202210.BgpMonitorSettings)
}
BgpMonitorSettings::BgpMonitorSettings(const BgpMonitorSettings& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      allowed_asns_(from.allowed_asns_),
      targets_(from.targets_),
      notification_channels_(from.notification_channels_),
      allowed_upstreams_(from.allowed_upstreams_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  notes_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_notes().empty()) {
    notes_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_notes(),
      GetArena());
  }
  if (from._internal_has_health_settings()) {
    health_settings_ = new ::kentik::bgp_monitoring::v202210::BgpHealthSettings(*from.health_settings_);
  } else {
    health_settings_ = nullptr;
  }
  ::memcpy(&check_rpki_, &from.check_rpki_,
    static_cast<size_t>(reinterpret_cast<char*>(&include_covered_prefixes_) -
    reinterpret_cast<char*>(&check_rpki_)) + sizeof(include_covered_prefixes_));
  // @@protoc_insertion_point(copy_constructor:kentik.bgp_monitoring.v202210.BgpMonitorSettings)
}

void BgpMonitorSettings::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_BgpMonitorSettings_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto.base);
  notes_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&health_settings_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&include_covered_prefixes_) -
      reinterpret_cast<char*>(&health_settings_)) + sizeof(include_covered_prefixes_));
}

BgpMonitorSettings::~BgpMonitorSettings() {
  // @@protoc_insertion_point(destructor:kentik.bgp_monitoring.v202210.BgpMonitorSettings)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BgpMonitorSettings::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  notes_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete health_settings_;
}

void BgpMonitorSettings::ArenaDtor(void* object) {
  BgpMonitorSettings* _this = reinterpret_cast< BgpMonitorSettings* >(object);
  (void)_this;
}
void BgpMonitorSettings::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BgpMonitorSettings::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BgpMonitorSettings& BgpMonitorSettings::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_BgpMonitorSettings_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto.base);
  return *internal_default_instance();
}


void BgpMonitorSettings::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.bgp_monitoring.v202210.BgpMonitorSettings)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  allowed_asns_.Clear();
  targets_.Clear();
  notification_channels_.Clear();
  allowed_upstreams_.Clear();
  notes_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && health_settings_ != nullptr) {
    delete health_settings_;
  }
  health_settings_ = nullptr;
  ::memset(&check_rpki_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&include_covered_prefixes_) -
      reinterpret_cast<char*>(&check_rpki_)) + sizeof(include_covered_prefixes_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BgpMonitorSettings::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated uint32 allowed_asns = 1[json_name = "allowedAsns", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_allowed_asns(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8) {
          _internal_add_allowed_asns(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .kentik.bgp_monitoring.v202210.Nlri targets = 2[json_name = "targets", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_targets(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // bool check_rpki = 3[json_name = "checkRpki", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          check_rpki_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool include_covered_prefixes = 4[json_name = "includeCoveredPrefixes", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          include_covered_prefixes_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .kentik.bgp_monitoring.v202210.BgpHealthSettings health_settings = 5[json_name = "healthSettings", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_health_settings(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string notification_channels = 6[json_name = "notificationChannels", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_notification_channels();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "kentik.bgp_monitoring.v202210.BgpMonitorSettings.notification_channels"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else goto handle_unusual;
        continue;
      // string notes = 7[json_name = "notes", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_notes();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "kentik.bgp_monitoring.v202210.BgpMonitorSettings.notes"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated uint32 allowed_upstreams = 8[json_name = "allowedUpstreams", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_allowed_upstreams(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64) {
          _internal_add_allowed_upstreams(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BgpMonitorSettings::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kentik.bgp_monitoring.v202210.BgpMonitorSettings)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 allowed_asns = 1[json_name = "allowedAsns", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  {
    int byte_size = _allowed_asns_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(
          1, _internal_allowed_asns(), byte_size, target);
    }
  }

  // repeated .kentik.bgp_monitoring.v202210.Nlri targets = 2[json_name = "targets", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_targets_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_targets(i), target, stream);
  }

  // bool check_rpki = 3[json_name = "checkRpki", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->check_rpki() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_check_rpki(), target);
  }

  // bool include_covered_prefixes = 4[json_name = "includeCoveredPrefixes", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->include_covered_prefixes() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(4, this->_internal_include_covered_prefixes(), target);
  }

  // .kentik.bgp_monitoring.v202210.BgpHealthSettings health_settings = 5[json_name = "healthSettings", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->has_health_settings()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::health_settings(this), target, stream);
  }

  // repeated string notification_channels = 6[json_name = "notificationChannels", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  for (int i = 0, n = this->_internal_notification_channels_size(); i < n; i++) {
    const auto& s = this->_internal_notification_channels(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "kentik.bgp_monitoring.v202210.BgpMonitorSettings.notification_channels");
    target = stream->WriteString(6, s, target);
  }

  // string notes = 7[json_name = "notes", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->notes().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_notes().data(), static_cast<int>(this->_internal_notes().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "kentik.bgp_monitoring.v202210.BgpMonitorSettings.notes");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_notes(), target);
  }

  // repeated uint32 allowed_upstreams = 8[json_name = "allowedUpstreams", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  {
    int byte_size = _allowed_upstreams_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(
          8, _internal_allowed_upstreams(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kentik.bgp_monitoring.v202210.BgpMonitorSettings)
  return target;
}

size_t BgpMonitorSettings::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kentik.bgp_monitoring.v202210.BgpMonitorSettings)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 allowed_asns = 1[json_name = "allowedAsns", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt32Size(this->allowed_asns_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _allowed_asns_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated .kentik.bgp_monitoring.v202210.Nlri targets = 2[json_name = "targets", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  total_size += 1UL * this->_internal_targets_size();
  for (const auto& msg : this->targets_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated string notification_channels = 6[json_name = "notificationChannels", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(notification_channels_.size());
  for (int i = 0, n = notification_channels_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      notification_channels_.Get(i));
  }

  // repeated uint32 allowed_upstreams = 8[json_name = "allowedUpstreams", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt32Size(this->allowed_upstreams_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _allowed_upstreams_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // string notes = 7[json_name = "notes", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->notes().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_notes());
  }

  // .kentik.bgp_monitoring.v202210.BgpHealthSettings health_settings = 5[json_name = "healthSettings", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->has_health_settings()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *health_settings_);
  }

  // bool check_rpki = 3[json_name = "checkRpki", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->check_rpki() != 0) {
    total_size += 1 + 1;
  }

  // bool include_covered_prefixes = 4[json_name = "includeCoveredPrefixes", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->include_covered_prefixes() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BgpMonitorSettings::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kentik.bgp_monitoring.v202210.BgpMonitorSettings)
  GOOGLE_DCHECK_NE(&from, this);
  const BgpMonitorSettings* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BgpMonitorSettings>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kentik.bgp_monitoring.v202210.BgpMonitorSettings)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kentik.bgp_monitoring.v202210.BgpMonitorSettings)
    MergeFrom(*source);
  }
}

void BgpMonitorSettings::MergeFrom(const BgpMonitorSettings& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kentik.bgp_monitoring.v202210.BgpMonitorSettings)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  allowed_asns_.MergeFrom(from.allowed_asns_);
  targets_.MergeFrom(from.targets_);
  notification_channels_.MergeFrom(from.notification_channels_);
  allowed_upstreams_.MergeFrom(from.allowed_upstreams_);
  if (from.notes().size() > 0) {
    _internal_set_notes(from._internal_notes());
  }
  if (from.has_health_settings()) {
    _internal_mutable_health_settings()->::kentik::bgp_monitoring::v202210::BgpHealthSettings::MergeFrom(from._internal_health_settings());
  }
  if (from.check_rpki() != 0) {
    _internal_set_check_rpki(from._internal_check_rpki());
  }
  if (from.include_covered_prefixes() != 0) {
    _internal_set_include_covered_prefixes(from._internal_include_covered_prefixes());
  }
}

void BgpMonitorSettings::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kentik.bgp_monitoring.v202210.BgpMonitorSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BgpMonitorSettings::CopyFrom(const BgpMonitorSettings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.bgp_monitoring.v202210.BgpMonitorSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BgpMonitorSettings::IsInitialized() const {
  return true;
}

void BgpMonitorSettings::InternalSwap(BgpMonitorSettings* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  allowed_asns_.InternalSwap(&other->allowed_asns_);
  targets_.InternalSwap(&other->targets_);
  notification_channels_.InternalSwap(&other->notification_channels_);
  allowed_upstreams_.InternalSwap(&other->allowed_upstreams_);
  notes_.Swap(&other->notes_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BgpMonitorSettings, include_covered_prefixes_)
      + sizeof(BgpMonitorSettings::include_covered_prefixes_)
      - PROTOBUF_FIELD_OFFSET(BgpMonitorSettings, health_settings_)>(
          reinterpret_cast<char*>(&health_settings_),
          reinterpret_cast<char*>(&other->health_settings_));
}

::PROTOBUF_NAMESPACE_ID::Metadata BgpMonitorSettings::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void BgpMonitor::InitAsDefaultInstance() {
  ::kentik::bgp_monitoring::v202210::_BgpMonitor_default_instance_._instance.get_mutable()->settings_ = const_cast< ::kentik::bgp_monitoring::v202210::BgpMonitorSettings*>(
      ::kentik::bgp_monitoring::v202210::BgpMonitorSettings::internal_default_instance());
  ::kentik::bgp_monitoring::v202210::_BgpMonitor_default_instance_._instance.get_mutable()->cdate_ = const_cast< PROTOBUF_NAMESPACE_ID::Timestamp*>(
      PROTOBUF_NAMESPACE_ID::Timestamp::internal_default_instance());
  ::kentik::bgp_monitoring::v202210::_BgpMonitor_default_instance_._instance.get_mutable()->edate_ = const_cast< PROTOBUF_NAMESPACE_ID::Timestamp*>(
      PROTOBUF_NAMESPACE_ID::Timestamp::internal_default_instance());
  ::kentik::bgp_monitoring::v202210::_BgpMonitor_default_instance_._instance.get_mutable()->created_by_ = const_cast< ::kentik::core::v202303::UserInfo*>(
      ::kentik::core::v202303::UserInfo::internal_default_instance());
  ::kentik::bgp_monitoring::v202210::_BgpMonitor_default_instance_._instance.get_mutable()->last_updated_by_ = const_cast< ::kentik::core::v202303::UserInfo*>(
      ::kentik::core::v202303::UserInfo::internal_default_instance());
}
class BgpMonitor::_Internal {
 public:
  static const ::kentik::bgp_monitoring::v202210::BgpMonitorSettings& settings(const BgpMonitor* msg);
  static const PROTOBUF_NAMESPACE_ID::Timestamp& cdate(const BgpMonitor* msg);
  static const PROTOBUF_NAMESPACE_ID::Timestamp& edate(const BgpMonitor* msg);
  static const ::kentik::core::v202303::UserInfo& created_by(const BgpMonitor* msg);
  static const ::kentik::core::v202303::UserInfo& last_updated_by(const BgpMonitor* msg);
};

const ::kentik::bgp_monitoring::v202210::BgpMonitorSettings&
BgpMonitor::_Internal::settings(const BgpMonitor* msg) {
  return *msg->settings_;
}
const PROTOBUF_NAMESPACE_ID::Timestamp&
BgpMonitor::_Internal::cdate(const BgpMonitor* msg) {
  return *msg->cdate_;
}
const PROTOBUF_NAMESPACE_ID::Timestamp&
BgpMonitor::_Internal::edate(const BgpMonitor* msg) {
  return *msg->edate_;
}
const ::kentik::core::v202303::UserInfo&
BgpMonitor::_Internal::created_by(const BgpMonitor* msg) {
  return *msg->created_by_;
}
const ::kentik::core::v202303::UserInfo&
BgpMonitor::_Internal::last_updated_by(const BgpMonitor* msg) {
  return *msg->last_updated_by_;
}
void BgpMonitor::clear_cdate() {
  if (GetArena() == nullptr && cdate_ != nullptr) {
    delete cdate_;
  }
  cdate_ = nullptr;
}
void BgpMonitor::clear_edate() {
  if (GetArena() == nullptr && edate_ != nullptr) {
    delete edate_;
  }
  edate_ = nullptr;
}
void BgpMonitor::clear_created_by() {
  if (GetArena() == nullptr && created_by_ != nullptr) {
    delete created_by_;
  }
  created_by_ = nullptr;
}
void BgpMonitor::clear_last_updated_by() {
  if (GetArena() == nullptr && last_updated_by_ != nullptr) {
    delete last_updated_by_;
  }
  last_updated_by_ = nullptr;
}
BgpMonitor::BgpMonitor(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  labels_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.bgp_monitoring.v202210.BgpMonitor)
}
BgpMonitor::BgpMonitor(const BgpMonitor& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      labels_(from.labels_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  if (from._internal_has_settings()) {
    settings_ = new ::kentik::bgp_monitoring::v202210::BgpMonitorSettings(*from.settings_);
  } else {
    settings_ = nullptr;
  }
  if (from._internal_has_cdate()) {
    cdate_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.cdate_);
  } else {
    cdate_ = nullptr;
  }
  if (from._internal_has_edate()) {
    edate_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.edate_);
  } else {
    edate_ = nullptr;
  }
  if (from._internal_has_created_by()) {
    created_by_ = new ::kentik::core::v202303::UserInfo(*from.created_by_);
  } else {
    created_by_ = nullptr;
  }
  if (from._internal_has_last_updated_by()) {
    last_updated_by_ = new ::kentik::core::v202303::UserInfo(*from.last_updated_by_);
  } else {
    last_updated_by_ = nullptr;
  }
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:kentik.bgp_monitoring.v202210.BgpMonitor)
}

void BgpMonitor::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_BgpMonitor_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&settings_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&settings_)) + sizeof(status_));
}

BgpMonitor::~BgpMonitor() {
  // @@protoc_insertion_point(destructor:kentik.bgp_monitoring.v202210.BgpMonitor)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BgpMonitor::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete settings_;
  if (this != internal_default_instance()) delete cdate_;
  if (this != internal_default_instance()) delete edate_;
  if (this != internal_default_instance()) delete created_by_;
  if (this != internal_default_instance()) delete last_updated_by_;
}

void BgpMonitor::ArenaDtor(void* object) {
  BgpMonitor* _this = reinterpret_cast< BgpMonitor* >(object);
  (void)_this;
}
void BgpMonitor::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BgpMonitor::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BgpMonitor& BgpMonitor::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_BgpMonitor_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto.base);
  return *internal_default_instance();
}


void BgpMonitor::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.bgp_monitoring.v202210.BgpMonitor)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  labels_.Clear();
  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && settings_ != nullptr) {
    delete settings_;
  }
  settings_ = nullptr;
  if (GetArena() == nullptr && cdate_ != nullptr) {
    delete cdate_;
  }
  cdate_ = nullptr;
  if (GetArena() == nullptr && edate_ != nullptr) {
    delete edate_;
  }
  edate_ = nullptr;
  if (GetArena() == nullptr && created_by_ != nullptr) {
    delete created_by_;
  }
  created_by_ = nullptr;
  if (GetArena() == nullptr && last_updated_by_ != nullptr) {
    delete last_updated_by_;
  }
  last_updated_by_ = nullptr;
  status_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BgpMonitor::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1[json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "kentik.bgp_monitoring.v202210.BgpMonitor.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 2[json_name = "name", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "kentik.bgp_monitoring.v202210.BgpMonitor.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .kentik.bgp_monitoring.v202210.BgpMonitorStatus status = 3[json_name = "status", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_status(static_cast<::kentik::bgp_monitoring::v202210::BgpMonitorStatus>(val));
        } else goto handle_unusual;
        continue;
      // .kentik.bgp_monitoring.v202210.BgpMonitorSettings settings = 4[json_name = "settings", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_settings(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp cdate = 5[json_name = "cdate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_cdate(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp edate = 6[json_name = "edate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_edate(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .kentik.core.v202303.UserInfo created_by = 7[json_name = "createdBy", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_created_by(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .kentik.core.v202303.UserInfo last_updated_by = 8[json_name = "lastUpdatedBy", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_last_updated_by(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string labels = 9[json_name = "labels"];
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_labels();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "kentik.bgp_monitoring.v202210.BgpMonitor.labels"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<74>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BgpMonitor::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kentik.bgp_monitoring.v202210.BgpMonitor)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1[json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "kentik.bgp_monitoring.v202210.BgpMonitor.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string name = 2[json_name = "name", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "kentik.bgp_monitoring.v202210.BgpMonitor.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // .kentik.bgp_monitoring.v202210.BgpMonitorStatus status = 3[json_name = "status", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->_internal_status(), target);
  }

  // .kentik.bgp_monitoring.v202210.BgpMonitorSettings settings = 4[json_name = "settings", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->has_settings()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::settings(this), target, stream);
  }

  // .google.protobuf.Timestamp cdate = 5[json_name = "cdate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->has_cdate()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::cdate(this), target, stream);
  }

  // .google.protobuf.Timestamp edate = 6[json_name = "edate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->has_edate()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::edate(this), target, stream);
  }

  // .kentik.core.v202303.UserInfo created_by = 7[json_name = "createdBy", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->has_created_by()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        7, _Internal::created_by(this), target, stream);
  }

  // .kentik.core.v202303.UserInfo last_updated_by = 8[json_name = "lastUpdatedBy", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->has_last_updated_by()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        8, _Internal::last_updated_by(this), target, stream);
  }

  // repeated string labels = 9[json_name = "labels"];
  for (int i = 0, n = this->_internal_labels_size(); i < n; i++) {
    const auto& s = this->_internal_labels(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "kentik.bgp_monitoring.v202210.BgpMonitor.labels");
    target = stream->WriteString(9, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kentik.bgp_monitoring.v202210.BgpMonitor)
  return target;
}

size_t BgpMonitor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kentik.bgp_monitoring.v202210.BgpMonitor)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string labels = 9[json_name = "labels"];
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(labels_.size());
  for (int i = 0, n = labels_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      labels_.Get(i));
  }

  // string id = 1[json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string name = 2[json_name = "name", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .kentik.bgp_monitoring.v202210.BgpMonitorSettings settings = 4[json_name = "settings", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->has_settings()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *settings_);
  }

  // .google.protobuf.Timestamp cdate = 5[json_name = "cdate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->has_cdate()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *cdate_);
  }

  // .google.protobuf.Timestamp edate = 6[json_name = "edate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->has_edate()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *edate_);
  }

  // .kentik.core.v202303.UserInfo created_by = 7[json_name = "createdBy", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->has_created_by()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *created_by_);
  }

  // .kentik.core.v202303.UserInfo last_updated_by = 8[json_name = "lastUpdatedBy", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->has_last_updated_by()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *last_updated_by_);
  }

  // .kentik.bgp_monitoring.v202210.BgpMonitorStatus status = 3[json_name = "status", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->status() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_status());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BgpMonitor::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kentik.bgp_monitoring.v202210.BgpMonitor)
  GOOGLE_DCHECK_NE(&from, this);
  const BgpMonitor* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BgpMonitor>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kentik.bgp_monitoring.v202210.BgpMonitor)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kentik.bgp_monitoring.v202210.BgpMonitor)
    MergeFrom(*source);
  }
}

void BgpMonitor::MergeFrom(const BgpMonitor& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kentik.bgp_monitoring.v202210.BgpMonitor)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  labels_.MergeFrom(from.labels_);
  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.has_settings()) {
    _internal_mutable_settings()->::kentik::bgp_monitoring::v202210::BgpMonitorSettings::MergeFrom(from._internal_settings());
  }
  if (from.has_cdate()) {
    _internal_mutable_cdate()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_cdate());
  }
  if (from.has_edate()) {
    _internal_mutable_edate()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_edate());
  }
  if (from.has_created_by()) {
    _internal_mutable_created_by()->::kentik::core::v202303::UserInfo::MergeFrom(from._internal_created_by());
  }
  if (from.has_last_updated_by()) {
    _internal_mutable_last_updated_by()->::kentik::core::v202303::UserInfo::MergeFrom(from._internal_last_updated_by());
  }
  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
}

void BgpMonitor::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kentik.bgp_monitoring.v202210.BgpMonitor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BgpMonitor::CopyFrom(const BgpMonitor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.bgp_monitoring.v202210.BgpMonitor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BgpMonitor::IsInitialized() const {
  return true;
}

void BgpMonitor::InternalSwap(BgpMonitor* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  labels_.InternalSwap(&other->labels_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BgpMonitor, status_)
      + sizeof(BgpMonitor::status_)
      - PROTOBUF_FIELD_OFFSET(BgpMonitor, settings_)>(
          reinterpret_cast<char*>(&settings_),
          reinterpret_cast<char*>(&other->settings_));
}

::PROTOBUF_NAMESPACE_ID::Metadata BgpMonitor::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RouteInfo::InitAsDefaultInstance() {
  ::kentik::bgp_monitoring::v202210::_RouteInfo_default_instance_._instance.get_mutable()->nlri_ = const_cast< ::kentik::bgp_monitoring::v202210::Nlri*>(
      ::kentik::bgp_monitoring::v202210::Nlri::internal_default_instance());
  ::kentik::bgp_monitoring::v202210::_RouteInfo_default_instance_._instance.get_mutable()->vantage_point_ = const_cast< ::kentik::net::v202303::VantagePoint*>(
      ::kentik::net::v202303::VantagePoint::internal_default_instance());
}
class RouteInfo::_Internal {
 public:
  static const ::kentik::bgp_monitoring::v202210::Nlri& nlri(const RouteInfo* msg);
  static const ::kentik::net::v202303::VantagePoint& vantage_point(const RouteInfo* msg);
};

const ::kentik::bgp_monitoring::v202210::Nlri&
RouteInfo::_Internal::nlri(const RouteInfo* msg) {
  return *msg->nlri_;
}
const ::kentik::net::v202303::VantagePoint&
RouteInfo::_Internal::vantage_point(const RouteInfo* msg) {
  return *msg->vantage_point_;
}
void RouteInfo::clear_vantage_point() {
  if (GetArena() == nullptr && vantage_point_ != nullptr) {
    delete vantage_point_;
  }
  vantage_point_ = nullptr;
}
RouteInfo::RouteInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  as_path_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.bgp_monitoring.v202210.RouteInfo)
}
RouteInfo::RouteInfo(const RouteInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      as_path_(from.as_path_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  nexthop_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_nexthop().empty()) {
    nexthop_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_nexthop(),
      GetArena());
  }
  if (from._internal_has_nlri()) {
    nlri_ = new ::kentik::bgp_monitoring::v202210::Nlri(*from.nlri_);
  } else {
    nlri_ = nullptr;
  }
  if (from._internal_has_vantage_point()) {
    vantage_point_ = new ::kentik::net::v202303::VantagePoint(*from.vantage_point_);
  } else {
    vantage_point_ = nullptr;
  }
  ::memcpy(&origin_asn_, &from.origin_asn_,
    static_cast<size_t>(reinterpret_cast<char*>(&rpki_status_) -
    reinterpret_cast<char*>(&origin_asn_)) + sizeof(rpki_status_));
  // @@protoc_insertion_point(copy_constructor:kentik.bgp_monitoring.v202210.RouteInfo)
}

void RouteInfo::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RouteInfo_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto.base);
  nexthop_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&nlri_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rpki_status_) -
      reinterpret_cast<char*>(&nlri_)) + sizeof(rpki_status_));
}

RouteInfo::~RouteInfo() {
  // @@protoc_insertion_point(destructor:kentik.bgp_monitoring.v202210.RouteInfo)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RouteInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  nexthop_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete nlri_;
  if (this != internal_default_instance()) delete vantage_point_;
}

void RouteInfo::ArenaDtor(void* object) {
  RouteInfo* _this = reinterpret_cast< RouteInfo* >(object);
  (void)_this;
}
void RouteInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RouteInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RouteInfo& RouteInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RouteInfo_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto.base);
  return *internal_default_instance();
}


void RouteInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.bgp_monitoring.v202210.RouteInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  as_path_.Clear();
  nexthop_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && nlri_ != nullptr) {
    delete nlri_;
  }
  nlri_ = nullptr;
  if (GetArena() == nullptr && vantage_point_ != nullptr) {
    delete vantage_point_;
  }
  vantage_point_ = nullptr;
  ::memset(&origin_asn_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rpki_status_) -
      reinterpret_cast<char*>(&origin_asn_)) + sizeof(rpki_status_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RouteInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .kentik.bgp_monitoring.v202210.Nlri nlri = 1[json_name = "nlri", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_nlri(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 origin_asn = 2[json_name = "originAsn", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          origin_asn_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string as_path = 3[json_name = "asPath", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_as_path();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "kentik.bgp_monitoring.v202210.RouteInfo.as_path"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      // .kentik.net.v202303.VantagePoint vantage_point = 4[json_name = "vantagePoint", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_vantage_point(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .kentik.net.v202303.RpkiStatus rpki_status = 5[json_name = "rpkiStatus", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_rpki_status(static_cast<::kentik::net::v202303::RpkiStatus>(val));
        } else goto handle_unusual;
        continue;
      // string nexthop = 6[json_name = "nexthop", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_nexthop();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "kentik.bgp_monitoring.v202210.RouteInfo.nexthop"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RouteInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kentik.bgp_monitoring.v202210.RouteInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kentik.bgp_monitoring.v202210.Nlri nlri = 1[json_name = "nlri", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->has_nlri()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::nlri(this), target, stream);
  }

  // uint32 origin_asn = 2[json_name = "originAsn", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->origin_asn() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_origin_asn(), target);
  }

  // repeated string as_path = 3[json_name = "asPath", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  for (int i = 0, n = this->_internal_as_path_size(); i < n; i++) {
    const auto& s = this->_internal_as_path(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "kentik.bgp_monitoring.v202210.RouteInfo.as_path");
    target = stream->WriteString(3, s, target);
  }

  // .kentik.net.v202303.VantagePoint vantage_point = 4[json_name = "vantagePoint", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->has_vantage_point()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::vantage_point(this), target, stream);
  }

  // .kentik.net.v202303.RpkiStatus rpki_status = 5[json_name = "rpkiStatus", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->rpki_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      5, this->_internal_rpki_status(), target);
  }

  // string nexthop = 6[json_name = "nexthop", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->nexthop().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_nexthop().data(), static_cast<int>(this->_internal_nexthop().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "kentik.bgp_monitoring.v202210.RouteInfo.nexthop");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_nexthop(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kentik.bgp_monitoring.v202210.RouteInfo)
  return target;
}

size_t RouteInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kentik.bgp_monitoring.v202210.RouteInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string as_path = 3[json_name = "asPath", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(as_path_.size());
  for (int i = 0, n = as_path_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      as_path_.Get(i));
  }

  // string nexthop = 6[json_name = "nexthop", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->nexthop().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_nexthop());
  }

  // .kentik.bgp_monitoring.v202210.Nlri nlri = 1[json_name = "nlri", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->has_nlri()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *nlri_);
  }

  // .kentik.net.v202303.VantagePoint vantage_point = 4[json_name = "vantagePoint", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->has_vantage_point()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *vantage_point_);
  }

  // uint32 origin_asn = 2[json_name = "originAsn", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->origin_asn() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_origin_asn());
  }

  // .kentik.net.v202303.RpkiStatus rpki_status = 5[json_name = "rpkiStatus", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->rpki_status() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_rpki_status());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RouteInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kentik.bgp_monitoring.v202210.RouteInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const RouteInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RouteInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kentik.bgp_monitoring.v202210.RouteInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kentik.bgp_monitoring.v202210.RouteInfo)
    MergeFrom(*source);
  }
}

void RouteInfo::MergeFrom(const RouteInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kentik.bgp_monitoring.v202210.RouteInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  as_path_.MergeFrom(from.as_path_);
  if (from.nexthop().size() > 0) {
    _internal_set_nexthop(from._internal_nexthop());
  }
  if (from.has_nlri()) {
    _internal_mutable_nlri()->::kentik::bgp_monitoring::v202210::Nlri::MergeFrom(from._internal_nlri());
  }
  if (from.has_vantage_point()) {
    _internal_mutable_vantage_point()->::kentik::net::v202303::VantagePoint::MergeFrom(from._internal_vantage_point());
  }
  if (from.origin_asn() != 0) {
    _internal_set_origin_asn(from._internal_origin_asn());
  }
  if (from.rpki_status() != 0) {
    _internal_set_rpki_status(from._internal_rpki_status());
  }
}

void RouteInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kentik.bgp_monitoring.v202210.RouteInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RouteInfo::CopyFrom(const RouteInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.bgp_monitoring.v202210.RouteInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RouteInfo::IsInitialized() const {
  return true;
}

void RouteInfo::InternalSwap(RouteInfo* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  as_path_.InternalSwap(&other->as_path_);
  nexthop_.Swap(&other->nexthop_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RouteInfo, rpki_status_)
      + sizeof(RouteInfo::rpki_status_)
      - PROTOBUF_FIELD_OFFSET(RouteInfo, nlri_)>(
          reinterpret_cast<char*>(&nlri_),
          reinterpret_cast<char*>(&other->nlri_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RouteInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void BgpMetric::InitAsDefaultInstance() {
  ::kentik::bgp_monitoring::v202210::_BgpMetric_default_instance_._instance.get_mutable()->timestamp_ = const_cast< PROTOBUF_NAMESPACE_ID::Timestamp*>(
      PROTOBUF_NAMESPACE_ID::Timestamp::internal_default_instance());
  ::kentik::bgp_monitoring::v202210::_BgpMetric_default_instance_._instance.get_mutable()->nlri_ = const_cast< ::kentik::bgp_monitoring::v202210::Nlri*>(
      ::kentik::bgp_monitoring::v202210::Nlri::internal_default_instance());
  ::kentik::bgp_monitoring::v202210::_BgpMetric_default_instance_.reachability_ = 0;
  ::kentik::bgp_monitoring::v202210::_BgpMetric_default_instance_.path_changes_ = 0u;
}
class BgpMetric::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Timestamp& timestamp(const BgpMetric* msg);
  static const ::kentik::bgp_monitoring::v202210::Nlri& nlri(const BgpMetric* msg);
};

const PROTOBUF_NAMESPACE_ID::Timestamp&
BgpMetric::_Internal::timestamp(const BgpMetric* msg) {
  return *msg->timestamp_;
}
const ::kentik::bgp_monitoring::v202210::Nlri&
BgpMetric::_Internal::nlri(const BgpMetric* msg) {
  return *msg->nlri_;
}
void BgpMetric::clear_timestamp() {
  if (GetArena() == nullptr && timestamp_ != nullptr) {
    delete timestamp_;
  }
  timestamp_ = nullptr;
}
BgpMetric::BgpMetric(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.bgp_monitoring.v202210.BgpMetric)
}
BgpMetric::BgpMetric(const BgpMetric& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_timestamp()) {
    timestamp_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.timestamp_);
  } else {
    timestamp_ = nullptr;
  }
  if (from._internal_has_nlri()) {
    nlri_ = new ::kentik::bgp_monitoring::v202210::Nlri(*from.nlri_);
  } else {
    nlri_ = nullptr;
  }
  clear_has_type();
  switch (from.type_case()) {
    case kReachability: {
      _internal_set_reachability(from._internal_reachability());
      break;
    }
    case kPathChanges: {
      _internal_set_path_changes(from._internal_path_changes());
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:kentik.bgp_monitoring.v202210.BgpMetric)
}

void BgpMetric::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_BgpMetric_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto.base);
  ::memset(&timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nlri_) -
      reinterpret_cast<char*>(&timestamp_)) + sizeof(nlri_));
  clear_has_type();
}

BgpMetric::~BgpMetric() {
  // @@protoc_insertion_point(destructor:kentik.bgp_monitoring.v202210.BgpMetric)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BgpMetric::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete timestamp_;
  if (this != internal_default_instance()) delete nlri_;
  if (has_type()) {
    clear_type();
  }
}

void BgpMetric::ArenaDtor(void* object) {
  BgpMetric* _this = reinterpret_cast< BgpMetric* >(object);
  (void)_this;
}
void BgpMetric::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BgpMetric::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BgpMetric& BgpMetric::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_BgpMetric_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto.base);
  return *internal_default_instance();
}


void BgpMetric::clear_type() {
// @@protoc_insertion_point(one_of_clear_start:kentik.bgp_monitoring.v202210.BgpMetric)
  switch (type_case()) {
    case kReachability: {
      // No need to clear
      break;
    }
    case kPathChanges: {
      // No need to clear
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = TYPE_NOT_SET;
}


void BgpMetric::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.bgp_monitoring.v202210.BgpMetric)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && timestamp_ != nullptr) {
    delete timestamp_;
  }
  timestamp_ = nullptr;
  if (GetArena() == nullptr && nlri_ != nullptr) {
    delete nlri_;
  }
  nlri_ = nullptr;
  clear_type();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BgpMetric::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .google.protobuf.Timestamp timestamp = 1[json_name = "timestamp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_timestamp(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .kentik.bgp_monitoring.v202210.Nlri nlri = 2[json_name = "nlri", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_nlri(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float reachability = 3[json_name = "reachability", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 29)) {
          _internal_set_reachability(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr));
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // uint32 path_changes = 5[json_name = "pathChanges", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _internal_set_path_changes(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BgpMetric::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kentik.bgp_monitoring.v202210.BgpMetric)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Timestamp timestamp = 1[json_name = "timestamp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->has_timestamp()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::timestamp(this), target, stream);
  }

  // .kentik.bgp_monitoring.v202210.Nlri nlri = 2[json_name = "nlri", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->has_nlri()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::nlri(this), target, stream);
  }

  // float reachability = 3[json_name = "reachability", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (_internal_has_reachability()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(3, this->_internal_reachability(), target);
  }

  // uint32 path_changes = 5[json_name = "pathChanges", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (_internal_has_path_changes()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(5, this->_internal_path_changes(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kentik.bgp_monitoring.v202210.BgpMetric)
  return target;
}

size_t BgpMetric::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kentik.bgp_monitoring.v202210.BgpMetric)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.Timestamp timestamp = 1[json_name = "timestamp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->has_timestamp()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *timestamp_);
  }

  // .kentik.bgp_monitoring.v202210.Nlri nlri = 2[json_name = "nlri", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->has_nlri()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *nlri_);
  }

  switch (type_case()) {
    // float reachability = 3[json_name = "reachability", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    case kReachability: {
      total_size += 1 + 4;
      break;
    }
    // uint32 path_changes = 5[json_name = "pathChanges", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    case kPathChanges: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_path_changes());
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BgpMetric::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kentik.bgp_monitoring.v202210.BgpMetric)
  GOOGLE_DCHECK_NE(&from, this);
  const BgpMetric* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BgpMetric>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kentik.bgp_monitoring.v202210.BgpMetric)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kentik.bgp_monitoring.v202210.BgpMetric)
    MergeFrom(*source);
  }
}

void BgpMetric::MergeFrom(const BgpMetric& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kentik.bgp_monitoring.v202210.BgpMetric)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_timestamp()) {
    _internal_mutable_timestamp()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_timestamp());
  }
  if (from.has_nlri()) {
    _internal_mutable_nlri()->::kentik::bgp_monitoring::v202210::Nlri::MergeFrom(from._internal_nlri());
  }
  switch (from.type_case()) {
    case kReachability: {
      _internal_set_reachability(from._internal_reachability());
      break;
    }
    case kPathChanges: {
      _internal_set_path_changes(from._internal_path_changes());
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
}

void BgpMetric::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kentik.bgp_monitoring.v202210.BgpMetric)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BgpMetric::CopyFrom(const BgpMetric& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.bgp_monitoring.v202210.BgpMetric)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BgpMetric::IsInitialized() const {
  return true;
}

void BgpMetric::InternalSwap(BgpMetric* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BgpMetric, nlri_)
      + sizeof(BgpMetric::nlri_)
      - PROTOBUF_FIELD_OFFSET(BgpMetric, timestamp_)>(
          reinterpret_cast<char*>(&timestamp_),
          reinterpret_cast<char*>(&other->timestamp_));
  swap(type_, other->type_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata BgpMetric::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ListMonitorsRequest::InitAsDefaultInstance() {
}
class ListMonitorsRequest::_Internal {
 public:
};

ListMonitorsRequest::ListMonitorsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.bgp_monitoring.v202210.ListMonitorsRequest)
}
ListMonitorsRequest::ListMonitorsRequest(const ListMonitorsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:kentik.bgp_monitoring.v202210.ListMonitorsRequest)
}

void ListMonitorsRequest::SharedCtor() {
}

ListMonitorsRequest::~ListMonitorsRequest() {
  // @@protoc_insertion_point(destructor:kentik.bgp_monitoring.v202210.ListMonitorsRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ListMonitorsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ListMonitorsRequest::ArenaDtor(void* object) {
  ListMonitorsRequest* _this = reinterpret_cast< ListMonitorsRequest* >(object);
  (void)_this;
}
void ListMonitorsRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListMonitorsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListMonitorsRequest& ListMonitorsRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ListMonitorsRequest_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto.base);
  return *internal_default_instance();
}


void ListMonitorsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.bgp_monitoring.v202210.ListMonitorsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListMonitorsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListMonitorsRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kentik.bgp_monitoring.v202210.ListMonitorsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kentik.bgp_monitoring.v202210.ListMonitorsRequest)
  return target;
}

size_t ListMonitorsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kentik.bgp_monitoring.v202210.ListMonitorsRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListMonitorsRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kentik.bgp_monitoring.v202210.ListMonitorsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListMonitorsRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListMonitorsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kentik.bgp_monitoring.v202210.ListMonitorsRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kentik.bgp_monitoring.v202210.ListMonitorsRequest)
    MergeFrom(*source);
  }
}

void ListMonitorsRequest::MergeFrom(const ListMonitorsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kentik.bgp_monitoring.v202210.ListMonitorsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ListMonitorsRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kentik.bgp_monitoring.v202210.ListMonitorsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListMonitorsRequest::CopyFrom(const ListMonitorsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.bgp_monitoring.v202210.ListMonitorsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListMonitorsRequest::IsInitialized() const {
  return true;
}

void ListMonitorsRequest::InternalSwap(ListMonitorsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListMonitorsRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ListMonitorsResponse::InitAsDefaultInstance() {
}
class ListMonitorsResponse::_Internal {
 public:
};

ListMonitorsResponse::ListMonitorsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  monitors_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.bgp_monitoring.v202210.ListMonitorsResponse)
}
ListMonitorsResponse::ListMonitorsResponse(const ListMonitorsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      monitors_(from.monitors_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  invalid_count_ = from.invalid_count_;
  // @@protoc_insertion_point(copy_constructor:kentik.bgp_monitoring.v202210.ListMonitorsResponse)
}

void ListMonitorsResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ListMonitorsResponse_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto.base);
  invalid_count_ = 0u;
}

ListMonitorsResponse::~ListMonitorsResponse() {
  // @@protoc_insertion_point(destructor:kentik.bgp_monitoring.v202210.ListMonitorsResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ListMonitorsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ListMonitorsResponse::ArenaDtor(void* object) {
  ListMonitorsResponse* _this = reinterpret_cast< ListMonitorsResponse* >(object);
  (void)_this;
}
void ListMonitorsResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListMonitorsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListMonitorsResponse& ListMonitorsResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ListMonitorsResponse_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto.base);
  return *internal_default_instance();
}


void ListMonitorsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.bgp_monitoring.v202210.ListMonitorsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  monitors_.Clear();
  invalid_count_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListMonitorsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .kentik.bgp_monitoring.v202210.BgpMonitor monitors = 1[json_name = "monitors", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_monitors(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // uint32 invalid_count = 2[json_name = "invalidCount", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          invalid_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListMonitorsResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kentik.bgp_monitoring.v202210.ListMonitorsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .kentik.bgp_monitoring.v202210.BgpMonitor monitors = 1[json_name = "monitors", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_monitors_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_monitors(i), target, stream);
  }

  // uint32 invalid_count = 2[json_name = "invalidCount", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->invalid_count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_invalid_count(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kentik.bgp_monitoring.v202210.ListMonitorsResponse)
  return target;
}

size_t ListMonitorsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kentik.bgp_monitoring.v202210.ListMonitorsResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .kentik.bgp_monitoring.v202210.BgpMonitor monitors = 1[json_name = "monitors", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  total_size += 1UL * this->_internal_monitors_size();
  for (const auto& msg : this->monitors_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // uint32 invalid_count = 2[json_name = "invalidCount", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->invalid_count() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_invalid_count());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListMonitorsResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kentik.bgp_monitoring.v202210.ListMonitorsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListMonitorsResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListMonitorsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kentik.bgp_monitoring.v202210.ListMonitorsResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kentik.bgp_monitoring.v202210.ListMonitorsResponse)
    MergeFrom(*source);
  }
}

void ListMonitorsResponse::MergeFrom(const ListMonitorsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kentik.bgp_monitoring.v202210.ListMonitorsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  monitors_.MergeFrom(from.monitors_);
  if (from.invalid_count() != 0) {
    _internal_set_invalid_count(from._internal_invalid_count());
  }
}

void ListMonitorsResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kentik.bgp_monitoring.v202210.ListMonitorsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListMonitorsResponse::CopyFrom(const ListMonitorsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.bgp_monitoring.v202210.ListMonitorsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListMonitorsResponse::IsInitialized() const {
  return true;
}

void ListMonitorsResponse::InternalSwap(ListMonitorsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  monitors_.InternalSwap(&other->monitors_);
  swap(invalid_count_, other->invalid_count_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListMonitorsResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CreateMonitorRequest::InitAsDefaultInstance() {
  ::kentik::bgp_monitoring::v202210::_CreateMonitorRequest_default_instance_._instance.get_mutable()->monitor_ = const_cast< ::kentik::bgp_monitoring::v202210::BgpMonitor*>(
      ::kentik::bgp_monitoring::v202210::BgpMonitor::internal_default_instance());
}
class CreateMonitorRequest::_Internal {
 public:
  static const ::kentik::bgp_monitoring::v202210::BgpMonitor& monitor(const CreateMonitorRequest* msg);
};

const ::kentik::bgp_monitoring::v202210::BgpMonitor&
CreateMonitorRequest::_Internal::monitor(const CreateMonitorRequest* msg) {
  return *msg->monitor_;
}
CreateMonitorRequest::CreateMonitorRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.bgp_monitoring.v202210.CreateMonitorRequest)
}
CreateMonitorRequest::CreateMonitorRequest(const CreateMonitorRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_monitor()) {
    monitor_ = new ::kentik::bgp_monitoring::v202210::BgpMonitor(*from.monitor_);
  } else {
    monitor_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:kentik.bgp_monitoring.v202210.CreateMonitorRequest)
}

void CreateMonitorRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CreateMonitorRequest_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto.base);
  monitor_ = nullptr;
}

CreateMonitorRequest::~CreateMonitorRequest() {
  // @@protoc_insertion_point(destructor:kentik.bgp_monitoring.v202210.CreateMonitorRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateMonitorRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete monitor_;
}

void CreateMonitorRequest::ArenaDtor(void* object) {
  CreateMonitorRequest* _this = reinterpret_cast< CreateMonitorRequest* >(object);
  (void)_this;
}
void CreateMonitorRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateMonitorRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateMonitorRequest& CreateMonitorRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateMonitorRequest_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto.base);
  return *internal_default_instance();
}


void CreateMonitorRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.bgp_monitoring.v202210.CreateMonitorRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && monitor_ != nullptr) {
    delete monitor_;
  }
  monitor_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateMonitorRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .kentik.bgp_monitoring.v202210.BgpMonitor monitor = 1[json_name = "monitor", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_monitor(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateMonitorRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kentik.bgp_monitoring.v202210.CreateMonitorRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kentik.bgp_monitoring.v202210.BgpMonitor monitor = 1[json_name = "monitor", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->has_monitor()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::monitor(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kentik.bgp_monitoring.v202210.CreateMonitorRequest)
  return target;
}

size_t CreateMonitorRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kentik.bgp_monitoring.v202210.CreateMonitorRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .kentik.bgp_monitoring.v202210.BgpMonitor monitor = 1[json_name = "monitor", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->has_monitor()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *monitor_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateMonitorRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kentik.bgp_monitoring.v202210.CreateMonitorRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateMonitorRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateMonitorRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kentik.bgp_monitoring.v202210.CreateMonitorRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kentik.bgp_monitoring.v202210.CreateMonitorRequest)
    MergeFrom(*source);
  }
}

void CreateMonitorRequest::MergeFrom(const CreateMonitorRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kentik.bgp_monitoring.v202210.CreateMonitorRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_monitor()) {
    _internal_mutable_monitor()->::kentik::bgp_monitoring::v202210::BgpMonitor::MergeFrom(from._internal_monitor());
  }
}

void CreateMonitorRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kentik.bgp_monitoring.v202210.CreateMonitorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateMonitorRequest::CopyFrom(const CreateMonitorRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.bgp_monitoring.v202210.CreateMonitorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateMonitorRequest::IsInitialized() const {
  return true;
}

void CreateMonitorRequest::InternalSwap(CreateMonitorRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(monitor_, other->monitor_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateMonitorRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CreateMonitorResponse::InitAsDefaultInstance() {
  ::kentik::bgp_monitoring::v202210::_CreateMonitorResponse_default_instance_._instance.get_mutable()->monitor_ = const_cast< ::kentik::bgp_monitoring::v202210::BgpMonitor*>(
      ::kentik::bgp_monitoring::v202210::BgpMonitor::internal_default_instance());
}
class CreateMonitorResponse::_Internal {
 public:
  static const ::kentik::bgp_monitoring::v202210::BgpMonitor& monitor(const CreateMonitorResponse* msg);
};

const ::kentik::bgp_monitoring::v202210::BgpMonitor&
CreateMonitorResponse::_Internal::monitor(const CreateMonitorResponse* msg) {
  return *msg->monitor_;
}
CreateMonitorResponse::CreateMonitorResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.bgp_monitoring.v202210.CreateMonitorResponse)
}
CreateMonitorResponse::CreateMonitorResponse(const CreateMonitorResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_monitor()) {
    monitor_ = new ::kentik::bgp_monitoring::v202210::BgpMonitor(*from.monitor_);
  } else {
    monitor_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:kentik.bgp_monitoring.v202210.CreateMonitorResponse)
}

void CreateMonitorResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CreateMonitorResponse_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto.base);
  monitor_ = nullptr;
}

CreateMonitorResponse::~CreateMonitorResponse() {
  // @@protoc_insertion_point(destructor:kentik.bgp_monitoring.v202210.CreateMonitorResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateMonitorResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete monitor_;
}

void CreateMonitorResponse::ArenaDtor(void* object) {
  CreateMonitorResponse* _this = reinterpret_cast< CreateMonitorResponse* >(object);
  (void)_this;
}
void CreateMonitorResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateMonitorResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateMonitorResponse& CreateMonitorResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateMonitorResponse_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto.base);
  return *internal_default_instance();
}


void CreateMonitorResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.bgp_monitoring.v202210.CreateMonitorResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && monitor_ != nullptr) {
    delete monitor_;
  }
  monitor_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateMonitorResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .kentik.bgp_monitoring.v202210.BgpMonitor monitor = 1[json_name = "monitor", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_monitor(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateMonitorResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kentik.bgp_monitoring.v202210.CreateMonitorResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kentik.bgp_monitoring.v202210.BgpMonitor monitor = 1[json_name = "monitor", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->has_monitor()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::monitor(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kentik.bgp_monitoring.v202210.CreateMonitorResponse)
  return target;
}

size_t CreateMonitorResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kentik.bgp_monitoring.v202210.CreateMonitorResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .kentik.bgp_monitoring.v202210.BgpMonitor monitor = 1[json_name = "monitor", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->has_monitor()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *monitor_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateMonitorResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kentik.bgp_monitoring.v202210.CreateMonitorResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateMonitorResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateMonitorResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kentik.bgp_monitoring.v202210.CreateMonitorResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kentik.bgp_monitoring.v202210.CreateMonitorResponse)
    MergeFrom(*source);
  }
}

void CreateMonitorResponse::MergeFrom(const CreateMonitorResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kentik.bgp_monitoring.v202210.CreateMonitorResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_monitor()) {
    _internal_mutable_monitor()->::kentik::bgp_monitoring::v202210::BgpMonitor::MergeFrom(from._internal_monitor());
  }
}

void CreateMonitorResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kentik.bgp_monitoring.v202210.CreateMonitorResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateMonitorResponse::CopyFrom(const CreateMonitorResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.bgp_monitoring.v202210.CreateMonitorResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateMonitorResponse::IsInitialized() const {
  return true;
}

void CreateMonitorResponse::InternalSwap(CreateMonitorResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(monitor_, other->monitor_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateMonitorResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetMonitorRequest::InitAsDefaultInstance() {
}
class GetMonitorRequest::_Internal {
 public:
};

GetMonitorRequest::GetMonitorRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.bgp_monitoring.v202210.GetMonitorRequest)
}
GetMonitorRequest::GetMonitorRequest(const GetMonitorRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:kentik.bgp_monitoring.v202210.GetMonitorRequest)
}

void GetMonitorRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetMonitorRequest_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetMonitorRequest::~GetMonitorRequest() {
  // @@protoc_insertion_point(destructor:kentik.bgp_monitoring.v202210.GetMonitorRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetMonitorRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetMonitorRequest::ArenaDtor(void* object) {
  GetMonitorRequest* _this = reinterpret_cast< GetMonitorRequest* >(object);
  (void)_this;
}
void GetMonitorRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetMonitorRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetMonitorRequest& GetMonitorRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetMonitorRequest_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto.base);
  return *internal_default_instance();
}


void GetMonitorRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.bgp_monitoring.v202210.GetMonitorRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetMonitorRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1[json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "kentik.bgp_monitoring.v202210.GetMonitorRequest.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetMonitorRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kentik.bgp_monitoring.v202210.GetMonitorRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1[json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "kentik.bgp_monitoring.v202210.GetMonitorRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kentik.bgp_monitoring.v202210.GetMonitorRequest)
  return target;
}

size_t GetMonitorRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kentik.bgp_monitoring.v202210.GetMonitorRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1[json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetMonitorRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kentik.bgp_monitoring.v202210.GetMonitorRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetMonitorRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetMonitorRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kentik.bgp_monitoring.v202210.GetMonitorRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kentik.bgp_monitoring.v202210.GetMonitorRequest)
    MergeFrom(*source);
  }
}

void GetMonitorRequest::MergeFrom(const GetMonitorRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kentik.bgp_monitoring.v202210.GetMonitorRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
}

void GetMonitorRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kentik.bgp_monitoring.v202210.GetMonitorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetMonitorRequest::CopyFrom(const GetMonitorRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.bgp_monitoring.v202210.GetMonitorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetMonitorRequest::IsInitialized() const {
  return true;
}

void GetMonitorRequest::InternalSwap(GetMonitorRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetMonitorRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetMonitorResponse::InitAsDefaultInstance() {
  ::kentik::bgp_monitoring::v202210::_GetMonitorResponse_default_instance_._instance.get_mutable()->monitor_ = const_cast< ::kentik::bgp_monitoring::v202210::BgpMonitor*>(
      ::kentik::bgp_monitoring::v202210::BgpMonitor::internal_default_instance());
}
class GetMonitorResponse::_Internal {
 public:
  static const ::kentik::bgp_monitoring::v202210::BgpMonitor& monitor(const GetMonitorResponse* msg);
};

const ::kentik::bgp_monitoring::v202210::BgpMonitor&
GetMonitorResponse::_Internal::monitor(const GetMonitorResponse* msg) {
  return *msg->monitor_;
}
GetMonitorResponse::GetMonitorResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.bgp_monitoring.v202210.GetMonitorResponse)
}
GetMonitorResponse::GetMonitorResponse(const GetMonitorResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_monitor()) {
    monitor_ = new ::kentik::bgp_monitoring::v202210::BgpMonitor(*from.monitor_);
  } else {
    monitor_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:kentik.bgp_monitoring.v202210.GetMonitorResponse)
}

void GetMonitorResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetMonitorResponse_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto.base);
  monitor_ = nullptr;
}

GetMonitorResponse::~GetMonitorResponse() {
  // @@protoc_insertion_point(destructor:kentik.bgp_monitoring.v202210.GetMonitorResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetMonitorResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete monitor_;
}

void GetMonitorResponse::ArenaDtor(void* object) {
  GetMonitorResponse* _this = reinterpret_cast< GetMonitorResponse* >(object);
  (void)_this;
}
void GetMonitorResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetMonitorResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetMonitorResponse& GetMonitorResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetMonitorResponse_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto.base);
  return *internal_default_instance();
}


void GetMonitorResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.bgp_monitoring.v202210.GetMonitorResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && monitor_ != nullptr) {
    delete monitor_;
  }
  monitor_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetMonitorResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .kentik.bgp_monitoring.v202210.BgpMonitor monitor = 1[json_name = "monitor", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_monitor(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetMonitorResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kentik.bgp_monitoring.v202210.GetMonitorResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kentik.bgp_monitoring.v202210.BgpMonitor monitor = 1[json_name = "monitor", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->has_monitor()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::monitor(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kentik.bgp_monitoring.v202210.GetMonitorResponse)
  return target;
}

size_t GetMonitorResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kentik.bgp_monitoring.v202210.GetMonitorResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .kentik.bgp_monitoring.v202210.BgpMonitor monitor = 1[json_name = "monitor", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->has_monitor()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *monitor_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetMonitorResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kentik.bgp_monitoring.v202210.GetMonitorResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetMonitorResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetMonitorResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kentik.bgp_monitoring.v202210.GetMonitorResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kentik.bgp_monitoring.v202210.GetMonitorResponse)
    MergeFrom(*source);
  }
}

void GetMonitorResponse::MergeFrom(const GetMonitorResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kentik.bgp_monitoring.v202210.GetMonitorResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_monitor()) {
    _internal_mutable_monitor()->::kentik::bgp_monitoring::v202210::BgpMonitor::MergeFrom(from._internal_monitor());
  }
}

void GetMonitorResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kentik.bgp_monitoring.v202210.GetMonitorResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetMonitorResponse::CopyFrom(const GetMonitorResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.bgp_monitoring.v202210.GetMonitorResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetMonitorResponse::IsInitialized() const {
  return true;
}

void GetMonitorResponse::InternalSwap(GetMonitorResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(monitor_, other->monitor_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetMonitorResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpdateMonitorRequest::InitAsDefaultInstance() {
  ::kentik::bgp_monitoring::v202210::_UpdateMonitorRequest_default_instance_._instance.get_mutable()->monitor_ = const_cast< ::kentik::bgp_monitoring::v202210::BgpMonitor*>(
      ::kentik::bgp_monitoring::v202210::BgpMonitor::internal_default_instance());
}
class UpdateMonitorRequest::_Internal {
 public:
  static const ::kentik::bgp_monitoring::v202210::BgpMonitor& monitor(const UpdateMonitorRequest* msg);
};

const ::kentik::bgp_monitoring::v202210::BgpMonitor&
UpdateMonitorRequest::_Internal::monitor(const UpdateMonitorRequest* msg) {
  return *msg->monitor_;
}
UpdateMonitorRequest::UpdateMonitorRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.bgp_monitoring.v202210.UpdateMonitorRequest)
}
UpdateMonitorRequest::UpdateMonitorRequest(const UpdateMonitorRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_monitor()) {
    monitor_ = new ::kentik::bgp_monitoring::v202210::BgpMonitor(*from.monitor_);
  } else {
    monitor_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:kentik.bgp_monitoring.v202210.UpdateMonitorRequest)
}

void UpdateMonitorRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UpdateMonitorRequest_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto.base);
  monitor_ = nullptr;
}

UpdateMonitorRequest::~UpdateMonitorRequest() {
  // @@protoc_insertion_point(destructor:kentik.bgp_monitoring.v202210.UpdateMonitorRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UpdateMonitorRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete monitor_;
}

void UpdateMonitorRequest::ArenaDtor(void* object) {
  UpdateMonitorRequest* _this = reinterpret_cast< UpdateMonitorRequest* >(object);
  (void)_this;
}
void UpdateMonitorRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateMonitorRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateMonitorRequest& UpdateMonitorRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpdateMonitorRequest_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto.base);
  return *internal_default_instance();
}


void UpdateMonitorRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.bgp_monitoring.v202210.UpdateMonitorRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && monitor_ != nullptr) {
    delete monitor_;
  }
  monitor_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateMonitorRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .kentik.bgp_monitoring.v202210.BgpMonitor monitor = 1[json_name = "monitor", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_monitor(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateMonitorRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kentik.bgp_monitoring.v202210.UpdateMonitorRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kentik.bgp_monitoring.v202210.BgpMonitor monitor = 1[json_name = "monitor", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->has_monitor()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::monitor(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kentik.bgp_monitoring.v202210.UpdateMonitorRequest)
  return target;
}

size_t UpdateMonitorRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kentik.bgp_monitoring.v202210.UpdateMonitorRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .kentik.bgp_monitoring.v202210.BgpMonitor monitor = 1[json_name = "monitor", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->has_monitor()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *monitor_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateMonitorRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kentik.bgp_monitoring.v202210.UpdateMonitorRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateMonitorRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateMonitorRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kentik.bgp_monitoring.v202210.UpdateMonitorRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kentik.bgp_monitoring.v202210.UpdateMonitorRequest)
    MergeFrom(*source);
  }
}

void UpdateMonitorRequest::MergeFrom(const UpdateMonitorRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kentik.bgp_monitoring.v202210.UpdateMonitorRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_monitor()) {
    _internal_mutable_monitor()->::kentik::bgp_monitoring::v202210::BgpMonitor::MergeFrom(from._internal_monitor());
  }
}

void UpdateMonitorRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kentik.bgp_monitoring.v202210.UpdateMonitorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateMonitorRequest::CopyFrom(const UpdateMonitorRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.bgp_monitoring.v202210.UpdateMonitorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateMonitorRequest::IsInitialized() const {
  return true;
}

void UpdateMonitorRequest::InternalSwap(UpdateMonitorRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(monitor_, other->monitor_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateMonitorRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpdateMonitorResponse::InitAsDefaultInstance() {
  ::kentik::bgp_monitoring::v202210::_UpdateMonitorResponse_default_instance_._instance.get_mutable()->monitor_ = const_cast< ::kentik::bgp_monitoring::v202210::BgpMonitor*>(
      ::kentik::bgp_monitoring::v202210::BgpMonitor::internal_default_instance());
}
class UpdateMonitorResponse::_Internal {
 public:
  static const ::kentik::bgp_monitoring::v202210::BgpMonitor& monitor(const UpdateMonitorResponse* msg);
};

const ::kentik::bgp_monitoring::v202210::BgpMonitor&
UpdateMonitorResponse::_Internal::monitor(const UpdateMonitorResponse* msg) {
  return *msg->monitor_;
}
UpdateMonitorResponse::UpdateMonitorResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.bgp_monitoring.v202210.UpdateMonitorResponse)
}
UpdateMonitorResponse::UpdateMonitorResponse(const UpdateMonitorResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_monitor()) {
    monitor_ = new ::kentik::bgp_monitoring::v202210::BgpMonitor(*from.monitor_);
  } else {
    monitor_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:kentik.bgp_monitoring.v202210.UpdateMonitorResponse)
}

void UpdateMonitorResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UpdateMonitorResponse_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto.base);
  monitor_ = nullptr;
}

UpdateMonitorResponse::~UpdateMonitorResponse() {
  // @@protoc_insertion_point(destructor:kentik.bgp_monitoring.v202210.UpdateMonitorResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UpdateMonitorResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete monitor_;
}

void UpdateMonitorResponse::ArenaDtor(void* object) {
  UpdateMonitorResponse* _this = reinterpret_cast< UpdateMonitorResponse* >(object);
  (void)_this;
}
void UpdateMonitorResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateMonitorResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateMonitorResponse& UpdateMonitorResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpdateMonitorResponse_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto.base);
  return *internal_default_instance();
}


void UpdateMonitorResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.bgp_monitoring.v202210.UpdateMonitorResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && monitor_ != nullptr) {
    delete monitor_;
  }
  monitor_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateMonitorResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .kentik.bgp_monitoring.v202210.BgpMonitor monitor = 1[json_name = "monitor", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_monitor(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateMonitorResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kentik.bgp_monitoring.v202210.UpdateMonitorResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kentik.bgp_monitoring.v202210.BgpMonitor monitor = 1[json_name = "monitor", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->has_monitor()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::monitor(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kentik.bgp_monitoring.v202210.UpdateMonitorResponse)
  return target;
}

size_t UpdateMonitorResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kentik.bgp_monitoring.v202210.UpdateMonitorResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .kentik.bgp_monitoring.v202210.BgpMonitor monitor = 1[json_name = "monitor", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->has_monitor()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *monitor_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateMonitorResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kentik.bgp_monitoring.v202210.UpdateMonitorResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateMonitorResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateMonitorResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kentik.bgp_monitoring.v202210.UpdateMonitorResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kentik.bgp_monitoring.v202210.UpdateMonitorResponse)
    MergeFrom(*source);
  }
}

void UpdateMonitorResponse::MergeFrom(const UpdateMonitorResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kentik.bgp_monitoring.v202210.UpdateMonitorResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_monitor()) {
    _internal_mutable_monitor()->::kentik::bgp_monitoring::v202210::BgpMonitor::MergeFrom(from._internal_monitor());
  }
}

void UpdateMonitorResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kentik.bgp_monitoring.v202210.UpdateMonitorResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateMonitorResponse::CopyFrom(const UpdateMonitorResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.bgp_monitoring.v202210.UpdateMonitorResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateMonitorResponse::IsInitialized() const {
  return true;
}

void UpdateMonitorResponse::InternalSwap(UpdateMonitorResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(monitor_, other->monitor_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateMonitorResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteMonitorRequest::InitAsDefaultInstance() {
}
class DeleteMonitorRequest::_Internal {
 public:
};

DeleteMonitorRequest::DeleteMonitorRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.bgp_monitoring.v202210.DeleteMonitorRequest)
}
DeleteMonitorRequest::DeleteMonitorRequest(const DeleteMonitorRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:kentik.bgp_monitoring.v202210.DeleteMonitorRequest)
}

void DeleteMonitorRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DeleteMonitorRequest_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DeleteMonitorRequest::~DeleteMonitorRequest() {
  // @@protoc_insertion_point(destructor:kentik.bgp_monitoring.v202210.DeleteMonitorRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteMonitorRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteMonitorRequest::ArenaDtor(void* object) {
  DeleteMonitorRequest* _this = reinterpret_cast< DeleteMonitorRequest* >(object);
  (void)_this;
}
void DeleteMonitorRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteMonitorRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteMonitorRequest& DeleteMonitorRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteMonitorRequest_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto.base);
  return *internal_default_instance();
}


void DeleteMonitorRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.bgp_monitoring.v202210.DeleteMonitorRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteMonitorRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1[json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "kentik.bgp_monitoring.v202210.DeleteMonitorRequest.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteMonitorRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kentik.bgp_monitoring.v202210.DeleteMonitorRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1[json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "kentik.bgp_monitoring.v202210.DeleteMonitorRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kentik.bgp_monitoring.v202210.DeleteMonitorRequest)
  return target;
}

size_t DeleteMonitorRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kentik.bgp_monitoring.v202210.DeleteMonitorRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1[json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteMonitorRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kentik.bgp_monitoring.v202210.DeleteMonitorRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteMonitorRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteMonitorRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kentik.bgp_monitoring.v202210.DeleteMonitorRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kentik.bgp_monitoring.v202210.DeleteMonitorRequest)
    MergeFrom(*source);
  }
}

void DeleteMonitorRequest::MergeFrom(const DeleteMonitorRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kentik.bgp_monitoring.v202210.DeleteMonitorRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
}

void DeleteMonitorRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kentik.bgp_monitoring.v202210.DeleteMonitorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteMonitorRequest::CopyFrom(const DeleteMonitorRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.bgp_monitoring.v202210.DeleteMonitorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteMonitorRequest::IsInitialized() const {
  return true;
}

void DeleteMonitorRequest::InternalSwap(DeleteMonitorRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteMonitorRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteMonitorResponse::InitAsDefaultInstance() {
}
class DeleteMonitorResponse::_Internal {
 public:
};

DeleteMonitorResponse::DeleteMonitorResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.bgp_monitoring.v202210.DeleteMonitorResponse)
}
DeleteMonitorResponse::DeleteMonitorResponse(const DeleteMonitorResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:kentik.bgp_monitoring.v202210.DeleteMonitorResponse)
}

void DeleteMonitorResponse::SharedCtor() {
}

DeleteMonitorResponse::~DeleteMonitorResponse() {
  // @@protoc_insertion_point(destructor:kentik.bgp_monitoring.v202210.DeleteMonitorResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteMonitorResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void DeleteMonitorResponse::ArenaDtor(void* object) {
  DeleteMonitorResponse* _this = reinterpret_cast< DeleteMonitorResponse* >(object);
  (void)_this;
}
void DeleteMonitorResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteMonitorResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteMonitorResponse& DeleteMonitorResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteMonitorResponse_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto.base);
  return *internal_default_instance();
}


void DeleteMonitorResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.bgp_monitoring.v202210.DeleteMonitorResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteMonitorResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteMonitorResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kentik.bgp_monitoring.v202210.DeleteMonitorResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kentik.bgp_monitoring.v202210.DeleteMonitorResponse)
  return target;
}

size_t DeleteMonitorResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kentik.bgp_monitoring.v202210.DeleteMonitorResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteMonitorResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kentik.bgp_monitoring.v202210.DeleteMonitorResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteMonitorResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteMonitorResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kentik.bgp_monitoring.v202210.DeleteMonitorResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kentik.bgp_monitoring.v202210.DeleteMonitorResponse)
    MergeFrom(*source);
  }
}

void DeleteMonitorResponse::MergeFrom(const DeleteMonitorResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kentik.bgp_monitoring.v202210.DeleteMonitorResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void DeleteMonitorResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kentik.bgp_monitoring.v202210.DeleteMonitorResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteMonitorResponse::CopyFrom(const DeleteMonitorResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.bgp_monitoring.v202210.DeleteMonitorResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteMonitorResponse::IsInitialized() const {
  return true;
}

void DeleteMonitorResponse::InternalSwap(DeleteMonitorResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteMonitorResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SetMonitorStatusRequest::InitAsDefaultInstance() {
}
class SetMonitorStatusRequest::_Internal {
 public:
};

SetMonitorStatusRequest::SetMonitorStatusRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.bgp_monitoring.v202210.SetMonitorStatusRequest)
}
SetMonitorStatusRequest::SetMonitorStatusRequest(const SetMonitorStatusRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:kentik.bgp_monitoring.v202210.SetMonitorStatusRequest)
}

void SetMonitorStatusRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SetMonitorStatusRequest_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  status_ = 0;
}

SetMonitorStatusRequest::~SetMonitorStatusRequest() {
  // @@protoc_insertion_point(destructor:kentik.bgp_monitoring.v202210.SetMonitorStatusRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetMonitorStatusRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SetMonitorStatusRequest::ArenaDtor(void* object) {
  SetMonitorStatusRequest* _this = reinterpret_cast< SetMonitorStatusRequest* >(object);
  (void)_this;
}
void SetMonitorStatusRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetMonitorStatusRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetMonitorStatusRequest& SetMonitorStatusRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SetMonitorStatusRequest_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto.base);
  return *internal_default_instance();
}


void SetMonitorStatusRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.bgp_monitoring.v202210.SetMonitorStatusRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  status_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetMonitorStatusRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1[json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "kentik.bgp_monitoring.v202210.SetMonitorStatusRequest.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .kentik.bgp_monitoring.v202210.BgpMonitorStatus status = 2[json_name = "status", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_status(static_cast<::kentik::bgp_monitoring::v202210::BgpMonitorStatus>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetMonitorStatusRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kentik.bgp_monitoring.v202210.SetMonitorStatusRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1[json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "kentik.bgp_monitoring.v202210.SetMonitorStatusRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // .kentik.bgp_monitoring.v202210.BgpMonitorStatus status = 2[json_name = "status", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kentik.bgp_monitoring.v202210.SetMonitorStatusRequest)
  return target;
}

size_t SetMonitorStatusRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kentik.bgp_monitoring.v202210.SetMonitorStatusRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1[json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // .kentik.bgp_monitoring.v202210.BgpMonitorStatus status = 2[json_name = "status", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->status() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_status());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetMonitorStatusRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kentik.bgp_monitoring.v202210.SetMonitorStatusRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SetMonitorStatusRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetMonitorStatusRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kentik.bgp_monitoring.v202210.SetMonitorStatusRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kentik.bgp_monitoring.v202210.SetMonitorStatusRequest)
    MergeFrom(*source);
  }
}

void SetMonitorStatusRequest::MergeFrom(const SetMonitorStatusRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kentik.bgp_monitoring.v202210.SetMonitorStatusRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
}

void SetMonitorStatusRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kentik.bgp_monitoring.v202210.SetMonitorStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetMonitorStatusRequest::CopyFrom(const SetMonitorStatusRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.bgp_monitoring.v202210.SetMonitorStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetMonitorStatusRequest::IsInitialized() const {
  return true;
}

void SetMonitorStatusRequest::InternalSwap(SetMonitorStatusRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetMonitorStatusRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SetMonitorStatusResponse::InitAsDefaultInstance() {
}
class SetMonitorStatusResponse::_Internal {
 public:
};

SetMonitorStatusResponse::SetMonitorStatusResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.bgp_monitoring.v202210.SetMonitorStatusResponse)
}
SetMonitorStatusResponse::SetMonitorStatusResponse(const SetMonitorStatusResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:kentik.bgp_monitoring.v202210.SetMonitorStatusResponse)
}

void SetMonitorStatusResponse::SharedCtor() {
}

SetMonitorStatusResponse::~SetMonitorStatusResponse() {
  // @@protoc_insertion_point(destructor:kentik.bgp_monitoring.v202210.SetMonitorStatusResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetMonitorStatusResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SetMonitorStatusResponse::ArenaDtor(void* object) {
  SetMonitorStatusResponse* _this = reinterpret_cast< SetMonitorStatusResponse* >(object);
  (void)_this;
}
void SetMonitorStatusResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetMonitorStatusResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetMonitorStatusResponse& SetMonitorStatusResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SetMonitorStatusResponse_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto.base);
  return *internal_default_instance();
}


void SetMonitorStatusResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.bgp_monitoring.v202210.SetMonitorStatusResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetMonitorStatusResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetMonitorStatusResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kentik.bgp_monitoring.v202210.SetMonitorStatusResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kentik.bgp_monitoring.v202210.SetMonitorStatusResponse)
  return target;
}

size_t SetMonitorStatusResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kentik.bgp_monitoring.v202210.SetMonitorStatusResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetMonitorStatusResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kentik.bgp_monitoring.v202210.SetMonitorStatusResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SetMonitorStatusResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetMonitorStatusResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kentik.bgp_monitoring.v202210.SetMonitorStatusResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kentik.bgp_monitoring.v202210.SetMonitorStatusResponse)
    MergeFrom(*source);
  }
}

void SetMonitorStatusResponse::MergeFrom(const SetMonitorStatusResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kentik.bgp_monitoring.v202210.SetMonitorStatusResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void SetMonitorStatusResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kentik.bgp_monitoring.v202210.SetMonitorStatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetMonitorStatusResponse::CopyFrom(const SetMonitorStatusResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.bgp_monitoring.v202210.SetMonitorStatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetMonitorStatusResponse::IsInitialized() const {
  return true;
}

void SetMonitorStatusResponse::InternalSwap(SetMonitorStatusResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetMonitorStatusResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetMetricsForTargetRequest::InitAsDefaultInstance() {
  ::kentik::bgp_monitoring::v202210::_GetMetricsForTargetRequest_default_instance_._instance.get_mutable()->start_time_ = const_cast< PROTOBUF_NAMESPACE_ID::Timestamp*>(
      PROTOBUF_NAMESPACE_ID::Timestamp::internal_default_instance());
  ::kentik::bgp_monitoring::v202210::_GetMetricsForTargetRequest_default_instance_._instance.get_mutable()->end_time_ = const_cast< PROTOBUF_NAMESPACE_ID::Timestamp*>(
      PROTOBUF_NAMESPACE_ID::Timestamp::internal_default_instance());
  ::kentik::bgp_monitoring::v202210::_GetMetricsForTargetRequest_default_instance_._instance.get_mutable()->target_ = const_cast< ::kentik::bgp_monitoring::v202210::Nlri*>(
      ::kentik::bgp_monitoring::v202210::Nlri::internal_default_instance());
}
class GetMetricsForTargetRequest::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Timestamp& start_time(const GetMetricsForTargetRequest* msg);
  static const PROTOBUF_NAMESPACE_ID::Timestamp& end_time(const GetMetricsForTargetRequest* msg);
  static const ::kentik::bgp_monitoring::v202210::Nlri& target(const GetMetricsForTargetRequest* msg);
};

const PROTOBUF_NAMESPACE_ID::Timestamp&
GetMetricsForTargetRequest::_Internal::start_time(const GetMetricsForTargetRequest* msg) {
  return *msg->start_time_;
}
const PROTOBUF_NAMESPACE_ID::Timestamp&
GetMetricsForTargetRequest::_Internal::end_time(const GetMetricsForTargetRequest* msg) {
  return *msg->end_time_;
}
const ::kentik::bgp_monitoring::v202210::Nlri&
GetMetricsForTargetRequest::_Internal::target(const GetMetricsForTargetRequest* msg) {
  return *msg->target_;
}
void GetMetricsForTargetRequest::clear_start_time() {
  if (GetArena() == nullptr && start_time_ != nullptr) {
    delete start_time_;
  }
  start_time_ = nullptr;
}
void GetMetricsForTargetRequest::clear_end_time() {
  if (GetArena() == nullptr && end_time_ != nullptr) {
    delete end_time_;
  }
  end_time_ = nullptr;
}
GetMetricsForTargetRequest::GetMetricsForTargetRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  metrics_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.bgp_monitoring.v202210.GetMetricsForTargetRequest)
}
GetMetricsForTargetRequest::GetMetricsForTargetRequest(const GetMetricsForTargetRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      metrics_(from.metrics_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_start_time()) {
    start_time_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.start_time_);
  } else {
    start_time_ = nullptr;
  }
  if (from._internal_has_end_time()) {
    end_time_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.end_time_);
  } else {
    end_time_ = nullptr;
  }
  if (from._internal_has_target()) {
    target_ = new ::kentik::bgp_monitoring::v202210::Nlri(*from.target_);
  } else {
    target_ = nullptr;
  }
  include_covered_ = from.include_covered_;
  // @@protoc_insertion_point(copy_constructor:kentik.bgp_monitoring.v202210.GetMetricsForTargetRequest)
}

void GetMetricsForTargetRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetMetricsForTargetRequest_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto.base);
  ::memset(&start_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&include_covered_) -
      reinterpret_cast<char*>(&start_time_)) + sizeof(include_covered_));
}

GetMetricsForTargetRequest::~GetMetricsForTargetRequest() {
  // @@protoc_insertion_point(destructor:kentik.bgp_monitoring.v202210.GetMetricsForTargetRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetMetricsForTargetRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete start_time_;
  if (this != internal_default_instance()) delete end_time_;
  if (this != internal_default_instance()) delete target_;
}

void GetMetricsForTargetRequest::ArenaDtor(void* object) {
  GetMetricsForTargetRequest* _this = reinterpret_cast< GetMetricsForTargetRequest* >(object);
  (void)_this;
}
void GetMetricsForTargetRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetMetricsForTargetRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetMetricsForTargetRequest& GetMetricsForTargetRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetMetricsForTargetRequest_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto.base);
  return *internal_default_instance();
}


void GetMetricsForTargetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.bgp_monitoring.v202210.GetMetricsForTargetRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  metrics_.Clear();
  if (GetArena() == nullptr && start_time_ != nullptr) {
    delete start_time_;
  }
  start_time_ = nullptr;
  if (GetArena() == nullptr && end_time_ != nullptr) {
    delete end_time_;
  }
  end_time_ = nullptr;
  if (GetArena() == nullptr && target_ != nullptr) {
    delete target_;
  }
  target_ = nullptr;
  include_covered_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetMetricsForTargetRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .google.protobuf.Timestamp start_time = 1[json_name = "startTime", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_start_time(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp end_time = 2[json_name = "endTime", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_end_time(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .kentik.bgp_monitoring.v202210.Nlri target = 3[json_name = "target", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_target(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool include_covered = 4[json_name = "includeCovered", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          include_covered_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .kentik.bgp_monitoring.v202210.BgpMetricType metrics = 5[json_name = "metrics", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedEnumParser(_internal_mutable_metrics(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_add_metrics(static_cast<::kentik::bgp_monitoring::v202210::BgpMetricType>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetMetricsForTargetRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kentik.bgp_monitoring.v202210.GetMetricsForTargetRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Timestamp start_time = 1[json_name = "startTime", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->has_start_time()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::start_time(this), target, stream);
  }

  // .google.protobuf.Timestamp end_time = 2[json_name = "endTime", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->has_end_time()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::end_time(this), target, stream);
  }

  // .kentik.bgp_monitoring.v202210.Nlri target = 3[json_name = "target", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->has_target()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::target(this), target, stream);
  }

  // bool include_covered = 4[json_name = "includeCovered", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->include_covered() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(4, this->_internal_include_covered(), target);
  }

  // repeated .kentik.bgp_monitoring.v202210.BgpMetricType metrics = 5[json_name = "metrics", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  {
    int byte_size = _metrics_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          5, metrics_, byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kentik.bgp_monitoring.v202210.GetMetricsForTargetRequest)
  return target;
}

size_t GetMetricsForTargetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kentik.bgp_monitoring.v202210.GetMetricsForTargetRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .kentik.bgp_monitoring.v202210.BgpMetricType metrics = 5[json_name = "metrics", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->_internal_metrics_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(
        this->_internal_metrics(static_cast<int>(i)));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _metrics_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // .google.protobuf.Timestamp start_time = 1[json_name = "startTime", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->has_start_time()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *start_time_);
  }

  // .google.protobuf.Timestamp end_time = 2[json_name = "endTime", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->has_end_time()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *end_time_);
  }

  // .kentik.bgp_monitoring.v202210.Nlri target = 3[json_name = "target", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->has_target()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *target_);
  }

  // bool include_covered = 4[json_name = "includeCovered", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->include_covered() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetMetricsForTargetRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kentik.bgp_monitoring.v202210.GetMetricsForTargetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetMetricsForTargetRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetMetricsForTargetRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kentik.bgp_monitoring.v202210.GetMetricsForTargetRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kentik.bgp_monitoring.v202210.GetMetricsForTargetRequest)
    MergeFrom(*source);
  }
}

void GetMetricsForTargetRequest::MergeFrom(const GetMetricsForTargetRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kentik.bgp_monitoring.v202210.GetMetricsForTargetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  metrics_.MergeFrom(from.metrics_);
  if (from.has_start_time()) {
    _internal_mutable_start_time()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_start_time());
  }
  if (from.has_end_time()) {
    _internal_mutable_end_time()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_end_time());
  }
  if (from.has_target()) {
    _internal_mutable_target()->::kentik::bgp_monitoring::v202210::Nlri::MergeFrom(from._internal_target());
  }
  if (from.include_covered() != 0) {
    _internal_set_include_covered(from._internal_include_covered());
  }
}

void GetMetricsForTargetRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kentik.bgp_monitoring.v202210.GetMetricsForTargetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetMetricsForTargetRequest::CopyFrom(const GetMetricsForTargetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.bgp_monitoring.v202210.GetMetricsForTargetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetMetricsForTargetRequest::IsInitialized() const {
  return true;
}

void GetMetricsForTargetRequest::InternalSwap(GetMetricsForTargetRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  metrics_.InternalSwap(&other->metrics_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetMetricsForTargetRequest, include_covered_)
      + sizeof(GetMetricsForTargetRequest::include_covered_)
      - PROTOBUF_FIELD_OFFSET(GetMetricsForTargetRequest, start_time_)>(
          reinterpret_cast<char*>(&start_time_),
          reinterpret_cast<char*>(&other->start_time_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetMetricsForTargetRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetMetricsForTargetResponse::InitAsDefaultInstance() {
}
class GetMetricsForTargetResponse::_Internal {
 public:
};

GetMetricsForTargetResponse::GetMetricsForTargetResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  metrics_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.bgp_monitoring.v202210.GetMetricsForTargetResponse)
}
GetMetricsForTargetResponse::GetMetricsForTargetResponse(const GetMetricsForTargetResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      metrics_(from.metrics_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:kentik.bgp_monitoring.v202210.GetMetricsForTargetResponse)
}

void GetMetricsForTargetResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetMetricsForTargetResponse_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto.base);
}

GetMetricsForTargetResponse::~GetMetricsForTargetResponse() {
  // @@protoc_insertion_point(destructor:kentik.bgp_monitoring.v202210.GetMetricsForTargetResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetMetricsForTargetResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetMetricsForTargetResponse::ArenaDtor(void* object) {
  GetMetricsForTargetResponse* _this = reinterpret_cast< GetMetricsForTargetResponse* >(object);
  (void)_this;
}
void GetMetricsForTargetResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetMetricsForTargetResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetMetricsForTargetResponse& GetMetricsForTargetResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetMetricsForTargetResponse_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto.base);
  return *internal_default_instance();
}


void GetMetricsForTargetResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.bgp_monitoring.v202210.GetMetricsForTargetResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  metrics_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetMetricsForTargetResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .kentik.bgp_monitoring.v202210.BgpMetric metrics = 1[json_name = "metrics", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_metrics(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetMetricsForTargetResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kentik.bgp_monitoring.v202210.GetMetricsForTargetResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .kentik.bgp_monitoring.v202210.BgpMetric metrics = 1[json_name = "metrics", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_metrics_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_metrics(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kentik.bgp_monitoring.v202210.GetMetricsForTargetResponse)
  return target;
}

size_t GetMetricsForTargetResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kentik.bgp_monitoring.v202210.GetMetricsForTargetResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .kentik.bgp_monitoring.v202210.BgpMetric metrics = 1[json_name = "metrics", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  total_size += 1UL * this->_internal_metrics_size();
  for (const auto& msg : this->metrics_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetMetricsForTargetResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kentik.bgp_monitoring.v202210.GetMetricsForTargetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetMetricsForTargetResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetMetricsForTargetResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kentik.bgp_monitoring.v202210.GetMetricsForTargetResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kentik.bgp_monitoring.v202210.GetMetricsForTargetResponse)
    MergeFrom(*source);
  }
}

void GetMetricsForTargetResponse::MergeFrom(const GetMetricsForTargetResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kentik.bgp_monitoring.v202210.GetMetricsForTargetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  metrics_.MergeFrom(from.metrics_);
}

void GetMetricsForTargetResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kentik.bgp_monitoring.v202210.GetMetricsForTargetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetMetricsForTargetResponse::CopyFrom(const GetMetricsForTargetResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.bgp_monitoring.v202210.GetMetricsForTargetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetMetricsForTargetResponse::IsInitialized() const {
  return true;
}

void GetMetricsForTargetResponse::InternalSwap(GetMetricsForTargetResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  metrics_.InternalSwap(&other->metrics_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetMetricsForTargetResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetRoutesForTargetRequest::InitAsDefaultInstance() {
  ::kentik::bgp_monitoring::v202210::_GetRoutesForTargetRequest_default_instance_._instance.get_mutable()->time_ = const_cast< PROTOBUF_NAMESPACE_ID::Timestamp*>(
      PROTOBUF_NAMESPACE_ID::Timestamp::internal_default_instance());
  ::kentik::bgp_monitoring::v202210::_GetRoutesForTargetRequest_default_instance_._instance.get_mutable()->target_ = const_cast< ::kentik::bgp_monitoring::v202210::Nlri*>(
      ::kentik::bgp_monitoring::v202210::Nlri::internal_default_instance());
}
class GetRoutesForTargetRequest::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Timestamp& time(const GetRoutesForTargetRequest* msg);
  static const ::kentik::bgp_monitoring::v202210::Nlri& target(const GetRoutesForTargetRequest* msg);
};

const PROTOBUF_NAMESPACE_ID::Timestamp&
GetRoutesForTargetRequest::_Internal::time(const GetRoutesForTargetRequest* msg) {
  return *msg->time_;
}
const ::kentik::bgp_monitoring::v202210::Nlri&
GetRoutesForTargetRequest::_Internal::target(const GetRoutesForTargetRequest* msg) {
  return *msg->target_;
}
void GetRoutesForTargetRequest::clear_time() {
  if (GetArena() == nullptr && time_ != nullptr) {
    delete time_;
  }
  time_ = nullptr;
}
GetRoutesForTargetRequest::GetRoutesForTargetRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.bgp_monitoring.v202210.GetRoutesForTargetRequest)
}
GetRoutesForTargetRequest::GetRoutesForTargetRequest(const GetRoutesForTargetRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_time()) {
    time_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.time_);
  } else {
    time_ = nullptr;
  }
  if (from._internal_has_target()) {
    target_ = new ::kentik::bgp_monitoring::v202210::Nlri(*from.target_);
  } else {
    target_ = nullptr;
  }
  ::memcpy(&include_covered_, &from.include_covered_,
    static_cast<size_t>(reinterpret_cast<char*>(&check_rpki_) -
    reinterpret_cast<char*>(&include_covered_)) + sizeof(check_rpki_));
  // @@protoc_insertion_point(copy_constructor:kentik.bgp_monitoring.v202210.GetRoutesForTargetRequest)
}

void GetRoutesForTargetRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetRoutesForTargetRequest_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto.base);
  ::memset(&time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&check_rpki_) -
      reinterpret_cast<char*>(&time_)) + sizeof(check_rpki_));
}

GetRoutesForTargetRequest::~GetRoutesForTargetRequest() {
  // @@protoc_insertion_point(destructor:kentik.bgp_monitoring.v202210.GetRoutesForTargetRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetRoutesForTargetRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete time_;
  if (this != internal_default_instance()) delete target_;
}

void GetRoutesForTargetRequest::ArenaDtor(void* object) {
  GetRoutesForTargetRequest* _this = reinterpret_cast< GetRoutesForTargetRequest* >(object);
  (void)_this;
}
void GetRoutesForTargetRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetRoutesForTargetRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetRoutesForTargetRequest& GetRoutesForTargetRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetRoutesForTargetRequest_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto.base);
  return *internal_default_instance();
}


void GetRoutesForTargetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.bgp_monitoring.v202210.GetRoutesForTargetRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && time_ != nullptr) {
    delete time_;
  }
  time_ = nullptr;
  if (GetArena() == nullptr && target_ != nullptr) {
    delete target_;
  }
  target_ = nullptr;
  ::memset(&include_covered_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&check_rpki_) -
      reinterpret_cast<char*>(&include_covered_)) + sizeof(check_rpki_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetRoutesForTargetRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .google.protobuf.Timestamp time = 1[json_name = "time", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_time(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .kentik.bgp_monitoring.v202210.Nlri target = 2[json_name = "target", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_target(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool include_covered = 4[json_name = "includeCovered", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          include_covered_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool check_rpki = 5[json_name = "checkRpki", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          check_rpki_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetRoutesForTargetRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kentik.bgp_monitoring.v202210.GetRoutesForTargetRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Timestamp time = 1[json_name = "time", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->has_time()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::time(this), target, stream);
  }

  // .kentik.bgp_monitoring.v202210.Nlri target = 2[json_name = "target", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->has_target()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::target(this), target, stream);
  }

  // bool include_covered = 4[json_name = "includeCovered", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->include_covered() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(4, this->_internal_include_covered(), target);
  }

  // bool check_rpki = 5[json_name = "checkRpki", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->check_rpki() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(5, this->_internal_check_rpki(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kentik.bgp_monitoring.v202210.GetRoutesForTargetRequest)
  return target;
}

size_t GetRoutesForTargetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kentik.bgp_monitoring.v202210.GetRoutesForTargetRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.Timestamp time = 1[json_name = "time", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->has_time()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *time_);
  }

  // .kentik.bgp_monitoring.v202210.Nlri target = 2[json_name = "target", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->has_target()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *target_);
  }

  // bool include_covered = 4[json_name = "includeCovered", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->include_covered() != 0) {
    total_size += 1 + 1;
  }

  // bool check_rpki = 5[json_name = "checkRpki", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->check_rpki() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetRoutesForTargetRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kentik.bgp_monitoring.v202210.GetRoutesForTargetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetRoutesForTargetRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetRoutesForTargetRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kentik.bgp_monitoring.v202210.GetRoutesForTargetRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kentik.bgp_monitoring.v202210.GetRoutesForTargetRequest)
    MergeFrom(*source);
  }
}

void GetRoutesForTargetRequest::MergeFrom(const GetRoutesForTargetRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kentik.bgp_monitoring.v202210.GetRoutesForTargetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_time()) {
    _internal_mutable_time()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_time());
  }
  if (from.has_target()) {
    _internal_mutable_target()->::kentik::bgp_monitoring::v202210::Nlri::MergeFrom(from._internal_target());
  }
  if (from.include_covered() != 0) {
    _internal_set_include_covered(from._internal_include_covered());
  }
  if (from.check_rpki() != 0) {
    _internal_set_check_rpki(from._internal_check_rpki());
  }
}

void GetRoutesForTargetRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kentik.bgp_monitoring.v202210.GetRoutesForTargetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetRoutesForTargetRequest::CopyFrom(const GetRoutesForTargetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.bgp_monitoring.v202210.GetRoutesForTargetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRoutesForTargetRequest::IsInitialized() const {
  return true;
}

void GetRoutesForTargetRequest::InternalSwap(GetRoutesForTargetRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetRoutesForTargetRequest, check_rpki_)
      + sizeof(GetRoutesForTargetRequest::check_rpki_)
      - PROTOBUF_FIELD_OFFSET(GetRoutesForTargetRequest, time_)>(
          reinterpret_cast<char*>(&time_),
          reinterpret_cast<char*>(&other->time_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRoutesForTargetRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

GetRoutesForTargetResponse_AsNamesEntry_DoNotUse::GetRoutesForTargetResponse_AsNamesEntry_DoNotUse() {}
GetRoutesForTargetResponse_AsNamesEntry_DoNotUse::GetRoutesForTargetResponse_AsNamesEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void GetRoutesForTargetResponse_AsNamesEntry_DoNotUse::MergeFrom(const GetRoutesForTargetResponse_AsNamesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata GetRoutesForTargetResponse_AsNamesEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void GetRoutesForTargetResponse_AsNamesEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void GetRoutesForTargetResponse::InitAsDefaultInstance() {
}
class GetRoutesForTargetResponse::_Internal {
 public:
};

GetRoutesForTargetResponse::GetRoutesForTargetResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  routes_(arena),
  as_names_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.bgp_monitoring.v202210.GetRoutesForTargetResponse)
}
GetRoutesForTargetResponse::GetRoutesForTargetResponse(const GetRoutesForTargetResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      routes_(from.routes_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  as_names_.MergeFrom(from.as_names_);
  // @@protoc_insertion_point(copy_constructor:kentik.bgp_monitoring.v202210.GetRoutesForTargetResponse)
}

void GetRoutesForTargetResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetRoutesForTargetResponse_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto.base);
}

GetRoutesForTargetResponse::~GetRoutesForTargetResponse() {
  // @@protoc_insertion_point(destructor:kentik.bgp_monitoring.v202210.GetRoutesForTargetResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetRoutesForTargetResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetRoutesForTargetResponse::ArenaDtor(void* object) {
  GetRoutesForTargetResponse* _this = reinterpret_cast< GetRoutesForTargetResponse* >(object);
  (void)_this;
}
void GetRoutesForTargetResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetRoutesForTargetResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetRoutesForTargetResponse& GetRoutesForTargetResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetRoutesForTargetResponse_kentik_2fbgp_5fmonitoring_2fv202210_2fbgp_5fmonitoring_2eproto.base);
  return *internal_default_instance();
}


void GetRoutesForTargetResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.bgp_monitoring.v202210.GetRoutesForTargetResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  routes_.Clear();
  as_names_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetRoutesForTargetResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .kentik.bgp_monitoring.v202210.RouteInfo routes = 1[json_name = "routes", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_routes(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // map<uint32, string> as_names = 5[json_name = "asNames", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&as_names_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetRoutesForTargetResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kentik.bgp_monitoring.v202210.GetRoutesForTargetResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .kentik.bgp_monitoring.v202210.RouteInfo routes = 1[json_name = "routes", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_routes_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_routes(i), target, stream);
  }

  // map<uint32, string> as_names = 5[json_name = "asNames", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (!this->_internal_as_names().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, std::string >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::uint32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "kentik.bgp_monitoring.v202210.GetRoutesForTargetResponse.AsNamesEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_as_names().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_as_names().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, std::string >::const_iterator
          it = this->_internal_as_names().begin();
          it != this->_internal_as_names().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = GetRoutesForTargetResponse_AsNamesEntry_DoNotUse::Funcs::InternalSerialize(5, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)].second));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, std::string >::const_iterator
          it = this->_internal_as_names().begin();
          it != this->_internal_as_names().end(); ++it) {
        target = GetRoutesForTargetResponse_AsNamesEntry_DoNotUse::Funcs::InternalSerialize(5, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kentik.bgp_monitoring.v202210.GetRoutesForTargetResponse)
  return target;
}

size_t GetRoutesForTargetResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kentik.bgp_monitoring.v202210.GetRoutesForTargetResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .kentik.bgp_monitoring.v202210.RouteInfo routes = 1[json_name = "routes", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  total_size += 1UL * this->_internal_routes_size();
  for (const auto& msg : this->routes_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // map<uint32, string> as_names = 5[json_name = "asNames", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_as_names_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, std::string >::const_iterator
      it = this->_internal_as_names().begin();
      it != this->_internal_as_names().end(); ++it) {
    total_size += GetRoutesForTargetResponse_AsNamesEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetRoutesForTargetResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kentik.bgp_monitoring.v202210.GetRoutesForTargetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetRoutesForTargetResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetRoutesForTargetResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kentik.bgp_monitoring.v202210.GetRoutesForTargetResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kentik.bgp_monitoring.v202210.GetRoutesForTargetResponse)
    MergeFrom(*source);
  }
}

void GetRoutesForTargetResponse::MergeFrom(const GetRoutesForTargetResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kentik.bgp_monitoring.v202210.GetRoutesForTargetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  routes_.MergeFrom(from.routes_);
  as_names_.MergeFrom(from.as_names_);
}

void GetRoutesForTargetResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kentik.bgp_monitoring.v202210.GetRoutesForTargetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetRoutesForTargetResponse::CopyFrom(const GetRoutesForTargetResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.bgp_monitoring.v202210.GetRoutesForTargetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRoutesForTargetResponse::IsInitialized() const {
  return true;
}

void GetRoutesForTargetResponse::InternalSwap(GetRoutesForTargetResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  routes_.InternalSwap(&other->routes_);
  as_names_.Swap(&other->as_names_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRoutesForTargetResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v202210
}  // namespace bgp_monitoring
}  // namespace kentik
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::kentik::bgp_monitoring::v202210::Nlri* Arena::CreateMaybeMessage< ::kentik::bgp_monitoring::v202210::Nlri >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kentik::bgp_monitoring::v202210::Nlri >(arena);
}
template<> PROTOBUF_NOINLINE ::kentik::bgp_monitoring::v202210::BgpHealthSettings* Arena::CreateMaybeMessage< ::kentik::bgp_monitoring::v202210::BgpHealthSettings >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kentik::bgp_monitoring::v202210::BgpHealthSettings >(arena);
}
template<> PROTOBUF_NOINLINE ::kentik::bgp_monitoring::v202210::BgpMonitorSettings* Arena::CreateMaybeMessage< ::kentik::bgp_monitoring::v202210::BgpMonitorSettings >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kentik::bgp_monitoring::v202210::BgpMonitorSettings >(arena);
}
template<> PROTOBUF_NOINLINE ::kentik::bgp_monitoring::v202210::BgpMonitor* Arena::CreateMaybeMessage< ::kentik::bgp_monitoring::v202210::BgpMonitor >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kentik::bgp_monitoring::v202210::BgpMonitor >(arena);
}
template<> PROTOBUF_NOINLINE ::kentik::bgp_monitoring::v202210::RouteInfo* Arena::CreateMaybeMessage< ::kentik::bgp_monitoring::v202210::RouteInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kentik::bgp_monitoring::v202210::RouteInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::kentik::bgp_monitoring::v202210::BgpMetric* Arena::CreateMaybeMessage< ::kentik::bgp_monitoring::v202210::BgpMetric >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kentik::bgp_monitoring::v202210::BgpMetric >(arena);
}
template<> PROTOBUF_NOINLINE ::kentik::bgp_monitoring::v202210::ListMonitorsRequest* Arena::CreateMaybeMessage< ::kentik::bgp_monitoring::v202210::ListMonitorsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kentik::bgp_monitoring::v202210::ListMonitorsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::kentik::bgp_monitoring::v202210::ListMonitorsResponse* Arena::CreateMaybeMessage< ::kentik::bgp_monitoring::v202210::ListMonitorsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kentik::bgp_monitoring::v202210::ListMonitorsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::kentik::bgp_monitoring::v202210::CreateMonitorRequest* Arena::CreateMaybeMessage< ::kentik::bgp_monitoring::v202210::CreateMonitorRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kentik::bgp_monitoring::v202210::CreateMonitorRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::kentik::bgp_monitoring::v202210::CreateMonitorResponse* Arena::CreateMaybeMessage< ::kentik::bgp_monitoring::v202210::CreateMonitorResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kentik::bgp_monitoring::v202210::CreateMonitorResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::kentik::bgp_monitoring::v202210::GetMonitorRequest* Arena::CreateMaybeMessage< ::kentik::bgp_monitoring::v202210::GetMonitorRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kentik::bgp_monitoring::v202210::GetMonitorRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::kentik::bgp_monitoring::v202210::GetMonitorResponse* Arena::CreateMaybeMessage< ::kentik::bgp_monitoring::v202210::GetMonitorResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kentik::bgp_monitoring::v202210::GetMonitorResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::kentik::bgp_monitoring::v202210::UpdateMonitorRequest* Arena::CreateMaybeMessage< ::kentik::bgp_monitoring::v202210::UpdateMonitorRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kentik::bgp_monitoring::v202210::UpdateMonitorRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::kentik::bgp_monitoring::v202210::UpdateMonitorResponse* Arena::CreateMaybeMessage< ::kentik::bgp_monitoring::v202210::UpdateMonitorResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kentik::bgp_monitoring::v202210::UpdateMonitorResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::kentik::bgp_monitoring::v202210::DeleteMonitorRequest* Arena::CreateMaybeMessage< ::kentik::bgp_monitoring::v202210::DeleteMonitorRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kentik::bgp_monitoring::v202210::DeleteMonitorRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::kentik::bgp_monitoring::v202210::DeleteMonitorResponse* Arena::CreateMaybeMessage< ::kentik::bgp_monitoring::v202210::DeleteMonitorResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kentik::bgp_monitoring::v202210::DeleteMonitorResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::kentik::bgp_monitoring::v202210::SetMonitorStatusRequest* Arena::CreateMaybeMessage< ::kentik::bgp_monitoring::v202210::SetMonitorStatusRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kentik::bgp_monitoring::v202210::SetMonitorStatusRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::kentik::bgp_monitoring::v202210::SetMonitorStatusResponse* Arena::CreateMaybeMessage< ::kentik::bgp_monitoring::v202210::SetMonitorStatusResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kentik::bgp_monitoring::v202210::SetMonitorStatusResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::kentik::bgp_monitoring::v202210::GetMetricsForTargetRequest* Arena::CreateMaybeMessage< ::kentik::bgp_monitoring::v202210::GetMetricsForTargetRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kentik::bgp_monitoring::v202210::GetMetricsForTargetRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::kentik::bgp_monitoring::v202210::GetMetricsForTargetResponse* Arena::CreateMaybeMessage< ::kentik::bgp_monitoring::v202210::GetMetricsForTargetResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kentik::bgp_monitoring::v202210::GetMetricsForTargetResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::kentik::bgp_monitoring::v202210::GetRoutesForTargetRequest* Arena::CreateMaybeMessage< ::kentik::bgp_monitoring::v202210::GetRoutesForTargetRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kentik::bgp_monitoring::v202210::GetRoutesForTargetRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::kentik::bgp_monitoring::v202210::GetRoutesForTargetResponse_AsNamesEntry_DoNotUse* Arena::CreateMaybeMessage< ::kentik::bgp_monitoring::v202210::GetRoutesForTargetResponse_AsNamesEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kentik::bgp_monitoring::v202210::GetRoutesForTargetResponse_AsNamesEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::kentik::bgp_monitoring::v202210::GetRoutesForTargetResponse* Arena::CreateMaybeMessage< ::kentik::bgp_monitoring::v202210::GetRoutesForTargetResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kentik::bgp_monitoring::v202210::GetRoutesForTargetResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
