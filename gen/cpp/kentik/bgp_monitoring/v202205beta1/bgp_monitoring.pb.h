// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: kentik/bgp_monitoring/v202205beta1/bgp_monitoring.proto
// Protobuf C++ Version: 5.29.3

#ifndef kentik_2fbgp_5fmonitoring_2fv202205beta1_2fbgp_5fmonitoring_2eproto_2epb_2eh
#define kentik_2fbgp_5fmonitoring_2fv202205beta1_2fbgp_5fmonitoring_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field_inl.h"
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "google/api/annotations.pb.h"
#include "google/api/client.pb.h"
#include "google/protobuf/timestamp.pb.h"
#include "protoc-gen-openapiv2/options/annotations.pb.h"
#include "kentik/core/v202303/annotations.pb.h"
#include "kentik/core/v202303/user_info.pb.h"
#include "kentik/net/v202303/bgp_types.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_kentik_2fbgp_5fmonitoring_2fv202205beta1_2fbgp_5fmonitoring_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_kentik_2fbgp_5fmonitoring_2fv202205beta1_2fbgp_5fmonitoring_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_kentik_2fbgp_5fmonitoring_2fv202205beta1_2fbgp_5fmonitoring_2eproto;
namespace kentik {
namespace bgp_monitoring {
namespace v202205beta1 {
class BgpHealthSettings;
struct BgpHealthSettingsDefaultTypeInternal;
extern BgpHealthSettingsDefaultTypeInternal _BgpHealthSettings_default_instance_;
class BgpMetric;
struct BgpMetricDefaultTypeInternal;
extern BgpMetricDefaultTypeInternal _BgpMetric_default_instance_;
class BgpMonitor;
struct BgpMonitorDefaultTypeInternal;
extern BgpMonitorDefaultTypeInternal _BgpMonitor_default_instance_;
class BgpMonitorSettings;
struct BgpMonitorSettingsDefaultTypeInternal;
extern BgpMonitorSettingsDefaultTypeInternal _BgpMonitorSettings_default_instance_;
class CreateMonitorRequest;
struct CreateMonitorRequestDefaultTypeInternal;
extern CreateMonitorRequestDefaultTypeInternal _CreateMonitorRequest_default_instance_;
class CreateMonitorResponse;
struct CreateMonitorResponseDefaultTypeInternal;
extern CreateMonitorResponseDefaultTypeInternal _CreateMonitorResponse_default_instance_;
class DeleteMonitorRequest;
struct DeleteMonitorRequestDefaultTypeInternal;
extern DeleteMonitorRequestDefaultTypeInternal _DeleteMonitorRequest_default_instance_;
class DeleteMonitorResponse;
struct DeleteMonitorResponseDefaultTypeInternal;
extern DeleteMonitorResponseDefaultTypeInternal _DeleteMonitorResponse_default_instance_;
class GetMetricsForTargetRequest;
struct GetMetricsForTargetRequestDefaultTypeInternal;
extern GetMetricsForTargetRequestDefaultTypeInternal _GetMetricsForTargetRequest_default_instance_;
class GetMetricsForTargetResponse;
struct GetMetricsForTargetResponseDefaultTypeInternal;
extern GetMetricsForTargetResponseDefaultTypeInternal _GetMetricsForTargetResponse_default_instance_;
class GetMonitorRequest;
struct GetMonitorRequestDefaultTypeInternal;
extern GetMonitorRequestDefaultTypeInternal _GetMonitorRequest_default_instance_;
class GetMonitorResponse;
struct GetMonitorResponseDefaultTypeInternal;
extern GetMonitorResponseDefaultTypeInternal _GetMonitorResponse_default_instance_;
class GetRoutesForTargetRequest;
struct GetRoutesForTargetRequestDefaultTypeInternal;
extern GetRoutesForTargetRequestDefaultTypeInternal _GetRoutesForTargetRequest_default_instance_;
class GetRoutesForTargetResponse;
struct GetRoutesForTargetResponseDefaultTypeInternal;
extern GetRoutesForTargetResponseDefaultTypeInternal _GetRoutesForTargetResponse_default_instance_;
class GetRoutesForTargetResponse_AsNamesEntry_DoNotUse;
struct GetRoutesForTargetResponse_AsNamesEntry_DoNotUseDefaultTypeInternal;
extern GetRoutesForTargetResponse_AsNamesEntry_DoNotUseDefaultTypeInternal _GetRoutesForTargetResponse_AsNamesEntry_DoNotUse_default_instance_;
class ListMonitorsRequest;
struct ListMonitorsRequestDefaultTypeInternal;
extern ListMonitorsRequestDefaultTypeInternal _ListMonitorsRequest_default_instance_;
class ListMonitorsResponse;
struct ListMonitorsResponseDefaultTypeInternal;
extern ListMonitorsResponseDefaultTypeInternal _ListMonitorsResponse_default_instance_;
class Nlri;
struct NlriDefaultTypeInternal;
extern NlriDefaultTypeInternal _Nlri_default_instance_;
class RouteInfo;
struct RouteInfoDefaultTypeInternal;
extern RouteInfoDefaultTypeInternal _RouteInfo_default_instance_;
class SetMonitorStatusRequest;
struct SetMonitorStatusRequestDefaultTypeInternal;
extern SetMonitorStatusRequestDefaultTypeInternal _SetMonitorStatusRequest_default_instance_;
class SetMonitorStatusResponse;
struct SetMonitorStatusResponseDefaultTypeInternal;
extern SetMonitorStatusResponseDefaultTypeInternal _SetMonitorStatusResponse_default_instance_;
class UpdateMonitorRequest;
struct UpdateMonitorRequestDefaultTypeInternal;
extern UpdateMonitorRequestDefaultTypeInternal _UpdateMonitorRequest_default_instance_;
class UpdateMonitorResponse;
struct UpdateMonitorResponseDefaultTypeInternal;
extern UpdateMonitorResponseDefaultTypeInternal _UpdateMonitorResponse_default_instance_;
}  // namespace v202205beta1
}  // namespace bgp_monitoring
}  // namespace kentik
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace kentik {
namespace bgp_monitoring {
namespace v202205beta1 {
enum BgpMonitorStatus : int {
  BGP_MONITOR_STATUS_UNSPECIFIED = 0,
  BGP_MONITOR_STATUS_ACTIVE = 1,
  BGP_MONITOR_STATUS_PAUSED = 2,
  BGP_MONITOR_STATUS_DELETED = 3,
  BgpMonitorStatus_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  BgpMonitorStatus_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool BgpMonitorStatus_IsValid(int value);
extern const uint32_t BgpMonitorStatus_internal_data_[];
constexpr BgpMonitorStatus BgpMonitorStatus_MIN = static_cast<BgpMonitorStatus>(0);
constexpr BgpMonitorStatus BgpMonitorStatus_MAX = static_cast<BgpMonitorStatus>(3);
constexpr int BgpMonitorStatus_ARRAYSIZE = 3 + 1;
const ::google::protobuf::EnumDescriptor*
BgpMonitorStatus_descriptor();
template <typename T>
const std::string& BgpMonitorStatus_Name(T value) {
  static_assert(std::is_same<T, BgpMonitorStatus>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to BgpMonitorStatus_Name().");
  return BgpMonitorStatus_Name(static_cast<BgpMonitorStatus>(value));
}
template <>
inline const std::string& BgpMonitorStatus_Name(BgpMonitorStatus value) {
  return ::google::protobuf::internal::NameOfDenseEnum<BgpMonitorStatus_descriptor,
                                                 0, 3>(
      static_cast<int>(value));
}
inline bool BgpMonitorStatus_Parse(absl::string_view name, BgpMonitorStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BgpMonitorStatus>(
      BgpMonitorStatus_descriptor(), name, value);
}
enum BgpMetricType : int {
  BGP_METRIC_TYPE_UNSPECIFIED = 0,
  BGP_METRIC_TYPE_REACHABILITY = 1,
  BGP_METRIC_TYPE_PATH_CHANGES = 2,
  BgpMetricType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  BgpMetricType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool BgpMetricType_IsValid(int value);
extern const uint32_t BgpMetricType_internal_data_[];
constexpr BgpMetricType BgpMetricType_MIN = static_cast<BgpMetricType>(0);
constexpr BgpMetricType BgpMetricType_MAX = static_cast<BgpMetricType>(2);
constexpr int BgpMetricType_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor*
BgpMetricType_descriptor();
template <typename T>
const std::string& BgpMetricType_Name(T value) {
  static_assert(std::is_same<T, BgpMetricType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to BgpMetricType_Name().");
  return BgpMetricType_Name(static_cast<BgpMetricType>(value));
}
template <>
inline const std::string& BgpMetricType_Name(BgpMetricType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<BgpMetricType_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool BgpMetricType_Parse(absl::string_view name, BgpMetricType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BgpMetricType>(
      BgpMetricType_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class SetMonitorStatusResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:kentik.bgp_monitoring.v202205beta1.SetMonitorStatusResponse) */ {
 public:
  inline SetMonitorStatusResponse() : SetMonitorStatusResponse(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SetMonitorStatusResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SetMonitorStatusResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SetMonitorStatusResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline SetMonitorStatusResponse(const SetMonitorStatusResponse& from) : SetMonitorStatusResponse(nullptr, from) {}
  inline SetMonitorStatusResponse(SetMonitorStatusResponse&& from) noexcept
      : SetMonitorStatusResponse(nullptr, std::move(from)) {}
  inline SetMonitorStatusResponse& operator=(const SetMonitorStatusResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetMonitorStatusResponse& operator=(SetMonitorStatusResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetMonitorStatusResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetMonitorStatusResponse* internal_default_instance() {
    return reinterpret_cast<const SetMonitorStatusResponse*>(
        &_SetMonitorStatusResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 17;
  friend void swap(SetMonitorStatusResponse& a, SetMonitorStatusResponse& b) { a.Swap(&b); }
  inline void Swap(SetMonitorStatusResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetMonitorStatusResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetMonitorStatusResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<SetMonitorStatusResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const SetMonitorStatusResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const SetMonitorStatusResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.bgp_monitoring.v202205beta1.SetMonitorStatusResponse"; }

 protected:
  explicit SetMonitorStatusResponse(::google::protobuf::Arena* arena);
  SetMonitorStatusResponse(::google::protobuf::Arena* arena, const SetMonitorStatusResponse& from);
  SetMonitorStatusResponse(::google::protobuf::Arena* arena, SetMonitorStatusResponse&& from) noexcept
      : SetMonitorStatusResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:kentik.bgp_monitoring.v202205beta1.SetMonitorStatusResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SetMonitorStatusResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_kentik_2fbgp_5fmonitoring_2fv202205beta1_2fbgp_5fmonitoring_2eproto;
};
// -------------------------------------------------------------------

class SetMonitorStatusRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.bgp_monitoring.v202205beta1.SetMonitorStatusRequest) */ {
 public:
  inline SetMonitorStatusRequest() : SetMonitorStatusRequest(nullptr) {}
  ~SetMonitorStatusRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SetMonitorStatusRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SetMonitorStatusRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SetMonitorStatusRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline SetMonitorStatusRequest(const SetMonitorStatusRequest& from) : SetMonitorStatusRequest(nullptr, from) {}
  inline SetMonitorStatusRequest(SetMonitorStatusRequest&& from) noexcept
      : SetMonitorStatusRequest(nullptr, std::move(from)) {}
  inline SetMonitorStatusRequest& operator=(const SetMonitorStatusRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetMonitorStatusRequest& operator=(SetMonitorStatusRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetMonitorStatusRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetMonitorStatusRequest* internal_default_instance() {
    return reinterpret_cast<const SetMonitorStatusRequest*>(
        &_SetMonitorStatusRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 16;
  friend void swap(SetMonitorStatusRequest& a, SetMonitorStatusRequest& b) { a.Swap(&b); }
  inline void Swap(SetMonitorStatusRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetMonitorStatusRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetMonitorStatusRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SetMonitorStatusRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetMonitorStatusRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SetMonitorStatusRequest& from) { SetMonitorStatusRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SetMonitorStatusRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.bgp_monitoring.v202205beta1.SetMonitorStatusRequest"; }

 protected:
  explicit SetMonitorStatusRequest(::google::protobuf::Arena* arena);
  SetMonitorStatusRequest(::google::protobuf::Arena* arena, const SetMonitorStatusRequest& from);
  SetMonitorStatusRequest(::google::protobuf::Arena* arena, SetMonitorStatusRequest&& from) noexcept
      : SetMonitorStatusRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
    kStatusFieldNumber = 2,
  };
  // string id = 1 [json_name = "id"];
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // .kentik.bgp_monitoring.v202205beta1.BgpMonitorStatus status = 2 [json_name = "status"];
  void clear_status() ;
  ::kentik::bgp_monitoring::v202205beta1::BgpMonitorStatus status() const;
  void set_status(::kentik::bgp_monitoring::v202205beta1::BgpMonitorStatus value);

  private:
  ::kentik::bgp_monitoring::v202205beta1::BgpMonitorStatus _internal_status() const;
  void _internal_set_status(::kentik::bgp_monitoring::v202205beta1::BgpMonitorStatus value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.bgp_monitoring.v202205beta1.SetMonitorStatusRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      69, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SetMonitorStatusRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr id_;
    int status_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fbgp_5fmonitoring_2fv202205beta1_2fbgp_5fmonitoring_2eproto;
};
// -------------------------------------------------------------------

class Nlri final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.bgp_monitoring.v202205beta1.Nlri) */ {
 public:
  inline Nlri() : Nlri(nullptr) {}
  ~Nlri() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Nlri* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Nlri));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Nlri(
      ::google::protobuf::internal::ConstantInitialized);

  inline Nlri(const Nlri& from) : Nlri(nullptr, from) {}
  inline Nlri(Nlri&& from) noexcept
      : Nlri(nullptr, std::move(from)) {}
  inline Nlri& operator=(const Nlri& from) {
    CopyFrom(from);
    return *this;
  }
  inline Nlri& operator=(Nlri&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Nlri& default_instance() {
    return *internal_default_instance();
  }
  enum TypeCase {
    kPrefix = 3,
    TYPE_NOT_SET = 0,
  };
  static inline const Nlri* internal_default_instance() {
    return reinterpret_cast<const Nlri*>(
        &_Nlri_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(Nlri& a, Nlri& b) { a.Swap(&b); }
  inline void Swap(Nlri* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Nlri* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Nlri* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Nlri>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Nlri& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Nlri& from) { Nlri::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Nlri* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.bgp_monitoring.v202205beta1.Nlri"; }

 protected:
  explicit Nlri(::google::protobuf::Arena* arena);
  Nlri(::google::protobuf::Arena* arena, const Nlri& from);
  Nlri(::google::protobuf::Arena* arena, Nlri&& from) noexcept
      : Nlri(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAfiFieldNumber = 1,
    kSafiFieldNumber = 2,
    kPrefixFieldNumber = 3,
  };
  // .kentik.net.v202303.Afi afi = 1 [json_name = "afi"];
  void clear_afi() ;
  ::kentik::net::v202303::Afi afi() const;
  void set_afi(::kentik::net::v202303::Afi value);

  private:
  ::kentik::net::v202303::Afi _internal_afi() const;
  void _internal_set_afi(::kentik::net::v202303::Afi value);

  public:
  // .kentik.net.v202303.Safi safi = 2 [json_name = "safi"];
  void clear_safi() ;
  ::kentik::net::v202303::Safi safi() const;
  void set_safi(::kentik::net::v202303::Safi value);

  private:
  ::kentik::net::v202303::Safi _internal_safi() const;
  void _internal_set_safi(::kentik::net::v202303::Safi value);

  public:
  // string prefix = 3 [json_name = "prefix"];
  bool has_prefix() const;
  void clear_prefix() ;
  const std::string& prefix() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_prefix(Arg_&& arg, Args_... args);
  std::string* mutable_prefix();
  PROTOBUF_NODISCARD std::string* release_prefix();
  void set_allocated_prefix(std::string* value);

  private:
  const std::string& _internal_prefix() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_prefix(
      const std::string& value);
  std::string* _internal_mutable_prefix();

  public:
  void clear_type();
  TypeCase type_case() const;
  // @@protoc_insertion_point(class_scope:kentik.bgp_monitoring.v202205beta1.Nlri)
 private:
  class _Internal;
  void set_has_prefix();
  inline bool has_type() const;
  inline void clear_has_type();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 3, 0,
      54, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Nlri& from_msg);
    int afi_;
    int safi_;
    union TypeUnion {
      constexpr TypeUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::google::protobuf::internal::ArenaStringPtr prefix_;
    } type_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fbgp_5fmonitoring_2fv202205beta1_2fbgp_5fmonitoring_2eproto;
};
// -------------------------------------------------------------------

class ListMonitorsRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:kentik.bgp_monitoring.v202205beta1.ListMonitorsRequest) */ {
 public:
  inline ListMonitorsRequest() : ListMonitorsRequest(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ListMonitorsRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ListMonitorsRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListMonitorsRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListMonitorsRequest(const ListMonitorsRequest& from) : ListMonitorsRequest(nullptr, from) {}
  inline ListMonitorsRequest(ListMonitorsRequest&& from) noexcept
      : ListMonitorsRequest(nullptr, std::move(from)) {}
  inline ListMonitorsRequest& operator=(const ListMonitorsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListMonitorsRequest& operator=(ListMonitorsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListMonitorsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListMonitorsRequest* internal_default_instance() {
    return reinterpret_cast<const ListMonitorsRequest*>(
        &_ListMonitorsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(ListMonitorsRequest& a, ListMonitorsRequest& b) { a.Swap(&b); }
  inline void Swap(ListMonitorsRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListMonitorsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListMonitorsRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<ListMonitorsRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const ListMonitorsRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const ListMonitorsRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.bgp_monitoring.v202205beta1.ListMonitorsRequest"; }

 protected:
  explicit ListMonitorsRequest(::google::protobuf::Arena* arena);
  ListMonitorsRequest(::google::protobuf::Arena* arena, const ListMonitorsRequest& from);
  ListMonitorsRequest(::google::protobuf::Arena* arena, ListMonitorsRequest&& from) noexcept
      : ListMonitorsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:kentik.bgp_monitoring.v202205beta1.ListMonitorsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListMonitorsRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_kentik_2fbgp_5fmonitoring_2fv202205beta1_2fbgp_5fmonitoring_2eproto;
};
// -------------------------------------------------------------------

class GetRoutesForTargetResponse_AsNamesEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          ::uint32_t, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      ::uint32_t, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  GetRoutesForTargetResponse_AsNamesEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetRoutesForTargetResponse_AsNamesEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit GetRoutesForTargetResponse_AsNamesEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const GetRoutesForTargetResponse_AsNamesEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const GetRoutesForTargetResponse_AsNamesEntry_DoNotUse*>(
        &_GetRoutesForTargetResponse_AsNamesEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_kentik_2fbgp_5fmonitoring_2fv202205beta1_2fbgp_5fmonitoring_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      88, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class GetMonitorRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.bgp_monitoring.v202205beta1.GetMonitorRequest) */ {
 public:
  inline GetMonitorRequest() : GetMonitorRequest(nullptr) {}
  ~GetMonitorRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetMonitorRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetMonitorRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetMonitorRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetMonitorRequest(const GetMonitorRequest& from) : GetMonitorRequest(nullptr, from) {}
  inline GetMonitorRequest(GetMonitorRequest&& from) noexcept
      : GetMonitorRequest(nullptr, std::move(from)) {}
  inline GetMonitorRequest& operator=(const GetMonitorRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetMonitorRequest& operator=(GetMonitorRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetMonitorRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetMonitorRequest* internal_default_instance() {
    return reinterpret_cast<const GetMonitorRequest*>(
        &_GetMonitorRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(GetMonitorRequest& a, GetMonitorRequest& b) { a.Swap(&b); }
  inline void Swap(GetMonitorRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetMonitorRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetMonitorRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetMonitorRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetMonitorRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetMonitorRequest& from) { GetMonitorRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetMonitorRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.bgp_monitoring.v202205beta1.GetMonitorRequest"; }

 protected:
  explicit GetMonitorRequest(::google::protobuf::Arena* arena);
  GetMonitorRequest(::google::protobuf::Arena* arena, const GetMonitorRequest& from);
  GetMonitorRequest(::google::protobuf::Arena* arena, GetMonitorRequest&& from) noexcept
      : GetMonitorRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
  };
  // string id = 1 [json_name = "id"];
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // @@protoc_insertion_point(class_scope:kentik.bgp_monitoring.v202205beta1.GetMonitorRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      63, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetMonitorRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fbgp_5fmonitoring_2fv202205beta1_2fbgp_5fmonitoring_2eproto;
};
// -------------------------------------------------------------------

class DeleteMonitorResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:kentik.bgp_monitoring.v202205beta1.DeleteMonitorResponse) */ {
 public:
  inline DeleteMonitorResponse() : DeleteMonitorResponse(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DeleteMonitorResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DeleteMonitorResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeleteMonitorResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline DeleteMonitorResponse(const DeleteMonitorResponse& from) : DeleteMonitorResponse(nullptr, from) {}
  inline DeleteMonitorResponse(DeleteMonitorResponse&& from) noexcept
      : DeleteMonitorResponse(nullptr, std::move(from)) {}
  inline DeleteMonitorResponse& operator=(const DeleteMonitorResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteMonitorResponse& operator=(DeleteMonitorResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeleteMonitorResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeleteMonitorResponse* internal_default_instance() {
    return reinterpret_cast<const DeleteMonitorResponse*>(
        &_DeleteMonitorResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 15;
  friend void swap(DeleteMonitorResponse& a, DeleteMonitorResponse& b) { a.Swap(&b); }
  inline void Swap(DeleteMonitorResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteMonitorResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeleteMonitorResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<DeleteMonitorResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const DeleteMonitorResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const DeleteMonitorResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.bgp_monitoring.v202205beta1.DeleteMonitorResponse"; }

 protected:
  explicit DeleteMonitorResponse(::google::protobuf::Arena* arena);
  DeleteMonitorResponse(::google::protobuf::Arena* arena, const DeleteMonitorResponse& from);
  DeleteMonitorResponse(::google::protobuf::Arena* arena, DeleteMonitorResponse&& from) noexcept
      : DeleteMonitorResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:kentik.bgp_monitoring.v202205beta1.DeleteMonitorResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DeleteMonitorResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_kentik_2fbgp_5fmonitoring_2fv202205beta1_2fbgp_5fmonitoring_2eproto;
};
// -------------------------------------------------------------------

class DeleteMonitorRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.bgp_monitoring.v202205beta1.DeleteMonitorRequest) */ {
 public:
  inline DeleteMonitorRequest() : DeleteMonitorRequest(nullptr) {}
  ~DeleteMonitorRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DeleteMonitorRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DeleteMonitorRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeleteMonitorRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline DeleteMonitorRequest(const DeleteMonitorRequest& from) : DeleteMonitorRequest(nullptr, from) {}
  inline DeleteMonitorRequest(DeleteMonitorRequest&& from) noexcept
      : DeleteMonitorRequest(nullptr, std::move(from)) {}
  inline DeleteMonitorRequest& operator=(const DeleteMonitorRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteMonitorRequest& operator=(DeleteMonitorRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeleteMonitorRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeleteMonitorRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteMonitorRequest*>(
        &_DeleteMonitorRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 14;
  friend void swap(DeleteMonitorRequest& a, DeleteMonitorRequest& b) { a.Swap(&b); }
  inline void Swap(DeleteMonitorRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteMonitorRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeleteMonitorRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DeleteMonitorRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DeleteMonitorRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DeleteMonitorRequest& from) { DeleteMonitorRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DeleteMonitorRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.bgp_monitoring.v202205beta1.DeleteMonitorRequest"; }

 protected:
  explicit DeleteMonitorRequest(::google::protobuf::Arena* arena);
  DeleteMonitorRequest(::google::protobuf::Arena* arena, const DeleteMonitorRequest& from);
  DeleteMonitorRequest(::google::protobuf::Arena* arena, DeleteMonitorRequest&& from) noexcept
      : DeleteMonitorRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
  };
  // string id = 1 [json_name = "id"];
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // @@protoc_insertion_point(class_scope:kentik.bgp_monitoring.v202205beta1.DeleteMonitorRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      66, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DeleteMonitorRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fbgp_5fmonitoring_2fv202205beta1_2fbgp_5fmonitoring_2eproto;
};
// -------------------------------------------------------------------

class BgpHealthSettings final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.bgp_monitoring.v202205beta1.BgpHealthSettings) */ {
 public:
  inline BgpHealthSettings() : BgpHealthSettings(nullptr) {}
  ~BgpHealthSettings() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(BgpHealthSettings* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(BgpHealthSettings));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BgpHealthSettings(
      ::google::protobuf::internal::ConstantInitialized);

  inline BgpHealthSettings(const BgpHealthSettings& from) : BgpHealthSettings(nullptr, from) {}
  inline BgpHealthSettings(BgpHealthSettings&& from) noexcept
      : BgpHealthSettings(nullptr, std::move(from)) {}
  inline BgpHealthSettings& operator=(const BgpHealthSettings& from) {
    CopyFrom(from);
    return *this;
  }
  inline BgpHealthSettings& operator=(BgpHealthSettings&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BgpHealthSettings& default_instance() {
    return *internal_default_instance();
  }
  static inline const BgpHealthSettings* internal_default_instance() {
    return reinterpret_cast<const BgpHealthSettings*>(
        &_BgpHealthSettings_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(BgpHealthSettings& a, BgpHealthSettings& b) { a.Swap(&b); }
  inline void Swap(BgpHealthSettings* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BgpHealthSettings* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BgpHealthSettings* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<BgpHealthSettings>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BgpHealthSettings& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BgpHealthSettings& from) { BgpHealthSettings::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(BgpHealthSettings* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.bgp_monitoring.v202205beta1.BgpHealthSettings"; }

 protected:
  explicit BgpHealthSettings(::google::protobuf::Arena* arena);
  BgpHealthSettings(::google::protobuf::Arena* arena, const BgpHealthSettings& from);
  BgpHealthSettings(::google::protobuf::Arena* arena, BgpHealthSettings&& from) noexcept
      : BgpHealthSettings(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kReachabilityWarningFieldNumber = 1,
    kReachabilityCriticalFieldNumber = 2,
  };
  // float reachability_warning = 1 [json_name = "reachabilityWarning"];
  void clear_reachability_warning() ;
  float reachability_warning() const;
  void set_reachability_warning(float value);

  private:
  float _internal_reachability_warning() const;
  void _internal_set_reachability_warning(float value);

  public:
  // float reachability_critical = 2 [json_name = "reachabilityCritical"];
  void clear_reachability_critical() ;
  float reachability_critical() const;
  void set_reachability_critical(float value);

  private:
  float _internal_reachability_critical() const;
  void _internal_set_reachability_critical(float value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.bgp_monitoring.v202205beta1.BgpHealthSettings)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const BgpHealthSettings& from_msg);
    float reachability_warning_;
    float reachability_critical_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fbgp_5fmonitoring_2fv202205beta1_2fbgp_5fmonitoring_2eproto;
};
// -------------------------------------------------------------------

class RouteInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.bgp_monitoring.v202205beta1.RouteInfo) */ {
 public:
  inline RouteInfo() : RouteInfo(nullptr) {}
  ~RouteInfo() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(RouteInfo* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(RouteInfo));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RouteInfo(
      ::google::protobuf::internal::ConstantInitialized);

  inline RouteInfo(const RouteInfo& from) : RouteInfo(nullptr, from) {}
  inline RouteInfo(RouteInfo&& from) noexcept
      : RouteInfo(nullptr, std::move(from)) {}
  inline RouteInfo& operator=(const RouteInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline RouteInfo& operator=(RouteInfo&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RouteInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const RouteInfo* internal_default_instance() {
    return reinterpret_cast<const RouteInfo*>(
        &_RouteInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(RouteInfo& a, RouteInfo& b) { a.Swap(&b); }
  inline void Swap(RouteInfo* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RouteInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RouteInfo* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<RouteInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RouteInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RouteInfo& from) { RouteInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(RouteInfo* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.bgp_monitoring.v202205beta1.RouteInfo"; }

 protected:
  explicit RouteInfo(::google::protobuf::Arena* arena);
  RouteInfo(::google::protobuf::Arena* arena, const RouteInfo& from);
  RouteInfo(::google::protobuf::Arena* arena, RouteInfo&& from) noexcept
      : RouteInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAsPathFieldNumber = 3,
    kNexthopFieldNumber = 6,
    kNlriFieldNumber = 1,
    kVantagePointFieldNumber = 4,
    kOriginAsnFieldNumber = 2,
    kRpkiStatusFieldNumber = 5,
  };
  // repeated string as_path = 3 [json_name = "asPath", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int as_path_size() const;
  private:
  int _internal_as_path_size() const;

  public:
  void clear_as_path() ;
  const std::string& as_path(int index) const;
  std::string* mutable_as_path(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_as_path(int index, Arg_&& value, Args_... args);
  std::string* add_as_path();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_as_path(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& as_path() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_as_path();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_as_path() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_as_path();

  public:
  // string nexthop = 6 [json_name = "nexthop"];
  void clear_nexthop() ;
  const std::string& nexthop() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_nexthop(Arg_&& arg, Args_... args);
  std::string* mutable_nexthop();
  PROTOBUF_NODISCARD std::string* release_nexthop();
  void set_allocated_nexthop(std::string* value);

  private:
  const std::string& _internal_nexthop() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_nexthop(
      const std::string& value);
  std::string* _internal_mutable_nexthop();

  public:
  // .kentik.bgp_monitoring.v202205beta1.Nlri nlri = 1 [json_name = "nlri"];
  bool has_nlri() const;
  void clear_nlri() ;
  const ::kentik::bgp_monitoring::v202205beta1::Nlri& nlri() const;
  PROTOBUF_NODISCARD ::kentik::bgp_monitoring::v202205beta1::Nlri* release_nlri();
  ::kentik::bgp_monitoring::v202205beta1::Nlri* mutable_nlri();
  void set_allocated_nlri(::kentik::bgp_monitoring::v202205beta1::Nlri* value);
  void unsafe_arena_set_allocated_nlri(::kentik::bgp_monitoring::v202205beta1::Nlri* value);
  ::kentik::bgp_monitoring::v202205beta1::Nlri* unsafe_arena_release_nlri();

  private:
  const ::kentik::bgp_monitoring::v202205beta1::Nlri& _internal_nlri() const;
  ::kentik::bgp_monitoring::v202205beta1::Nlri* _internal_mutable_nlri();

  public:
  // .kentik.net.v202303.VantagePoint vantage_point = 4 [json_name = "vantagePoint", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_vantage_point() const;
  void clear_vantage_point() ;
  const ::kentik::net::v202303::VantagePoint& vantage_point() const;
  PROTOBUF_NODISCARD ::kentik::net::v202303::VantagePoint* release_vantage_point();
  ::kentik::net::v202303::VantagePoint* mutable_vantage_point();
  void set_allocated_vantage_point(::kentik::net::v202303::VantagePoint* value);
  void unsafe_arena_set_allocated_vantage_point(::kentik::net::v202303::VantagePoint* value);
  ::kentik::net::v202303::VantagePoint* unsafe_arena_release_vantage_point();

  private:
  const ::kentik::net::v202303::VantagePoint& _internal_vantage_point() const;
  ::kentik::net::v202303::VantagePoint* _internal_mutable_vantage_point();

  public:
  // uint32 origin_asn = 2 [json_name = "originAsn", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_origin_asn() ;
  ::uint32_t origin_asn() const;
  void set_origin_asn(::uint32_t value);

  private:
  ::uint32_t _internal_origin_asn() const;
  void _internal_set_origin_asn(::uint32_t value);

  public:
  // .kentik.net.v202303.RpkiStatus rpki_status = 5 [json_name = "rpkiStatus"];
  void clear_rpki_status() ;
  ::kentik::net::v202303::RpkiStatus rpki_status() const;
  void set_rpki_status(::kentik::net::v202303::RpkiStatus value);

  private:
  ::kentik::net::v202303::RpkiStatus _internal_rpki_status() const;
  void _internal_set_rpki_status(::kentik::net::v202303::RpkiStatus value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.bgp_monitoring.v202205beta1.RouteInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 2,
      67, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const RouteInfo& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<std::string> as_path_;
    ::google::protobuf::internal::ArenaStringPtr nexthop_;
    ::kentik::bgp_monitoring::v202205beta1::Nlri* nlri_;
    ::kentik::net::v202303::VantagePoint* vantage_point_;
    ::uint32_t origin_asn_;
    int rpki_status_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fbgp_5fmonitoring_2fv202205beta1_2fbgp_5fmonitoring_2eproto;
};
// -------------------------------------------------------------------

class GetRoutesForTargetRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.bgp_monitoring.v202205beta1.GetRoutesForTargetRequest) */ {
 public:
  inline GetRoutesForTargetRequest() : GetRoutesForTargetRequest(nullptr) {}
  ~GetRoutesForTargetRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetRoutesForTargetRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetRoutesForTargetRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetRoutesForTargetRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetRoutesForTargetRequest(const GetRoutesForTargetRequest& from) : GetRoutesForTargetRequest(nullptr, from) {}
  inline GetRoutesForTargetRequest(GetRoutesForTargetRequest&& from) noexcept
      : GetRoutesForTargetRequest(nullptr, std::move(from)) {}
  inline GetRoutesForTargetRequest& operator=(const GetRoutesForTargetRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetRoutesForTargetRequest& operator=(GetRoutesForTargetRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetRoutesForTargetRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetRoutesForTargetRequest* internal_default_instance() {
    return reinterpret_cast<const GetRoutesForTargetRequest*>(
        &_GetRoutesForTargetRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 20;
  friend void swap(GetRoutesForTargetRequest& a, GetRoutesForTargetRequest& b) { a.Swap(&b); }
  inline void Swap(GetRoutesForTargetRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetRoutesForTargetRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetRoutesForTargetRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetRoutesForTargetRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetRoutesForTargetRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetRoutesForTargetRequest& from) { GetRoutesForTargetRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetRoutesForTargetRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.bgp_monitoring.v202205beta1.GetRoutesForTargetRequest"; }

 protected:
  explicit GetRoutesForTargetRequest(::google::protobuf::Arena* arena);
  GetRoutesForTargetRequest(::google::protobuf::Arena* arena, const GetRoutesForTargetRequest& from);
  GetRoutesForTargetRequest(::google::protobuf::Arena* arena, GetRoutesForTargetRequest&& from) noexcept
      : GetRoutesForTargetRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTimeFieldNumber = 1,
    kTargetFieldNumber = 2,
    kIncludeCoveredFieldNumber = 4,
    kCheckRpkiFieldNumber = 5,
  };
  // .google.protobuf.Timestamp time = 1 [json_name = "time"];
  bool has_time() const;
  void clear_time() ;
  const ::google::protobuf::Timestamp& time() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_time();
  ::google::protobuf::Timestamp* mutable_time();
  void set_allocated_time(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_time(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_time();

  private:
  const ::google::protobuf::Timestamp& _internal_time() const;
  ::google::protobuf::Timestamp* _internal_mutable_time();

  public:
  // .kentik.bgp_monitoring.v202205beta1.Nlri target = 2 [json_name = "target"];
  bool has_target() const;
  void clear_target() ;
  const ::kentik::bgp_monitoring::v202205beta1::Nlri& target() const;
  PROTOBUF_NODISCARD ::kentik::bgp_monitoring::v202205beta1::Nlri* release_target();
  ::kentik::bgp_monitoring::v202205beta1::Nlri* mutable_target();
  void set_allocated_target(::kentik::bgp_monitoring::v202205beta1::Nlri* value);
  void unsafe_arena_set_allocated_target(::kentik::bgp_monitoring::v202205beta1::Nlri* value);
  ::kentik::bgp_monitoring::v202205beta1::Nlri* unsafe_arena_release_target();

  private:
  const ::kentik::bgp_monitoring::v202205beta1::Nlri& _internal_target() const;
  ::kentik::bgp_monitoring::v202205beta1::Nlri* _internal_mutable_target();

  public:
  // bool include_covered = 4 [json_name = "includeCovered"];
  void clear_include_covered() ;
  bool include_covered() const;
  void set_include_covered(bool value);

  private:
  bool _internal_include_covered() const;
  void _internal_set_include_covered(bool value);

  public:
  // bool check_rpki = 5 [json_name = "checkRpki"];
  void clear_check_rpki() ;
  bool check_rpki() const;
  void set_check_rpki(bool value);

  private:
  bool _internal_check_rpki() const;
  void _internal_set_check_rpki(bool value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.bgp_monitoring.v202205beta1.GetRoutesForTargetRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 4, 2,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetRoutesForTargetRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::Timestamp* time_;
    ::kentik::bgp_monitoring::v202205beta1::Nlri* target_;
    bool include_covered_;
    bool check_rpki_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fbgp_5fmonitoring_2fv202205beta1_2fbgp_5fmonitoring_2eproto;
};
// -------------------------------------------------------------------

class GetMetricsForTargetRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.bgp_monitoring.v202205beta1.GetMetricsForTargetRequest) */ {
 public:
  inline GetMetricsForTargetRequest() : GetMetricsForTargetRequest(nullptr) {}
  ~GetMetricsForTargetRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetMetricsForTargetRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetMetricsForTargetRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetMetricsForTargetRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetMetricsForTargetRequest(const GetMetricsForTargetRequest& from) : GetMetricsForTargetRequest(nullptr, from) {}
  inline GetMetricsForTargetRequest(GetMetricsForTargetRequest&& from) noexcept
      : GetMetricsForTargetRequest(nullptr, std::move(from)) {}
  inline GetMetricsForTargetRequest& operator=(const GetMetricsForTargetRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetMetricsForTargetRequest& operator=(GetMetricsForTargetRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetMetricsForTargetRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetMetricsForTargetRequest* internal_default_instance() {
    return reinterpret_cast<const GetMetricsForTargetRequest*>(
        &_GetMetricsForTargetRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 18;
  friend void swap(GetMetricsForTargetRequest& a, GetMetricsForTargetRequest& b) { a.Swap(&b); }
  inline void Swap(GetMetricsForTargetRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetMetricsForTargetRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetMetricsForTargetRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetMetricsForTargetRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetMetricsForTargetRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetMetricsForTargetRequest& from) { GetMetricsForTargetRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetMetricsForTargetRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.bgp_monitoring.v202205beta1.GetMetricsForTargetRequest"; }

 protected:
  explicit GetMetricsForTargetRequest(::google::protobuf::Arena* arena);
  GetMetricsForTargetRequest(::google::protobuf::Arena* arena, const GetMetricsForTargetRequest& from);
  GetMetricsForTargetRequest(::google::protobuf::Arena* arena, GetMetricsForTargetRequest&& from) noexcept
      : GetMetricsForTargetRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMetricsFieldNumber = 5,
    kStartTimeFieldNumber = 1,
    kEndTimeFieldNumber = 2,
    kTargetFieldNumber = 3,
    kIncludeCoveredFieldNumber = 4,
  };
  // repeated .kentik.bgp_monitoring.v202205beta1.BgpMetricType metrics = 5 [json_name = "metrics"];
  int metrics_size() const;
  private:
  int _internal_metrics_size() const;

  public:
  void clear_metrics() ;
  public:
  ::kentik::bgp_monitoring::v202205beta1::BgpMetricType metrics(int index) const;
  void set_metrics(int index, ::kentik::bgp_monitoring::v202205beta1::BgpMetricType value);
  void add_metrics(::kentik::bgp_monitoring::v202205beta1::BgpMetricType value);
  const ::google::protobuf::RepeatedField<int>& metrics() const;
  ::google::protobuf::RepeatedField<int>* mutable_metrics();

  private:
  const ::google::protobuf::RepeatedField<int>& _internal_metrics() const;
  ::google::protobuf::RepeatedField<int>* _internal_mutable_metrics();

  public:
  // .google.protobuf.Timestamp start_time = 1 [json_name = "startTime"];
  bool has_start_time() const;
  void clear_start_time() ;
  const ::google::protobuf::Timestamp& start_time() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_start_time();
  ::google::protobuf::Timestamp* mutable_start_time();
  void set_allocated_start_time(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_start_time(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_start_time();

  private:
  const ::google::protobuf::Timestamp& _internal_start_time() const;
  ::google::protobuf::Timestamp* _internal_mutable_start_time();

  public:
  // .google.protobuf.Timestamp end_time = 2 [json_name = "endTime"];
  bool has_end_time() const;
  void clear_end_time() ;
  const ::google::protobuf::Timestamp& end_time() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_end_time();
  ::google::protobuf::Timestamp* mutable_end_time();
  void set_allocated_end_time(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_end_time(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_end_time();

  private:
  const ::google::protobuf::Timestamp& _internal_end_time() const;
  ::google::protobuf::Timestamp* _internal_mutable_end_time();

  public:
  // .kentik.bgp_monitoring.v202205beta1.Nlri target = 3 [json_name = "target"];
  bool has_target() const;
  void clear_target() ;
  const ::kentik::bgp_monitoring::v202205beta1::Nlri& target() const;
  PROTOBUF_NODISCARD ::kentik::bgp_monitoring::v202205beta1::Nlri* release_target();
  ::kentik::bgp_monitoring::v202205beta1::Nlri* mutable_target();
  void set_allocated_target(::kentik::bgp_monitoring::v202205beta1::Nlri* value);
  void unsafe_arena_set_allocated_target(::kentik::bgp_monitoring::v202205beta1::Nlri* value);
  ::kentik::bgp_monitoring::v202205beta1::Nlri* unsafe_arena_release_target();

  private:
  const ::kentik::bgp_monitoring::v202205beta1::Nlri& _internal_target() const;
  ::kentik::bgp_monitoring::v202205beta1::Nlri* _internal_mutable_target();

  public:
  // bool include_covered = 4 [json_name = "includeCovered"];
  void clear_include_covered() ;
  bool include_covered() const;
  void set_include_covered(bool value);

  private:
  bool _internal_include_covered() const;
  void _internal_set_include_covered(bool value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.bgp_monitoring.v202205beta1.GetMetricsForTargetRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 3,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetMetricsForTargetRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<int> metrics_;
    ::google::protobuf::internal::CachedSize _metrics_cached_byte_size_;
    ::google::protobuf::Timestamp* start_time_;
    ::google::protobuf::Timestamp* end_time_;
    ::kentik::bgp_monitoring::v202205beta1::Nlri* target_;
    bool include_covered_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fbgp_5fmonitoring_2fv202205beta1_2fbgp_5fmonitoring_2eproto;
};
// -------------------------------------------------------------------

class BgpMonitorSettings final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.bgp_monitoring.v202205beta1.BgpMonitorSettings) */ {
 public:
  inline BgpMonitorSettings() : BgpMonitorSettings(nullptr) {}
  ~BgpMonitorSettings() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(BgpMonitorSettings* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(BgpMonitorSettings));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BgpMonitorSettings(
      ::google::protobuf::internal::ConstantInitialized);

  inline BgpMonitorSettings(const BgpMonitorSettings& from) : BgpMonitorSettings(nullptr, from) {}
  inline BgpMonitorSettings(BgpMonitorSettings&& from) noexcept
      : BgpMonitorSettings(nullptr, std::move(from)) {}
  inline BgpMonitorSettings& operator=(const BgpMonitorSettings& from) {
    CopyFrom(from);
    return *this;
  }
  inline BgpMonitorSettings& operator=(BgpMonitorSettings&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BgpMonitorSettings& default_instance() {
    return *internal_default_instance();
  }
  static inline const BgpMonitorSettings* internal_default_instance() {
    return reinterpret_cast<const BgpMonitorSettings*>(
        &_BgpMonitorSettings_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(BgpMonitorSettings& a, BgpMonitorSettings& b) { a.Swap(&b); }
  inline void Swap(BgpMonitorSettings* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BgpMonitorSettings* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BgpMonitorSettings* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<BgpMonitorSettings>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BgpMonitorSettings& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BgpMonitorSettings& from) { BgpMonitorSettings::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(BgpMonitorSettings* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.bgp_monitoring.v202205beta1.BgpMonitorSettings"; }

 protected:
  explicit BgpMonitorSettings(::google::protobuf::Arena* arena);
  BgpMonitorSettings(::google::protobuf::Arena* arena, const BgpMonitorSettings& from);
  BgpMonitorSettings(::google::protobuf::Arena* arena, BgpMonitorSettings&& from) noexcept
      : BgpMonitorSettings(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAllowedAsnsFieldNumber = 1,
    kTargetsFieldNumber = 2,
    kNotificationChannelsFieldNumber = 6,
    kHealthSettingsFieldNumber = 5,
    kCheckRpkiFieldNumber = 3,
    kIncludeCoveredPrefixesFieldNumber = 4,
  };
  // repeated uint32 allowed_asns = 1 [json_name = "allowedAsns"];
  int allowed_asns_size() const;
  private:
  int _internal_allowed_asns_size() const;

  public:
  void clear_allowed_asns() ;
  ::uint32_t allowed_asns(int index) const;
  void set_allowed_asns(int index, ::uint32_t value);
  void add_allowed_asns(::uint32_t value);
  const ::google::protobuf::RepeatedField<::uint32_t>& allowed_asns() const;
  ::google::protobuf::RepeatedField<::uint32_t>* mutable_allowed_asns();

  private:
  const ::google::protobuf::RepeatedField<::uint32_t>& _internal_allowed_asns() const;
  ::google::protobuf::RepeatedField<::uint32_t>* _internal_mutable_allowed_asns();

  public:
  // repeated .kentik.bgp_monitoring.v202205beta1.Nlri targets = 2 [json_name = "targets"];
  int targets_size() const;
  private:
  int _internal_targets_size() const;

  public:
  void clear_targets() ;
  ::kentik::bgp_monitoring::v202205beta1::Nlri* mutable_targets(int index);
  ::google::protobuf::RepeatedPtrField<::kentik::bgp_monitoring::v202205beta1::Nlri>* mutable_targets();

  private:
  const ::google::protobuf::RepeatedPtrField<::kentik::bgp_monitoring::v202205beta1::Nlri>& _internal_targets() const;
  ::google::protobuf::RepeatedPtrField<::kentik::bgp_monitoring::v202205beta1::Nlri>* _internal_mutable_targets();
  public:
  const ::kentik::bgp_monitoring::v202205beta1::Nlri& targets(int index) const;
  ::kentik::bgp_monitoring::v202205beta1::Nlri* add_targets();
  const ::google::protobuf::RepeatedPtrField<::kentik::bgp_monitoring::v202205beta1::Nlri>& targets() const;
  // repeated string notification_channels = 6 [json_name = "notificationChannels"];
  int notification_channels_size() const;
  private:
  int _internal_notification_channels_size() const;

  public:
  void clear_notification_channels() ;
  const std::string& notification_channels(int index) const;
  std::string* mutable_notification_channels(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_notification_channels(int index, Arg_&& value, Args_... args);
  std::string* add_notification_channels();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_notification_channels(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& notification_channels() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_notification_channels();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_notification_channels() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_notification_channels();

  public:
  // .kentik.bgp_monitoring.v202205beta1.BgpHealthSettings health_settings = 5 [json_name = "healthSettings"];
  bool has_health_settings() const;
  void clear_health_settings() ;
  const ::kentik::bgp_monitoring::v202205beta1::BgpHealthSettings& health_settings() const;
  PROTOBUF_NODISCARD ::kentik::bgp_monitoring::v202205beta1::BgpHealthSettings* release_health_settings();
  ::kentik::bgp_monitoring::v202205beta1::BgpHealthSettings* mutable_health_settings();
  void set_allocated_health_settings(::kentik::bgp_monitoring::v202205beta1::BgpHealthSettings* value);
  void unsafe_arena_set_allocated_health_settings(::kentik::bgp_monitoring::v202205beta1::BgpHealthSettings* value);
  ::kentik::bgp_monitoring::v202205beta1::BgpHealthSettings* unsafe_arena_release_health_settings();

  private:
  const ::kentik::bgp_monitoring::v202205beta1::BgpHealthSettings& _internal_health_settings() const;
  ::kentik::bgp_monitoring::v202205beta1::BgpHealthSettings* _internal_mutable_health_settings();

  public:
  // bool check_rpki = 3 [json_name = "checkRpki"];
  void clear_check_rpki() ;
  bool check_rpki() const;
  void set_check_rpki(bool value);

  private:
  bool _internal_check_rpki() const;
  void _internal_set_check_rpki(bool value);

  public:
  // bool include_covered_prefixes = 4 [json_name = "includeCoveredPrefixes"];
  void clear_include_covered_prefixes() ;
  bool include_covered_prefixes() const;
  void set_include_covered_prefixes(bool value);

  private:
  bool _internal_include_covered_prefixes() const;
  void _internal_set_include_covered_prefixes(bool value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.bgp_monitoring.v202205beta1.BgpMonitorSettings)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 2,
      83, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const BgpMonitorSettings& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<::uint32_t> allowed_asns_;
    ::google::protobuf::internal::CachedSize _allowed_asns_cached_byte_size_;
    ::google::protobuf::RepeatedPtrField< ::kentik::bgp_monitoring::v202205beta1::Nlri > targets_;
    ::google::protobuf::RepeatedPtrField<std::string> notification_channels_;
    ::kentik::bgp_monitoring::v202205beta1::BgpHealthSettings* health_settings_;
    bool check_rpki_;
    bool include_covered_prefixes_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fbgp_5fmonitoring_2fv202205beta1_2fbgp_5fmonitoring_2eproto;
};
// -------------------------------------------------------------------

class BgpMetric final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.bgp_monitoring.v202205beta1.BgpMetric) */ {
 public:
  inline BgpMetric() : BgpMetric(nullptr) {}
  ~BgpMetric() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(BgpMetric* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(BgpMetric));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BgpMetric(
      ::google::protobuf::internal::ConstantInitialized);

  inline BgpMetric(const BgpMetric& from) : BgpMetric(nullptr, from) {}
  inline BgpMetric(BgpMetric&& from) noexcept
      : BgpMetric(nullptr, std::move(from)) {}
  inline BgpMetric& operator=(const BgpMetric& from) {
    CopyFrom(from);
    return *this;
  }
  inline BgpMetric& operator=(BgpMetric&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BgpMetric& default_instance() {
    return *internal_default_instance();
  }
  enum TypeCase {
    kReachability = 3,
    kPathChanges = 5,
    TYPE_NOT_SET = 0,
  };
  static inline const BgpMetric* internal_default_instance() {
    return reinterpret_cast<const BgpMetric*>(
        &_BgpMetric_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(BgpMetric& a, BgpMetric& b) { a.Swap(&b); }
  inline void Swap(BgpMetric* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BgpMetric* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BgpMetric* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<BgpMetric>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BgpMetric& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BgpMetric& from) { BgpMetric::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(BgpMetric* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.bgp_monitoring.v202205beta1.BgpMetric"; }

 protected:
  explicit BgpMetric(::google::protobuf::Arena* arena);
  BgpMetric(::google::protobuf::Arena* arena, const BgpMetric& from);
  BgpMetric(::google::protobuf::Arena* arena, BgpMetric&& from) noexcept
      : BgpMetric(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTimestampFieldNumber = 1,
    kNlriFieldNumber = 2,
    kReachabilityFieldNumber = 3,
    kPathChangesFieldNumber = 5,
  };
  // .google.protobuf.Timestamp timestamp = 1 [json_name = "timestamp"];
  bool has_timestamp() const;
  void clear_timestamp() ;
  const ::google::protobuf::Timestamp& timestamp() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_timestamp();
  ::google::protobuf::Timestamp* mutable_timestamp();
  void set_allocated_timestamp(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_timestamp(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_timestamp();

  private:
  const ::google::protobuf::Timestamp& _internal_timestamp() const;
  ::google::protobuf::Timestamp* _internal_mutable_timestamp();

  public:
  // .kentik.bgp_monitoring.v202205beta1.Nlri nlri = 2 [json_name = "nlri"];
  bool has_nlri() const;
  void clear_nlri() ;
  const ::kentik::bgp_monitoring::v202205beta1::Nlri& nlri() const;
  PROTOBUF_NODISCARD ::kentik::bgp_monitoring::v202205beta1::Nlri* release_nlri();
  ::kentik::bgp_monitoring::v202205beta1::Nlri* mutable_nlri();
  void set_allocated_nlri(::kentik::bgp_monitoring::v202205beta1::Nlri* value);
  void unsafe_arena_set_allocated_nlri(::kentik::bgp_monitoring::v202205beta1::Nlri* value);
  ::kentik::bgp_monitoring::v202205beta1::Nlri* unsafe_arena_release_nlri();

  private:
  const ::kentik::bgp_monitoring::v202205beta1::Nlri& _internal_nlri() const;
  ::kentik::bgp_monitoring::v202205beta1::Nlri* _internal_mutable_nlri();

  public:
  // float reachability = 3 [json_name = "reachability"];
  bool has_reachability() const;
  void clear_reachability() ;
  float reachability() const;
  void set_reachability(float value);

  private:
  float _internal_reachability() const;
  void _internal_set_reachability(float value);

  public:
  // uint32 path_changes = 5 [json_name = "pathChanges"];
  bool has_path_changes() const;
  void clear_path_changes() ;
  ::uint32_t path_changes() const;
  void set_path_changes(::uint32_t value);

  private:
  ::uint32_t _internal_path_changes() const;
  void _internal_set_path_changes(::uint32_t value);

  public:
  void clear_type();
  TypeCase type_case() const;
  // @@protoc_insertion_point(class_scope:kentik.bgp_monitoring.v202205beta1.BgpMetric)
 private:
  class _Internal;
  void set_has_reachability();
  void set_has_path_changes();
  inline bool has_type() const;
  inline void clear_has_type();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 4, 2,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const BgpMetric& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::Timestamp* timestamp_;
    ::kentik::bgp_monitoring::v202205beta1::Nlri* nlri_;
    union TypeUnion {
      constexpr TypeUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      float reachability_;
      ::uint32_t path_changes_;
    } type_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fbgp_5fmonitoring_2fv202205beta1_2fbgp_5fmonitoring_2eproto;
};
// -------------------------------------------------------------------

class GetRoutesForTargetResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.bgp_monitoring.v202205beta1.GetRoutesForTargetResponse) */ {
 public:
  inline GetRoutesForTargetResponse() : GetRoutesForTargetResponse(nullptr) {}
  ~GetRoutesForTargetResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetRoutesForTargetResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetRoutesForTargetResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetRoutesForTargetResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetRoutesForTargetResponse(const GetRoutesForTargetResponse& from) : GetRoutesForTargetResponse(nullptr, from) {}
  inline GetRoutesForTargetResponse(GetRoutesForTargetResponse&& from) noexcept
      : GetRoutesForTargetResponse(nullptr, std::move(from)) {}
  inline GetRoutesForTargetResponse& operator=(const GetRoutesForTargetResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetRoutesForTargetResponse& operator=(GetRoutesForTargetResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetRoutesForTargetResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetRoutesForTargetResponse* internal_default_instance() {
    return reinterpret_cast<const GetRoutesForTargetResponse*>(
        &_GetRoutesForTargetResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 22;
  friend void swap(GetRoutesForTargetResponse& a, GetRoutesForTargetResponse& b) { a.Swap(&b); }
  inline void Swap(GetRoutesForTargetResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetRoutesForTargetResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetRoutesForTargetResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetRoutesForTargetResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetRoutesForTargetResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetRoutesForTargetResponse& from) { GetRoutesForTargetResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetRoutesForTargetResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.bgp_monitoring.v202205beta1.GetRoutesForTargetResponse"; }

 protected:
  explicit GetRoutesForTargetResponse(::google::protobuf::Arena* arena);
  GetRoutesForTargetResponse(::google::protobuf::Arena* arena, const GetRoutesForTargetResponse& from);
  GetRoutesForTargetResponse(::google::protobuf::Arena* arena, GetRoutesForTargetResponse&& from) noexcept
      : GetRoutesForTargetResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRoutesFieldNumber = 1,
    kAsNamesFieldNumber = 5,
  };
  // repeated .kentik.bgp_monitoring.v202205beta1.RouteInfo routes = 1 [json_name = "routes"];
  int routes_size() const;
  private:
  int _internal_routes_size() const;

  public:
  void clear_routes() ;
  ::kentik::bgp_monitoring::v202205beta1::RouteInfo* mutable_routes(int index);
  ::google::protobuf::RepeatedPtrField<::kentik::bgp_monitoring::v202205beta1::RouteInfo>* mutable_routes();

  private:
  const ::google::protobuf::RepeatedPtrField<::kentik::bgp_monitoring::v202205beta1::RouteInfo>& _internal_routes() const;
  ::google::protobuf::RepeatedPtrField<::kentik::bgp_monitoring::v202205beta1::RouteInfo>* _internal_mutable_routes();
  public:
  const ::kentik::bgp_monitoring::v202205beta1::RouteInfo& routes(int index) const;
  ::kentik::bgp_monitoring::v202205beta1::RouteInfo* add_routes();
  const ::google::protobuf::RepeatedPtrField<::kentik::bgp_monitoring::v202205beta1::RouteInfo>& routes() const;
  // map<uint32, string> as_names = 5 [json_name = "asNames"];
  int as_names_size() const;
  private:
  int _internal_as_names_size() const;

  public:
  void clear_as_names() ;
  const ::google::protobuf::Map<::uint32_t, std::string>& as_names() const;
  ::google::protobuf::Map<::uint32_t, std::string>* mutable_as_names();

  private:
  const ::google::protobuf::Map<::uint32_t, std::string>& _internal_as_names() const;
  ::google::protobuf::Map<::uint32_t, std::string>* _internal_mutable_as_names();

  public:
  // @@protoc_insertion_point(class_scope:kentik.bgp_monitoring.v202205beta1.GetRoutesForTargetResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 2, 2,
      78, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetRoutesForTargetResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::kentik::bgp_monitoring::v202205beta1::RouteInfo > routes_;
    ::google::protobuf::internal::MapField<GetRoutesForTargetResponse_AsNamesEntry_DoNotUse, ::uint32_t, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        as_names_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fbgp_5fmonitoring_2fv202205beta1_2fbgp_5fmonitoring_2eproto;
};
// -------------------------------------------------------------------

class GetMetricsForTargetResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.bgp_monitoring.v202205beta1.GetMetricsForTargetResponse) */ {
 public:
  inline GetMetricsForTargetResponse() : GetMetricsForTargetResponse(nullptr) {}
  ~GetMetricsForTargetResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetMetricsForTargetResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetMetricsForTargetResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetMetricsForTargetResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetMetricsForTargetResponse(const GetMetricsForTargetResponse& from) : GetMetricsForTargetResponse(nullptr, from) {}
  inline GetMetricsForTargetResponse(GetMetricsForTargetResponse&& from) noexcept
      : GetMetricsForTargetResponse(nullptr, std::move(from)) {}
  inline GetMetricsForTargetResponse& operator=(const GetMetricsForTargetResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetMetricsForTargetResponse& operator=(GetMetricsForTargetResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetMetricsForTargetResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetMetricsForTargetResponse* internal_default_instance() {
    return reinterpret_cast<const GetMetricsForTargetResponse*>(
        &_GetMetricsForTargetResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 19;
  friend void swap(GetMetricsForTargetResponse& a, GetMetricsForTargetResponse& b) { a.Swap(&b); }
  inline void Swap(GetMetricsForTargetResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetMetricsForTargetResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetMetricsForTargetResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetMetricsForTargetResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetMetricsForTargetResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetMetricsForTargetResponse& from) { GetMetricsForTargetResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetMetricsForTargetResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.bgp_monitoring.v202205beta1.GetMetricsForTargetResponse"; }

 protected:
  explicit GetMetricsForTargetResponse(::google::protobuf::Arena* arena);
  GetMetricsForTargetResponse(::google::protobuf::Arena* arena, const GetMetricsForTargetResponse& from);
  GetMetricsForTargetResponse(::google::protobuf::Arena* arena, GetMetricsForTargetResponse&& from) noexcept
      : GetMetricsForTargetResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMetricsFieldNumber = 1,
  };
  // repeated .kentik.bgp_monitoring.v202205beta1.BgpMetric metrics = 1 [json_name = "metrics"];
  int metrics_size() const;
  private:
  int _internal_metrics_size() const;

  public:
  void clear_metrics() ;
  ::kentik::bgp_monitoring::v202205beta1::BgpMetric* mutable_metrics(int index);
  ::google::protobuf::RepeatedPtrField<::kentik::bgp_monitoring::v202205beta1::BgpMetric>* mutable_metrics();

  private:
  const ::google::protobuf::RepeatedPtrField<::kentik::bgp_monitoring::v202205beta1::BgpMetric>& _internal_metrics() const;
  ::google::protobuf::RepeatedPtrField<::kentik::bgp_monitoring::v202205beta1::BgpMetric>* _internal_mutable_metrics();
  public:
  const ::kentik::bgp_monitoring::v202205beta1::BgpMetric& metrics(int index) const;
  ::kentik::bgp_monitoring::v202205beta1::BgpMetric* add_metrics();
  const ::google::protobuf::RepeatedPtrField<::kentik::bgp_monitoring::v202205beta1::BgpMetric>& metrics() const;
  // @@protoc_insertion_point(class_scope:kentik.bgp_monitoring.v202205beta1.GetMetricsForTargetResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetMetricsForTargetResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::kentik::bgp_monitoring::v202205beta1::BgpMetric > metrics_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fbgp_5fmonitoring_2fv202205beta1_2fbgp_5fmonitoring_2eproto;
};
// -------------------------------------------------------------------

class BgpMonitor final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.bgp_monitoring.v202205beta1.BgpMonitor) */ {
 public:
  inline BgpMonitor() : BgpMonitor(nullptr) {}
  ~BgpMonitor() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(BgpMonitor* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(BgpMonitor));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BgpMonitor(
      ::google::protobuf::internal::ConstantInitialized);

  inline BgpMonitor(const BgpMonitor& from) : BgpMonitor(nullptr, from) {}
  inline BgpMonitor(BgpMonitor&& from) noexcept
      : BgpMonitor(nullptr, std::move(from)) {}
  inline BgpMonitor& operator=(const BgpMonitor& from) {
    CopyFrom(from);
    return *this;
  }
  inline BgpMonitor& operator=(BgpMonitor&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BgpMonitor& default_instance() {
    return *internal_default_instance();
  }
  static inline const BgpMonitor* internal_default_instance() {
    return reinterpret_cast<const BgpMonitor*>(
        &_BgpMonitor_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(BgpMonitor& a, BgpMonitor& b) { a.Swap(&b); }
  inline void Swap(BgpMonitor* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BgpMonitor* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BgpMonitor* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<BgpMonitor>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BgpMonitor& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BgpMonitor& from) { BgpMonitor::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(BgpMonitor* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.bgp_monitoring.v202205beta1.BgpMonitor"; }

 protected:
  explicit BgpMonitor(::google::protobuf::Arena* arena);
  BgpMonitor(::google::protobuf::Arena* arena, const BgpMonitor& from);
  BgpMonitor(::google::protobuf::Arena* arena, BgpMonitor&& from) noexcept
      : BgpMonitor(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLabelsFieldNumber = 9,
    kIdFieldNumber = 1,
    kNameFieldNumber = 2,
    kSettingsFieldNumber = 4,
    kCdateFieldNumber = 5,
    kEdateFieldNumber = 6,
    kCreatedByFieldNumber = 7,
    kLastUpdatedByFieldNumber = 8,
    kStatusFieldNumber = 3,
  };
  // repeated string labels = 9 [json_name = "labels"];
  int labels_size() const;
  private:
  int _internal_labels_size() const;

  public:
  void clear_labels() ;
  const std::string& labels(int index) const;
  std::string* mutable_labels(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_labels(int index, Arg_&& value, Args_... args);
  std::string* add_labels();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_labels(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& labels() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_labels();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_labels() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_labels();

  public:
  // string id = 1 [json_name = "id"];
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // string name = 2 [json_name = "name"];
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // .kentik.bgp_monitoring.v202205beta1.BgpMonitorSettings settings = 4 [json_name = "settings"];
  bool has_settings() const;
  void clear_settings() ;
  const ::kentik::bgp_monitoring::v202205beta1::BgpMonitorSettings& settings() const;
  PROTOBUF_NODISCARD ::kentik::bgp_monitoring::v202205beta1::BgpMonitorSettings* release_settings();
  ::kentik::bgp_monitoring::v202205beta1::BgpMonitorSettings* mutable_settings();
  void set_allocated_settings(::kentik::bgp_monitoring::v202205beta1::BgpMonitorSettings* value);
  void unsafe_arena_set_allocated_settings(::kentik::bgp_monitoring::v202205beta1::BgpMonitorSettings* value);
  ::kentik::bgp_monitoring::v202205beta1::BgpMonitorSettings* unsafe_arena_release_settings();

  private:
  const ::kentik::bgp_monitoring::v202205beta1::BgpMonitorSettings& _internal_settings() const;
  ::kentik::bgp_monitoring::v202205beta1::BgpMonitorSettings* _internal_mutable_settings();

  public:
  // .google.protobuf.Timestamp cdate = 5 [json_name = "cdate"];
  bool has_cdate() const;
  void clear_cdate() ;
  const ::google::protobuf::Timestamp& cdate() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_cdate();
  ::google::protobuf::Timestamp* mutable_cdate();
  void set_allocated_cdate(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_cdate(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_cdate();

  private:
  const ::google::protobuf::Timestamp& _internal_cdate() const;
  ::google::protobuf::Timestamp* _internal_mutable_cdate();

  public:
  // .google.protobuf.Timestamp edate = 6 [json_name = "edate"];
  bool has_edate() const;
  void clear_edate() ;
  const ::google::protobuf::Timestamp& edate() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_edate();
  ::google::protobuf::Timestamp* mutable_edate();
  void set_allocated_edate(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_edate(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_edate();

  private:
  const ::google::protobuf::Timestamp& _internal_edate() const;
  ::google::protobuf::Timestamp* _internal_mutable_edate();

  public:
  // .kentik.core.v202303.UserInfo created_by = 7 [json_name = "createdBy"];
  bool has_created_by() const;
  void clear_created_by() ;
  const ::kentik::core::v202303::UserInfo& created_by() const;
  PROTOBUF_NODISCARD ::kentik::core::v202303::UserInfo* release_created_by();
  ::kentik::core::v202303::UserInfo* mutable_created_by();
  void set_allocated_created_by(::kentik::core::v202303::UserInfo* value);
  void unsafe_arena_set_allocated_created_by(::kentik::core::v202303::UserInfo* value);
  ::kentik::core::v202303::UserInfo* unsafe_arena_release_created_by();

  private:
  const ::kentik::core::v202303::UserInfo& _internal_created_by() const;
  ::kentik::core::v202303::UserInfo* _internal_mutable_created_by();

  public:
  // .kentik.core.v202303.UserInfo last_updated_by = 8 [json_name = "lastUpdatedBy"];
  bool has_last_updated_by() const;
  void clear_last_updated_by() ;
  const ::kentik::core::v202303::UserInfo& last_updated_by() const;
  PROTOBUF_NODISCARD ::kentik::core::v202303::UserInfo* release_last_updated_by();
  ::kentik::core::v202303::UserInfo* mutable_last_updated_by();
  void set_allocated_last_updated_by(::kentik::core::v202303::UserInfo* value);
  void unsafe_arena_set_allocated_last_updated_by(::kentik::core::v202303::UserInfo* value);
  ::kentik::core::v202303::UserInfo* unsafe_arena_release_last_updated_by();

  private:
  const ::kentik::core::v202303::UserInfo& _internal_last_updated_by() const;
  ::kentik::core::v202303::UserInfo* _internal_mutable_last_updated_by();

  public:
  // .kentik.bgp_monitoring.v202205beta1.BgpMonitorStatus status = 3 [json_name = "status"];
  void clear_status() ;
  ::kentik::bgp_monitoring::v202205beta1::BgpMonitorStatus status() const;
  void set_status(::kentik::bgp_monitoring::v202205beta1::BgpMonitorStatus value);

  private:
  ::kentik::bgp_monitoring::v202205beta1::BgpMonitorStatus _internal_status() const;
  void _internal_set_status(::kentik::bgp_monitoring::v202205beta1::BgpMonitorStatus value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.bgp_monitoring.v202205beta1.BgpMonitor)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 9, 5,
      74, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const BgpMonitor& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<std::string> labels_;
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::kentik::bgp_monitoring::v202205beta1::BgpMonitorSettings* settings_;
    ::google::protobuf::Timestamp* cdate_;
    ::google::protobuf::Timestamp* edate_;
    ::kentik::core::v202303::UserInfo* created_by_;
    ::kentik::core::v202303::UserInfo* last_updated_by_;
    int status_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fbgp_5fmonitoring_2fv202205beta1_2fbgp_5fmonitoring_2eproto;
};
// -------------------------------------------------------------------

class UpdateMonitorResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.bgp_monitoring.v202205beta1.UpdateMonitorResponse) */ {
 public:
  inline UpdateMonitorResponse() : UpdateMonitorResponse(nullptr) {}
  ~UpdateMonitorResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UpdateMonitorResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UpdateMonitorResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateMonitorResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdateMonitorResponse(const UpdateMonitorResponse& from) : UpdateMonitorResponse(nullptr, from) {}
  inline UpdateMonitorResponse(UpdateMonitorResponse&& from) noexcept
      : UpdateMonitorResponse(nullptr, std::move(from)) {}
  inline UpdateMonitorResponse& operator=(const UpdateMonitorResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateMonitorResponse& operator=(UpdateMonitorResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateMonitorResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateMonitorResponse* internal_default_instance() {
    return reinterpret_cast<const UpdateMonitorResponse*>(
        &_UpdateMonitorResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 13;
  friend void swap(UpdateMonitorResponse& a, UpdateMonitorResponse& b) { a.Swap(&b); }
  inline void Swap(UpdateMonitorResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateMonitorResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateMonitorResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<UpdateMonitorResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateMonitorResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateMonitorResponse& from) { UpdateMonitorResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(UpdateMonitorResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.bgp_monitoring.v202205beta1.UpdateMonitorResponse"; }

 protected:
  explicit UpdateMonitorResponse(::google::protobuf::Arena* arena);
  UpdateMonitorResponse(::google::protobuf::Arena* arena, const UpdateMonitorResponse& from);
  UpdateMonitorResponse(::google::protobuf::Arena* arena, UpdateMonitorResponse&& from) noexcept
      : UpdateMonitorResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMonitorFieldNumber = 1,
  };
  // .kentik.bgp_monitoring.v202205beta1.BgpMonitor monitor = 1 [json_name = "monitor"];
  bool has_monitor() const;
  void clear_monitor() ;
  const ::kentik::bgp_monitoring::v202205beta1::BgpMonitor& monitor() const;
  PROTOBUF_NODISCARD ::kentik::bgp_monitoring::v202205beta1::BgpMonitor* release_monitor();
  ::kentik::bgp_monitoring::v202205beta1::BgpMonitor* mutable_monitor();
  void set_allocated_monitor(::kentik::bgp_monitoring::v202205beta1::BgpMonitor* value);
  void unsafe_arena_set_allocated_monitor(::kentik::bgp_monitoring::v202205beta1::BgpMonitor* value);
  ::kentik::bgp_monitoring::v202205beta1::BgpMonitor* unsafe_arena_release_monitor();

  private:
  const ::kentik::bgp_monitoring::v202205beta1::BgpMonitor& _internal_monitor() const;
  ::kentik::bgp_monitoring::v202205beta1::BgpMonitor* _internal_mutable_monitor();

  public:
  // @@protoc_insertion_point(class_scope:kentik.bgp_monitoring.v202205beta1.UpdateMonitorResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdateMonitorResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::kentik::bgp_monitoring::v202205beta1::BgpMonitor* monitor_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fbgp_5fmonitoring_2fv202205beta1_2fbgp_5fmonitoring_2eproto;
};
// -------------------------------------------------------------------

class UpdateMonitorRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.bgp_monitoring.v202205beta1.UpdateMonitorRequest) */ {
 public:
  inline UpdateMonitorRequest() : UpdateMonitorRequest(nullptr) {}
  ~UpdateMonitorRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UpdateMonitorRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UpdateMonitorRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateMonitorRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdateMonitorRequest(const UpdateMonitorRequest& from) : UpdateMonitorRequest(nullptr, from) {}
  inline UpdateMonitorRequest(UpdateMonitorRequest&& from) noexcept
      : UpdateMonitorRequest(nullptr, std::move(from)) {}
  inline UpdateMonitorRequest& operator=(const UpdateMonitorRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateMonitorRequest& operator=(UpdateMonitorRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateMonitorRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateMonitorRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateMonitorRequest*>(
        &_UpdateMonitorRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(UpdateMonitorRequest& a, UpdateMonitorRequest& b) { a.Swap(&b); }
  inline void Swap(UpdateMonitorRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateMonitorRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateMonitorRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<UpdateMonitorRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateMonitorRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateMonitorRequest& from) { UpdateMonitorRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(UpdateMonitorRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.bgp_monitoring.v202205beta1.UpdateMonitorRequest"; }

 protected:
  explicit UpdateMonitorRequest(::google::protobuf::Arena* arena);
  UpdateMonitorRequest(::google::protobuf::Arena* arena, const UpdateMonitorRequest& from);
  UpdateMonitorRequest(::google::protobuf::Arena* arena, UpdateMonitorRequest&& from) noexcept
      : UpdateMonitorRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMonitorFieldNumber = 1,
  };
  // .kentik.bgp_monitoring.v202205beta1.BgpMonitor monitor = 1 [json_name = "monitor"];
  bool has_monitor() const;
  void clear_monitor() ;
  const ::kentik::bgp_monitoring::v202205beta1::BgpMonitor& monitor() const;
  PROTOBUF_NODISCARD ::kentik::bgp_monitoring::v202205beta1::BgpMonitor* release_monitor();
  ::kentik::bgp_monitoring::v202205beta1::BgpMonitor* mutable_monitor();
  void set_allocated_monitor(::kentik::bgp_monitoring::v202205beta1::BgpMonitor* value);
  void unsafe_arena_set_allocated_monitor(::kentik::bgp_monitoring::v202205beta1::BgpMonitor* value);
  ::kentik::bgp_monitoring::v202205beta1::BgpMonitor* unsafe_arena_release_monitor();

  private:
  const ::kentik::bgp_monitoring::v202205beta1::BgpMonitor& _internal_monitor() const;
  ::kentik::bgp_monitoring::v202205beta1::BgpMonitor* _internal_mutable_monitor();

  public:
  // @@protoc_insertion_point(class_scope:kentik.bgp_monitoring.v202205beta1.UpdateMonitorRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdateMonitorRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::kentik::bgp_monitoring::v202205beta1::BgpMonitor* monitor_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fbgp_5fmonitoring_2fv202205beta1_2fbgp_5fmonitoring_2eproto;
};
// -------------------------------------------------------------------

class ListMonitorsResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.bgp_monitoring.v202205beta1.ListMonitorsResponse) */ {
 public:
  inline ListMonitorsResponse() : ListMonitorsResponse(nullptr) {}
  ~ListMonitorsResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ListMonitorsResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ListMonitorsResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListMonitorsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListMonitorsResponse(const ListMonitorsResponse& from) : ListMonitorsResponse(nullptr, from) {}
  inline ListMonitorsResponse(ListMonitorsResponse&& from) noexcept
      : ListMonitorsResponse(nullptr, std::move(from)) {}
  inline ListMonitorsResponse& operator=(const ListMonitorsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListMonitorsResponse& operator=(ListMonitorsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListMonitorsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListMonitorsResponse* internal_default_instance() {
    return reinterpret_cast<const ListMonitorsResponse*>(
        &_ListMonitorsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(ListMonitorsResponse& a, ListMonitorsResponse& b) { a.Swap(&b); }
  inline void Swap(ListMonitorsResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListMonitorsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListMonitorsResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ListMonitorsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListMonitorsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListMonitorsResponse& from) { ListMonitorsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ListMonitorsResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.bgp_monitoring.v202205beta1.ListMonitorsResponse"; }

 protected:
  explicit ListMonitorsResponse(::google::protobuf::Arena* arena);
  ListMonitorsResponse(::google::protobuf::Arena* arena, const ListMonitorsResponse& from);
  ListMonitorsResponse(::google::protobuf::Arena* arena, ListMonitorsResponse&& from) noexcept
      : ListMonitorsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMonitorsFieldNumber = 1,
    kInvalidCountFieldNumber = 2,
  };
  // repeated .kentik.bgp_monitoring.v202205beta1.BgpMonitor monitors = 1 [json_name = "monitors"];
  int monitors_size() const;
  private:
  int _internal_monitors_size() const;

  public:
  void clear_monitors() ;
  ::kentik::bgp_monitoring::v202205beta1::BgpMonitor* mutable_monitors(int index);
  ::google::protobuf::RepeatedPtrField<::kentik::bgp_monitoring::v202205beta1::BgpMonitor>* mutable_monitors();

  private:
  const ::google::protobuf::RepeatedPtrField<::kentik::bgp_monitoring::v202205beta1::BgpMonitor>& _internal_monitors() const;
  ::google::protobuf::RepeatedPtrField<::kentik::bgp_monitoring::v202205beta1::BgpMonitor>* _internal_mutable_monitors();
  public:
  const ::kentik::bgp_monitoring::v202205beta1::BgpMonitor& monitors(int index) const;
  ::kentik::bgp_monitoring::v202205beta1::BgpMonitor* add_monitors();
  const ::google::protobuf::RepeatedPtrField<::kentik::bgp_monitoring::v202205beta1::BgpMonitor>& monitors() const;
  // uint32 invalid_count = 2 [json_name = "invalidCount"];
  void clear_invalid_count() ;
  ::uint32_t invalid_count() const;
  void set_invalid_count(::uint32_t value);

  private:
  ::uint32_t _internal_invalid_count() const;
  void _internal_set_invalid_count(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.bgp_monitoring.v202205beta1.ListMonitorsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListMonitorsResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::kentik::bgp_monitoring::v202205beta1::BgpMonitor > monitors_;
    ::uint32_t invalid_count_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fbgp_5fmonitoring_2fv202205beta1_2fbgp_5fmonitoring_2eproto;
};
// -------------------------------------------------------------------

class GetMonitorResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.bgp_monitoring.v202205beta1.GetMonitorResponse) */ {
 public:
  inline GetMonitorResponse() : GetMonitorResponse(nullptr) {}
  ~GetMonitorResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetMonitorResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetMonitorResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetMonitorResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetMonitorResponse(const GetMonitorResponse& from) : GetMonitorResponse(nullptr, from) {}
  inline GetMonitorResponse(GetMonitorResponse&& from) noexcept
      : GetMonitorResponse(nullptr, std::move(from)) {}
  inline GetMonitorResponse& operator=(const GetMonitorResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetMonitorResponse& operator=(GetMonitorResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetMonitorResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetMonitorResponse* internal_default_instance() {
    return reinterpret_cast<const GetMonitorResponse*>(
        &_GetMonitorResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(GetMonitorResponse& a, GetMonitorResponse& b) { a.Swap(&b); }
  inline void Swap(GetMonitorResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetMonitorResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetMonitorResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetMonitorResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetMonitorResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetMonitorResponse& from) { GetMonitorResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetMonitorResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.bgp_monitoring.v202205beta1.GetMonitorResponse"; }

 protected:
  explicit GetMonitorResponse(::google::protobuf::Arena* arena);
  GetMonitorResponse(::google::protobuf::Arena* arena, const GetMonitorResponse& from);
  GetMonitorResponse(::google::protobuf::Arena* arena, GetMonitorResponse&& from) noexcept
      : GetMonitorResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMonitorFieldNumber = 1,
  };
  // .kentik.bgp_monitoring.v202205beta1.BgpMonitor monitor = 1 [json_name = "monitor"];
  bool has_monitor() const;
  void clear_monitor() ;
  const ::kentik::bgp_monitoring::v202205beta1::BgpMonitor& monitor() const;
  PROTOBUF_NODISCARD ::kentik::bgp_monitoring::v202205beta1::BgpMonitor* release_monitor();
  ::kentik::bgp_monitoring::v202205beta1::BgpMonitor* mutable_monitor();
  void set_allocated_monitor(::kentik::bgp_monitoring::v202205beta1::BgpMonitor* value);
  void unsafe_arena_set_allocated_monitor(::kentik::bgp_monitoring::v202205beta1::BgpMonitor* value);
  ::kentik::bgp_monitoring::v202205beta1::BgpMonitor* unsafe_arena_release_monitor();

  private:
  const ::kentik::bgp_monitoring::v202205beta1::BgpMonitor& _internal_monitor() const;
  ::kentik::bgp_monitoring::v202205beta1::BgpMonitor* _internal_mutable_monitor();

  public:
  // @@protoc_insertion_point(class_scope:kentik.bgp_monitoring.v202205beta1.GetMonitorResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetMonitorResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::kentik::bgp_monitoring::v202205beta1::BgpMonitor* monitor_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fbgp_5fmonitoring_2fv202205beta1_2fbgp_5fmonitoring_2eproto;
};
// -------------------------------------------------------------------

class CreateMonitorResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.bgp_monitoring.v202205beta1.CreateMonitorResponse) */ {
 public:
  inline CreateMonitorResponse() : CreateMonitorResponse(nullptr) {}
  ~CreateMonitorResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CreateMonitorResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CreateMonitorResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateMonitorResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateMonitorResponse(const CreateMonitorResponse& from) : CreateMonitorResponse(nullptr, from) {}
  inline CreateMonitorResponse(CreateMonitorResponse&& from) noexcept
      : CreateMonitorResponse(nullptr, std::move(from)) {}
  inline CreateMonitorResponse& operator=(const CreateMonitorResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateMonitorResponse& operator=(CreateMonitorResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateMonitorResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateMonitorResponse* internal_default_instance() {
    return reinterpret_cast<const CreateMonitorResponse*>(
        &_CreateMonitorResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(CreateMonitorResponse& a, CreateMonitorResponse& b) { a.Swap(&b); }
  inline void Swap(CreateMonitorResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateMonitorResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateMonitorResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CreateMonitorResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateMonitorResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateMonitorResponse& from) { CreateMonitorResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CreateMonitorResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.bgp_monitoring.v202205beta1.CreateMonitorResponse"; }

 protected:
  explicit CreateMonitorResponse(::google::protobuf::Arena* arena);
  CreateMonitorResponse(::google::protobuf::Arena* arena, const CreateMonitorResponse& from);
  CreateMonitorResponse(::google::protobuf::Arena* arena, CreateMonitorResponse&& from) noexcept
      : CreateMonitorResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMonitorFieldNumber = 1,
  };
  // .kentik.bgp_monitoring.v202205beta1.BgpMonitor monitor = 1 [json_name = "monitor"];
  bool has_monitor() const;
  void clear_monitor() ;
  const ::kentik::bgp_monitoring::v202205beta1::BgpMonitor& monitor() const;
  PROTOBUF_NODISCARD ::kentik::bgp_monitoring::v202205beta1::BgpMonitor* release_monitor();
  ::kentik::bgp_monitoring::v202205beta1::BgpMonitor* mutable_monitor();
  void set_allocated_monitor(::kentik::bgp_monitoring::v202205beta1::BgpMonitor* value);
  void unsafe_arena_set_allocated_monitor(::kentik::bgp_monitoring::v202205beta1::BgpMonitor* value);
  ::kentik::bgp_monitoring::v202205beta1::BgpMonitor* unsafe_arena_release_monitor();

  private:
  const ::kentik::bgp_monitoring::v202205beta1::BgpMonitor& _internal_monitor() const;
  ::kentik::bgp_monitoring::v202205beta1::BgpMonitor* _internal_mutable_monitor();

  public:
  // @@protoc_insertion_point(class_scope:kentik.bgp_monitoring.v202205beta1.CreateMonitorResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateMonitorResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::kentik::bgp_monitoring::v202205beta1::BgpMonitor* monitor_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fbgp_5fmonitoring_2fv202205beta1_2fbgp_5fmonitoring_2eproto;
};
// -------------------------------------------------------------------

class CreateMonitorRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.bgp_monitoring.v202205beta1.CreateMonitorRequest) */ {
 public:
  inline CreateMonitorRequest() : CreateMonitorRequest(nullptr) {}
  ~CreateMonitorRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CreateMonitorRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CreateMonitorRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateMonitorRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateMonitorRequest(const CreateMonitorRequest& from) : CreateMonitorRequest(nullptr, from) {}
  inline CreateMonitorRequest(CreateMonitorRequest&& from) noexcept
      : CreateMonitorRequest(nullptr, std::move(from)) {}
  inline CreateMonitorRequest& operator=(const CreateMonitorRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateMonitorRequest& operator=(CreateMonitorRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateMonitorRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateMonitorRequest* internal_default_instance() {
    return reinterpret_cast<const CreateMonitorRequest*>(
        &_CreateMonitorRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(CreateMonitorRequest& a, CreateMonitorRequest& b) { a.Swap(&b); }
  inline void Swap(CreateMonitorRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateMonitorRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateMonitorRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CreateMonitorRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateMonitorRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateMonitorRequest& from) { CreateMonitorRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CreateMonitorRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.bgp_monitoring.v202205beta1.CreateMonitorRequest"; }

 protected:
  explicit CreateMonitorRequest(::google::protobuf::Arena* arena);
  CreateMonitorRequest(::google::protobuf::Arena* arena, const CreateMonitorRequest& from);
  CreateMonitorRequest(::google::protobuf::Arena* arena, CreateMonitorRequest&& from) noexcept
      : CreateMonitorRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMonitorFieldNumber = 1,
  };
  // .kentik.bgp_monitoring.v202205beta1.BgpMonitor monitor = 1 [json_name = "monitor"];
  bool has_monitor() const;
  void clear_monitor() ;
  const ::kentik::bgp_monitoring::v202205beta1::BgpMonitor& monitor() const;
  PROTOBUF_NODISCARD ::kentik::bgp_monitoring::v202205beta1::BgpMonitor* release_monitor();
  ::kentik::bgp_monitoring::v202205beta1::BgpMonitor* mutable_monitor();
  void set_allocated_monitor(::kentik::bgp_monitoring::v202205beta1::BgpMonitor* value);
  void unsafe_arena_set_allocated_monitor(::kentik::bgp_monitoring::v202205beta1::BgpMonitor* value);
  ::kentik::bgp_monitoring::v202205beta1::BgpMonitor* unsafe_arena_release_monitor();

  private:
  const ::kentik::bgp_monitoring::v202205beta1::BgpMonitor& _internal_monitor() const;
  ::kentik::bgp_monitoring::v202205beta1::BgpMonitor* _internal_mutable_monitor();

  public:
  // @@protoc_insertion_point(class_scope:kentik.bgp_monitoring.v202205beta1.CreateMonitorRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateMonitorRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::kentik::bgp_monitoring::v202205beta1::BgpMonitor* monitor_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fbgp_5fmonitoring_2fv202205beta1_2fbgp_5fmonitoring_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Nlri

// .kentik.net.v202303.Afi afi = 1 [json_name = "afi"];
inline void Nlri::clear_afi() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.afi_ = 0;
}
inline ::kentik::net::v202303::Afi Nlri::afi() const {
  // @@protoc_insertion_point(field_get:kentik.bgp_monitoring.v202205beta1.Nlri.afi)
  return _internal_afi();
}
inline void Nlri::set_afi(::kentik::net::v202303::Afi value) {
  _internal_set_afi(value);
  // @@protoc_insertion_point(field_set:kentik.bgp_monitoring.v202205beta1.Nlri.afi)
}
inline ::kentik::net::v202303::Afi Nlri::_internal_afi() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::kentik::net::v202303::Afi>(_impl_.afi_);
}
inline void Nlri::_internal_set_afi(::kentik::net::v202303::Afi value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.afi_ = value;
}

// .kentik.net.v202303.Safi safi = 2 [json_name = "safi"];
inline void Nlri::clear_safi() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.safi_ = 0;
}
inline ::kentik::net::v202303::Safi Nlri::safi() const {
  // @@protoc_insertion_point(field_get:kentik.bgp_monitoring.v202205beta1.Nlri.safi)
  return _internal_safi();
}
inline void Nlri::set_safi(::kentik::net::v202303::Safi value) {
  _internal_set_safi(value);
  // @@protoc_insertion_point(field_set:kentik.bgp_monitoring.v202205beta1.Nlri.safi)
}
inline ::kentik::net::v202303::Safi Nlri::_internal_safi() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::kentik::net::v202303::Safi>(_impl_.safi_);
}
inline void Nlri::_internal_set_safi(::kentik::net::v202303::Safi value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.safi_ = value;
}

// string prefix = 3 [json_name = "prefix"];
inline bool Nlri::has_prefix() const {
  return type_case() == kPrefix;
}
inline void Nlri::set_has_prefix() {
  _impl_._oneof_case_[0] = kPrefix;
}
inline void Nlri::clear_prefix() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (type_case() == kPrefix) {
    _impl_.type_.prefix_.Destroy();
    clear_has_type();
  }
}
inline const std::string& Nlri::prefix() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.bgp_monitoring.v202205beta1.Nlri.prefix)
  return _internal_prefix();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Nlri::set_prefix(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (type_case() != kPrefix) {
    clear_type();

    set_has_prefix();
    _impl_.type_.prefix_.InitDefault();
  }
  _impl_.type_.prefix_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.bgp_monitoring.v202205beta1.Nlri.prefix)
}
inline std::string* Nlri::mutable_prefix() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_prefix();
  // @@protoc_insertion_point(field_mutable:kentik.bgp_monitoring.v202205beta1.Nlri.prefix)
  return _s;
}
inline const std::string& Nlri::_internal_prefix() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  if (type_case() != kPrefix) {
    return ::google::protobuf::internal::GetEmptyStringAlreadyInited();
  }
  return _impl_.type_.prefix_.Get();
}
inline void Nlri::_internal_set_prefix(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (type_case() != kPrefix) {
    clear_type();

    set_has_prefix();
    _impl_.type_.prefix_.InitDefault();
  }
  _impl_.type_.prefix_.Set(value, GetArena());
}
inline std::string* Nlri::_internal_mutable_prefix() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (type_case() != kPrefix) {
    clear_type();

    set_has_prefix();
    _impl_.type_.prefix_.InitDefault();
  }
  return _impl_.type_.prefix_.Mutable( GetArena());
}
inline std::string* Nlri::release_prefix() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.bgp_monitoring.v202205beta1.Nlri.prefix)
  if (type_case() != kPrefix) {
    return nullptr;
  }
  clear_has_type();
  return _impl_.type_.prefix_.Release();
}
inline void Nlri::set_allocated_prefix(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (has_type()) {
    clear_type();
  }
  if (value != nullptr) {
    set_has_prefix();
    _impl_.type_.prefix_.InitAllocated(value, GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.bgp_monitoring.v202205beta1.Nlri.prefix)
}

inline bool Nlri::has_type() const {
  return type_case() != TYPE_NOT_SET;
}
inline void Nlri::clear_has_type() {
  _impl_._oneof_case_[0] = TYPE_NOT_SET;
}
inline Nlri::TypeCase Nlri::type_case() const {
  return Nlri::TypeCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// BgpHealthSettings

// float reachability_warning = 1 [json_name = "reachabilityWarning"];
inline void BgpHealthSettings::clear_reachability_warning() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reachability_warning_ = 0;
}
inline float BgpHealthSettings::reachability_warning() const {
  // @@protoc_insertion_point(field_get:kentik.bgp_monitoring.v202205beta1.BgpHealthSettings.reachability_warning)
  return _internal_reachability_warning();
}
inline void BgpHealthSettings::set_reachability_warning(float value) {
  _internal_set_reachability_warning(value);
  // @@protoc_insertion_point(field_set:kentik.bgp_monitoring.v202205beta1.BgpHealthSettings.reachability_warning)
}
inline float BgpHealthSettings::_internal_reachability_warning() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.reachability_warning_;
}
inline void BgpHealthSettings::_internal_set_reachability_warning(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reachability_warning_ = value;
}

// float reachability_critical = 2 [json_name = "reachabilityCritical"];
inline void BgpHealthSettings::clear_reachability_critical() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reachability_critical_ = 0;
}
inline float BgpHealthSettings::reachability_critical() const {
  // @@protoc_insertion_point(field_get:kentik.bgp_monitoring.v202205beta1.BgpHealthSettings.reachability_critical)
  return _internal_reachability_critical();
}
inline void BgpHealthSettings::set_reachability_critical(float value) {
  _internal_set_reachability_critical(value);
  // @@protoc_insertion_point(field_set:kentik.bgp_monitoring.v202205beta1.BgpHealthSettings.reachability_critical)
}
inline float BgpHealthSettings::_internal_reachability_critical() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.reachability_critical_;
}
inline void BgpHealthSettings::_internal_set_reachability_critical(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reachability_critical_ = value;
}

// -------------------------------------------------------------------

// BgpMonitorSettings

// repeated uint32 allowed_asns = 1 [json_name = "allowedAsns"];
inline int BgpMonitorSettings::_internal_allowed_asns_size() const {
  return _internal_allowed_asns().size();
}
inline int BgpMonitorSettings::allowed_asns_size() const {
  return _internal_allowed_asns_size();
}
inline void BgpMonitorSettings::clear_allowed_asns() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.allowed_asns_.Clear();
}
inline ::uint32_t BgpMonitorSettings::allowed_asns(int index) const {
  // @@protoc_insertion_point(field_get:kentik.bgp_monitoring.v202205beta1.BgpMonitorSettings.allowed_asns)
  return _internal_allowed_asns().Get(index);
}
inline void BgpMonitorSettings::set_allowed_asns(int index, ::uint32_t value) {
  _internal_mutable_allowed_asns()->Set(index, value);
  // @@protoc_insertion_point(field_set:kentik.bgp_monitoring.v202205beta1.BgpMonitorSettings.allowed_asns)
}
inline void BgpMonitorSettings::add_allowed_asns(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_allowed_asns()->Add(value);
  // @@protoc_insertion_point(field_add:kentik.bgp_monitoring.v202205beta1.BgpMonitorSettings.allowed_asns)
}
inline const ::google::protobuf::RepeatedField<::uint32_t>& BgpMonitorSettings::allowed_asns() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.bgp_monitoring.v202205beta1.BgpMonitorSettings.allowed_asns)
  return _internal_allowed_asns();
}
inline ::google::protobuf::RepeatedField<::uint32_t>* BgpMonitorSettings::mutable_allowed_asns()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.bgp_monitoring.v202205beta1.BgpMonitorSettings.allowed_asns)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_allowed_asns();
}
inline const ::google::protobuf::RepeatedField<::uint32_t>&
BgpMonitorSettings::_internal_allowed_asns() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.allowed_asns_;
}
inline ::google::protobuf::RepeatedField<::uint32_t>* BgpMonitorSettings::_internal_mutable_allowed_asns() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.allowed_asns_;
}

// repeated .kentik.bgp_monitoring.v202205beta1.Nlri targets = 2 [json_name = "targets"];
inline int BgpMonitorSettings::_internal_targets_size() const {
  return _internal_targets().size();
}
inline int BgpMonitorSettings::targets_size() const {
  return _internal_targets_size();
}
inline void BgpMonitorSettings::clear_targets() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.targets_.Clear();
}
inline ::kentik::bgp_monitoring::v202205beta1::Nlri* BgpMonitorSettings::mutable_targets(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.bgp_monitoring.v202205beta1.BgpMonitorSettings.targets)
  return _internal_mutable_targets()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::kentik::bgp_monitoring::v202205beta1::Nlri>* BgpMonitorSettings::mutable_targets()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.bgp_monitoring.v202205beta1.BgpMonitorSettings.targets)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_targets();
}
inline const ::kentik::bgp_monitoring::v202205beta1::Nlri& BgpMonitorSettings::targets(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.bgp_monitoring.v202205beta1.BgpMonitorSettings.targets)
  return _internal_targets().Get(index);
}
inline ::kentik::bgp_monitoring::v202205beta1::Nlri* BgpMonitorSettings::add_targets() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::kentik::bgp_monitoring::v202205beta1::Nlri* _add = _internal_mutable_targets()->Add();
  // @@protoc_insertion_point(field_add:kentik.bgp_monitoring.v202205beta1.BgpMonitorSettings.targets)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::bgp_monitoring::v202205beta1::Nlri>& BgpMonitorSettings::targets() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.bgp_monitoring.v202205beta1.BgpMonitorSettings.targets)
  return _internal_targets();
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::bgp_monitoring::v202205beta1::Nlri>&
BgpMonitorSettings::_internal_targets() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.targets_;
}
inline ::google::protobuf::RepeatedPtrField<::kentik::bgp_monitoring::v202205beta1::Nlri>*
BgpMonitorSettings::_internal_mutable_targets() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.targets_;
}

// bool check_rpki = 3 [json_name = "checkRpki"];
inline void BgpMonitorSettings::clear_check_rpki() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.check_rpki_ = false;
}
inline bool BgpMonitorSettings::check_rpki() const {
  // @@protoc_insertion_point(field_get:kentik.bgp_monitoring.v202205beta1.BgpMonitorSettings.check_rpki)
  return _internal_check_rpki();
}
inline void BgpMonitorSettings::set_check_rpki(bool value) {
  _internal_set_check_rpki(value);
  // @@protoc_insertion_point(field_set:kentik.bgp_monitoring.v202205beta1.BgpMonitorSettings.check_rpki)
}
inline bool BgpMonitorSettings::_internal_check_rpki() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.check_rpki_;
}
inline void BgpMonitorSettings::_internal_set_check_rpki(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.check_rpki_ = value;
}

// bool include_covered_prefixes = 4 [json_name = "includeCoveredPrefixes"];
inline void BgpMonitorSettings::clear_include_covered_prefixes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.include_covered_prefixes_ = false;
}
inline bool BgpMonitorSettings::include_covered_prefixes() const {
  // @@protoc_insertion_point(field_get:kentik.bgp_monitoring.v202205beta1.BgpMonitorSettings.include_covered_prefixes)
  return _internal_include_covered_prefixes();
}
inline void BgpMonitorSettings::set_include_covered_prefixes(bool value) {
  _internal_set_include_covered_prefixes(value);
  // @@protoc_insertion_point(field_set:kentik.bgp_monitoring.v202205beta1.BgpMonitorSettings.include_covered_prefixes)
}
inline bool BgpMonitorSettings::_internal_include_covered_prefixes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.include_covered_prefixes_;
}
inline void BgpMonitorSettings::_internal_set_include_covered_prefixes(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.include_covered_prefixes_ = value;
}

// .kentik.bgp_monitoring.v202205beta1.BgpHealthSettings health_settings = 5 [json_name = "healthSettings"];
inline bool BgpMonitorSettings::has_health_settings() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.health_settings_ != nullptr);
  return value;
}
inline void BgpMonitorSettings::clear_health_settings() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.health_settings_ != nullptr) _impl_.health_settings_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::kentik::bgp_monitoring::v202205beta1::BgpHealthSettings& BgpMonitorSettings::_internal_health_settings() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::bgp_monitoring::v202205beta1::BgpHealthSettings* p = _impl_.health_settings_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::bgp_monitoring::v202205beta1::BgpHealthSettings&>(::kentik::bgp_monitoring::v202205beta1::_BgpHealthSettings_default_instance_);
}
inline const ::kentik::bgp_monitoring::v202205beta1::BgpHealthSettings& BgpMonitorSettings::health_settings() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.bgp_monitoring.v202205beta1.BgpMonitorSettings.health_settings)
  return _internal_health_settings();
}
inline void BgpMonitorSettings::unsafe_arena_set_allocated_health_settings(::kentik::bgp_monitoring::v202205beta1::BgpHealthSettings* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.health_settings_);
  }
  _impl_.health_settings_ = reinterpret_cast<::kentik::bgp_monitoring::v202205beta1::BgpHealthSettings*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.bgp_monitoring.v202205beta1.BgpMonitorSettings.health_settings)
}
inline ::kentik::bgp_monitoring::v202205beta1::BgpHealthSettings* BgpMonitorSettings::release_health_settings() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::bgp_monitoring::v202205beta1::BgpHealthSettings* released = _impl_.health_settings_;
  _impl_.health_settings_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::bgp_monitoring::v202205beta1::BgpHealthSettings* BgpMonitorSettings::unsafe_arena_release_health_settings() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.bgp_monitoring.v202205beta1.BgpMonitorSettings.health_settings)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::bgp_monitoring::v202205beta1::BgpHealthSettings* temp = _impl_.health_settings_;
  _impl_.health_settings_ = nullptr;
  return temp;
}
inline ::kentik::bgp_monitoring::v202205beta1::BgpHealthSettings* BgpMonitorSettings::_internal_mutable_health_settings() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.health_settings_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::bgp_monitoring::v202205beta1::BgpHealthSettings>(GetArena());
    _impl_.health_settings_ = reinterpret_cast<::kentik::bgp_monitoring::v202205beta1::BgpHealthSettings*>(p);
  }
  return _impl_.health_settings_;
}
inline ::kentik::bgp_monitoring::v202205beta1::BgpHealthSettings* BgpMonitorSettings::mutable_health_settings() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::kentik::bgp_monitoring::v202205beta1::BgpHealthSettings* _msg = _internal_mutable_health_settings();
  // @@protoc_insertion_point(field_mutable:kentik.bgp_monitoring.v202205beta1.BgpMonitorSettings.health_settings)
  return _msg;
}
inline void BgpMonitorSettings::set_allocated_health_settings(::kentik::bgp_monitoring::v202205beta1::BgpHealthSettings* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.health_settings_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.health_settings_ = reinterpret_cast<::kentik::bgp_monitoring::v202205beta1::BgpHealthSettings*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.bgp_monitoring.v202205beta1.BgpMonitorSettings.health_settings)
}

// repeated string notification_channels = 6 [json_name = "notificationChannels"];
inline int BgpMonitorSettings::_internal_notification_channels_size() const {
  return _internal_notification_channels().size();
}
inline int BgpMonitorSettings::notification_channels_size() const {
  return _internal_notification_channels_size();
}
inline void BgpMonitorSettings::clear_notification_channels() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.notification_channels_.Clear();
}
inline std::string* BgpMonitorSettings::add_notification_channels() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_notification_channels()->Add();
  // @@protoc_insertion_point(field_add_mutable:kentik.bgp_monitoring.v202205beta1.BgpMonitorSettings.notification_channels)
  return _s;
}
inline const std::string& BgpMonitorSettings::notification_channels(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.bgp_monitoring.v202205beta1.BgpMonitorSettings.notification_channels)
  return _internal_notification_channels().Get(index);
}
inline std::string* BgpMonitorSettings::mutable_notification_channels(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.bgp_monitoring.v202205beta1.BgpMonitorSettings.notification_channels)
  return _internal_mutable_notification_channels()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void BgpMonitorSettings::set_notification_channels(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_notification_channels()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:kentik.bgp_monitoring.v202205beta1.BgpMonitorSettings.notification_channels)
}
template <typename Arg_, typename... Args_>
inline void BgpMonitorSettings::add_notification_channels(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_notification_channels(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:kentik.bgp_monitoring.v202205beta1.BgpMonitorSettings.notification_channels)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
BgpMonitorSettings::notification_channels() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.bgp_monitoring.v202205beta1.BgpMonitorSettings.notification_channels)
  return _internal_notification_channels();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
BgpMonitorSettings::mutable_notification_channels() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.bgp_monitoring.v202205beta1.BgpMonitorSettings.notification_channels)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_notification_channels();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
BgpMonitorSettings::_internal_notification_channels() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.notification_channels_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
BgpMonitorSettings::_internal_mutable_notification_channels() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.notification_channels_;
}

// -------------------------------------------------------------------

// BgpMonitor

// string id = 1 [json_name = "id"];
inline void BgpMonitor::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& BgpMonitor::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.bgp_monitoring.v202205beta1.BgpMonitor.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void BgpMonitor::set_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.bgp_monitoring.v202205beta1.BgpMonitor.id)
}
inline std::string* BgpMonitor::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:kentik.bgp_monitoring.v202205beta1.BgpMonitor.id)
  return _s;
}
inline const std::string& BgpMonitor::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void BgpMonitor::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(value, GetArena());
}
inline std::string* BgpMonitor::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* BgpMonitor::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.bgp_monitoring.v202205beta1.BgpMonitor.id)
  return _impl_.id_.Release();
}
inline void BgpMonitor::set_allocated_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.id_.IsDefault()) {
    _impl_.id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.bgp_monitoring.v202205beta1.BgpMonitor.id)
}

// string name = 2 [json_name = "name"];
inline void BgpMonitor::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& BgpMonitor::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.bgp_monitoring.v202205beta1.BgpMonitor.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void BgpMonitor::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.bgp_monitoring.v202205beta1.BgpMonitor.name)
}
inline std::string* BgpMonitor::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:kentik.bgp_monitoring.v202205beta1.BgpMonitor.name)
  return _s;
}
inline const std::string& BgpMonitor::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void BgpMonitor::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* BgpMonitor::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* BgpMonitor::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.bgp_monitoring.v202205beta1.BgpMonitor.name)
  return _impl_.name_.Release();
}
inline void BgpMonitor::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.bgp_monitoring.v202205beta1.BgpMonitor.name)
}

// .kentik.bgp_monitoring.v202205beta1.BgpMonitorStatus status = 3 [json_name = "status"];
inline void BgpMonitor::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = 0;
}
inline ::kentik::bgp_monitoring::v202205beta1::BgpMonitorStatus BgpMonitor::status() const {
  // @@protoc_insertion_point(field_get:kentik.bgp_monitoring.v202205beta1.BgpMonitor.status)
  return _internal_status();
}
inline void BgpMonitor::set_status(::kentik::bgp_monitoring::v202205beta1::BgpMonitorStatus value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:kentik.bgp_monitoring.v202205beta1.BgpMonitor.status)
}
inline ::kentik::bgp_monitoring::v202205beta1::BgpMonitorStatus BgpMonitor::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::kentik::bgp_monitoring::v202205beta1::BgpMonitorStatus>(_impl_.status_);
}
inline void BgpMonitor::_internal_set_status(::kentik::bgp_monitoring::v202205beta1::BgpMonitorStatus value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = value;
}

// .kentik.bgp_monitoring.v202205beta1.BgpMonitorSettings settings = 4 [json_name = "settings"];
inline bool BgpMonitor::has_settings() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.settings_ != nullptr);
  return value;
}
inline void BgpMonitor::clear_settings() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.settings_ != nullptr) _impl_.settings_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::kentik::bgp_monitoring::v202205beta1::BgpMonitorSettings& BgpMonitor::_internal_settings() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::bgp_monitoring::v202205beta1::BgpMonitorSettings* p = _impl_.settings_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::bgp_monitoring::v202205beta1::BgpMonitorSettings&>(::kentik::bgp_monitoring::v202205beta1::_BgpMonitorSettings_default_instance_);
}
inline const ::kentik::bgp_monitoring::v202205beta1::BgpMonitorSettings& BgpMonitor::settings() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.bgp_monitoring.v202205beta1.BgpMonitor.settings)
  return _internal_settings();
}
inline void BgpMonitor::unsafe_arena_set_allocated_settings(::kentik::bgp_monitoring::v202205beta1::BgpMonitorSettings* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.settings_);
  }
  _impl_.settings_ = reinterpret_cast<::kentik::bgp_monitoring::v202205beta1::BgpMonitorSettings*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.bgp_monitoring.v202205beta1.BgpMonitor.settings)
}
inline ::kentik::bgp_monitoring::v202205beta1::BgpMonitorSettings* BgpMonitor::release_settings() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::bgp_monitoring::v202205beta1::BgpMonitorSettings* released = _impl_.settings_;
  _impl_.settings_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::bgp_monitoring::v202205beta1::BgpMonitorSettings* BgpMonitor::unsafe_arena_release_settings() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.bgp_monitoring.v202205beta1.BgpMonitor.settings)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::bgp_monitoring::v202205beta1::BgpMonitorSettings* temp = _impl_.settings_;
  _impl_.settings_ = nullptr;
  return temp;
}
inline ::kentik::bgp_monitoring::v202205beta1::BgpMonitorSettings* BgpMonitor::_internal_mutable_settings() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.settings_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::bgp_monitoring::v202205beta1::BgpMonitorSettings>(GetArena());
    _impl_.settings_ = reinterpret_cast<::kentik::bgp_monitoring::v202205beta1::BgpMonitorSettings*>(p);
  }
  return _impl_.settings_;
}
inline ::kentik::bgp_monitoring::v202205beta1::BgpMonitorSettings* BgpMonitor::mutable_settings() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::kentik::bgp_monitoring::v202205beta1::BgpMonitorSettings* _msg = _internal_mutable_settings();
  // @@protoc_insertion_point(field_mutable:kentik.bgp_monitoring.v202205beta1.BgpMonitor.settings)
  return _msg;
}
inline void BgpMonitor::set_allocated_settings(::kentik::bgp_monitoring::v202205beta1::BgpMonitorSettings* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.settings_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.settings_ = reinterpret_cast<::kentik::bgp_monitoring::v202205beta1::BgpMonitorSettings*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.bgp_monitoring.v202205beta1.BgpMonitor.settings)
}

// .google.protobuf.Timestamp cdate = 5 [json_name = "cdate"];
inline bool BgpMonitor::has_cdate() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.cdate_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& BgpMonitor::_internal_cdate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.cdate_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& BgpMonitor::cdate() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.bgp_monitoring.v202205beta1.BgpMonitor.cdate)
  return _internal_cdate();
}
inline void BgpMonitor::unsafe_arena_set_allocated_cdate(::google::protobuf::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.cdate_);
  }
  _impl_.cdate_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.bgp_monitoring.v202205beta1.BgpMonitor.cdate)
}
inline ::google::protobuf::Timestamp* BgpMonitor::release_cdate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* released = _impl_.cdate_;
  _impl_.cdate_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* BgpMonitor::unsafe_arena_release_cdate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.bgp_monitoring.v202205beta1.BgpMonitor.cdate)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* temp = _impl_.cdate_;
  _impl_.cdate_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* BgpMonitor::_internal_mutable_cdate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.cdate_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.cdate_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.cdate_;
}
inline ::google::protobuf::Timestamp* BgpMonitor::mutable_cdate() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_cdate();
  // @@protoc_insertion_point(field_mutable:kentik.bgp_monitoring.v202205beta1.BgpMonitor.cdate)
  return _msg;
}
inline void BgpMonitor::set_allocated_cdate(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.cdate_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.cdate_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.bgp_monitoring.v202205beta1.BgpMonitor.cdate)
}

// .google.protobuf.Timestamp edate = 6 [json_name = "edate"];
inline bool BgpMonitor::has_edate() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.edate_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& BgpMonitor::_internal_edate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.edate_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& BgpMonitor::edate() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.bgp_monitoring.v202205beta1.BgpMonitor.edate)
  return _internal_edate();
}
inline void BgpMonitor::unsafe_arena_set_allocated_edate(::google::protobuf::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.edate_);
  }
  _impl_.edate_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.bgp_monitoring.v202205beta1.BgpMonitor.edate)
}
inline ::google::protobuf::Timestamp* BgpMonitor::release_edate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::google::protobuf::Timestamp* released = _impl_.edate_;
  _impl_.edate_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* BgpMonitor::unsafe_arena_release_edate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.bgp_monitoring.v202205beta1.BgpMonitor.edate)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::google::protobuf::Timestamp* temp = _impl_.edate_;
  _impl_.edate_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* BgpMonitor::_internal_mutable_edate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.edate_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.edate_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.edate_;
}
inline ::google::protobuf::Timestamp* BgpMonitor::mutable_edate() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_edate();
  // @@protoc_insertion_point(field_mutable:kentik.bgp_monitoring.v202205beta1.BgpMonitor.edate)
  return _msg;
}
inline void BgpMonitor::set_allocated_edate(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.edate_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.edate_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.bgp_monitoring.v202205beta1.BgpMonitor.edate)
}

// .kentik.core.v202303.UserInfo created_by = 7 [json_name = "createdBy"];
inline bool BgpMonitor::has_created_by() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.created_by_ != nullptr);
  return value;
}
inline const ::kentik::core::v202303::UserInfo& BgpMonitor::_internal_created_by() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::core::v202303::UserInfo* p = _impl_.created_by_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::core::v202303::UserInfo&>(::kentik::core::v202303::_UserInfo_default_instance_);
}
inline const ::kentik::core::v202303::UserInfo& BgpMonitor::created_by() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.bgp_monitoring.v202205beta1.BgpMonitor.created_by)
  return _internal_created_by();
}
inline void BgpMonitor::unsafe_arena_set_allocated_created_by(::kentik::core::v202303::UserInfo* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.created_by_);
  }
  _impl_.created_by_ = reinterpret_cast<::kentik::core::v202303::UserInfo*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.bgp_monitoring.v202205beta1.BgpMonitor.created_by)
}
inline ::kentik::core::v202303::UserInfo* BgpMonitor::release_created_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::kentik::core::v202303::UserInfo* released = _impl_.created_by_;
  _impl_.created_by_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::core::v202303::UserInfo* BgpMonitor::unsafe_arena_release_created_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.bgp_monitoring.v202205beta1.BgpMonitor.created_by)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::kentik::core::v202303::UserInfo* temp = _impl_.created_by_;
  _impl_.created_by_ = nullptr;
  return temp;
}
inline ::kentik::core::v202303::UserInfo* BgpMonitor::_internal_mutable_created_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.created_by_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::core::v202303::UserInfo>(GetArena());
    _impl_.created_by_ = reinterpret_cast<::kentik::core::v202303::UserInfo*>(p);
  }
  return _impl_.created_by_;
}
inline ::kentik::core::v202303::UserInfo* BgpMonitor::mutable_created_by() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::kentik::core::v202303::UserInfo* _msg = _internal_mutable_created_by();
  // @@protoc_insertion_point(field_mutable:kentik.bgp_monitoring.v202205beta1.BgpMonitor.created_by)
  return _msg;
}
inline void BgpMonitor::set_allocated_created_by(::kentik::core::v202303::UserInfo* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.created_by_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.created_by_ = reinterpret_cast<::kentik::core::v202303::UserInfo*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.bgp_monitoring.v202205beta1.BgpMonitor.created_by)
}

// .kentik.core.v202303.UserInfo last_updated_by = 8 [json_name = "lastUpdatedBy"];
inline bool BgpMonitor::has_last_updated_by() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.last_updated_by_ != nullptr);
  return value;
}
inline const ::kentik::core::v202303::UserInfo& BgpMonitor::_internal_last_updated_by() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::core::v202303::UserInfo* p = _impl_.last_updated_by_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::core::v202303::UserInfo&>(::kentik::core::v202303::_UserInfo_default_instance_);
}
inline const ::kentik::core::v202303::UserInfo& BgpMonitor::last_updated_by() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.bgp_monitoring.v202205beta1.BgpMonitor.last_updated_by)
  return _internal_last_updated_by();
}
inline void BgpMonitor::unsafe_arena_set_allocated_last_updated_by(::kentik::core::v202303::UserInfo* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.last_updated_by_);
  }
  _impl_.last_updated_by_ = reinterpret_cast<::kentik::core::v202303::UserInfo*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.bgp_monitoring.v202205beta1.BgpMonitor.last_updated_by)
}
inline ::kentik::core::v202303::UserInfo* BgpMonitor::release_last_updated_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::kentik::core::v202303::UserInfo* released = _impl_.last_updated_by_;
  _impl_.last_updated_by_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::core::v202303::UserInfo* BgpMonitor::unsafe_arena_release_last_updated_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.bgp_monitoring.v202205beta1.BgpMonitor.last_updated_by)

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::kentik::core::v202303::UserInfo* temp = _impl_.last_updated_by_;
  _impl_.last_updated_by_ = nullptr;
  return temp;
}
inline ::kentik::core::v202303::UserInfo* BgpMonitor::_internal_mutable_last_updated_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.last_updated_by_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::core::v202303::UserInfo>(GetArena());
    _impl_.last_updated_by_ = reinterpret_cast<::kentik::core::v202303::UserInfo*>(p);
  }
  return _impl_.last_updated_by_;
}
inline ::kentik::core::v202303::UserInfo* BgpMonitor::mutable_last_updated_by() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000010u;
  ::kentik::core::v202303::UserInfo* _msg = _internal_mutable_last_updated_by();
  // @@protoc_insertion_point(field_mutable:kentik.bgp_monitoring.v202205beta1.BgpMonitor.last_updated_by)
  return _msg;
}
inline void BgpMonitor::set_allocated_last_updated_by(::kentik::core::v202303::UserInfo* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.last_updated_by_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }

  _impl_.last_updated_by_ = reinterpret_cast<::kentik::core::v202303::UserInfo*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.bgp_monitoring.v202205beta1.BgpMonitor.last_updated_by)
}

// repeated string labels = 9 [json_name = "labels"];
inline int BgpMonitor::_internal_labels_size() const {
  return _internal_labels().size();
}
inline int BgpMonitor::labels_size() const {
  return _internal_labels_size();
}
inline void BgpMonitor::clear_labels() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.labels_.Clear();
}
inline std::string* BgpMonitor::add_labels() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_labels()->Add();
  // @@protoc_insertion_point(field_add_mutable:kentik.bgp_monitoring.v202205beta1.BgpMonitor.labels)
  return _s;
}
inline const std::string& BgpMonitor::labels(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.bgp_monitoring.v202205beta1.BgpMonitor.labels)
  return _internal_labels().Get(index);
}
inline std::string* BgpMonitor::mutable_labels(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.bgp_monitoring.v202205beta1.BgpMonitor.labels)
  return _internal_mutable_labels()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void BgpMonitor::set_labels(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_labels()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:kentik.bgp_monitoring.v202205beta1.BgpMonitor.labels)
}
template <typename Arg_, typename... Args_>
inline void BgpMonitor::add_labels(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_labels(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:kentik.bgp_monitoring.v202205beta1.BgpMonitor.labels)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
BgpMonitor::labels() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.bgp_monitoring.v202205beta1.BgpMonitor.labels)
  return _internal_labels();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
BgpMonitor::mutable_labels() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.bgp_monitoring.v202205beta1.BgpMonitor.labels)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_labels();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
BgpMonitor::_internal_labels() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.labels_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
BgpMonitor::_internal_mutable_labels() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.labels_;
}

// -------------------------------------------------------------------

// RouteInfo

// .kentik.bgp_monitoring.v202205beta1.Nlri nlri = 1 [json_name = "nlri"];
inline bool RouteInfo::has_nlri() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.nlri_ != nullptr);
  return value;
}
inline void RouteInfo::clear_nlri() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.nlri_ != nullptr) _impl_.nlri_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::kentik::bgp_monitoring::v202205beta1::Nlri& RouteInfo::_internal_nlri() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::bgp_monitoring::v202205beta1::Nlri* p = _impl_.nlri_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::bgp_monitoring::v202205beta1::Nlri&>(::kentik::bgp_monitoring::v202205beta1::_Nlri_default_instance_);
}
inline const ::kentik::bgp_monitoring::v202205beta1::Nlri& RouteInfo::nlri() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.bgp_monitoring.v202205beta1.RouteInfo.nlri)
  return _internal_nlri();
}
inline void RouteInfo::unsafe_arena_set_allocated_nlri(::kentik::bgp_monitoring::v202205beta1::Nlri* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.nlri_);
  }
  _impl_.nlri_ = reinterpret_cast<::kentik::bgp_monitoring::v202205beta1::Nlri*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.bgp_monitoring.v202205beta1.RouteInfo.nlri)
}
inline ::kentik::bgp_monitoring::v202205beta1::Nlri* RouteInfo::release_nlri() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::bgp_monitoring::v202205beta1::Nlri* released = _impl_.nlri_;
  _impl_.nlri_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::bgp_monitoring::v202205beta1::Nlri* RouteInfo::unsafe_arena_release_nlri() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.bgp_monitoring.v202205beta1.RouteInfo.nlri)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::bgp_monitoring::v202205beta1::Nlri* temp = _impl_.nlri_;
  _impl_.nlri_ = nullptr;
  return temp;
}
inline ::kentik::bgp_monitoring::v202205beta1::Nlri* RouteInfo::_internal_mutable_nlri() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.nlri_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::bgp_monitoring::v202205beta1::Nlri>(GetArena());
    _impl_.nlri_ = reinterpret_cast<::kentik::bgp_monitoring::v202205beta1::Nlri*>(p);
  }
  return _impl_.nlri_;
}
inline ::kentik::bgp_monitoring::v202205beta1::Nlri* RouteInfo::mutable_nlri() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::kentik::bgp_monitoring::v202205beta1::Nlri* _msg = _internal_mutable_nlri();
  // @@protoc_insertion_point(field_mutable:kentik.bgp_monitoring.v202205beta1.RouteInfo.nlri)
  return _msg;
}
inline void RouteInfo::set_allocated_nlri(::kentik::bgp_monitoring::v202205beta1::Nlri* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.nlri_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.nlri_ = reinterpret_cast<::kentik::bgp_monitoring::v202205beta1::Nlri*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.bgp_monitoring.v202205beta1.RouteInfo.nlri)
}

// uint32 origin_asn = 2 [json_name = "originAsn", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void RouteInfo::clear_origin_asn() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.origin_asn_ = 0u;
}
inline ::uint32_t RouteInfo::origin_asn() const {
  // @@protoc_insertion_point(field_get:kentik.bgp_monitoring.v202205beta1.RouteInfo.origin_asn)
  return _internal_origin_asn();
}
inline void RouteInfo::set_origin_asn(::uint32_t value) {
  _internal_set_origin_asn(value);
  // @@protoc_insertion_point(field_set:kentik.bgp_monitoring.v202205beta1.RouteInfo.origin_asn)
}
inline ::uint32_t RouteInfo::_internal_origin_asn() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.origin_asn_;
}
inline void RouteInfo::_internal_set_origin_asn(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.origin_asn_ = value;
}

// repeated string as_path = 3 [json_name = "asPath", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int RouteInfo::_internal_as_path_size() const {
  return _internal_as_path().size();
}
inline int RouteInfo::as_path_size() const {
  return _internal_as_path_size();
}
inline void RouteInfo::clear_as_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.as_path_.Clear();
}
inline std::string* RouteInfo::add_as_path() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_as_path()->Add();
  // @@protoc_insertion_point(field_add_mutable:kentik.bgp_monitoring.v202205beta1.RouteInfo.as_path)
  return _s;
}
inline const std::string& RouteInfo::as_path(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.bgp_monitoring.v202205beta1.RouteInfo.as_path)
  return _internal_as_path().Get(index);
}
inline std::string* RouteInfo::mutable_as_path(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.bgp_monitoring.v202205beta1.RouteInfo.as_path)
  return _internal_mutable_as_path()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void RouteInfo::set_as_path(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_as_path()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:kentik.bgp_monitoring.v202205beta1.RouteInfo.as_path)
}
template <typename Arg_, typename... Args_>
inline void RouteInfo::add_as_path(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_as_path(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:kentik.bgp_monitoring.v202205beta1.RouteInfo.as_path)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
RouteInfo::as_path() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.bgp_monitoring.v202205beta1.RouteInfo.as_path)
  return _internal_as_path();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
RouteInfo::mutable_as_path() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.bgp_monitoring.v202205beta1.RouteInfo.as_path)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_as_path();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
RouteInfo::_internal_as_path() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.as_path_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
RouteInfo::_internal_mutable_as_path() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.as_path_;
}

// .kentik.net.v202303.VantagePoint vantage_point = 4 [json_name = "vantagePoint", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool RouteInfo::has_vantage_point() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.vantage_point_ != nullptr);
  return value;
}
inline const ::kentik::net::v202303::VantagePoint& RouteInfo::_internal_vantage_point() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::net::v202303::VantagePoint* p = _impl_.vantage_point_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::net::v202303::VantagePoint&>(::kentik::net::v202303::_VantagePoint_default_instance_);
}
inline const ::kentik::net::v202303::VantagePoint& RouteInfo::vantage_point() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.bgp_monitoring.v202205beta1.RouteInfo.vantage_point)
  return _internal_vantage_point();
}
inline void RouteInfo::unsafe_arena_set_allocated_vantage_point(::kentik::net::v202303::VantagePoint* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.vantage_point_);
  }
  _impl_.vantage_point_ = reinterpret_cast<::kentik::net::v202303::VantagePoint*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.bgp_monitoring.v202205beta1.RouteInfo.vantage_point)
}
inline ::kentik::net::v202303::VantagePoint* RouteInfo::release_vantage_point() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::kentik::net::v202303::VantagePoint* released = _impl_.vantage_point_;
  _impl_.vantage_point_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::net::v202303::VantagePoint* RouteInfo::unsafe_arena_release_vantage_point() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.bgp_monitoring.v202205beta1.RouteInfo.vantage_point)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::kentik::net::v202303::VantagePoint* temp = _impl_.vantage_point_;
  _impl_.vantage_point_ = nullptr;
  return temp;
}
inline ::kentik::net::v202303::VantagePoint* RouteInfo::_internal_mutable_vantage_point() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.vantage_point_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::net::v202303::VantagePoint>(GetArena());
    _impl_.vantage_point_ = reinterpret_cast<::kentik::net::v202303::VantagePoint*>(p);
  }
  return _impl_.vantage_point_;
}
inline ::kentik::net::v202303::VantagePoint* RouteInfo::mutable_vantage_point() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::kentik::net::v202303::VantagePoint* _msg = _internal_mutable_vantage_point();
  // @@protoc_insertion_point(field_mutable:kentik.bgp_monitoring.v202205beta1.RouteInfo.vantage_point)
  return _msg;
}
inline void RouteInfo::set_allocated_vantage_point(::kentik::net::v202303::VantagePoint* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.vantage_point_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.vantage_point_ = reinterpret_cast<::kentik::net::v202303::VantagePoint*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.bgp_monitoring.v202205beta1.RouteInfo.vantage_point)
}

// .kentik.net.v202303.RpkiStatus rpki_status = 5 [json_name = "rpkiStatus"];
inline void RouteInfo::clear_rpki_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rpki_status_ = 0;
}
inline ::kentik::net::v202303::RpkiStatus RouteInfo::rpki_status() const {
  // @@protoc_insertion_point(field_get:kentik.bgp_monitoring.v202205beta1.RouteInfo.rpki_status)
  return _internal_rpki_status();
}
inline void RouteInfo::set_rpki_status(::kentik::net::v202303::RpkiStatus value) {
  _internal_set_rpki_status(value);
  // @@protoc_insertion_point(field_set:kentik.bgp_monitoring.v202205beta1.RouteInfo.rpki_status)
}
inline ::kentik::net::v202303::RpkiStatus RouteInfo::_internal_rpki_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::kentik::net::v202303::RpkiStatus>(_impl_.rpki_status_);
}
inline void RouteInfo::_internal_set_rpki_status(::kentik::net::v202303::RpkiStatus value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rpki_status_ = value;
}

// string nexthop = 6 [json_name = "nexthop"];
inline void RouteInfo::clear_nexthop() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nexthop_.ClearToEmpty();
}
inline const std::string& RouteInfo::nexthop() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.bgp_monitoring.v202205beta1.RouteInfo.nexthop)
  return _internal_nexthop();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RouteInfo::set_nexthop(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nexthop_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.bgp_monitoring.v202205beta1.RouteInfo.nexthop)
}
inline std::string* RouteInfo::mutable_nexthop() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_nexthop();
  // @@protoc_insertion_point(field_mutable:kentik.bgp_monitoring.v202205beta1.RouteInfo.nexthop)
  return _s;
}
inline const std::string& RouteInfo::_internal_nexthop() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.nexthop_.Get();
}
inline void RouteInfo::_internal_set_nexthop(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nexthop_.Set(value, GetArena());
}
inline std::string* RouteInfo::_internal_mutable_nexthop() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.nexthop_.Mutable( GetArena());
}
inline std::string* RouteInfo::release_nexthop() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.bgp_monitoring.v202205beta1.RouteInfo.nexthop)
  return _impl_.nexthop_.Release();
}
inline void RouteInfo::set_allocated_nexthop(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nexthop_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.nexthop_.IsDefault()) {
    _impl_.nexthop_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.bgp_monitoring.v202205beta1.RouteInfo.nexthop)
}

// -------------------------------------------------------------------

// BgpMetric

// .google.protobuf.Timestamp timestamp = 1 [json_name = "timestamp"];
inline bool BgpMetric::has_timestamp() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.timestamp_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& BgpMetric::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.timestamp_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& BgpMetric::timestamp() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.bgp_monitoring.v202205beta1.BgpMetric.timestamp)
  return _internal_timestamp();
}
inline void BgpMetric::unsafe_arena_set_allocated_timestamp(::google::protobuf::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.timestamp_);
  }
  _impl_.timestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.bgp_monitoring.v202205beta1.BgpMetric.timestamp)
}
inline ::google::protobuf::Timestamp* BgpMetric::release_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* released = _impl_.timestamp_;
  _impl_.timestamp_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* BgpMetric::unsafe_arena_release_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.bgp_monitoring.v202205beta1.BgpMetric.timestamp)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* temp = _impl_.timestamp_;
  _impl_.timestamp_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* BgpMetric::_internal_mutable_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.timestamp_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.timestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.timestamp_;
}
inline ::google::protobuf::Timestamp* BgpMetric::mutable_timestamp() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_timestamp();
  // @@protoc_insertion_point(field_mutable:kentik.bgp_monitoring.v202205beta1.BgpMetric.timestamp)
  return _msg;
}
inline void BgpMetric::set_allocated_timestamp(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.timestamp_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.timestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.bgp_monitoring.v202205beta1.BgpMetric.timestamp)
}

// .kentik.bgp_monitoring.v202205beta1.Nlri nlri = 2 [json_name = "nlri"];
inline bool BgpMetric::has_nlri() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.nlri_ != nullptr);
  return value;
}
inline void BgpMetric::clear_nlri() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.nlri_ != nullptr) _impl_.nlri_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::kentik::bgp_monitoring::v202205beta1::Nlri& BgpMetric::_internal_nlri() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::bgp_monitoring::v202205beta1::Nlri* p = _impl_.nlri_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::bgp_monitoring::v202205beta1::Nlri&>(::kentik::bgp_monitoring::v202205beta1::_Nlri_default_instance_);
}
inline const ::kentik::bgp_monitoring::v202205beta1::Nlri& BgpMetric::nlri() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.bgp_monitoring.v202205beta1.BgpMetric.nlri)
  return _internal_nlri();
}
inline void BgpMetric::unsafe_arena_set_allocated_nlri(::kentik::bgp_monitoring::v202205beta1::Nlri* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.nlri_);
  }
  _impl_.nlri_ = reinterpret_cast<::kentik::bgp_monitoring::v202205beta1::Nlri*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.bgp_monitoring.v202205beta1.BgpMetric.nlri)
}
inline ::kentik::bgp_monitoring::v202205beta1::Nlri* BgpMetric::release_nlri() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::kentik::bgp_monitoring::v202205beta1::Nlri* released = _impl_.nlri_;
  _impl_.nlri_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::bgp_monitoring::v202205beta1::Nlri* BgpMetric::unsafe_arena_release_nlri() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.bgp_monitoring.v202205beta1.BgpMetric.nlri)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::kentik::bgp_monitoring::v202205beta1::Nlri* temp = _impl_.nlri_;
  _impl_.nlri_ = nullptr;
  return temp;
}
inline ::kentik::bgp_monitoring::v202205beta1::Nlri* BgpMetric::_internal_mutable_nlri() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.nlri_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::bgp_monitoring::v202205beta1::Nlri>(GetArena());
    _impl_.nlri_ = reinterpret_cast<::kentik::bgp_monitoring::v202205beta1::Nlri*>(p);
  }
  return _impl_.nlri_;
}
inline ::kentik::bgp_monitoring::v202205beta1::Nlri* BgpMetric::mutable_nlri() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::kentik::bgp_monitoring::v202205beta1::Nlri* _msg = _internal_mutable_nlri();
  // @@protoc_insertion_point(field_mutable:kentik.bgp_monitoring.v202205beta1.BgpMetric.nlri)
  return _msg;
}
inline void BgpMetric::set_allocated_nlri(::kentik::bgp_monitoring::v202205beta1::Nlri* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.nlri_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.nlri_ = reinterpret_cast<::kentik::bgp_monitoring::v202205beta1::Nlri*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.bgp_monitoring.v202205beta1.BgpMetric.nlri)
}

// float reachability = 3 [json_name = "reachability"];
inline bool BgpMetric::has_reachability() const {
  return type_case() == kReachability;
}
inline void BgpMetric::set_has_reachability() {
  _impl_._oneof_case_[0] = kReachability;
}
inline void BgpMetric::clear_reachability() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (type_case() == kReachability) {
    _impl_.type_.reachability_ = 0;
    clear_has_type();
  }
}
inline float BgpMetric::reachability() const {
  // @@protoc_insertion_point(field_get:kentik.bgp_monitoring.v202205beta1.BgpMetric.reachability)
  return _internal_reachability();
}
inline void BgpMetric::set_reachability(float value) {
  if (type_case() != kReachability) {
    clear_type();
    set_has_reachability();
  }
  _impl_.type_.reachability_ = value;
  // @@protoc_insertion_point(field_set:kentik.bgp_monitoring.v202205beta1.BgpMetric.reachability)
}
inline float BgpMetric::_internal_reachability() const {
  if (type_case() == kReachability) {
    return _impl_.type_.reachability_;
  }
  return 0;
}

// uint32 path_changes = 5 [json_name = "pathChanges"];
inline bool BgpMetric::has_path_changes() const {
  return type_case() == kPathChanges;
}
inline void BgpMetric::set_has_path_changes() {
  _impl_._oneof_case_[0] = kPathChanges;
}
inline void BgpMetric::clear_path_changes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (type_case() == kPathChanges) {
    _impl_.type_.path_changes_ = 0u;
    clear_has_type();
  }
}
inline ::uint32_t BgpMetric::path_changes() const {
  // @@protoc_insertion_point(field_get:kentik.bgp_monitoring.v202205beta1.BgpMetric.path_changes)
  return _internal_path_changes();
}
inline void BgpMetric::set_path_changes(::uint32_t value) {
  if (type_case() != kPathChanges) {
    clear_type();
    set_has_path_changes();
  }
  _impl_.type_.path_changes_ = value;
  // @@protoc_insertion_point(field_set:kentik.bgp_monitoring.v202205beta1.BgpMetric.path_changes)
}
inline ::uint32_t BgpMetric::_internal_path_changes() const {
  if (type_case() == kPathChanges) {
    return _impl_.type_.path_changes_;
  }
  return 0u;
}

inline bool BgpMetric::has_type() const {
  return type_case() != TYPE_NOT_SET;
}
inline void BgpMetric::clear_has_type() {
  _impl_._oneof_case_[0] = TYPE_NOT_SET;
}
inline BgpMetric::TypeCase BgpMetric::type_case() const {
  return BgpMetric::TypeCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// ListMonitorsRequest

// -------------------------------------------------------------------

// ListMonitorsResponse

// repeated .kentik.bgp_monitoring.v202205beta1.BgpMonitor monitors = 1 [json_name = "monitors"];
inline int ListMonitorsResponse::_internal_monitors_size() const {
  return _internal_monitors().size();
}
inline int ListMonitorsResponse::monitors_size() const {
  return _internal_monitors_size();
}
inline void ListMonitorsResponse::clear_monitors() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.monitors_.Clear();
}
inline ::kentik::bgp_monitoring::v202205beta1::BgpMonitor* ListMonitorsResponse::mutable_monitors(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.bgp_monitoring.v202205beta1.ListMonitorsResponse.monitors)
  return _internal_mutable_monitors()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::kentik::bgp_monitoring::v202205beta1::BgpMonitor>* ListMonitorsResponse::mutable_monitors()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.bgp_monitoring.v202205beta1.ListMonitorsResponse.monitors)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_monitors();
}
inline const ::kentik::bgp_monitoring::v202205beta1::BgpMonitor& ListMonitorsResponse::monitors(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.bgp_monitoring.v202205beta1.ListMonitorsResponse.monitors)
  return _internal_monitors().Get(index);
}
inline ::kentik::bgp_monitoring::v202205beta1::BgpMonitor* ListMonitorsResponse::add_monitors() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::kentik::bgp_monitoring::v202205beta1::BgpMonitor* _add = _internal_mutable_monitors()->Add();
  // @@protoc_insertion_point(field_add:kentik.bgp_monitoring.v202205beta1.ListMonitorsResponse.monitors)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::bgp_monitoring::v202205beta1::BgpMonitor>& ListMonitorsResponse::monitors() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.bgp_monitoring.v202205beta1.ListMonitorsResponse.monitors)
  return _internal_monitors();
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::bgp_monitoring::v202205beta1::BgpMonitor>&
ListMonitorsResponse::_internal_monitors() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.monitors_;
}
inline ::google::protobuf::RepeatedPtrField<::kentik::bgp_monitoring::v202205beta1::BgpMonitor>*
ListMonitorsResponse::_internal_mutable_monitors() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.monitors_;
}

// uint32 invalid_count = 2 [json_name = "invalidCount"];
inline void ListMonitorsResponse::clear_invalid_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.invalid_count_ = 0u;
}
inline ::uint32_t ListMonitorsResponse::invalid_count() const {
  // @@protoc_insertion_point(field_get:kentik.bgp_monitoring.v202205beta1.ListMonitorsResponse.invalid_count)
  return _internal_invalid_count();
}
inline void ListMonitorsResponse::set_invalid_count(::uint32_t value) {
  _internal_set_invalid_count(value);
  // @@protoc_insertion_point(field_set:kentik.bgp_monitoring.v202205beta1.ListMonitorsResponse.invalid_count)
}
inline ::uint32_t ListMonitorsResponse::_internal_invalid_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.invalid_count_;
}
inline void ListMonitorsResponse::_internal_set_invalid_count(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.invalid_count_ = value;
}

// -------------------------------------------------------------------

// CreateMonitorRequest

// .kentik.bgp_monitoring.v202205beta1.BgpMonitor monitor = 1 [json_name = "monitor"];
inline bool CreateMonitorRequest::has_monitor() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.monitor_ != nullptr);
  return value;
}
inline void CreateMonitorRequest::clear_monitor() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.monitor_ != nullptr) _impl_.monitor_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::kentik::bgp_monitoring::v202205beta1::BgpMonitor& CreateMonitorRequest::_internal_monitor() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::bgp_monitoring::v202205beta1::BgpMonitor* p = _impl_.monitor_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::bgp_monitoring::v202205beta1::BgpMonitor&>(::kentik::bgp_monitoring::v202205beta1::_BgpMonitor_default_instance_);
}
inline const ::kentik::bgp_monitoring::v202205beta1::BgpMonitor& CreateMonitorRequest::monitor() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.bgp_monitoring.v202205beta1.CreateMonitorRequest.monitor)
  return _internal_monitor();
}
inline void CreateMonitorRequest::unsafe_arena_set_allocated_monitor(::kentik::bgp_monitoring::v202205beta1::BgpMonitor* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.monitor_);
  }
  _impl_.monitor_ = reinterpret_cast<::kentik::bgp_monitoring::v202205beta1::BgpMonitor*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.bgp_monitoring.v202205beta1.CreateMonitorRequest.monitor)
}
inline ::kentik::bgp_monitoring::v202205beta1::BgpMonitor* CreateMonitorRequest::release_monitor() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::bgp_monitoring::v202205beta1::BgpMonitor* released = _impl_.monitor_;
  _impl_.monitor_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::bgp_monitoring::v202205beta1::BgpMonitor* CreateMonitorRequest::unsafe_arena_release_monitor() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.bgp_monitoring.v202205beta1.CreateMonitorRequest.monitor)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::bgp_monitoring::v202205beta1::BgpMonitor* temp = _impl_.monitor_;
  _impl_.monitor_ = nullptr;
  return temp;
}
inline ::kentik::bgp_monitoring::v202205beta1::BgpMonitor* CreateMonitorRequest::_internal_mutable_monitor() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.monitor_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::bgp_monitoring::v202205beta1::BgpMonitor>(GetArena());
    _impl_.monitor_ = reinterpret_cast<::kentik::bgp_monitoring::v202205beta1::BgpMonitor*>(p);
  }
  return _impl_.monitor_;
}
inline ::kentik::bgp_monitoring::v202205beta1::BgpMonitor* CreateMonitorRequest::mutable_monitor() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::kentik::bgp_monitoring::v202205beta1::BgpMonitor* _msg = _internal_mutable_monitor();
  // @@protoc_insertion_point(field_mutable:kentik.bgp_monitoring.v202205beta1.CreateMonitorRequest.monitor)
  return _msg;
}
inline void CreateMonitorRequest::set_allocated_monitor(::kentik::bgp_monitoring::v202205beta1::BgpMonitor* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.monitor_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.monitor_ = reinterpret_cast<::kentik::bgp_monitoring::v202205beta1::BgpMonitor*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.bgp_monitoring.v202205beta1.CreateMonitorRequest.monitor)
}

// -------------------------------------------------------------------

// CreateMonitorResponse

// .kentik.bgp_monitoring.v202205beta1.BgpMonitor monitor = 1 [json_name = "monitor"];
inline bool CreateMonitorResponse::has_monitor() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.monitor_ != nullptr);
  return value;
}
inline void CreateMonitorResponse::clear_monitor() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.monitor_ != nullptr) _impl_.monitor_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::kentik::bgp_monitoring::v202205beta1::BgpMonitor& CreateMonitorResponse::_internal_monitor() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::bgp_monitoring::v202205beta1::BgpMonitor* p = _impl_.monitor_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::bgp_monitoring::v202205beta1::BgpMonitor&>(::kentik::bgp_monitoring::v202205beta1::_BgpMonitor_default_instance_);
}
inline const ::kentik::bgp_monitoring::v202205beta1::BgpMonitor& CreateMonitorResponse::monitor() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.bgp_monitoring.v202205beta1.CreateMonitorResponse.monitor)
  return _internal_monitor();
}
inline void CreateMonitorResponse::unsafe_arena_set_allocated_monitor(::kentik::bgp_monitoring::v202205beta1::BgpMonitor* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.monitor_);
  }
  _impl_.monitor_ = reinterpret_cast<::kentik::bgp_monitoring::v202205beta1::BgpMonitor*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.bgp_monitoring.v202205beta1.CreateMonitorResponse.monitor)
}
inline ::kentik::bgp_monitoring::v202205beta1::BgpMonitor* CreateMonitorResponse::release_monitor() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::bgp_monitoring::v202205beta1::BgpMonitor* released = _impl_.monitor_;
  _impl_.monitor_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::bgp_monitoring::v202205beta1::BgpMonitor* CreateMonitorResponse::unsafe_arena_release_monitor() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.bgp_monitoring.v202205beta1.CreateMonitorResponse.monitor)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::bgp_monitoring::v202205beta1::BgpMonitor* temp = _impl_.monitor_;
  _impl_.monitor_ = nullptr;
  return temp;
}
inline ::kentik::bgp_monitoring::v202205beta1::BgpMonitor* CreateMonitorResponse::_internal_mutable_monitor() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.monitor_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::bgp_monitoring::v202205beta1::BgpMonitor>(GetArena());
    _impl_.monitor_ = reinterpret_cast<::kentik::bgp_monitoring::v202205beta1::BgpMonitor*>(p);
  }
  return _impl_.monitor_;
}
inline ::kentik::bgp_monitoring::v202205beta1::BgpMonitor* CreateMonitorResponse::mutable_monitor() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::kentik::bgp_monitoring::v202205beta1::BgpMonitor* _msg = _internal_mutable_monitor();
  // @@protoc_insertion_point(field_mutable:kentik.bgp_monitoring.v202205beta1.CreateMonitorResponse.monitor)
  return _msg;
}
inline void CreateMonitorResponse::set_allocated_monitor(::kentik::bgp_monitoring::v202205beta1::BgpMonitor* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.monitor_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.monitor_ = reinterpret_cast<::kentik::bgp_monitoring::v202205beta1::BgpMonitor*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.bgp_monitoring.v202205beta1.CreateMonitorResponse.monitor)
}

// -------------------------------------------------------------------

// GetMonitorRequest

// string id = 1 [json_name = "id"];
inline void GetMonitorRequest::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& GetMonitorRequest::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.bgp_monitoring.v202205beta1.GetMonitorRequest.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetMonitorRequest::set_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.bgp_monitoring.v202205beta1.GetMonitorRequest.id)
}
inline std::string* GetMonitorRequest::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:kentik.bgp_monitoring.v202205beta1.GetMonitorRequest.id)
  return _s;
}
inline const std::string& GetMonitorRequest::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void GetMonitorRequest::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(value, GetArena());
}
inline std::string* GetMonitorRequest::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* GetMonitorRequest::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.bgp_monitoring.v202205beta1.GetMonitorRequest.id)
  return _impl_.id_.Release();
}
inline void GetMonitorRequest::set_allocated_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.id_.IsDefault()) {
    _impl_.id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.bgp_monitoring.v202205beta1.GetMonitorRequest.id)
}

// -------------------------------------------------------------------

// GetMonitorResponse

// .kentik.bgp_monitoring.v202205beta1.BgpMonitor monitor = 1 [json_name = "monitor"];
inline bool GetMonitorResponse::has_monitor() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.monitor_ != nullptr);
  return value;
}
inline void GetMonitorResponse::clear_monitor() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.monitor_ != nullptr) _impl_.monitor_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::kentik::bgp_monitoring::v202205beta1::BgpMonitor& GetMonitorResponse::_internal_monitor() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::bgp_monitoring::v202205beta1::BgpMonitor* p = _impl_.monitor_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::bgp_monitoring::v202205beta1::BgpMonitor&>(::kentik::bgp_monitoring::v202205beta1::_BgpMonitor_default_instance_);
}
inline const ::kentik::bgp_monitoring::v202205beta1::BgpMonitor& GetMonitorResponse::monitor() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.bgp_monitoring.v202205beta1.GetMonitorResponse.monitor)
  return _internal_monitor();
}
inline void GetMonitorResponse::unsafe_arena_set_allocated_monitor(::kentik::bgp_monitoring::v202205beta1::BgpMonitor* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.monitor_);
  }
  _impl_.monitor_ = reinterpret_cast<::kentik::bgp_monitoring::v202205beta1::BgpMonitor*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.bgp_monitoring.v202205beta1.GetMonitorResponse.monitor)
}
inline ::kentik::bgp_monitoring::v202205beta1::BgpMonitor* GetMonitorResponse::release_monitor() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::bgp_monitoring::v202205beta1::BgpMonitor* released = _impl_.monitor_;
  _impl_.monitor_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::bgp_monitoring::v202205beta1::BgpMonitor* GetMonitorResponse::unsafe_arena_release_monitor() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.bgp_monitoring.v202205beta1.GetMonitorResponse.monitor)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::bgp_monitoring::v202205beta1::BgpMonitor* temp = _impl_.monitor_;
  _impl_.monitor_ = nullptr;
  return temp;
}
inline ::kentik::bgp_monitoring::v202205beta1::BgpMonitor* GetMonitorResponse::_internal_mutable_monitor() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.monitor_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::bgp_monitoring::v202205beta1::BgpMonitor>(GetArena());
    _impl_.monitor_ = reinterpret_cast<::kentik::bgp_monitoring::v202205beta1::BgpMonitor*>(p);
  }
  return _impl_.monitor_;
}
inline ::kentik::bgp_monitoring::v202205beta1::BgpMonitor* GetMonitorResponse::mutable_monitor() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::kentik::bgp_monitoring::v202205beta1::BgpMonitor* _msg = _internal_mutable_monitor();
  // @@protoc_insertion_point(field_mutable:kentik.bgp_monitoring.v202205beta1.GetMonitorResponse.monitor)
  return _msg;
}
inline void GetMonitorResponse::set_allocated_monitor(::kentik::bgp_monitoring::v202205beta1::BgpMonitor* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.monitor_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.monitor_ = reinterpret_cast<::kentik::bgp_monitoring::v202205beta1::BgpMonitor*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.bgp_monitoring.v202205beta1.GetMonitorResponse.monitor)
}

// -------------------------------------------------------------------

// UpdateMonitorRequest

// .kentik.bgp_monitoring.v202205beta1.BgpMonitor monitor = 1 [json_name = "monitor"];
inline bool UpdateMonitorRequest::has_monitor() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.monitor_ != nullptr);
  return value;
}
inline void UpdateMonitorRequest::clear_monitor() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.monitor_ != nullptr) _impl_.monitor_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::kentik::bgp_monitoring::v202205beta1::BgpMonitor& UpdateMonitorRequest::_internal_monitor() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::bgp_monitoring::v202205beta1::BgpMonitor* p = _impl_.monitor_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::bgp_monitoring::v202205beta1::BgpMonitor&>(::kentik::bgp_monitoring::v202205beta1::_BgpMonitor_default_instance_);
}
inline const ::kentik::bgp_monitoring::v202205beta1::BgpMonitor& UpdateMonitorRequest::monitor() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.bgp_monitoring.v202205beta1.UpdateMonitorRequest.monitor)
  return _internal_monitor();
}
inline void UpdateMonitorRequest::unsafe_arena_set_allocated_monitor(::kentik::bgp_monitoring::v202205beta1::BgpMonitor* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.monitor_);
  }
  _impl_.monitor_ = reinterpret_cast<::kentik::bgp_monitoring::v202205beta1::BgpMonitor*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.bgp_monitoring.v202205beta1.UpdateMonitorRequest.monitor)
}
inline ::kentik::bgp_monitoring::v202205beta1::BgpMonitor* UpdateMonitorRequest::release_monitor() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::bgp_monitoring::v202205beta1::BgpMonitor* released = _impl_.monitor_;
  _impl_.monitor_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::bgp_monitoring::v202205beta1::BgpMonitor* UpdateMonitorRequest::unsafe_arena_release_monitor() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.bgp_monitoring.v202205beta1.UpdateMonitorRequest.monitor)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::bgp_monitoring::v202205beta1::BgpMonitor* temp = _impl_.monitor_;
  _impl_.monitor_ = nullptr;
  return temp;
}
inline ::kentik::bgp_monitoring::v202205beta1::BgpMonitor* UpdateMonitorRequest::_internal_mutable_monitor() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.monitor_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::bgp_monitoring::v202205beta1::BgpMonitor>(GetArena());
    _impl_.monitor_ = reinterpret_cast<::kentik::bgp_monitoring::v202205beta1::BgpMonitor*>(p);
  }
  return _impl_.monitor_;
}
inline ::kentik::bgp_monitoring::v202205beta1::BgpMonitor* UpdateMonitorRequest::mutable_monitor() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::kentik::bgp_monitoring::v202205beta1::BgpMonitor* _msg = _internal_mutable_monitor();
  // @@protoc_insertion_point(field_mutable:kentik.bgp_monitoring.v202205beta1.UpdateMonitorRequest.monitor)
  return _msg;
}
inline void UpdateMonitorRequest::set_allocated_monitor(::kentik::bgp_monitoring::v202205beta1::BgpMonitor* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.monitor_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.monitor_ = reinterpret_cast<::kentik::bgp_monitoring::v202205beta1::BgpMonitor*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.bgp_monitoring.v202205beta1.UpdateMonitorRequest.monitor)
}

// -------------------------------------------------------------------

// UpdateMonitorResponse

// .kentik.bgp_monitoring.v202205beta1.BgpMonitor monitor = 1 [json_name = "monitor"];
inline bool UpdateMonitorResponse::has_monitor() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.monitor_ != nullptr);
  return value;
}
inline void UpdateMonitorResponse::clear_monitor() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.monitor_ != nullptr) _impl_.monitor_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::kentik::bgp_monitoring::v202205beta1::BgpMonitor& UpdateMonitorResponse::_internal_monitor() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::bgp_monitoring::v202205beta1::BgpMonitor* p = _impl_.monitor_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::bgp_monitoring::v202205beta1::BgpMonitor&>(::kentik::bgp_monitoring::v202205beta1::_BgpMonitor_default_instance_);
}
inline const ::kentik::bgp_monitoring::v202205beta1::BgpMonitor& UpdateMonitorResponse::monitor() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.bgp_monitoring.v202205beta1.UpdateMonitorResponse.monitor)
  return _internal_monitor();
}
inline void UpdateMonitorResponse::unsafe_arena_set_allocated_monitor(::kentik::bgp_monitoring::v202205beta1::BgpMonitor* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.monitor_);
  }
  _impl_.monitor_ = reinterpret_cast<::kentik::bgp_monitoring::v202205beta1::BgpMonitor*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.bgp_monitoring.v202205beta1.UpdateMonitorResponse.monitor)
}
inline ::kentik::bgp_monitoring::v202205beta1::BgpMonitor* UpdateMonitorResponse::release_monitor() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::bgp_monitoring::v202205beta1::BgpMonitor* released = _impl_.monitor_;
  _impl_.monitor_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::bgp_monitoring::v202205beta1::BgpMonitor* UpdateMonitorResponse::unsafe_arena_release_monitor() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.bgp_monitoring.v202205beta1.UpdateMonitorResponse.monitor)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::bgp_monitoring::v202205beta1::BgpMonitor* temp = _impl_.monitor_;
  _impl_.monitor_ = nullptr;
  return temp;
}
inline ::kentik::bgp_monitoring::v202205beta1::BgpMonitor* UpdateMonitorResponse::_internal_mutable_monitor() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.monitor_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::bgp_monitoring::v202205beta1::BgpMonitor>(GetArena());
    _impl_.monitor_ = reinterpret_cast<::kentik::bgp_monitoring::v202205beta1::BgpMonitor*>(p);
  }
  return _impl_.monitor_;
}
inline ::kentik::bgp_monitoring::v202205beta1::BgpMonitor* UpdateMonitorResponse::mutable_monitor() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::kentik::bgp_monitoring::v202205beta1::BgpMonitor* _msg = _internal_mutable_monitor();
  // @@protoc_insertion_point(field_mutable:kentik.bgp_monitoring.v202205beta1.UpdateMonitorResponse.monitor)
  return _msg;
}
inline void UpdateMonitorResponse::set_allocated_monitor(::kentik::bgp_monitoring::v202205beta1::BgpMonitor* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.monitor_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.monitor_ = reinterpret_cast<::kentik::bgp_monitoring::v202205beta1::BgpMonitor*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.bgp_monitoring.v202205beta1.UpdateMonitorResponse.monitor)
}

// -------------------------------------------------------------------

// DeleteMonitorRequest

// string id = 1 [json_name = "id"];
inline void DeleteMonitorRequest::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& DeleteMonitorRequest::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.bgp_monitoring.v202205beta1.DeleteMonitorRequest.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeleteMonitorRequest::set_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.bgp_monitoring.v202205beta1.DeleteMonitorRequest.id)
}
inline std::string* DeleteMonitorRequest::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:kentik.bgp_monitoring.v202205beta1.DeleteMonitorRequest.id)
  return _s;
}
inline const std::string& DeleteMonitorRequest::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void DeleteMonitorRequest::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(value, GetArena());
}
inline std::string* DeleteMonitorRequest::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* DeleteMonitorRequest::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.bgp_monitoring.v202205beta1.DeleteMonitorRequest.id)
  return _impl_.id_.Release();
}
inline void DeleteMonitorRequest::set_allocated_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.id_.IsDefault()) {
    _impl_.id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.bgp_monitoring.v202205beta1.DeleteMonitorRequest.id)
}

// -------------------------------------------------------------------

// DeleteMonitorResponse

// -------------------------------------------------------------------

// SetMonitorStatusRequest

// string id = 1 [json_name = "id"];
inline void SetMonitorStatusRequest::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& SetMonitorStatusRequest::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.bgp_monitoring.v202205beta1.SetMonitorStatusRequest.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SetMonitorStatusRequest::set_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.bgp_monitoring.v202205beta1.SetMonitorStatusRequest.id)
}
inline std::string* SetMonitorStatusRequest::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:kentik.bgp_monitoring.v202205beta1.SetMonitorStatusRequest.id)
  return _s;
}
inline const std::string& SetMonitorStatusRequest::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void SetMonitorStatusRequest::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(value, GetArena());
}
inline std::string* SetMonitorStatusRequest::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* SetMonitorStatusRequest::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.bgp_monitoring.v202205beta1.SetMonitorStatusRequest.id)
  return _impl_.id_.Release();
}
inline void SetMonitorStatusRequest::set_allocated_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.id_.IsDefault()) {
    _impl_.id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.bgp_monitoring.v202205beta1.SetMonitorStatusRequest.id)
}

// .kentik.bgp_monitoring.v202205beta1.BgpMonitorStatus status = 2 [json_name = "status"];
inline void SetMonitorStatusRequest::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = 0;
}
inline ::kentik::bgp_monitoring::v202205beta1::BgpMonitorStatus SetMonitorStatusRequest::status() const {
  // @@protoc_insertion_point(field_get:kentik.bgp_monitoring.v202205beta1.SetMonitorStatusRequest.status)
  return _internal_status();
}
inline void SetMonitorStatusRequest::set_status(::kentik::bgp_monitoring::v202205beta1::BgpMonitorStatus value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:kentik.bgp_monitoring.v202205beta1.SetMonitorStatusRequest.status)
}
inline ::kentik::bgp_monitoring::v202205beta1::BgpMonitorStatus SetMonitorStatusRequest::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::kentik::bgp_monitoring::v202205beta1::BgpMonitorStatus>(_impl_.status_);
}
inline void SetMonitorStatusRequest::_internal_set_status(::kentik::bgp_monitoring::v202205beta1::BgpMonitorStatus value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = value;
}

// -------------------------------------------------------------------

// SetMonitorStatusResponse

// -------------------------------------------------------------------

// GetMetricsForTargetRequest

// .google.protobuf.Timestamp start_time = 1 [json_name = "startTime"];
inline bool GetMetricsForTargetRequest::has_start_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.start_time_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& GetMetricsForTargetRequest::_internal_start_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.start_time_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& GetMetricsForTargetRequest::start_time() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.bgp_monitoring.v202205beta1.GetMetricsForTargetRequest.start_time)
  return _internal_start_time();
}
inline void GetMetricsForTargetRequest::unsafe_arena_set_allocated_start_time(::google::protobuf::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.start_time_);
  }
  _impl_.start_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.bgp_monitoring.v202205beta1.GetMetricsForTargetRequest.start_time)
}
inline ::google::protobuf::Timestamp* GetMetricsForTargetRequest::release_start_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* released = _impl_.start_time_;
  _impl_.start_time_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* GetMetricsForTargetRequest::unsafe_arena_release_start_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.bgp_monitoring.v202205beta1.GetMetricsForTargetRequest.start_time)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* temp = _impl_.start_time_;
  _impl_.start_time_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* GetMetricsForTargetRequest::_internal_mutable_start_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.start_time_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.start_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.start_time_;
}
inline ::google::protobuf::Timestamp* GetMetricsForTargetRequest::mutable_start_time() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_start_time();
  // @@protoc_insertion_point(field_mutable:kentik.bgp_monitoring.v202205beta1.GetMetricsForTargetRequest.start_time)
  return _msg;
}
inline void GetMetricsForTargetRequest::set_allocated_start_time(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.start_time_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.start_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.bgp_monitoring.v202205beta1.GetMetricsForTargetRequest.start_time)
}

// .google.protobuf.Timestamp end_time = 2 [json_name = "endTime"];
inline bool GetMetricsForTargetRequest::has_end_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.end_time_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& GetMetricsForTargetRequest::_internal_end_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.end_time_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& GetMetricsForTargetRequest::end_time() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.bgp_monitoring.v202205beta1.GetMetricsForTargetRequest.end_time)
  return _internal_end_time();
}
inline void GetMetricsForTargetRequest::unsafe_arena_set_allocated_end_time(::google::protobuf::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.end_time_);
  }
  _impl_.end_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.bgp_monitoring.v202205beta1.GetMetricsForTargetRequest.end_time)
}
inline ::google::protobuf::Timestamp* GetMetricsForTargetRequest::release_end_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* released = _impl_.end_time_;
  _impl_.end_time_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* GetMetricsForTargetRequest::unsafe_arena_release_end_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.bgp_monitoring.v202205beta1.GetMetricsForTargetRequest.end_time)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* temp = _impl_.end_time_;
  _impl_.end_time_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* GetMetricsForTargetRequest::_internal_mutable_end_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.end_time_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.end_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.end_time_;
}
inline ::google::protobuf::Timestamp* GetMetricsForTargetRequest::mutable_end_time() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_end_time();
  // @@protoc_insertion_point(field_mutable:kentik.bgp_monitoring.v202205beta1.GetMetricsForTargetRequest.end_time)
  return _msg;
}
inline void GetMetricsForTargetRequest::set_allocated_end_time(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.end_time_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.end_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.bgp_monitoring.v202205beta1.GetMetricsForTargetRequest.end_time)
}

// .kentik.bgp_monitoring.v202205beta1.Nlri target = 3 [json_name = "target"];
inline bool GetMetricsForTargetRequest::has_target() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.target_ != nullptr);
  return value;
}
inline void GetMetricsForTargetRequest::clear_target() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.target_ != nullptr) _impl_.target_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::kentik::bgp_monitoring::v202205beta1::Nlri& GetMetricsForTargetRequest::_internal_target() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::bgp_monitoring::v202205beta1::Nlri* p = _impl_.target_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::bgp_monitoring::v202205beta1::Nlri&>(::kentik::bgp_monitoring::v202205beta1::_Nlri_default_instance_);
}
inline const ::kentik::bgp_monitoring::v202205beta1::Nlri& GetMetricsForTargetRequest::target() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.bgp_monitoring.v202205beta1.GetMetricsForTargetRequest.target)
  return _internal_target();
}
inline void GetMetricsForTargetRequest::unsafe_arena_set_allocated_target(::kentik::bgp_monitoring::v202205beta1::Nlri* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.target_);
  }
  _impl_.target_ = reinterpret_cast<::kentik::bgp_monitoring::v202205beta1::Nlri*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.bgp_monitoring.v202205beta1.GetMetricsForTargetRequest.target)
}
inline ::kentik::bgp_monitoring::v202205beta1::Nlri* GetMetricsForTargetRequest::release_target() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::kentik::bgp_monitoring::v202205beta1::Nlri* released = _impl_.target_;
  _impl_.target_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::bgp_monitoring::v202205beta1::Nlri* GetMetricsForTargetRequest::unsafe_arena_release_target() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.bgp_monitoring.v202205beta1.GetMetricsForTargetRequest.target)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::kentik::bgp_monitoring::v202205beta1::Nlri* temp = _impl_.target_;
  _impl_.target_ = nullptr;
  return temp;
}
inline ::kentik::bgp_monitoring::v202205beta1::Nlri* GetMetricsForTargetRequest::_internal_mutable_target() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.target_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::bgp_monitoring::v202205beta1::Nlri>(GetArena());
    _impl_.target_ = reinterpret_cast<::kentik::bgp_monitoring::v202205beta1::Nlri*>(p);
  }
  return _impl_.target_;
}
inline ::kentik::bgp_monitoring::v202205beta1::Nlri* GetMetricsForTargetRequest::mutable_target() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::kentik::bgp_monitoring::v202205beta1::Nlri* _msg = _internal_mutable_target();
  // @@protoc_insertion_point(field_mutable:kentik.bgp_monitoring.v202205beta1.GetMetricsForTargetRequest.target)
  return _msg;
}
inline void GetMetricsForTargetRequest::set_allocated_target(::kentik::bgp_monitoring::v202205beta1::Nlri* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.target_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.target_ = reinterpret_cast<::kentik::bgp_monitoring::v202205beta1::Nlri*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.bgp_monitoring.v202205beta1.GetMetricsForTargetRequest.target)
}

// bool include_covered = 4 [json_name = "includeCovered"];
inline void GetMetricsForTargetRequest::clear_include_covered() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.include_covered_ = false;
}
inline bool GetMetricsForTargetRequest::include_covered() const {
  // @@protoc_insertion_point(field_get:kentik.bgp_monitoring.v202205beta1.GetMetricsForTargetRequest.include_covered)
  return _internal_include_covered();
}
inline void GetMetricsForTargetRequest::set_include_covered(bool value) {
  _internal_set_include_covered(value);
  // @@protoc_insertion_point(field_set:kentik.bgp_monitoring.v202205beta1.GetMetricsForTargetRequest.include_covered)
}
inline bool GetMetricsForTargetRequest::_internal_include_covered() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.include_covered_;
}
inline void GetMetricsForTargetRequest::_internal_set_include_covered(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.include_covered_ = value;
}

// repeated .kentik.bgp_monitoring.v202205beta1.BgpMetricType metrics = 5 [json_name = "metrics"];
inline int GetMetricsForTargetRequest::_internal_metrics_size() const {
  return _internal_metrics().size();
}
inline int GetMetricsForTargetRequest::metrics_size() const {
  return _internal_metrics_size();
}
inline void GetMetricsForTargetRequest::clear_metrics() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.metrics_.Clear();
}
inline ::kentik::bgp_monitoring::v202205beta1::BgpMetricType GetMetricsForTargetRequest::metrics(int index) const {
  // @@protoc_insertion_point(field_get:kentik.bgp_monitoring.v202205beta1.GetMetricsForTargetRequest.metrics)
  return static_cast<::kentik::bgp_monitoring::v202205beta1::BgpMetricType>(_internal_metrics().Get(index));
}
inline void GetMetricsForTargetRequest::set_metrics(int index, ::kentik::bgp_monitoring::v202205beta1::BgpMetricType value) {
  _internal_mutable_metrics()->Set(index, value);
  // @@protoc_insertion_point(field_set:kentik.bgp_monitoring.v202205beta1.GetMetricsForTargetRequest.metrics)
}
inline void GetMetricsForTargetRequest::add_metrics(::kentik::bgp_monitoring::v202205beta1::BgpMetricType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_metrics()->Add(value);
  // @@protoc_insertion_point(field_add:kentik.bgp_monitoring.v202205beta1.GetMetricsForTargetRequest.metrics)
}
inline const ::google::protobuf::RepeatedField<int>& GetMetricsForTargetRequest::metrics() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.bgp_monitoring.v202205beta1.GetMetricsForTargetRequest.metrics)
  return _internal_metrics();
}
inline ::google::protobuf::RepeatedField<int>* GetMetricsForTargetRequest::mutable_metrics()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.bgp_monitoring.v202205beta1.GetMetricsForTargetRequest.metrics)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_metrics();
}
inline const ::google::protobuf::RepeatedField<int>& GetMetricsForTargetRequest::_internal_metrics()
    const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.metrics_;
}
inline ::google::protobuf::RepeatedField<int>* GetMetricsForTargetRequest::_internal_mutable_metrics() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.metrics_;
}

// -------------------------------------------------------------------

// GetMetricsForTargetResponse

// repeated .kentik.bgp_monitoring.v202205beta1.BgpMetric metrics = 1 [json_name = "metrics"];
inline int GetMetricsForTargetResponse::_internal_metrics_size() const {
  return _internal_metrics().size();
}
inline int GetMetricsForTargetResponse::metrics_size() const {
  return _internal_metrics_size();
}
inline void GetMetricsForTargetResponse::clear_metrics() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.metrics_.Clear();
}
inline ::kentik::bgp_monitoring::v202205beta1::BgpMetric* GetMetricsForTargetResponse::mutable_metrics(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.bgp_monitoring.v202205beta1.GetMetricsForTargetResponse.metrics)
  return _internal_mutable_metrics()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::kentik::bgp_monitoring::v202205beta1::BgpMetric>* GetMetricsForTargetResponse::mutable_metrics()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.bgp_monitoring.v202205beta1.GetMetricsForTargetResponse.metrics)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_metrics();
}
inline const ::kentik::bgp_monitoring::v202205beta1::BgpMetric& GetMetricsForTargetResponse::metrics(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.bgp_monitoring.v202205beta1.GetMetricsForTargetResponse.metrics)
  return _internal_metrics().Get(index);
}
inline ::kentik::bgp_monitoring::v202205beta1::BgpMetric* GetMetricsForTargetResponse::add_metrics() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::kentik::bgp_monitoring::v202205beta1::BgpMetric* _add = _internal_mutable_metrics()->Add();
  // @@protoc_insertion_point(field_add:kentik.bgp_monitoring.v202205beta1.GetMetricsForTargetResponse.metrics)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::bgp_monitoring::v202205beta1::BgpMetric>& GetMetricsForTargetResponse::metrics() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.bgp_monitoring.v202205beta1.GetMetricsForTargetResponse.metrics)
  return _internal_metrics();
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::bgp_monitoring::v202205beta1::BgpMetric>&
GetMetricsForTargetResponse::_internal_metrics() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.metrics_;
}
inline ::google::protobuf::RepeatedPtrField<::kentik::bgp_monitoring::v202205beta1::BgpMetric>*
GetMetricsForTargetResponse::_internal_mutable_metrics() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.metrics_;
}

// -------------------------------------------------------------------

// GetRoutesForTargetRequest

// .google.protobuf.Timestamp time = 1 [json_name = "time"];
inline bool GetRoutesForTargetRequest::has_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.time_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& GetRoutesForTargetRequest::_internal_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.time_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& GetRoutesForTargetRequest::time() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.bgp_monitoring.v202205beta1.GetRoutesForTargetRequest.time)
  return _internal_time();
}
inline void GetRoutesForTargetRequest::unsafe_arena_set_allocated_time(::google::protobuf::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.time_);
  }
  _impl_.time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.bgp_monitoring.v202205beta1.GetRoutesForTargetRequest.time)
}
inline ::google::protobuf::Timestamp* GetRoutesForTargetRequest::release_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* released = _impl_.time_;
  _impl_.time_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* GetRoutesForTargetRequest::unsafe_arena_release_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.bgp_monitoring.v202205beta1.GetRoutesForTargetRequest.time)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* temp = _impl_.time_;
  _impl_.time_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* GetRoutesForTargetRequest::_internal_mutable_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.time_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.time_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.time_;
}
inline ::google::protobuf::Timestamp* GetRoutesForTargetRequest::mutable_time() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_time();
  // @@protoc_insertion_point(field_mutable:kentik.bgp_monitoring.v202205beta1.GetRoutesForTargetRequest.time)
  return _msg;
}
inline void GetRoutesForTargetRequest::set_allocated_time(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.time_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.bgp_monitoring.v202205beta1.GetRoutesForTargetRequest.time)
}

// .kentik.bgp_monitoring.v202205beta1.Nlri target = 2 [json_name = "target"];
inline bool GetRoutesForTargetRequest::has_target() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.target_ != nullptr);
  return value;
}
inline void GetRoutesForTargetRequest::clear_target() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.target_ != nullptr) _impl_.target_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::kentik::bgp_monitoring::v202205beta1::Nlri& GetRoutesForTargetRequest::_internal_target() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::bgp_monitoring::v202205beta1::Nlri* p = _impl_.target_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::bgp_monitoring::v202205beta1::Nlri&>(::kentik::bgp_monitoring::v202205beta1::_Nlri_default_instance_);
}
inline const ::kentik::bgp_monitoring::v202205beta1::Nlri& GetRoutesForTargetRequest::target() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.bgp_monitoring.v202205beta1.GetRoutesForTargetRequest.target)
  return _internal_target();
}
inline void GetRoutesForTargetRequest::unsafe_arena_set_allocated_target(::kentik::bgp_monitoring::v202205beta1::Nlri* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.target_);
  }
  _impl_.target_ = reinterpret_cast<::kentik::bgp_monitoring::v202205beta1::Nlri*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.bgp_monitoring.v202205beta1.GetRoutesForTargetRequest.target)
}
inline ::kentik::bgp_monitoring::v202205beta1::Nlri* GetRoutesForTargetRequest::release_target() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::kentik::bgp_monitoring::v202205beta1::Nlri* released = _impl_.target_;
  _impl_.target_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::bgp_monitoring::v202205beta1::Nlri* GetRoutesForTargetRequest::unsafe_arena_release_target() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.bgp_monitoring.v202205beta1.GetRoutesForTargetRequest.target)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::kentik::bgp_monitoring::v202205beta1::Nlri* temp = _impl_.target_;
  _impl_.target_ = nullptr;
  return temp;
}
inline ::kentik::bgp_monitoring::v202205beta1::Nlri* GetRoutesForTargetRequest::_internal_mutable_target() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.target_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::bgp_monitoring::v202205beta1::Nlri>(GetArena());
    _impl_.target_ = reinterpret_cast<::kentik::bgp_monitoring::v202205beta1::Nlri*>(p);
  }
  return _impl_.target_;
}
inline ::kentik::bgp_monitoring::v202205beta1::Nlri* GetRoutesForTargetRequest::mutable_target() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::kentik::bgp_monitoring::v202205beta1::Nlri* _msg = _internal_mutable_target();
  // @@protoc_insertion_point(field_mutable:kentik.bgp_monitoring.v202205beta1.GetRoutesForTargetRequest.target)
  return _msg;
}
inline void GetRoutesForTargetRequest::set_allocated_target(::kentik::bgp_monitoring::v202205beta1::Nlri* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.target_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.target_ = reinterpret_cast<::kentik::bgp_monitoring::v202205beta1::Nlri*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.bgp_monitoring.v202205beta1.GetRoutesForTargetRequest.target)
}

// bool include_covered = 4 [json_name = "includeCovered"];
inline void GetRoutesForTargetRequest::clear_include_covered() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.include_covered_ = false;
}
inline bool GetRoutesForTargetRequest::include_covered() const {
  // @@protoc_insertion_point(field_get:kentik.bgp_monitoring.v202205beta1.GetRoutesForTargetRequest.include_covered)
  return _internal_include_covered();
}
inline void GetRoutesForTargetRequest::set_include_covered(bool value) {
  _internal_set_include_covered(value);
  // @@protoc_insertion_point(field_set:kentik.bgp_monitoring.v202205beta1.GetRoutesForTargetRequest.include_covered)
}
inline bool GetRoutesForTargetRequest::_internal_include_covered() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.include_covered_;
}
inline void GetRoutesForTargetRequest::_internal_set_include_covered(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.include_covered_ = value;
}

// bool check_rpki = 5 [json_name = "checkRpki"];
inline void GetRoutesForTargetRequest::clear_check_rpki() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.check_rpki_ = false;
}
inline bool GetRoutesForTargetRequest::check_rpki() const {
  // @@protoc_insertion_point(field_get:kentik.bgp_monitoring.v202205beta1.GetRoutesForTargetRequest.check_rpki)
  return _internal_check_rpki();
}
inline void GetRoutesForTargetRequest::set_check_rpki(bool value) {
  _internal_set_check_rpki(value);
  // @@protoc_insertion_point(field_set:kentik.bgp_monitoring.v202205beta1.GetRoutesForTargetRequest.check_rpki)
}
inline bool GetRoutesForTargetRequest::_internal_check_rpki() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.check_rpki_;
}
inline void GetRoutesForTargetRequest::_internal_set_check_rpki(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.check_rpki_ = value;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// GetRoutesForTargetResponse

// repeated .kentik.bgp_monitoring.v202205beta1.RouteInfo routes = 1 [json_name = "routes"];
inline int GetRoutesForTargetResponse::_internal_routes_size() const {
  return _internal_routes().size();
}
inline int GetRoutesForTargetResponse::routes_size() const {
  return _internal_routes_size();
}
inline void GetRoutesForTargetResponse::clear_routes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.routes_.Clear();
}
inline ::kentik::bgp_monitoring::v202205beta1::RouteInfo* GetRoutesForTargetResponse::mutable_routes(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.bgp_monitoring.v202205beta1.GetRoutesForTargetResponse.routes)
  return _internal_mutable_routes()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::kentik::bgp_monitoring::v202205beta1::RouteInfo>* GetRoutesForTargetResponse::mutable_routes()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.bgp_monitoring.v202205beta1.GetRoutesForTargetResponse.routes)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_routes();
}
inline const ::kentik::bgp_monitoring::v202205beta1::RouteInfo& GetRoutesForTargetResponse::routes(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.bgp_monitoring.v202205beta1.GetRoutesForTargetResponse.routes)
  return _internal_routes().Get(index);
}
inline ::kentik::bgp_monitoring::v202205beta1::RouteInfo* GetRoutesForTargetResponse::add_routes() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::kentik::bgp_monitoring::v202205beta1::RouteInfo* _add = _internal_mutable_routes()->Add();
  // @@protoc_insertion_point(field_add:kentik.bgp_monitoring.v202205beta1.GetRoutesForTargetResponse.routes)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::bgp_monitoring::v202205beta1::RouteInfo>& GetRoutesForTargetResponse::routes() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.bgp_monitoring.v202205beta1.GetRoutesForTargetResponse.routes)
  return _internal_routes();
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::bgp_monitoring::v202205beta1::RouteInfo>&
GetRoutesForTargetResponse::_internal_routes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.routes_;
}
inline ::google::protobuf::RepeatedPtrField<::kentik::bgp_monitoring::v202205beta1::RouteInfo>*
GetRoutesForTargetResponse::_internal_mutable_routes() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.routes_;
}

// map<uint32, string> as_names = 5 [json_name = "asNames"];
inline int GetRoutesForTargetResponse::_internal_as_names_size() const {
  return _internal_as_names().size();
}
inline int GetRoutesForTargetResponse::as_names_size() const {
  return _internal_as_names_size();
}
inline void GetRoutesForTargetResponse::clear_as_names() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.as_names_.Clear();
}
inline const ::google::protobuf::Map<::uint32_t, std::string>& GetRoutesForTargetResponse::_internal_as_names() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.as_names_.GetMap();
}
inline const ::google::protobuf::Map<::uint32_t, std::string>& GetRoutesForTargetResponse::as_names() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:kentik.bgp_monitoring.v202205beta1.GetRoutesForTargetResponse.as_names)
  return _internal_as_names();
}
inline ::google::protobuf::Map<::uint32_t, std::string>* GetRoutesForTargetResponse::_internal_mutable_as_names() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.as_names_.MutableMap();
}
inline ::google::protobuf::Map<::uint32_t, std::string>* GetRoutesForTargetResponse::mutable_as_names() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:kentik.bgp_monitoring.v202205beta1.GetRoutesForTargetResponse.as_names)
  return _internal_mutable_as_names();
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v202205beta1
}  // namespace bgp_monitoring
}  // namespace kentik


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::kentik::bgp_monitoring::v202205beta1::BgpMonitorStatus> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::kentik::bgp_monitoring::v202205beta1::BgpMonitorStatus>() {
  return ::kentik::bgp_monitoring::v202205beta1::BgpMonitorStatus_descriptor();
}
template <>
struct is_proto_enum<::kentik::bgp_monitoring::v202205beta1::BgpMetricType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::kentik::bgp_monitoring::v202205beta1::BgpMetricType>() {
  return ::kentik::bgp_monitoring::v202205beta1::BgpMetricType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // kentik_2fbgp_5fmonitoring_2fv202205beta1_2fbgp_5fmonitoring_2eproto_2epb_2eh
