// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: kentik/credential/v202407alpha1/credential.proto
// Protobuf C++ Version: 5.29.3

#ifndef kentik_2fcredential_2fv202407alpha1_2fcredential_2eproto_2epb_2eh
#define kentik_2fcredential_2fv202407alpha1_2fcredential_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "google/api/annotations.pb.h"
#include "google/api/client.pb.h"
#include "google/api/field_behavior.pb.h"
#include "google/protobuf/timestamp.pb.h"
#include "protoc-gen-openapiv2/options/annotations.pb.h"
#include "kentik/core/v202303/annotations.pb.h"
#include "kentik/user/v202211/user.pb.h"
#include "kentik/vault/v202312alpha1/vault.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_kentik_2fcredential_2fv202407alpha1_2fcredential_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_kentik_2fcredential_2fv202407alpha1_2fcredential_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_kentik_2fcredential_2fv202407alpha1_2fcredential_2eproto;
namespace kentik {
namespace credential {
namespace v202407alpha1 {
class CredentialGroup;
struct CredentialGroupDefaultTypeInternal;
extern CredentialGroupDefaultTypeInternal _CredentialGroup_default_instance_;
class GetCredentialGroupRequest;
struct GetCredentialGroupRequestDefaultTypeInternal;
extern GetCredentialGroupRequestDefaultTypeInternal _GetCredentialGroupRequest_default_instance_;
class GetCredentialGroupResponse;
struct GetCredentialGroupResponseDefaultTypeInternal;
extern GetCredentialGroupResponseDefaultTypeInternal _GetCredentialGroupResponse_default_instance_;
class ListCredentialGroupRequest;
struct ListCredentialGroupRequestDefaultTypeInternal;
extern ListCredentialGroupRequestDefaultTypeInternal _ListCredentialGroupRequest_default_instance_;
class ListCredentialGroupResponse;
struct ListCredentialGroupResponseDefaultTypeInternal;
extern ListCredentialGroupResponseDefaultTypeInternal _ListCredentialGroupResponse_default_instance_;
}  // namespace v202407alpha1
}  // namespace credential
}  // namespace kentik
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace kentik {
namespace credential {
namespace v202407alpha1 {

// ===================================================================


// -------------------------------------------------------------------

class ListCredentialGroupRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:kentik.credential.v202407alpha1.ListCredentialGroupRequest) */ {
 public:
  inline ListCredentialGroupRequest() : ListCredentialGroupRequest(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ListCredentialGroupRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ListCredentialGroupRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListCredentialGroupRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListCredentialGroupRequest(const ListCredentialGroupRequest& from) : ListCredentialGroupRequest(nullptr, from) {}
  inline ListCredentialGroupRequest(ListCredentialGroupRequest&& from) noexcept
      : ListCredentialGroupRequest(nullptr, std::move(from)) {}
  inline ListCredentialGroupRequest& operator=(const ListCredentialGroupRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListCredentialGroupRequest& operator=(ListCredentialGroupRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListCredentialGroupRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListCredentialGroupRequest* internal_default_instance() {
    return reinterpret_cast<const ListCredentialGroupRequest*>(
        &_ListCredentialGroupRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(ListCredentialGroupRequest& a, ListCredentialGroupRequest& b) { a.Swap(&b); }
  inline void Swap(ListCredentialGroupRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListCredentialGroupRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListCredentialGroupRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<ListCredentialGroupRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const ListCredentialGroupRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const ListCredentialGroupRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.credential.v202407alpha1.ListCredentialGroupRequest"; }

 protected:
  explicit ListCredentialGroupRequest(::google::protobuf::Arena* arena);
  ListCredentialGroupRequest(::google::protobuf::Arena* arena, const ListCredentialGroupRequest& from);
  ListCredentialGroupRequest(::google::protobuf::Arena* arena, ListCredentialGroupRequest&& from) noexcept
      : ListCredentialGroupRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:kentik.credential.v202407alpha1.ListCredentialGroupRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListCredentialGroupRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_kentik_2fcredential_2fv202407alpha1_2fcredential_2eproto;
};
// -------------------------------------------------------------------

class GetCredentialGroupRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.credential.v202407alpha1.GetCredentialGroupRequest) */ {
 public:
  inline GetCredentialGroupRequest() : GetCredentialGroupRequest(nullptr) {}
  ~GetCredentialGroupRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetCredentialGroupRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetCredentialGroupRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetCredentialGroupRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetCredentialGroupRequest(const GetCredentialGroupRequest& from) : GetCredentialGroupRequest(nullptr, from) {}
  inline GetCredentialGroupRequest(GetCredentialGroupRequest&& from) noexcept
      : GetCredentialGroupRequest(nullptr, std::move(from)) {}
  inline GetCredentialGroupRequest& operator=(const GetCredentialGroupRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetCredentialGroupRequest& operator=(GetCredentialGroupRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetCredentialGroupRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetCredentialGroupRequest* internal_default_instance() {
    return reinterpret_cast<const GetCredentialGroupRequest*>(
        &_GetCredentialGroupRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(GetCredentialGroupRequest& a, GetCredentialGroupRequest& b) { a.Swap(&b); }
  inline void Swap(GetCredentialGroupRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetCredentialGroupRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetCredentialGroupRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetCredentialGroupRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetCredentialGroupRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetCredentialGroupRequest& from) { GetCredentialGroupRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetCredentialGroupRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.credential.v202407alpha1.GetCredentialGroupRequest"; }

 protected:
  explicit GetCredentialGroupRequest(::google::protobuf::Arena* arena);
  GetCredentialGroupRequest(::google::protobuf::Arena* arena, const GetCredentialGroupRequest& from);
  GetCredentialGroupRequest(::google::protobuf::Arena* arena, GetCredentialGroupRequest&& from) noexcept
      : GetCredentialGroupRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
  };
  // string id = 1 [json_name = "id"];
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // @@protoc_insertion_point(class_scope:kentik.credential.v202407alpha1.GetCredentialGroupRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      68, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetCredentialGroupRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fcredential_2fv202407alpha1_2fcredential_2eproto;
};
// -------------------------------------------------------------------

class CredentialGroup final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.credential.v202407alpha1.CredentialGroup) */ {
 public:
  inline CredentialGroup() : CredentialGroup(nullptr) {}
  ~CredentialGroup() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CredentialGroup* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CredentialGroup));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CredentialGroup(
      ::google::protobuf::internal::ConstantInitialized);

  inline CredentialGroup(const CredentialGroup& from) : CredentialGroup(nullptr, from) {}
  inline CredentialGroup(CredentialGroup&& from) noexcept
      : CredentialGroup(nullptr, std::move(from)) {}
  inline CredentialGroup& operator=(const CredentialGroup& from) {
    CopyFrom(from);
    return *this;
  }
  inline CredentialGroup& operator=(CredentialGroup&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CredentialGroup& default_instance() {
    return *internal_default_instance();
  }
  static inline const CredentialGroup* internal_default_instance() {
    return reinterpret_cast<const CredentialGroup*>(
        &_CredentialGroup_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(CredentialGroup& a, CredentialGroup& b) { a.Swap(&b); }
  inline void Swap(CredentialGroup* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CredentialGroup* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CredentialGroup* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CredentialGroup>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CredentialGroup& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CredentialGroup& from) { CredentialGroup::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CredentialGroup* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.credential.v202407alpha1.CredentialGroup"; }

 protected:
  explicit CredentialGroup(::google::protobuf::Arena* arena);
  CredentialGroup(::google::protobuf::Arena* arena, const CredentialGroup& from);
  CredentialGroup(::google::protobuf::Arena* arena, CredentialGroup&& from) noexcept
      : CredentialGroup(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCredentialsFieldNumber = 9,
    kLabelsFieldNumber = 10,
    kIdFieldNumber = 1,
    kNameFieldNumber = 2,
    kDescriptionFieldNumber = 4,
    kCdateFieldNumber = 6,
    kEdateFieldNumber = 7,
    kCreatedByFieldNumber = 8,
    kVersionFieldNumber = 3,
    kTypeFieldNumber = 5,
  };
  // repeated .kentik.vault.v202312alpha1.Secret credentials = 9 [json_name = "credentials"];
  int credentials_size() const;
  private:
  int _internal_credentials_size() const;

  public:
  void clear_credentials() ;
  ::kentik::vault::v202312alpha1::Secret* mutable_credentials(int index);
  ::google::protobuf::RepeatedPtrField<::kentik::vault::v202312alpha1::Secret>* mutable_credentials();

  private:
  const ::google::protobuf::RepeatedPtrField<::kentik::vault::v202312alpha1::Secret>& _internal_credentials() const;
  ::google::protobuf::RepeatedPtrField<::kentik::vault::v202312alpha1::Secret>* _internal_mutable_credentials();
  public:
  const ::kentik::vault::v202312alpha1::Secret& credentials(int index) const;
  ::kentik::vault::v202312alpha1::Secret* add_credentials();
  const ::google::protobuf::RepeatedPtrField<::kentik::vault::v202312alpha1::Secret>& credentials() const;
  // repeated string labels = 10 [json_name = "labels"];
  int labels_size() const;
  private:
  int _internal_labels_size() const;

  public:
  void clear_labels() ;
  const std::string& labels(int index) const;
  std::string* mutable_labels(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_labels(int index, Arg_&& value, Args_... args);
  std::string* add_labels();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_labels(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& labels() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_labels();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_labels() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_labels();

  public:
  // string id = 1 [json_name = "id"];
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // string name = 2 [json_name = "name"];
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // string description = 4 [json_name = "description", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_description() ;
  const std::string& description() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_description(Arg_&& arg, Args_... args);
  std::string* mutable_description();
  PROTOBUF_NODISCARD std::string* release_description();
  void set_allocated_description(std::string* value);

  private:
  const std::string& _internal_description() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_description(
      const std::string& value);
  std::string* _internal_mutable_description();

  public:
  // .google.protobuf.Timestamp cdate = 6 [json_name = "cdate"];
  bool has_cdate() const;
  void clear_cdate() ;
  const ::google::protobuf::Timestamp& cdate() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_cdate();
  ::google::protobuf::Timestamp* mutable_cdate();
  void set_allocated_cdate(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_cdate(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_cdate();

  private:
  const ::google::protobuf::Timestamp& _internal_cdate() const;
  ::google::protobuf::Timestamp* _internal_mutable_cdate();

  public:
  // .google.protobuf.Timestamp edate = 7 [json_name = "edate"];
  bool has_edate() const;
  void clear_edate() ;
  const ::google::protobuf::Timestamp& edate() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_edate();
  ::google::protobuf::Timestamp* mutable_edate();
  void set_allocated_edate(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_edate(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_edate();

  private:
  const ::google::protobuf::Timestamp& _internal_edate() const;
  ::google::protobuf::Timestamp* _internal_mutable_edate();

  public:
  // .kentik.user.v202211.User created_by = 8 [json_name = "createdBy"];
  bool has_created_by() const;
  void clear_created_by() ;
  const ::kentik::user::v202211::User& created_by() const;
  PROTOBUF_NODISCARD ::kentik::user::v202211::User* release_created_by();
  ::kentik::user::v202211::User* mutable_created_by();
  void set_allocated_created_by(::kentik::user::v202211::User* value);
  void unsafe_arena_set_allocated_created_by(::kentik::user::v202211::User* value);
  ::kentik::user::v202211::User* unsafe_arena_release_created_by();

  private:
  const ::kentik::user::v202211::User& _internal_created_by() const;
  ::kentik::user::v202211::User* _internal_mutable_created_by();

  public:
  // uint32 version = 3 [json_name = "version", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_version() ;
  ::uint32_t version() const;
  void set_version(::uint32_t value);

  private:
  ::uint32_t _internal_version() const;
  void _internal_set_version(::uint32_t value);

  public:
  // .kentik.vault.v202312alpha1.SecretType type = 5 [json_name = "type", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_type() ;
  ::kentik::vault::v202312alpha1::SecretType type() const;
  void set_type(::kentik::vault::v202312alpha1::SecretType value);

  private:
  ::kentik::vault::v202312alpha1::SecretType _internal_type() const;
  void _internal_set_type(::kentik::vault::v202312alpha1::SecretType value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.credential.v202407alpha1.CredentialGroup)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 10, 4,
      87, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CredentialGroup& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::kentik::vault::v202312alpha1::Secret > credentials_;
    ::google::protobuf::RepeatedPtrField<std::string> labels_;
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr description_;
    ::google::protobuf::Timestamp* cdate_;
    ::google::protobuf::Timestamp* edate_;
    ::kentik::user::v202211::User* created_by_;
    ::uint32_t version_;
    int type_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fcredential_2fv202407alpha1_2fcredential_2eproto;
};
// -------------------------------------------------------------------

class ListCredentialGroupResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.credential.v202407alpha1.ListCredentialGroupResponse) */ {
 public:
  inline ListCredentialGroupResponse() : ListCredentialGroupResponse(nullptr) {}
  ~ListCredentialGroupResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ListCredentialGroupResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ListCredentialGroupResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListCredentialGroupResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListCredentialGroupResponse(const ListCredentialGroupResponse& from) : ListCredentialGroupResponse(nullptr, from) {}
  inline ListCredentialGroupResponse(ListCredentialGroupResponse&& from) noexcept
      : ListCredentialGroupResponse(nullptr, std::move(from)) {}
  inline ListCredentialGroupResponse& operator=(const ListCredentialGroupResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListCredentialGroupResponse& operator=(ListCredentialGroupResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListCredentialGroupResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListCredentialGroupResponse* internal_default_instance() {
    return reinterpret_cast<const ListCredentialGroupResponse*>(
        &_ListCredentialGroupResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(ListCredentialGroupResponse& a, ListCredentialGroupResponse& b) { a.Swap(&b); }
  inline void Swap(ListCredentialGroupResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListCredentialGroupResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListCredentialGroupResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ListCredentialGroupResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListCredentialGroupResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListCredentialGroupResponse& from) { ListCredentialGroupResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ListCredentialGroupResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.credential.v202407alpha1.ListCredentialGroupResponse"; }

 protected:
  explicit ListCredentialGroupResponse(::google::protobuf::Arena* arena);
  ListCredentialGroupResponse(::google::protobuf::Arena* arena, const ListCredentialGroupResponse& from);
  ListCredentialGroupResponse(::google::protobuf::Arena* arena, ListCredentialGroupResponse&& from) noexcept
      : ListCredentialGroupResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kGroupsFieldNumber = 1,
    kInvalidCountFieldNumber = 2,
  };
  // repeated .kentik.credential.v202407alpha1.CredentialGroup groups = 1 [json_name = "groups"];
  int groups_size() const;
  private:
  int _internal_groups_size() const;

  public:
  void clear_groups() ;
  ::kentik::credential::v202407alpha1::CredentialGroup* mutable_groups(int index);
  ::google::protobuf::RepeatedPtrField<::kentik::credential::v202407alpha1::CredentialGroup>* mutable_groups();

  private:
  const ::google::protobuf::RepeatedPtrField<::kentik::credential::v202407alpha1::CredentialGroup>& _internal_groups() const;
  ::google::protobuf::RepeatedPtrField<::kentik::credential::v202407alpha1::CredentialGroup>* _internal_mutable_groups();
  public:
  const ::kentik::credential::v202407alpha1::CredentialGroup& groups(int index) const;
  ::kentik::credential::v202407alpha1::CredentialGroup* add_groups();
  const ::google::protobuf::RepeatedPtrField<::kentik::credential::v202407alpha1::CredentialGroup>& groups() const;
  // uint32 invalid_count = 2 [json_name = "invalidCount"];
  void clear_invalid_count() ;
  ::uint32_t invalid_count() const;
  void set_invalid_count(::uint32_t value);

  private:
  ::uint32_t _internal_invalid_count() const;
  void _internal_set_invalid_count(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.credential.v202407alpha1.ListCredentialGroupResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListCredentialGroupResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::kentik::credential::v202407alpha1::CredentialGroup > groups_;
    ::uint32_t invalid_count_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fcredential_2fv202407alpha1_2fcredential_2eproto;
};
// -------------------------------------------------------------------

class GetCredentialGroupResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.credential.v202407alpha1.GetCredentialGroupResponse) */ {
 public:
  inline GetCredentialGroupResponse() : GetCredentialGroupResponse(nullptr) {}
  ~GetCredentialGroupResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetCredentialGroupResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetCredentialGroupResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetCredentialGroupResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetCredentialGroupResponse(const GetCredentialGroupResponse& from) : GetCredentialGroupResponse(nullptr, from) {}
  inline GetCredentialGroupResponse(GetCredentialGroupResponse&& from) noexcept
      : GetCredentialGroupResponse(nullptr, std::move(from)) {}
  inline GetCredentialGroupResponse& operator=(const GetCredentialGroupResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetCredentialGroupResponse& operator=(GetCredentialGroupResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetCredentialGroupResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetCredentialGroupResponse* internal_default_instance() {
    return reinterpret_cast<const GetCredentialGroupResponse*>(
        &_GetCredentialGroupResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(GetCredentialGroupResponse& a, GetCredentialGroupResponse& b) { a.Swap(&b); }
  inline void Swap(GetCredentialGroupResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetCredentialGroupResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetCredentialGroupResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetCredentialGroupResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetCredentialGroupResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetCredentialGroupResponse& from) { GetCredentialGroupResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetCredentialGroupResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.credential.v202407alpha1.GetCredentialGroupResponse"; }

 protected:
  explicit GetCredentialGroupResponse(::google::protobuf::Arena* arena);
  GetCredentialGroupResponse(::google::protobuf::Arena* arena, const GetCredentialGroupResponse& from);
  GetCredentialGroupResponse(::google::protobuf::Arena* arena, GetCredentialGroupResponse&& from) noexcept
      : GetCredentialGroupResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kGroupFieldNumber = 1,
  };
  // .kentik.credential.v202407alpha1.CredentialGroup group = 1 [json_name = "group"];
  bool has_group() const;
  void clear_group() ;
  const ::kentik::credential::v202407alpha1::CredentialGroup& group() const;
  PROTOBUF_NODISCARD ::kentik::credential::v202407alpha1::CredentialGroup* release_group();
  ::kentik::credential::v202407alpha1::CredentialGroup* mutable_group();
  void set_allocated_group(::kentik::credential::v202407alpha1::CredentialGroup* value);
  void unsafe_arena_set_allocated_group(::kentik::credential::v202407alpha1::CredentialGroup* value);
  ::kentik::credential::v202407alpha1::CredentialGroup* unsafe_arena_release_group();

  private:
  const ::kentik::credential::v202407alpha1::CredentialGroup& _internal_group() const;
  ::kentik::credential::v202407alpha1::CredentialGroup* _internal_mutable_group();

  public:
  // @@protoc_insertion_point(class_scope:kentik.credential.v202407alpha1.GetCredentialGroupResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetCredentialGroupResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::kentik::credential::v202407alpha1::CredentialGroup* group_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fcredential_2fv202407alpha1_2fcredential_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// CredentialGroup

// string id = 1 [json_name = "id"];
inline void CredentialGroup::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& CredentialGroup::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.credential.v202407alpha1.CredentialGroup.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CredentialGroup::set_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.credential.v202407alpha1.CredentialGroup.id)
}
inline std::string* CredentialGroup::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:kentik.credential.v202407alpha1.CredentialGroup.id)
  return _s;
}
inline const std::string& CredentialGroup::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void CredentialGroup::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(value, GetArena());
}
inline std::string* CredentialGroup::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* CredentialGroup::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.credential.v202407alpha1.CredentialGroup.id)
  return _impl_.id_.Release();
}
inline void CredentialGroup::set_allocated_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.id_.IsDefault()) {
    _impl_.id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.credential.v202407alpha1.CredentialGroup.id)
}

// string name = 2 [json_name = "name"];
inline void CredentialGroup::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& CredentialGroup::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.credential.v202407alpha1.CredentialGroup.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CredentialGroup::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.credential.v202407alpha1.CredentialGroup.name)
}
inline std::string* CredentialGroup::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:kentik.credential.v202407alpha1.CredentialGroup.name)
  return _s;
}
inline const std::string& CredentialGroup::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void CredentialGroup::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* CredentialGroup::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* CredentialGroup::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.credential.v202407alpha1.CredentialGroup.name)
  return _impl_.name_.Release();
}
inline void CredentialGroup::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.credential.v202407alpha1.CredentialGroup.name)
}

// uint32 version = 3 [json_name = "version", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void CredentialGroup::clear_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_ = 0u;
}
inline ::uint32_t CredentialGroup::version() const {
  // @@protoc_insertion_point(field_get:kentik.credential.v202407alpha1.CredentialGroup.version)
  return _internal_version();
}
inline void CredentialGroup::set_version(::uint32_t value) {
  _internal_set_version(value);
  // @@protoc_insertion_point(field_set:kentik.credential.v202407alpha1.CredentialGroup.version)
}
inline ::uint32_t CredentialGroup::_internal_version() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.version_;
}
inline void CredentialGroup::_internal_set_version(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_ = value;
}

// string description = 4 [json_name = "description", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void CredentialGroup::clear_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.ClearToEmpty();
}
inline const std::string& CredentialGroup::description() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.credential.v202407alpha1.CredentialGroup.description)
  return _internal_description();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CredentialGroup::set_description(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.credential.v202407alpha1.CredentialGroup.description)
}
inline std::string* CredentialGroup::mutable_description() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_description();
  // @@protoc_insertion_point(field_mutable:kentik.credential.v202407alpha1.CredentialGroup.description)
  return _s;
}
inline const std::string& CredentialGroup::_internal_description() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.description_.Get();
}
inline void CredentialGroup::_internal_set_description(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.Set(value, GetArena());
}
inline std::string* CredentialGroup::_internal_mutable_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.description_.Mutable( GetArena());
}
inline std::string* CredentialGroup::release_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.credential.v202407alpha1.CredentialGroup.description)
  return _impl_.description_.Release();
}
inline void CredentialGroup::set_allocated_description(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.description_.IsDefault()) {
    _impl_.description_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.credential.v202407alpha1.CredentialGroup.description)
}

// .kentik.vault.v202312alpha1.SecretType type = 5 [json_name = "type", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void CredentialGroup::clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = 0;
}
inline ::kentik::vault::v202312alpha1::SecretType CredentialGroup::type() const {
  // @@protoc_insertion_point(field_get:kentik.credential.v202407alpha1.CredentialGroup.type)
  return _internal_type();
}
inline void CredentialGroup::set_type(::kentik::vault::v202312alpha1::SecretType value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:kentik.credential.v202407alpha1.CredentialGroup.type)
}
inline ::kentik::vault::v202312alpha1::SecretType CredentialGroup::_internal_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::kentik::vault::v202312alpha1::SecretType>(_impl_.type_);
}
inline void CredentialGroup::_internal_set_type(::kentik::vault::v202312alpha1::SecretType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = value;
}

// .google.protobuf.Timestamp cdate = 6 [json_name = "cdate"];
inline bool CredentialGroup::has_cdate() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.cdate_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& CredentialGroup::_internal_cdate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.cdate_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& CredentialGroup::cdate() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.credential.v202407alpha1.CredentialGroup.cdate)
  return _internal_cdate();
}
inline void CredentialGroup::unsafe_arena_set_allocated_cdate(::google::protobuf::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.cdate_);
  }
  _impl_.cdate_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.credential.v202407alpha1.CredentialGroup.cdate)
}
inline ::google::protobuf::Timestamp* CredentialGroup::release_cdate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* released = _impl_.cdate_;
  _impl_.cdate_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* CredentialGroup::unsafe_arena_release_cdate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.credential.v202407alpha1.CredentialGroup.cdate)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* temp = _impl_.cdate_;
  _impl_.cdate_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* CredentialGroup::_internal_mutable_cdate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.cdate_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.cdate_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.cdate_;
}
inline ::google::protobuf::Timestamp* CredentialGroup::mutable_cdate() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_cdate();
  // @@protoc_insertion_point(field_mutable:kentik.credential.v202407alpha1.CredentialGroup.cdate)
  return _msg;
}
inline void CredentialGroup::set_allocated_cdate(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.cdate_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.cdate_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.credential.v202407alpha1.CredentialGroup.cdate)
}

// .google.protobuf.Timestamp edate = 7 [json_name = "edate"];
inline bool CredentialGroup::has_edate() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.edate_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& CredentialGroup::_internal_edate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.edate_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& CredentialGroup::edate() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.credential.v202407alpha1.CredentialGroup.edate)
  return _internal_edate();
}
inline void CredentialGroup::unsafe_arena_set_allocated_edate(::google::protobuf::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.edate_);
  }
  _impl_.edate_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.credential.v202407alpha1.CredentialGroup.edate)
}
inline ::google::protobuf::Timestamp* CredentialGroup::release_edate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* released = _impl_.edate_;
  _impl_.edate_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* CredentialGroup::unsafe_arena_release_edate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.credential.v202407alpha1.CredentialGroup.edate)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* temp = _impl_.edate_;
  _impl_.edate_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* CredentialGroup::_internal_mutable_edate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.edate_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.edate_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.edate_;
}
inline ::google::protobuf::Timestamp* CredentialGroup::mutable_edate() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_edate();
  // @@protoc_insertion_point(field_mutable:kentik.credential.v202407alpha1.CredentialGroup.edate)
  return _msg;
}
inline void CredentialGroup::set_allocated_edate(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.edate_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.edate_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.credential.v202407alpha1.CredentialGroup.edate)
}

// .kentik.user.v202211.User created_by = 8 [json_name = "createdBy"];
inline bool CredentialGroup::has_created_by() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.created_by_ != nullptr);
  return value;
}
inline const ::kentik::user::v202211::User& CredentialGroup::_internal_created_by() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::user::v202211::User* p = _impl_.created_by_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::user::v202211::User&>(::kentik::user::v202211::_User_default_instance_);
}
inline const ::kentik::user::v202211::User& CredentialGroup::created_by() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.credential.v202407alpha1.CredentialGroup.created_by)
  return _internal_created_by();
}
inline void CredentialGroup::unsafe_arena_set_allocated_created_by(::kentik::user::v202211::User* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.created_by_);
  }
  _impl_.created_by_ = reinterpret_cast<::kentik::user::v202211::User*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.credential.v202407alpha1.CredentialGroup.created_by)
}
inline ::kentik::user::v202211::User* CredentialGroup::release_created_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::kentik::user::v202211::User* released = _impl_.created_by_;
  _impl_.created_by_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::user::v202211::User* CredentialGroup::unsafe_arena_release_created_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.credential.v202407alpha1.CredentialGroup.created_by)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::kentik::user::v202211::User* temp = _impl_.created_by_;
  _impl_.created_by_ = nullptr;
  return temp;
}
inline ::kentik::user::v202211::User* CredentialGroup::_internal_mutable_created_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.created_by_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::user::v202211::User>(GetArena());
    _impl_.created_by_ = reinterpret_cast<::kentik::user::v202211::User*>(p);
  }
  return _impl_.created_by_;
}
inline ::kentik::user::v202211::User* CredentialGroup::mutable_created_by() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::kentik::user::v202211::User* _msg = _internal_mutable_created_by();
  // @@protoc_insertion_point(field_mutable:kentik.credential.v202407alpha1.CredentialGroup.created_by)
  return _msg;
}
inline void CredentialGroup::set_allocated_created_by(::kentik::user::v202211::User* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.created_by_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.created_by_ = reinterpret_cast<::kentik::user::v202211::User*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.credential.v202407alpha1.CredentialGroup.created_by)
}

// repeated .kentik.vault.v202312alpha1.Secret credentials = 9 [json_name = "credentials"];
inline int CredentialGroup::_internal_credentials_size() const {
  return _internal_credentials().size();
}
inline int CredentialGroup::credentials_size() const {
  return _internal_credentials_size();
}
inline ::kentik::vault::v202312alpha1::Secret* CredentialGroup::mutable_credentials(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.credential.v202407alpha1.CredentialGroup.credentials)
  return _internal_mutable_credentials()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::kentik::vault::v202312alpha1::Secret>* CredentialGroup::mutable_credentials()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.credential.v202407alpha1.CredentialGroup.credentials)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_credentials();
}
inline const ::kentik::vault::v202312alpha1::Secret& CredentialGroup::credentials(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.credential.v202407alpha1.CredentialGroup.credentials)
  return _internal_credentials().Get(index);
}
inline ::kentik::vault::v202312alpha1::Secret* CredentialGroup::add_credentials() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::kentik::vault::v202312alpha1::Secret* _add = _internal_mutable_credentials()->Add();
  // @@protoc_insertion_point(field_add:kentik.credential.v202407alpha1.CredentialGroup.credentials)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::vault::v202312alpha1::Secret>& CredentialGroup::credentials() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.credential.v202407alpha1.CredentialGroup.credentials)
  return _internal_credentials();
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::vault::v202312alpha1::Secret>&
CredentialGroup::_internal_credentials() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.credentials_;
}
inline ::google::protobuf::RepeatedPtrField<::kentik::vault::v202312alpha1::Secret>*
CredentialGroup::_internal_mutable_credentials() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.credentials_;
}

// repeated string labels = 10 [json_name = "labels"];
inline int CredentialGroup::_internal_labels_size() const {
  return _internal_labels().size();
}
inline int CredentialGroup::labels_size() const {
  return _internal_labels_size();
}
inline void CredentialGroup::clear_labels() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.labels_.Clear();
}
inline std::string* CredentialGroup::add_labels() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_labels()->Add();
  // @@protoc_insertion_point(field_add_mutable:kentik.credential.v202407alpha1.CredentialGroup.labels)
  return _s;
}
inline const std::string& CredentialGroup::labels(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.credential.v202407alpha1.CredentialGroup.labels)
  return _internal_labels().Get(index);
}
inline std::string* CredentialGroup::mutable_labels(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.credential.v202407alpha1.CredentialGroup.labels)
  return _internal_mutable_labels()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void CredentialGroup::set_labels(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_labels()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:kentik.credential.v202407alpha1.CredentialGroup.labels)
}
template <typename Arg_, typename... Args_>
inline void CredentialGroup::add_labels(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_labels(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:kentik.credential.v202407alpha1.CredentialGroup.labels)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
CredentialGroup::labels() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.credential.v202407alpha1.CredentialGroup.labels)
  return _internal_labels();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
CredentialGroup::mutable_labels() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.credential.v202407alpha1.CredentialGroup.labels)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_labels();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
CredentialGroup::_internal_labels() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.labels_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
CredentialGroup::_internal_mutable_labels() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.labels_;
}

// -------------------------------------------------------------------

// GetCredentialGroupRequest

// string id = 1 [json_name = "id"];
inline void GetCredentialGroupRequest::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& GetCredentialGroupRequest::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.credential.v202407alpha1.GetCredentialGroupRequest.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetCredentialGroupRequest::set_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.credential.v202407alpha1.GetCredentialGroupRequest.id)
}
inline std::string* GetCredentialGroupRequest::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:kentik.credential.v202407alpha1.GetCredentialGroupRequest.id)
  return _s;
}
inline const std::string& GetCredentialGroupRequest::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void GetCredentialGroupRequest::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(value, GetArena());
}
inline std::string* GetCredentialGroupRequest::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* GetCredentialGroupRequest::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.credential.v202407alpha1.GetCredentialGroupRequest.id)
  return _impl_.id_.Release();
}
inline void GetCredentialGroupRequest::set_allocated_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.id_.IsDefault()) {
    _impl_.id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.credential.v202407alpha1.GetCredentialGroupRequest.id)
}

// -------------------------------------------------------------------

// GetCredentialGroupResponse

// .kentik.credential.v202407alpha1.CredentialGroup group = 1 [json_name = "group"];
inline bool GetCredentialGroupResponse::has_group() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.group_ != nullptr);
  return value;
}
inline void GetCredentialGroupResponse::clear_group() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.group_ != nullptr) _impl_.group_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::kentik::credential::v202407alpha1::CredentialGroup& GetCredentialGroupResponse::_internal_group() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::credential::v202407alpha1::CredentialGroup* p = _impl_.group_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::credential::v202407alpha1::CredentialGroup&>(::kentik::credential::v202407alpha1::_CredentialGroup_default_instance_);
}
inline const ::kentik::credential::v202407alpha1::CredentialGroup& GetCredentialGroupResponse::group() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.credential.v202407alpha1.GetCredentialGroupResponse.group)
  return _internal_group();
}
inline void GetCredentialGroupResponse::unsafe_arena_set_allocated_group(::kentik::credential::v202407alpha1::CredentialGroup* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.group_);
  }
  _impl_.group_ = reinterpret_cast<::kentik::credential::v202407alpha1::CredentialGroup*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.credential.v202407alpha1.GetCredentialGroupResponse.group)
}
inline ::kentik::credential::v202407alpha1::CredentialGroup* GetCredentialGroupResponse::release_group() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::credential::v202407alpha1::CredentialGroup* released = _impl_.group_;
  _impl_.group_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::credential::v202407alpha1::CredentialGroup* GetCredentialGroupResponse::unsafe_arena_release_group() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.credential.v202407alpha1.GetCredentialGroupResponse.group)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::credential::v202407alpha1::CredentialGroup* temp = _impl_.group_;
  _impl_.group_ = nullptr;
  return temp;
}
inline ::kentik::credential::v202407alpha1::CredentialGroup* GetCredentialGroupResponse::_internal_mutable_group() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.group_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::credential::v202407alpha1::CredentialGroup>(GetArena());
    _impl_.group_ = reinterpret_cast<::kentik::credential::v202407alpha1::CredentialGroup*>(p);
  }
  return _impl_.group_;
}
inline ::kentik::credential::v202407alpha1::CredentialGroup* GetCredentialGroupResponse::mutable_group() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::kentik::credential::v202407alpha1::CredentialGroup* _msg = _internal_mutable_group();
  // @@protoc_insertion_point(field_mutable:kentik.credential.v202407alpha1.GetCredentialGroupResponse.group)
  return _msg;
}
inline void GetCredentialGroupResponse::set_allocated_group(::kentik::credential::v202407alpha1::CredentialGroup* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.group_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.group_ = reinterpret_cast<::kentik::credential::v202407alpha1::CredentialGroup*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.credential.v202407alpha1.GetCredentialGroupResponse.group)
}

// -------------------------------------------------------------------

// ListCredentialGroupRequest

// -------------------------------------------------------------------

// ListCredentialGroupResponse

// repeated .kentik.credential.v202407alpha1.CredentialGroup groups = 1 [json_name = "groups"];
inline int ListCredentialGroupResponse::_internal_groups_size() const {
  return _internal_groups().size();
}
inline int ListCredentialGroupResponse::groups_size() const {
  return _internal_groups_size();
}
inline void ListCredentialGroupResponse::clear_groups() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.groups_.Clear();
}
inline ::kentik::credential::v202407alpha1::CredentialGroup* ListCredentialGroupResponse::mutable_groups(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.credential.v202407alpha1.ListCredentialGroupResponse.groups)
  return _internal_mutable_groups()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::kentik::credential::v202407alpha1::CredentialGroup>* ListCredentialGroupResponse::mutable_groups()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.credential.v202407alpha1.ListCredentialGroupResponse.groups)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_groups();
}
inline const ::kentik::credential::v202407alpha1::CredentialGroup& ListCredentialGroupResponse::groups(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.credential.v202407alpha1.ListCredentialGroupResponse.groups)
  return _internal_groups().Get(index);
}
inline ::kentik::credential::v202407alpha1::CredentialGroup* ListCredentialGroupResponse::add_groups() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::kentik::credential::v202407alpha1::CredentialGroup* _add = _internal_mutable_groups()->Add();
  // @@protoc_insertion_point(field_add:kentik.credential.v202407alpha1.ListCredentialGroupResponse.groups)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::credential::v202407alpha1::CredentialGroup>& ListCredentialGroupResponse::groups() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.credential.v202407alpha1.ListCredentialGroupResponse.groups)
  return _internal_groups();
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::credential::v202407alpha1::CredentialGroup>&
ListCredentialGroupResponse::_internal_groups() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.groups_;
}
inline ::google::protobuf::RepeatedPtrField<::kentik::credential::v202407alpha1::CredentialGroup>*
ListCredentialGroupResponse::_internal_mutable_groups() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.groups_;
}

// uint32 invalid_count = 2 [json_name = "invalidCount"];
inline void ListCredentialGroupResponse::clear_invalid_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.invalid_count_ = 0u;
}
inline ::uint32_t ListCredentialGroupResponse::invalid_count() const {
  // @@protoc_insertion_point(field_get:kentik.credential.v202407alpha1.ListCredentialGroupResponse.invalid_count)
  return _internal_invalid_count();
}
inline void ListCredentialGroupResponse::set_invalid_count(::uint32_t value) {
  _internal_set_invalid_count(value);
  // @@protoc_insertion_point(field_set:kentik.credential.v202407alpha1.ListCredentialGroupResponse.invalid_count)
}
inline ::uint32_t ListCredentialGroupResponse::_internal_invalid_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.invalid_count_;
}
inline void ListCredentialGroupResponse::_internal_set_invalid_count(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.invalid_count_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v202407alpha1
}  // namespace credential
}  // namespace kentik


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // kentik_2fcredential_2fv202407alpha1_2fcredential_2eproto_2epb_2eh
