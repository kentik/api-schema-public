// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: kentik/as_group/v202212/as_group.proto
// Protobuf C++ Version: 5.29.3

#ifndef kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto_2epb_2eh
#define kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "google/api/annotations.pb.h"
#include "google/api/client.pb.h"
#include "google/api/field_behavior.pb.h"
#include "google/protobuf/timestamp.pb.h"
#include "protoc-gen-openapiv2/options/annotations.pb.h"
#include "kentik/core/v202303/annotations.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto;
namespace kentik {
namespace as_group {
namespace v202212 {
class ASGroupConcise;
struct ASGroupConciseDefaultTypeInternal;
extern ASGroupConciseDefaultTypeInternal _ASGroupConcise_default_instance_;
class ASGroupDetailed;
struct ASGroupDetailedDefaultTypeInternal;
extern ASGroupDetailedDefaultTypeInternal _ASGroupDetailed_default_instance_;
class AutonomousSystem;
struct AutonomousSystemDefaultTypeInternal;
extern AutonomousSystemDefaultTypeInternal _AutonomousSystem_default_instance_;
class CreateASGroupRequest;
struct CreateASGroupRequestDefaultTypeInternal;
extern CreateASGroupRequestDefaultTypeInternal _CreateASGroupRequest_default_instance_;
class CreateASGroupResponse;
struct CreateASGroupResponseDefaultTypeInternal;
extern CreateASGroupResponseDefaultTypeInternal _CreateASGroupResponse_default_instance_;
class DeleteASGroupRequest;
struct DeleteASGroupRequestDefaultTypeInternal;
extern DeleteASGroupRequestDefaultTypeInternal _DeleteASGroupRequest_default_instance_;
class DeleteASGroupResponse;
struct DeleteASGroupResponseDefaultTypeInternal;
extern DeleteASGroupResponseDefaultTypeInternal _DeleteASGroupResponse_default_instance_;
class GetASGroupRequest;
struct GetASGroupRequestDefaultTypeInternal;
extern GetASGroupRequestDefaultTypeInternal _GetASGroupRequest_default_instance_;
class GetASGroupResponse;
struct GetASGroupResponseDefaultTypeInternal;
extern GetASGroupResponseDefaultTypeInternal _GetASGroupResponse_default_instance_;
class ListASGroupsRequest;
struct ListASGroupsRequestDefaultTypeInternal;
extern ListASGroupsRequestDefaultTypeInternal _ListASGroupsRequest_default_instance_;
class ListASGroupsResponse;
struct ListASGroupsResponseDefaultTypeInternal;
extern ListASGroupsResponseDefaultTypeInternal _ListASGroupsResponse_default_instance_;
class UpdateASGroupRequest;
struct UpdateASGroupRequestDefaultTypeInternal;
extern UpdateASGroupRequestDefaultTypeInternal _UpdateASGroupRequest_default_instance_;
class UpdateASGroupResponse;
struct UpdateASGroupResponseDefaultTypeInternal;
extern UpdateASGroupResponseDefaultTypeInternal _UpdateASGroupResponse_default_instance_;
}  // namespace v202212
}  // namespace as_group
}  // namespace kentik
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace kentik {
namespace as_group {
namespace v202212 {

// ===================================================================


// -------------------------------------------------------------------

class ListASGroupsRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:kentik.as_group.v202212.ListASGroupsRequest) */ {
 public:
  inline ListASGroupsRequest() : ListASGroupsRequest(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ListASGroupsRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ListASGroupsRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListASGroupsRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListASGroupsRequest(const ListASGroupsRequest& from) : ListASGroupsRequest(nullptr, from) {}
  inline ListASGroupsRequest(ListASGroupsRequest&& from) noexcept
      : ListASGroupsRequest(nullptr, std::move(from)) {}
  inline ListASGroupsRequest& operator=(const ListASGroupsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListASGroupsRequest& operator=(ListASGroupsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListASGroupsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListASGroupsRequest* internal_default_instance() {
    return reinterpret_cast<const ListASGroupsRequest*>(
        &_ListASGroupsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(ListASGroupsRequest& a, ListASGroupsRequest& b) { a.Swap(&b); }
  inline void Swap(ListASGroupsRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListASGroupsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListASGroupsRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<ListASGroupsRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const ListASGroupsRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const ListASGroupsRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.as_group.v202212.ListASGroupsRequest"; }

 protected:
  explicit ListASGroupsRequest(::google::protobuf::Arena* arena);
  ListASGroupsRequest(::google::protobuf::Arena* arena, const ListASGroupsRequest& from);
  ListASGroupsRequest(::google::protobuf::Arena* arena, ListASGroupsRequest&& from) noexcept
      : ListASGroupsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:kentik.as_group.v202212.ListASGroupsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListASGroupsRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto;
};
// -------------------------------------------------------------------

class GetASGroupRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.as_group.v202212.GetASGroupRequest) */ {
 public:
  inline GetASGroupRequest() : GetASGroupRequest(nullptr) {}
  ~GetASGroupRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetASGroupRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetASGroupRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetASGroupRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetASGroupRequest(const GetASGroupRequest& from) : GetASGroupRequest(nullptr, from) {}
  inline GetASGroupRequest(GetASGroupRequest&& from) noexcept
      : GetASGroupRequest(nullptr, std::move(from)) {}
  inline GetASGroupRequest& operator=(const GetASGroupRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetASGroupRequest& operator=(GetASGroupRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetASGroupRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetASGroupRequest* internal_default_instance() {
    return reinterpret_cast<const GetASGroupRequest*>(
        &_GetASGroupRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(GetASGroupRequest& a, GetASGroupRequest& b) { a.Swap(&b); }
  inline void Swap(GetASGroupRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetASGroupRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetASGroupRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetASGroupRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetASGroupRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetASGroupRequest& from) { GetASGroupRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetASGroupRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.as_group.v202212.GetASGroupRequest"; }

 protected:
  explicit GetASGroupRequest(::google::protobuf::Arena* arena);
  GetASGroupRequest(::google::protobuf::Arena* arena, const GetASGroupRequest& from);
  GetASGroupRequest(::google::protobuf::Arena* arena, GetASGroupRequest&& from) noexcept
      : GetASGroupRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
  };
  // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // @@protoc_insertion_point(class_scope:kentik.as_group.v202212.GetASGroupRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      52, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetASGroupRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto;
};
// -------------------------------------------------------------------

class DeleteASGroupResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:kentik.as_group.v202212.DeleteASGroupResponse) */ {
 public:
  inline DeleteASGroupResponse() : DeleteASGroupResponse(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DeleteASGroupResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DeleteASGroupResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeleteASGroupResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline DeleteASGroupResponse(const DeleteASGroupResponse& from) : DeleteASGroupResponse(nullptr, from) {}
  inline DeleteASGroupResponse(DeleteASGroupResponse&& from) noexcept
      : DeleteASGroupResponse(nullptr, std::move(from)) {}
  inline DeleteASGroupResponse& operator=(const DeleteASGroupResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteASGroupResponse& operator=(DeleteASGroupResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeleteASGroupResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeleteASGroupResponse* internal_default_instance() {
    return reinterpret_cast<const DeleteASGroupResponse*>(
        &_DeleteASGroupResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(DeleteASGroupResponse& a, DeleteASGroupResponse& b) { a.Swap(&b); }
  inline void Swap(DeleteASGroupResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteASGroupResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeleteASGroupResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<DeleteASGroupResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const DeleteASGroupResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const DeleteASGroupResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.as_group.v202212.DeleteASGroupResponse"; }

 protected:
  explicit DeleteASGroupResponse(::google::protobuf::Arena* arena);
  DeleteASGroupResponse(::google::protobuf::Arena* arena, const DeleteASGroupResponse& from);
  DeleteASGroupResponse(::google::protobuf::Arena* arena, DeleteASGroupResponse&& from) noexcept
      : DeleteASGroupResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:kentik.as_group.v202212.DeleteASGroupResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DeleteASGroupResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto;
};
// -------------------------------------------------------------------

class DeleteASGroupRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.as_group.v202212.DeleteASGroupRequest) */ {
 public:
  inline DeleteASGroupRequest() : DeleteASGroupRequest(nullptr) {}
  ~DeleteASGroupRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DeleteASGroupRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DeleteASGroupRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeleteASGroupRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline DeleteASGroupRequest(const DeleteASGroupRequest& from) : DeleteASGroupRequest(nullptr, from) {}
  inline DeleteASGroupRequest(DeleteASGroupRequest&& from) noexcept
      : DeleteASGroupRequest(nullptr, std::move(from)) {}
  inline DeleteASGroupRequest& operator=(const DeleteASGroupRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteASGroupRequest& operator=(DeleteASGroupRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeleteASGroupRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeleteASGroupRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteASGroupRequest*>(
        &_DeleteASGroupRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(DeleteASGroupRequest& a, DeleteASGroupRequest& b) { a.Swap(&b); }
  inline void Swap(DeleteASGroupRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteASGroupRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeleteASGroupRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DeleteASGroupRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DeleteASGroupRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DeleteASGroupRequest& from) { DeleteASGroupRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DeleteASGroupRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.as_group.v202212.DeleteASGroupRequest"; }

 protected:
  explicit DeleteASGroupRequest(::google::protobuf::Arena* arena);
  DeleteASGroupRequest(::google::protobuf::Arena* arena, const DeleteASGroupRequest& from);
  DeleteASGroupRequest(::google::protobuf::Arena* arena, DeleteASGroupRequest&& from) noexcept
      : DeleteASGroupRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
  };
  // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // @@protoc_insertion_point(class_scope:kentik.as_group.v202212.DeleteASGroupRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      55, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DeleteASGroupRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto;
};
// -------------------------------------------------------------------

class AutonomousSystem final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.as_group.v202212.AutonomousSystem) */ {
 public:
  inline AutonomousSystem() : AutonomousSystem(nullptr) {}
  ~AutonomousSystem() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(AutonomousSystem* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(AutonomousSystem));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AutonomousSystem(
      ::google::protobuf::internal::ConstantInitialized);

  inline AutonomousSystem(const AutonomousSystem& from) : AutonomousSystem(nullptr, from) {}
  inline AutonomousSystem(AutonomousSystem&& from) noexcept
      : AutonomousSystem(nullptr, std::move(from)) {}
  inline AutonomousSystem& operator=(const AutonomousSystem& from) {
    CopyFrom(from);
    return *this;
  }
  inline AutonomousSystem& operator=(AutonomousSystem&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AutonomousSystem& default_instance() {
    return *internal_default_instance();
  }
  static inline const AutonomousSystem* internal_default_instance() {
    return reinterpret_cast<const AutonomousSystem*>(
        &_AutonomousSystem_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(AutonomousSystem& a, AutonomousSystem& b) { a.Swap(&b); }
  inline void Swap(AutonomousSystem* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AutonomousSystem* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AutonomousSystem* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<AutonomousSystem>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AutonomousSystem& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AutonomousSystem& from) { AutonomousSystem::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(AutonomousSystem* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.as_group.v202212.AutonomousSystem"; }

 protected:
  explicit AutonomousSystem(::google::protobuf::Arena* arena);
  AutonomousSystem(::google::protobuf::Arena* arena, const AutonomousSystem& from);
  AutonomousSystem(::google::protobuf::Arena* arena, AutonomousSystem&& from) noexcept
      : AutonomousSystem(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNameFieldNumber = 2,
    kAsnFieldNumber = 1,
  };
  // string name = 2 [json_name = "name"];
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // uint32 asn = 1 [json_name = "asn"];
  void clear_asn() ;
  ::uint32_t asn() const;
  void set_asn(::uint32_t value);

  private:
  ::uint32_t _internal_asn() const;
  void _internal_set_asn(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.as_group.v202212.AutonomousSystem)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      53, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AutonomousSystem& from_msg);
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::uint32_t asn_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto;
};
// -------------------------------------------------------------------

class ASGroupDetailed final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.as_group.v202212.ASGroupDetailed) */ {
 public:
  inline ASGroupDetailed() : ASGroupDetailed(nullptr) {}
  ~ASGroupDetailed() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ASGroupDetailed* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ASGroupDetailed));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ASGroupDetailed(
      ::google::protobuf::internal::ConstantInitialized);

  inline ASGroupDetailed(const ASGroupDetailed& from) : ASGroupDetailed(nullptr, from) {}
  inline ASGroupDetailed(ASGroupDetailed&& from) noexcept
      : ASGroupDetailed(nullptr, std::move(from)) {}
  inline ASGroupDetailed& operator=(const ASGroupDetailed& from) {
    CopyFrom(from);
    return *this;
  }
  inline ASGroupDetailed& operator=(ASGroupDetailed&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ASGroupDetailed& default_instance() {
    return *internal_default_instance();
  }
  static inline const ASGroupDetailed* internal_default_instance() {
    return reinterpret_cast<const ASGroupDetailed*>(
        &_ASGroupDetailed_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(ASGroupDetailed& a, ASGroupDetailed& b) { a.Swap(&b); }
  inline void Swap(ASGroupDetailed* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ASGroupDetailed* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ASGroupDetailed* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ASGroupDetailed>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ASGroupDetailed& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ASGroupDetailed& from) { ASGroupDetailed::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ASGroupDetailed* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.as_group.v202212.ASGroupDetailed"; }

 protected:
  explicit ASGroupDetailed(::google::protobuf::Arena* arena);
  ASGroupDetailed(::google::protobuf::Arena* arena, const ASGroupDetailed& from);
  ASGroupDetailed(::google::protobuf::Arena* arena, ASGroupDetailed&& from) noexcept
      : ASGroupDetailed(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAsnFieldNumber = 3,
    kIdFieldNumber = 1,
    kNameFieldNumber = 2,
    kCreatedDateFieldNumber = 5,
    kUpdatedDateFieldNumber = 6,
  };
  // repeated .kentik.as_group.v202212.AutonomousSystem asn = 3 [json_name = "asn", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int asn_size() const;
  private:
  int _internal_asn_size() const;

  public:
  void clear_asn() ;
  ::kentik::as_group::v202212::AutonomousSystem* mutable_asn(int index);
  ::google::protobuf::RepeatedPtrField<::kentik::as_group::v202212::AutonomousSystem>* mutable_asn();

  private:
  const ::google::protobuf::RepeatedPtrField<::kentik::as_group::v202212::AutonomousSystem>& _internal_asn() const;
  ::google::protobuf::RepeatedPtrField<::kentik::as_group::v202212::AutonomousSystem>* _internal_mutable_asn();
  public:
  const ::kentik::as_group::v202212::AutonomousSystem& asn(int index) const;
  ::kentik::as_group::v202212::AutonomousSystem* add_asn();
  const ::google::protobuf::RepeatedPtrField<::kentik::as_group::v202212::AutonomousSystem>& asn() const;
  // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // string name = 2 [json_name = "name", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // .google.protobuf.Timestamp created_date = 5 [json_name = "createdDate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_created_date() const;
  void clear_created_date() ;
  const ::google::protobuf::Timestamp& created_date() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_created_date();
  ::google::protobuf::Timestamp* mutable_created_date();
  void set_allocated_created_date(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_created_date(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_created_date();

  private:
  const ::google::protobuf::Timestamp& _internal_created_date() const;
  ::google::protobuf::Timestamp* _internal_mutable_created_date();

  public:
  // .google.protobuf.Timestamp updated_date = 6 [json_name = "updatedDate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_updated_date() const;
  void clear_updated_date() ;
  const ::google::protobuf::Timestamp& updated_date() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_updated_date();
  ::google::protobuf::Timestamp* mutable_updated_date();
  void set_allocated_updated_date(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_updated_date(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_updated_date();

  private:
  const ::google::protobuf::Timestamp& _internal_updated_date() const;
  ::google::protobuf::Timestamp* _internal_mutable_updated_date();

  public:
  // @@protoc_insertion_point(class_scope:kentik.as_group.v202212.ASGroupDetailed)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 3,
      54, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ASGroupDetailed& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::kentik::as_group::v202212::AutonomousSystem > asn_;
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::Timestamp* created_date_;
    ::google::protobuf::Timestamp* updated_date_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto;
};
// -------------------------------------------------------------------

class ASGroupConcise final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.as_group.v202212.ASGroupConcise) */ {
 public:
  inline ASGroupConcise() : ASGroupConcise(nullptr) {}
  ~ASGroupConcise() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ASGroupConcise* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ASGroupConcise));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ASGroupConcise(
      ::google::protobuf::internal::ConstantInitialized);

  inline ASGroupConcise(const ASGroupConcise& from) : ASGroupConcise(nullptr, from) {}
  inline ASGroupConcise(ASGroupConcise&& from) noexcept
      : ASGroupConcise(nullptr, std::move(from)) {}
  inline ASGroupConcise& operator=(const ASGroupConcise& from) {
    CopyFrom(from);
    return *this;
  }
  inline ASGroupConcise& operator=(ASGroupConcise&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ASGroupConcise& default_instance() {
    return *internal_default_instance();
  }
  static inline const ASGroupConcise* internal_default_instance() {
    return reinterpret_cast<const ASGroupConcise*>(
        &_ASGroupConcise_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(ASGroupConcise& a, ASGroupConcise& b) { a.Swap(&b); }
  inline void Swap(ASGroupConcise* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ASGroupConcise* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ASGroupConcise* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ASGroupConcise>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ASGroupConcise& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ASGroupConcise& from) { ASGroupConcise::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ASGroupConcise* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.as_group.v202212.ASGroupConcise"; }

 protected:
  explicit ASGroupConcise(::google::protobuf::Arena* arena);
  ASGroupConcise(::google::protobuf::Arena* arena, const ASGroupConcise& from);
  ASGroupConcise(::google::protobuf::Arena* arena, ASGroupConcise&& from) noexcept
      : ASGroupConcise(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAsnFieldNumber = 3,
    kIdFieldNumber = 1,
    kNameFieldNumber = 2,
    kCreatedDateFieldNumber = 5,
    kUpdatedDateFieldNumber = 6,
  };
  // repeated string asn = 3 [json_name = "asn", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int asn_size() const;
  private:
  int _internal_asn_size() const;

  public:
  void clear_asn() ;
  const std::string& asn(int index) const;
  std::string* mutable_asn(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_asn(int index, Arg_&& value, Args_... args);
  std::string* add_asn();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_asn(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& asn() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_asn();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_asn() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_asn();

  public:
  // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // string name = 2 [json_name = "name", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // .google.protobuf.Timestamp created_date = 5 [json_name = "createdDate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_created_date() const;
  void clear_created_date() ;
  const ::google::protobuf::Timestamp& created_date() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_created_date();
  ::google::protobuf::Timestamp* mutable_created_date();
  void set_allocated_created_date(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_created_date(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_created_date();

  private:
  const ::google::protobuf::Timestamp& _internal_created_date() const;
  ::google::protobuf::Timestamp* _internal_mutable_created_date();

  public:
  // .google.protobuf.Timestamp updated_date = 6 [json_name = "updatedDate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_updated_date() const;
  void clear_updated_date() ;
  const ::google::protobuf::Timestamp& updated_date() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_updated_date();
  ::google::protobuf::Timestamp* mutable_updated_date();
  void set_allocated_updated_date(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_updated_date(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_updated_date();

  private:
  const ::google::protobuf::Timestamp& _internal_updated_date() const;
  ::google::protobuf::Timestamp* _internal_mutable_updated_date();

  public:
  // @@protoc_insertion_point(class_scope:kentik.as_group.v202212.ASGroupConcise)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 2,
      56, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ASGroupConcise& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<std::string> asn_;
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::Timestamp* created_date_;
    ::google::protobuf::Timestamp* updated_date_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto;
};
// -------------------------------------------------------------------

class UpdateASGroupResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.as_group.v202212.UpdateASGroupResponse) */ {
 public:
  inline UpdateASGroupResponse() : UpdateASGroupResponse(nullptr) {}
  ~UpdateASGroupResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UpdateASGroupResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UpdateASGroupResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateASGroupResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdateASGroupResponse(const UpdateASGroupResponse& from) : UpdateASGroupResponse(nullptr, from) {}
  inline UpdateASGroupResponse(UpdateASGroupResponse&& from) noexcept
      : UpdateASGroupResponse(nullptr, std::move(from)) {}
  inline UpdateASGroupResponse& operator=(const UpdateASGroupResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateASGroupResponse& operator=(UpdateASGroupResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateASGroupResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateASGroupResponse* internal_default_instance() {
    return reinterpret_cast<const UpdateASGroupResponse*>(
        &_UpdateASGroupResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(UpdateASGroupResponse& a, UpdateASGroupResponse& b) { a.Swap(&b); }
  inline void Swap(UpdateASGroupResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateASGroupResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateASGroupResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<UpdateASGroupResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateASGroupResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateASGroupResponse& from) { UpdateASGroupResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(UpdateASGroupResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.as_group.v202212.UpdateASGroupResponse"; }

 protected:
  explicit UpdateASGroupResponse(::google::protobuf::Arena* arena);
  UpdateASGroupResponse(::google::protobuf::Arena* arena, const UpdateASGroupResponse& from);
  UpdateASGroupResponse(::google::protobuf::Arena* arena, UpdateASGroupResponse&& from) noexcept
      : UpdateASGroupResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAsGroupFieldNumber = 1,
  };
  // .kentik.as_group.v202212.ASGroupDetailed as_group = 1 [json_name = "asGroup", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_as_group() const;
  void clear_as_group() ;
  const ::kentik::as_group::v202212::ASGroupDetailed& as_group() const;
  PROTOBUF_NODISCARD ::kentik::as_group::v202212::ASGroupDetailed* release_as_group();
  ::kentik::as_group::v202212::ASGroupDetailed* mutable_as_group();
  void set_allocated_as_group(::kentik::as_group::v202212::ASGroupDetailed* value);
  void unsafe_arena_set_allocated_as_group(::kentik::as_group::v202212::ASGroupDetailed* value);
  ::kentik::as_group::v202212::ASGroupDetailed* unsafe_arena_release_as_group();

  private:
  const ::kentik::as_group::v202212::ASGroupDetailed& _internal_as_group() const;
  ::kentik::as_group::v202212::ASGroupDetailed* _internal_mutable_as_group();

  public:
  // @@protoc_insertion_point(class_scope:kentik.as_group.v202212.UpdateASGroupResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdateASGroupResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::kentik::as_group::v202212::ASGroupDetailed* as_group_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto;
};
// -------------------------------------------------------------------

class UpdateASGroupRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.as_group.v202212.UpdateASGroupRequest) */ {
 public:
  inline UpdateASGroupRequest() : UpdateASGroupRequest(nullptr) {}
  ~UpdateASGroupRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UpdateASGroupRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UpdateASGroupRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateASGroupRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdateASGroupRequest(const UpdateASGroupRequest& from) : UpdateASGroupRequest(nullptr, from) {}
  inline UpdateASGroupRequest(UpdateASGroupRequest&& from) noexcept
      : UpdateASGroupRequest(nullptr, std::move(from)) {}
  inline UpdateASGroupRequest& operator=(const UpdateASGroupRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateASGroupRequest& operator=(UpdateASGroupRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateASGroupRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateASGroupRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateASGroupRequest*>(
        &_UpdateASGroupRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(UpdateASGroupRequest& a, UpdateASGroupRequest& b) { a.Swap(&b); }
  inline void Swap(UpdateASGroupRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateASGroupRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateASGroupRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<UpdateASGroupRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateASGroupRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateASGroupRequest& from) { UpdateASGroupRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(UpdateASGroupRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.as_group.v202212.UpdateASGroupRequest"; }

 protected:
  explicit UpdateASGroupRequest(::google::protobuf::Arena* arena);
  UpdateASGroupRequest(::google::protobuf::Arena* arena, const UpdateASGroupRequest& from);
  UpdateASGroupRequest(::google::protobuf::Arena* arena, UpdateASGroupRequest&& from) noexcept
      : UpdateASGroupRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAsGroupFieldNumber = 1,
  };
  // .kentik.as_group.v202212.ASGroupConcise as_group = 1 [json_name = "asGroup", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_as_group() const;
  void clear_as_group() ;
  const ::kentik::as_group::v202212::ASGroupConcise& as_group() const;
  PROTOBUF_NODISCARD ::kentik::as_group::v202212::ASGroupConcise* release_as_group();
  ::kentik::as_group::v202212::ASGroupConcise* mutable_as_group();
  void set_allocated_as_group(::kentik::as_group::v202212::ASGroupConcise* value);
  void unsafe_arena_set_allocated_as_group(::kentik::as_group::v202212::ASGroupConcise* value);
  ::kentik::as_group::v202212::ASGroupConcise* unsafe_arena_release_as_group();

  private:
  const ::kentik::as_group::v202212::ASGroupConcise& _internal_as_group() const;
  ::kentik::as_group::v202212::ASGroupConcise* _internal_mutable_as_group();

  public:
  // @@protoc_insertion_point(class_scope:kentik.as_group.v202212.UpdateASGroupRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdateASGroupRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::kentik::as_group::v202212::ASGroupConcise* as_group_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto;
};
// -------------------------------------------------------------------

class ListASGroupsResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.as_group.v202212.ListASGroupsResponse) */ {
 public:
  inline ListASGroupsResponse() : ListASGroupsResponse(nullptr) {}
  ~ListASGroupsResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ListASGroupsResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ListASGroupsResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListASGroupsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListASGroupsResponse(const ListASGroupsResponse& from) : ListASGroupsResponse(nullptr, from) {}
  inline ListASGroupsResponse(ListASGroupsResponse&& from) noexcept
      : ListASGroupsResponse(nullptr, std::move(from)) {}
  inline ListASGroupsResponse& operator=(const ListASGroupsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListASGroupsResponse& operator=(ListASGroupsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListASGroupsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListASGroupsResponse* internal_default_instance() {
    return reinterpret_cast<const ListASGroupsResponse*>(
        &_ListASGroupsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(ListASGroupsResponse& a, ListASGroupsResponse& b) { a.Swap(&b); }
  inline void Swap(ListASGroupsResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListASGroupsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListASGroupsResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ListASGroupsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListASGroupsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListASGroupsResponse& from) { ListASGroupsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ListASGroupsResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.as_group.v202212.ListASGroupsResponse"; }

 protected:
  explicit ListASGroupsResponse(::google::protobuf::Arena* arena);
  ListASGroupsResponse(::google::protobuf::Arena* arena, const ListASGroupsResponse& from);
  ListASGroupsResponse(::google::protobuf::Arena* arena, ListASGroupsResponse&& from) noexcept
      : ListASGroupsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAsGroupsFieldNumber = 1,
    kInvalidCountFieldNumber = 2,
  };
  // repeated .kentik.as_group.v202212.ASGroupDetailed as_groups = 1 [json_name = "asGroups", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int as_groups_size() const;
  private:
  int _internal_as_groups_size() const;

  public:
  void clear_as_groups() ;
  ::kentik::as_group::v202212::ASGroupDetailed* mutable_as_groups(int index);
  ::google::protobuf::RepeatedPtrField<::kentik::as_group::v202212::ASGroupDetailed>* mutable_as_groups();

  private:
  const ::google::protobuf::RepeatedPtrField<::kentik::as_group::v202212::ASGroupDetailed>& _internal_as_groups() const;
  ::google::protobuf::RepeatedPtrField<::kentik::as_group::v202212::ASGroupDetailed>* _internal_mutable_as_groups();
  public:
  const ::kentik::as_group::v202212::ASGroupDetailed& as_groups(int index) const;
  ::kentik::as_group::v202212::ASGroupDetailed* add_as_groups();
  const ::google::protobuf::RepeatedPtrField<::kentik::as_group::v202212::ASGroupDetailed>& as_groups() const;
  // uint32 invalid_count = 2 [json_name = "invalidCount", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_invalid_count() ;
  ::uint32_t invalid_count() const;
  void set_invalid_count(::uint32_t value);

  private:
  ::uint32_t _internal_invalid_count() const;
  void _internal_set_invalid_count(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.as_group.v202212.ListASGroupsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListASGroupsResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::kentik::as_group::v202212::ASGroupDetailed > as_groups_;
    ::uint32_t invalid_count_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto;
};
// -------------------------------------------------------------------

class GetASGroupResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.as_group.v202212.GetASGroupResponse) */ {
 public:
  inline GetASGroupResponse() : GetASGroupResponse(nullptr) {}
  ~GetASGroupResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetASGroupResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetASGroupResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetASGroupResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetASGroupResponse(const GetASGroupResponse& from) : GetASGroupResponse(nullptr, from) {}
  inline GetASGroupResponse(GetASGroupResponse&& from) noexcept
      : GetASGroupResponse(nullptr, std::move(from)) {}
  inline GetASGroupResponse& operator=(const GetASGroupResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetASGroupResponse& operator=(GetASGroupResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetASGroupResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetASGroupResponse* internal_default_instance() {
    return reinterpret_cast<const GetASGroupResponse*>(
        &_GetASGroupResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(GetASGroupResponse& a, GetASGroupResponse& b) { a.Swap(&b); }
  inline void Swap(GetASGroupResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetASGroupResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetASGroupResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetASGroupResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetASGroupResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetASGroupResponse& from) { GetASGroupResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetASGroupResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.as_group.v202212.GetASGroupResponse"; }

 protected:
  explicit GetASGroupResponse(::google::protobuf::Arena* arena);
  GetASGroupResponse(::google::protobuf::Arena* arena, const GetASGroupResponse& from);
  GetASGroupResponse(::google::protobuf::Arena* arena, GetASGroupResponse&& from) noexcept
      : GetASGroupResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAsGroupFieldNumber = 1,
  };
  // .kentik.as_group.v202212.ASGroupDetailed as_group = 1 [json_name = "asGroup", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_as_group() const;
  void clear_as_group() ;
  const ::kentik::as_group::v202212::ASGroupDetailed& as_group() const;
  PROTOBUF_NODISCARD ::kentik::as_group::v202212::ASGroupDetailed* release_as_group();
  ::kentik::as_group::v202212::ASGroupDetailed* mutable_as_group();
  void set_allocated_as_group(::kentik::as_group::v202212::ASGroupDetailed* value);
  void unsafe_arena_set_allocated_as_group(::kentik::as_group::v202212::ASGroupDetailed* value);
  ::kentik::as_group::v202212::ASGroupDetailed* unsafe_arena_release_as_group();

  private:
  const ::kentik::as_group::v202212::ASGroupDetailed& _internal_as_group() const;
  ::kentik::as_group::v202212::ASGroupDetailed* _internal_mutable_as_group();

  public:
  // @@protoc_insertion_point(class_scope:kentik.as_group.v202212.GetASGroupResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetASGroupResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::kentik::as_group::v202212::ASGroupDetailed* as_group_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto;
};
// -------------------------------------------------------------------

class CreateASGroupResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.as_group.v202212.CreateASGroupResponse) */ {
 public:
  inline CreateASGroupResponse() : CreateASGroupResponse(nullptr) {}
  ~CreateASGroupResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CreateASGroupResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CreateASGroupResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateASGroupResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateASGroupResponse(const CreateASGroupResponse& from) : CreateASGroupResponse(nullptr, from) {}
  inline CreateASGroupResponse(CreateASGroupResponse&& from) noexcept
      : CreateASGroupResponse(nullptr, std::move(from)) {}
  inline CreateASGroupResponse& operator=(const CreateASGroupResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateASGroupResponse& operator=(CreateASGroupResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateASGroupResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateASGroupResponse* internal_default_instance() {
    return reinterpret_cast<const CreateASGroupResponse*>(
        &_CreateASGroupResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(CreateASGroupResponse& a, CreateASGroupResponse& b) { a.Swap(&b); }
  inline void Swap(CreateASGroupResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateASGroupResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateASGroupResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CreateASGroupResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateASGroupResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateASGroupResponse& from) { CreateASGroupResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CreateASGroupResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.as_group.v202212.CreateASGroupResponse"; }

 protected:
  explicit CreateASGroupResponse(::google::protobuf::Arena* arena);
  CreateASGroupResponse(::google::protobuf::Arena* arena, const CreateASGroupResponse& from);
  CreateASGroupResponse(::google::protobuf::Arena* arena, CreateASGroupResponse&& from) noexcept
      : CreateASGroupResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAsGroupFieldNumber = 1,
  };
  // .kentik.as_group.v202212.ASGroupDetailed as_group = 1 [json_name = "asGroup", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_as_group() const;
  void clear_as_group() ;
  const ::kentik::as_group::v202212::ASGroupDetailed& as_group() const;
  PROTOBUF_NODISCARD ::kentik::as_group::v202212::ASGroupDetailed* release_as_group();
  ::kentik::as_group::v202212::ASGroupDetailed* mutable_as_group();
  void set_allocated_as_group(::kentik::as_group::v202212::ASGroupDetailed* value);
  void unsafe_arena_set_allocated_as_group(::kentik::as_group::v202212::ASGroupDetailed* value);
  ::kentik::as_group::v202212::ASGroupDetailed* unsafe_arena_release_as_group();

  private:
  const ::kentik::as_group::v202212::ASGroupDetailed& _internal_as_group() const;
  ::kentik::as_group::v202212::ASGroupDetailed* _internal_mutable_as_group();

  public:
  // @@protoc_insertion_point(class_scope:kentik.as_group.v202212.CreateASGroupResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateASGroupResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::kentik::as_group::v202212::ASGroupDetailed* as_group_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto;
};
// -------------------------------------------------------------------

class CreateASGroupRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.as_group.v202212.CreateASGroupRequest) */ {
 public:
  inline CreateASGroupRequest() : CreateASGroupRequest(nullptr) {}
  ~CreateASGroupRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CreateASGroupRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CreateASGroupRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateASGroupRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateASGroupRequest(const CreateASGroupRequest& from) : CreateASGroupRequest(nullptr, from) {}
  inline CreateASGroupRequest(CreateASGroupRequest&& from) noexcept
      : CreateASGroupRequest(nullptr, std::move(from)) {}
  inline CreateASGroupRequest& operator=(const CreateASGroupRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateASGroupRequest& operator=(CreateASGroupRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateASGroupRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateASGroupRequest* internal_default_instance() {
    return reinterpret_cast<const CreateASGroupRequest*>(
        &_CreateASGroupRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(CreateASGroupRequest& a, CreateASGroupRequest& b) { a.Swap(&b); }
  inline void Swap(CreateASGroupRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateASGroupRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateASGroupRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CreateASGroupRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateASGroupRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateASGroupRequest& from) { CreateASGroupRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CreateASGroupRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.as_group.v202212.CreateASGroupRequest"; }

 protected:
  explicit CreateASGroupRequest(::google::protobuf::Arena* arena);
  CreateASGroupRequest(::google::protobuf::Arena* arena, const CreateASGroupRequest& from);
  CreateASGroupRequest(::google::protobuf::Arena* arena, CreateASGroupRequest&& from) noexcept
      : CreateASGroupRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAsGroupFieldNumber = 1,
  };
  // .kentik.as_group.v202212.ASGroupConcise as_group = 1 [json_name = "asGroup", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_as_group() const;
  void clear_as_group() ;
  const ::kentik::as_group::v202212::ASGroupConcise& as_group() const;
  PROTOBUF_NODISCARD ::kentik::as_group::v202212::ASGroupConcise* release_as_group();
  ::kentik::as_group::v202212::ASGroupConcise* mutable_as_group();
  void set_allocated_as_group(::kentik::as_group::v202212::ASGroupConcise* value);
  void unsafe_arena_set_allocated_as_group(::kentik::as_group::v202212::ASGroupConcise* value);
  ::kentik::as_group::v202212::ASGroupConcise* unsafe_arena_release_as_group();

  private:
  const ::kentik::as_group::v202212::ASGroupConcise& _internal_as_group() const;
  ::kentik::as_group::v202212::ASGroupConcise* _internal_mutable_as_group();

  public:
  // @@protoc_insertion_point(class_scope:kentik.as_group.v202212.CreateASGroupRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateASGroupRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::kentik::as_group::v202212::ASGroupConcise* as_group_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// AutonomousSystem

// uint32 asn = 1 [json_name = "asn"];
inline void AutonomousSystem::clear_asn() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.asn_ = 0u;
}
inline ::uint32_t AutonomousSystem::asn() const {
  // @@protoc_insertion_point(field_get:kentik.as_group.v202212.AutonomousSystem.asn)
  return _internal_asn();
}
inline void AutonomousSystem::set_asn(::uint32_t value) {
  _internal_set_asn(value);
  // @@protoc_insertion_point(field_set:kentik.as_group.v202212.AutonomousSystem.asn)
}
inline ::uint32_t AutonomousSystem::_internal_asn() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.asn_;
}
inline void AutonomousSystem::_internal_set_asn(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.asn_ = value;
}

// string name = 2 [json_name = "name"];
inline void AutonomousSystem::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& AutonomousSystem::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.as_group.v202212.AutonomousSystem.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AutonomousSystem::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.as_group.v202212.AutonomousSystem.name)
}
inline std::string* AutonomousSystem::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:kentik.as_group.v202212.AutonomousSystem.name)
  return _s;
}
inline const std::string& AutonomousSystem::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void AutonomousSystem::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* AutonomousSystem::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* AutonomousSystem::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.as_group.v202212.AutonomousSystem.name)
  return _impl_.name_.Release();
}
inline void AutonomousSystem::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.as_group.v202212.AutonomousSystem.name)
}

// -------------------------------------------------------------------

// ASGroupConcise

// string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void ASGroupConcise::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& ASGroupConcise::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.as_group.v202212.ASGroupConcise.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ASGroupConcise::set_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.as_group.v202212.ASGroupConcise.id)
}
inline std::string* ASGroupConcise::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:kentik.as_group.v202212.ASGroupConcise.id)
  return _s;
}
inline const std::string& ASGroupConcise::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void ASGroupConcise::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(value, GetArena());
}
inline std::string* ASGroupConcise::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* ASGroupConcise::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.as_group.v202212.ASGroupConcise.id)
  return _impl_.id_.Release();
}
inline void ASGroupConcise::set_allocated_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.id_.IsDefault()) {
    _impl_.id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.as_group.v202212.ASGroupConcise.id)
}

// string name = 2 [json_name = "name", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void ASGroupConcise::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& ASGroupConcise::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.as_group.v202212.ASGroupConcise.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ASGroupConcise::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.as_group.v202212.ASGroupConcise.name)
}
inline std::string* ASGroupConcise::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:kentik.as_group.v202212.ASGroupConcise.name)
  return _s;
}
inline const std::string& ASGroupConcise::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void ASGroupConcise::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* ASGroupConcise::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* ASGroupConcise::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.as_group.v202212.ASGroupConcise.name)
  return _impl_.name_.Release();
}
inline void ASGroupConcise::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.as_group.v202212.ASGroupConcise.name)
}

// repeated string asn = 3 [json_name = "asn", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int ASGroupConcise::_internal_asn_size() const {
  return _internal_asn().size();
}
inline int ASGroupConcise::asn_size() const {
  return _internal_asn_size();
}
inline void ASGroupConcise::clear_asn() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.asn_.Clear();
}
inline std::string* ASGroupConcise::add_asn() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_asn()->Add();
  // @@protoc_insertion_point(field_add_mutable:kentik.as_group.v202212.ASGroupConcise.asn)
  return _s;
}
inline const std::string& ASGroupConcise::asn(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.as_group.v202212.ASGroupConcise.asn)
  return _internal_asn().Get(index);
}
inline std::string* ASGroupConcise::mutable_asn(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.as_group.v202212.ASGroupConcise.asn)
  return _internal_mutable_asn()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void ASGroupConcise::set_asn(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_asn()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:kentik.as_group.v202212.ASGroupConcise.asn)
}
template <typename Arg_, typename... Args_>
inline void ASGroupConcise::add_asn(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_asn(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:kentik.as_group.v202212.ASGroupConcise.asn)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ASGroupConcise::asn() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.as_group.v202212.ASGroupConcise.asn)
  return _internal_asn();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ASGroupConcise::mutable_asn() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.as_group.v202212.ASGroupConcise.asn)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_asn();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ASGroupConcise::_internal_asn() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.asn_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ASGroupConcise::_internal_mutable_asn() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.asn_;
}

// .google.protobuf.Timestamp created_date = 5 [json_name = "createdDate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool ASGroupConcise::has_created_date() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.created_date_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& ASGroupConcise::_internal_created_date() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.created_date_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& ASGroupConcise::created_date() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.as_group.v202212.ASGroupConcise.created_date)
  return _internal_created_date();
}
inline void ASGroupConcise::unsafe_arena_set_allocated_created_date(::google::protobuf::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.created_date_);
  }
  _impl_.created_date_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.as_group.v202212.ASGroupConcise.created_date)
}
inline ::google::protobuf::Timestamp* ASGroupConcise::release_created_date() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* released = _impl_.created_date_;
  _impl_.created_date_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* ASGroupConcise::unsafe_arena_release_created_date() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.as_group.v202212.ASGroupConcise.created_date)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* temp = _impl_.created_date_;
  _impl_.created_date_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* ASGroupConcise::_internal_mutable_created_date() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.created_date_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.created_date_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.created_date_;
}
inline ::google::protobuf::Timestamp* ASGroupConcise::mutable_created_date() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_created_date();
  // @@protoc_insertion_point(field_mutable:kentik.as_group.v202212.ASGroupConcise.created_date)
  return _msg;
}
inline void ASGroupConcise::set_allocated_created_date(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.created_date_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.created_date_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.as_group.v202212.ASGroupConcise.created_date)
}

// .google.protobuf.Timestamp updated_date = 6 [json_name = "updatedDate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool ASGroupConcise::has_updated_date() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.updated_date_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& ASGroupConcise::_internal_updated_date() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.updated_date_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& ASGroupConcise::updated_date() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.as_group.v202212.ASGroupConcise.updated_date)
  return _internal_updated_date();
}
inline void ASGroupConcise::unsafe_arena_set_allocated_updated_date(::google::protobuf::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.updated_date_);
  }
  _impl_.updated_date_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.as_group.v202212.ASGroupConcise.updated_date)
}
inline ::google::protobuf::Timestamp* ASGroupConcise::release_updated_date() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* released = _impl_.updated_date_;
  _impl_.updated_date_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* ASGroupConcise::unsafe_arena_release_updated_date() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.as_group.v202212.ASGroupConcise.updated_date)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* temp = _impl_.updated_date_;
  _impl_.updated_date_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* ASGroupConcise::_internal_mutable_updated_date() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.updated_date_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.updated_date_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.updated_date_;
}
inline ::google::protobuf::Timestamp* ASGroupConcise::mutable_updated_date() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_updated_date();
  // @@protoc_insertion_point(field_mutable:kentik.as_group.v202212.ASGroupConcise.updated_date)
  return _msg;
}
inline void ASGroupConcise::set_allocated_updated_date(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.updated_date_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.updated_date_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.as_group.v202212.ASGroupConcise.updated_date)
}

// -------------------------------------------------------------------

// ASGroupDetailed

// string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void ASGroupDetailed::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& ASGroupDetailed::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.as_group.v202212.ASGroupDetailed.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ASGroupDetailed::set_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.as_group.v202212.ASGroupDetailed.id)
}
inline std::string* ASGroupDetailed::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:kentik.as_group.v202212.ASGroupDetailed.id)
  return _s;
}
inline const std::string& ASGroupDetailed::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void ASGroupDetailed::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(value, GetArena());
}
inline std::string* ASGroupDetailed::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* ASGroupDetailed::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.as_group.v202212.ASGroupDetailed.id)
  return _impl_.id_.Release();
}
inline void ASGroupDetailed::set_allocated_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.id_.IsDefault()) {
    _impl_.id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.as_group.v202212.ASGroupDetailed.id)
}

// string name = 2 [json_name = "name", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void ASGroupDetailed::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& ASGroupDetailed::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.as_group.v202212.ASGroupDetailed.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ASGroupDetailed::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.as_group.v202212.ASGroupDetailed.name)
}
inline std::string* ASGroupDetailed::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:kentik.as_group.v202212.ASGroupDetailed.name)
  return _s;
}
inline const std::string& ASGroupDetailed::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void ASGroupDetailed::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* ASGroupDetailed::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* ASGroupDetailed::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.as_group.v202212.ASGroupDetailed.name)
  return _impl_.name_.Release();
}
inline void ASGroupDetailed::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.as_group.v202212.ASGroupDetailed.name)
}

// repeated .kentik.as_group.v202212.AutonomousSystem asn = 3 [json_name = "asn", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int ASGroupDetailed::_internal_asn_size() const {
  return _internal_asn().size();
}
inline int ASGroupDetailed::asn_size() const {
  return _internal_asn_size();
}
inline void ASGroupDetailed::clear_asn() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.asn_.Clear();
}
inline ::kentik::as_group::v202212::AutonomousSystem* ASGroupDetailed::mutable_asn(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.as_group.v202212.ASGroupDetailed.asn)
  return _internal_mutable_asn()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::kentik::as_group::v202212::AutonomousSystem>* ASGroupDetailed::mutable_asn()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.as_group.v202212.ASGroupDetailed.asn)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_asn();
}
inline const ::kentik::as_group::v202212::AutonomousSystem& ASGroupDetailed::asn(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.as_group.v202212.ASGroupDetailed.asn)
  return _internal_asn().Get(index);
}
inline ::kentik::as_group::v202212::AutonomousSystem* ASGroupDetailed::add_asn() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::kentik::as_group::v202212::AutonomousSystem* _add = _internal_mutable_asn()->Add();
  // @@protoc_insertion_point(field_add:kentik.as_group.v202212.ASGroupDetailed.asn)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::as_group::v202212::AutonomousSystem>& ASGroupDetailed::asn() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.as_group.v202212.ASGroupDetailed.asn)
  return _internal_asn();
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::as_group::v202212::AutonomousSystem>&
ASGroupDetailed::_internal_asn() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.asn_;
}
inline ::google::protobuf::RepeatedPtrField<::kentik::as_group::v202212::AutonomousSystem>*
ASGroupDetailed::_internal_mutable_asn() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.asn_;
}

// .google.protobuf.Timestamp created_date = 5 [json_name = "createdDate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool ASGroupDetailed::has_created_date() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.created_date_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& ASGroupDetailed::_internal_created_date() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.created_date_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& ASGroupDetailed::created_date() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.as_group.v202212.ASGroupDetailed.created_date)
  return _internal_created_date();
}
inline void ASGroupDetailed::unsafe_arena_set_allocated_created_date(::google::protobuf::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.created_date_);
  }
  _impl_.created_date_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.as_group.v202212.ASGroupDetailed.created_date)
}
inline ::google::protobuf::Timestamp* ASGroupDetailed::release_created_date() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* released = _impl_.created_date_;
  _impl_.created_date_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* ASGroupDetailed::unsafe_arena_release_created_date() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.as_group.v202212.ASGroupDetailed.created_date)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* temp = _impl_.created_date_;
  _impl_.created_date_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* ASGroupDetailed::_internal_mutable_created_date() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.created_date_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.created_date_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.created_date_;
}
inline ::google::protobuf::Timestamp* ASGroupDetailed::mutable_created_date() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_created_date();
  // @@protoc_insertion_point(field_mutable:kentik.as_group.v202212.ASGroupDetailed.created_date)
  return _msg;
}
inline void ASGroupDetailed::set_allocated_created_date(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.created_date_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.created_date_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.as_group.v202212.ASGroupDetailed.created_date)
}

// .google.protobuf.Timestamp updated_date = 6 [json_name = "updatedDate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool ASGroupDetailed::has_updated_date() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.updated_date_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& ASGroupDetailed::_internal_updated_date() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.updated_date_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& ASGroupDetailed::updated_date() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.as_group.v202212.ASGroupDetailed.updated_date)
  return _internal_updated_date();
}
inline void ASGroupDetailed::unsafe_arena_set_allocated_updated_date(::google::protobuf::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.updated_date_);
  }
  _impl_.updated_date_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.as_group.v202212.ASGroupDetailed.updated_date)
}
inline ::google::protobuf::Timestamp* ASGroupDetailed::release_updated_date() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* released = _impl_.updated_date_;
  _impl_.updated_date_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* ASGroupDetailed::unsafe_arena_release_updated_date() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.as_group.v202212.ASGroupDetailed.updated_date)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* temp = _impl_.updated_date_;
  _impl_.updated_date_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* ASGroupDetailed::_internal_mutable_updated_date() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.updated_date_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.updated_date_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.updated_date_;
}
inline ::google::protobuf::Timestamp* ASGroupDetailed::mutable_updated_date() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_updated_date();
  // @@protoc_insertion_point(field_mutable:kentik.as_group.v202212.ASGroupDetailed.updated_date)
  return _msg;
}
inline void ASGroupDetailed::set_allocated_updated_date(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.updated_date_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.updated_date_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.as_group.v202212.ASGroupDetailed.updated_date)
}

// -------------------------------------------------------------------

// ListASGroupsRequest

// -------------------------------------------------------------------

// ListASGroupsResponse

// repeated .kentik.as_group.v202212.ASGroupDetailed as_groups = 1 [json_name = "asGroups", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int ListASGroupsResponse::_internal_as_groups_size() const {
  return _internal_as_groups().size();
}
inline int ListASGroupsResponse::as_groups_size() const {
  return _internal_as_groups_size();
}
inline void ListASGroupsResponse::clear_as_groups() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.as_groups_.Clear();
}
inline ::kentik::as_group::v202212::ASGroupDetailed* ListASGroupsResponse::mutable_as_groups(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.as_group.v202212.ListASGroupsResponse.as_groups)
  return _internal_mutable_as_groups()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::kentik::as_group::v202212::ASGroupDetailed>* ListASGroupsResponse::mutable_as_groups()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.as_group.v202212.ListASGroupsResponse.as_groups)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_as_groups();
}
inline const ::kentik::as_group::v202212::ASGroupDetailed& ListASGroupsResponse::as_groups(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.as_group.v202212.ListASGroupsResponse.as_groups)
  return _internal_as_groups().Get(index);
}
inline ::kentik::as_group::v202212::ASGroupDetailed* ListASGroupsResponse::add_as_groups() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::kentik::as_group::v202212::ASGroupDetailed* _add = _internal_mutable_as_groups()->Add();
  // @@protoc_insertion_point(field_add:kentik.as_group.v202212.ListASGroupsResponse.as_groups)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::as_group::v202212::ASGroupDetailed>& ListASGroupsResponse::as_groups() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.as_group.v202212.ListASGroupsResponse.as_groups)
  return _internal_as_groups();
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::as_group::v202212::ASGroupDetailed>&
ListASGroupsResponse::_internal_as_groups() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.as_groups_;
}
inline ::google::protobuf::RepeatedPtrField<::kentik::as_group::v202212::ASGroupDetailed>*
ListASGroupsResponse::_internal_mutable_as_groups() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.as_groups_;
}

// uint32 invalid_count = 2 [json_name = "invalidCount", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void ListASGroupsResponse::clear_invalid_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.invalid_count_ = 0u;
}
inline ::uint32_t ListASGroupsResponse::invalid_count() const {
  // @@protoc_insertion_point(field_get:kentik.as_group.v202212.ListASGroupsResponse.invalid_count)
  return _internal_invalid_count();
}
inline void ListASGroupsResponse::set_invalid_count(::uint32_t value) {
  _internal_set_invalid_count(value);
  // @@protoc_insertion_point(field_set:kentik.as_group.v202212.ListASGroupsResponse.invalid_count)
}
inline ::uint32_t ListASGroupsResponse::_internal_invalid_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.invalid_count_;
}
inline void ListASGroupsResponse::_internal_set_invalid_count(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.invalid_count_ = value;
}

// -------------------------------------------------------------------

// GetASGroupRequest

// string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void GetASGroupRequest::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& GetASGroupRequest::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.as_group.v202212.GetASGroupRequest.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetASGroupRequest::set_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.as_group.v202212.GetASGroupRequest.id)
}
inline std::string* GetASGroupRequest::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:kentik.as_group.v202212.GetASGroupRequest.id)
  return _s;
}
inline const std::string& GetASGroupRequest::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void GetASGroupRequest::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(value, GetArena());
}
inline std::string* GetASGroupRequest::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* GetASGroupRequest::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.as_group.v202212.GetASGroupRequest.id)
  return _impl_.id_.Release();
}
inline void GetASGroupRequest::set_allocated_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.id_.IsDefault()) {
    _impl_.id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.as_group.v202212.GetASGroupRequest.id)
}

// -------------------------------------------------------------------

// GetASGroupResponse

// .kentik.as_group.v202212.ASGroupDetailed as_group = 1 [json_name = "asGroup", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool GetASGroupResponse::has_as_group() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.as_group_ != nullptr);
  return value;
}
inline void GetASGroupResponse::clear_as_group() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.as_group_ != nullptr) _impl_.as_group_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::kentik::as_group::v202212::ASGroupDetailed& GetASGroupResponse::_internal_as_group() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::as_group::v202212::ASGroupDetailed* p = _impl_.as_group_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::as_group::v202212::ASGroupDetailed&>(::kentik::as_group::v202212::_ASGroupDetailed_default_instance_);
}
inline const ::kentik::as_group::v202212::ASGroupDetailed& GetASGroupResponse::as_group() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.as_group.v202212.GetASGroupResponse.as_group)
  return _internal_as_group();
}
inline void GetASGroupResponse::unsafe_arena_set_allocated_as_group(::kentik::as_group::v202212::ASGroupDetailed* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.as_group_);
  }
  _impl_.as_group_ = reinterpret_cast<::kentik::as_group::v202212::ASGroupDetailed*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.as_group.v202212.GetASGroupResponse.as_group)
}
inline ::kentik::as_group::v202212::ASGroupDetailed* GetASGroupResponse::release_as_group() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::as_group::v202212::ASGroupDetailed* released = _impl_.as_group_;
  _impl_.as_group_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::as_group::v202212::ASGroupDetailed* GetASGroupResponse::unsafe_arena_release_as_group() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.as_group.v202212.GetASGroupResponse.as_group)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::as_group::v202212::ASGroupDetailed* temp = _impl_.as_group_;
  _impl_.as_group_ = nullptr;
  return temp;
}
inline ::kentik::as_group::v202212::ASGroupDetailed* GetASGroupResponse::_internal_mutable_as_group() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.as_group_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::as_group::v202212::ASGroupDetailed>(GetArena());
    _impl_.as_group_ = reinterpret_cast<::kentik::as_group::v202212::ASGroupDetailed*>(p);
  }
  return _impl_.as_group_;
}
inline ::kentik::as_group::v202212::ASGroupDetailed* GetASGroupResponse::mutable_as_group() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::kentik::as_group::v202212::ASGroupDetailed* _msg = _internal_mutable_as_group();
  // @@protoc_insertion_point(field_mutable:kentik.as_group.v202212.GetASGroupResponse.as_group)
  return _msg;
}
inline void GetASGroupResponse::set_allocated_as_group(::kentik::as_group::v202212::ASGroupDetailed* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.as_group_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.as_group_ = reinterpret_cast<::kentik::as_group::v202212::ASGroupDetailed*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.as_group.v202212.GetASGroupResponse.as_group)
}

// -------------------------------------------------------------------

// CreateASGroupRequest

// .kentik.as_group.v202212.ASGroupConcise as_group = 1 [json_name = "asGroup", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool CreateASGroupRequest::has_as_group() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.as_group_ != nullptr);
  return value;
}
inline void CreateASGroupRequest::clear_as_group() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.as_group_ != nullptr) _impl_.as_group_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::kentik::as_group::v202212::ASGroupConcise& CreateASGroupRequest::_internal_as_group() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::as_group::v202212::ASGroupConcise* p = _impl_.as_group_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::as_group::v202212::ASGroupConcise&>(::kentik::as_group::v202212::_ASGroupConcise_default_instance_);
}
inline const ::kentik::as_group::v202212::ASGroupConcise& CreateASGroupRequest::as_group() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.as_group.v202212.CreateASGroupRequest.as_group)
  return _internal_as_group();
}
inline void CreateASGroupRequest::unsafe_arena_set_allocated_as_group(::kentik::as_group::v202212::ASGroupConcise* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.as_group_);
  }
  _impl_.as_group_ = reinterpret_cast<::kentik::as_group::v202212::ASGroupConcise*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.as_group.v202212.CreateASGroupRequest.as_group)
}
inline ::kentik::as_group::v202212::ASGroupConcise* CreateASGroupRequest::release_as_group() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::as_group::v202212::ASGroupConcise* released = _impl_.as_group_;
  _impl_.as_group_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::as_group::v202212::ASGroupConcise* CreateASGroupRequest::unsafe_arena_release_as_group() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.as_group.v202212.CreateASGroupRequest.as_group)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::as_group::v202212::ASGroupConcise* temp = _impl_.as_group_;
  _impl_.as_group_ = nullptr;
  return temp;
}
inline ::kentik::as_group::v202212::ASGroupConcise* CreateASGroupRequest::_internal_mutable_as_group() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.as_group_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::as_group::v202212::ASGroupConcise>(GetArena());
    _impl_.as_group_ = reinterpret_cast<::kentik::as_group::v202212::ASGroupConcise*>(p);
  }
  return _impl_.as_group_;
}
inline ::kentik::as_group::v202212::ASGroupConcise* CreateASGroupRequest::mutable_as_group() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::kentik::as_group::v202212::ASGroupConcise* _msg = _internal_mutable_as_group();
  // @@protoc_insertion_point(field_mutable:kentik.as_group.v202212.CreateASGroupRequest.as_group)
  return _msg;
}
inline void CreateASGroupRequest::set_allocated_as_group(::kentik::as_group::v202212::ASGroupConcise* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.as_group_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.as_group_ = reinterpret_cast<::kentik::as_group::v202212::ASGroupConcise*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.as_group.v202212.CreateASGroupRequest.as_group)
}

// -------------------------------------------------------------------

// CreateASGroupResponse

// .kentik.as_group.v202212.ASGroupDetailed as_group = 1 [json_name = "asGroup", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool CreateASGroupResponse::has_as_group() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.as_group_ != nullptr);
  return value;
}
inline void CreateASGroupResponse::clear_as_group() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.as_group_ != nullptr) _impl_.as_group_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::kentik::as_group::v202212::ASGroupDetailed& CreateASGroupResponse::_internal_as_group() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::as_group::v202212::ASGroupDetailed* p = _impl_.as_group_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::as_group::v202212::ASGroupDetailed&>(::kentik::as_group::v202212::_ASGroupDetailed_default_instance_);
}
inline const ::kentik::as_group::v202212::ASGroupDetailed& CreateASGroupResponse::as_group() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.as_group.v202212.CreateASGroupResponse.as_group)
  return _internal_as_group();
}
inline void CreateASGroupResponse::unsafe_arena_set_allocated_as_group(::kentik::as_group::v202212::ASGroupDetailed* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.as_group_);
  }
  _impl_.as_group_ = reinterpret_cast<::kentik::as_group::v202212::ASGroupDetailed*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.as_group.v202212.CreateASGroupResponse.as_group)
}
inline ::kentik::as_group::v202212::ASGroupDetailed* CreateASGroupResponse::release_as_group() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::as_group::v202212::ASGroupDetailed* released = _impl_.as_group_;
  _impl_.as_group_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::as_group::v202212::ASGroupDetailed* CreateASGroupResponse::unsafe_arena_release_as_group() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.as_group.v202212.CreateASGroupResponse.as_group)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::as_group::v202212::ASGroupDetailed* temp = _impl_.as_group_;
  _impl_.as_group_ = nullptr;
  return temp;
}
inline ::kentik::as_group::v202212::ASGroupDetailed* CreateASGroupResponse::_internal_mutable_as_group() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.as_group_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::as_group::v202212::ASGroupDetailed>(GetArena());
    _impl_.as_group_ = reinterpret_cast<::kentik::as_group::v202212::ASGroupDetailed*>(p);
  }
  return _impl_.as_group_;
}
inline ::kentik::as_group::v202212::ASGroupDetailed* CreateASGroupResponse::mutable_as_group() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::kentik::as_group::v202212::ASGroupDetailed* _msg = _internal_mutable_as_group();
  // @@protoc_insertion_point(field_mutable:kentik.as_group.v202212.CreateASGroupResponse.as_group)
  return _msg;
}
inline void CreateASGroupResponse::set_allocated_as_group(::kentik::as_group::v202212::ASGroupDetailed* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.as_group_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.as_group_ = reinterpret_cast<::kentik::as_group::v202212::ASGroupDetailed*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.as_group.v202212.CreateASGroupResponse.as_group)
}

// -------------------------------------------------------------------

// UpdateASGroupRequest

// .kentik.as_group.v202212.ASGroupConcise as_group = 1 [json_name = "asGroup", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool UpdateASGroupRequest::has_as_group() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.as_group_ != nullptr);
  return value;
}
inline void UpdateASGroupRequest::clear_as_group() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.as_group_ != nullptr) _impl_.as_group_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::kentik::as_group::v202212::ASGroupConcise& UpdateASGroupRequest::_internal_as_group() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::as_group::v202212::ASGroupConcise* p = _impl_.as_group_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::as_group::v202212::ASGroupConcise&>(::kentik::as_group::v202212::_ASGroupConcise_default_instance_);
}
inline const ::kentik::as_group::v202212::ASGroupConcise& UpdateASGroupRequest::as_group() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.as_group.v202212.UpdateASGroupRequest.as_group)
  return _internal_as_group();
}
inline void UpdateASGroupRequest::unsafe_arena_set_allocated_as_group(::kentik::as_group::v202212::ASGroupConcise* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.as_group_);
  }
  _impl_.as_group_ = reinterpret_cast<::kentik::as_group::v202212::ASGroupConcise*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.as_group.v202212.UpdateASGroupRequest.as_group)
}
inline ::kentik::as_group::v202212::ASGroupConcise* UpdateASGroupRequest::release_as_group() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::as_group::v202212::ASGroupConcise* released = _impl_.as_group_;
  _impl_.as_group_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::as_group::v202212::ASGroupConcise* UpdateASGroupRequest::unsafe_arena_release_as_group() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.as_group.v202212.UpdateASGroupRequest.as_group)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::as_group::v202212::ASGroupConcise* temp = _impl_.as_group_;
  _impl_.as_group_ = nullptr;
  return temp;
}
inline ::kentik::as_group::v202212::ASGroupConcise* UpdateASGroupRequest::_internal_mutable_as_group() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.as_group_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::as_group::v202212::ASGroupConcise>(GetArena());
    _impl_.as_group_ = reinterpret_cast<::kentik::as_group::v202212::ASGroupConcise*>(p);
  }
  return _impl_.as_group_;
}
inline ::kentik::as_group::v202212::ASGroupConcise* UpdateASGroupRequest::mutable_as_group() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::kentik::as_group::v202212::ASGroupConcise* _msg = _internal_mutable_as_group();
  // @@protoc_insertion_point(field_mutable:kentik.as_group.v202212.UpdateASGroupRequest.as_group)
  return _msg;
}
inline void UpdateASGroupRequest::set_allocated_as_group(::kentik::as_group::v202212::ASGroupConcise* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.as_group_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.as_group_ = reinterpret_cast<::kentik::as_group::v202212::ASGroupConcise*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.as_group.v202212.UpdateASGroupRequest.as_group)
}

// -------------------------------------------------------------------

// UpdateASGroupResponse

// .kentik.as_group.v202212.ASGroupDetailed as_group = 1 [json_name = "asGroup", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool UpdateASGroupResponse::has_as_group() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.as_group_ != nullptr);
  return value;
}
inline void UpdateASGroupResponse::clear_as_group() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.as_group_ != nullptr) _impl_.as_group_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::kentik::as_group::v202212::ASGroupDetailed& UpdateASGroupResponse::_internal_as_group() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::as_group::v202212::ASGroupDetailed* p = _impl_.as_group_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::as_group::v202212::ASGroupDetailed&>(::kentik::as_group::v202212::_ASGroupDetailed_default_instance_);
}
inline const ::kentik::as_group::v202212::ASGroupDetailed& UpdateASGroupResponse::as_group() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.as_group.v202212.UpdateASGroupResponse.as_group)
  return _internal_as_group();
}
inline void UpdateASGroupResponse::unsafe_arena_set_allocated_as_group(::kentik::as_group::v202212::ASGroupDetailed* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.as_group_);
  }
  _impl_.as_group_ = reinterpret_cast<::kentik::as_group::v202212::ASGroupDetailed*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.as_group.v202212.UpdateASGroupResponse.as_group)
}
inline ::kentik::as_group::v202212::ASGroupDetailed* UpdateASGroupResponse::release_as_group() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::as_group::v202212::ASGroupDetailed* released = _impl_.as_group_;
  _impl_.as_group_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::as_group::v202212::ASGroupDetailed* UpdateASGroupResponse::unsafe_arena_release_as_group() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.as_group.v202212.UpdateASGroupResponse.as_group)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::as_group::v202212::ASGroupDetailed* temp = _impl_.as_group_;
  _impl_.as_group_ = nullptr;
  return temp;
}
inline ::kentik::as_group::v202212::ASGroupDetailed* UpdateASGroupResponse::_internal_mutable_as_group() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.as_group_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::as_group::v202212::ASGroupDetailed>(GetArena());
    _impl_.as_group_ = reinterpret_cast<::kentik::as_group::v202212::ASGroupDetailed*>(p);
  }
  return _impl_.as_group_;
}
inline ::kentik::as_group::v202212::ASGroupDetailed* UpdateASGroupResponse::mutable_as_group() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::kentik::as_group::v202212::ASGroupDetailed* _msg = _internal_mutable_as_group();
  // @@protoc_insertion_point(field_mutable:kentik.as_group.v202212.UpdateASGroupResponse.as_group)
  return _msg;
}
inline void UpdateASGroupResponse::set_allocated_as_group(::kentik::as_group::v202212::ASGroupDetailed* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.as_group_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.as_group_ = reinterpret_cast<::kentik::as_group::v202212::ASGroupDetailed*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.as_group.v202212.UpdateASGroupResponse.as_group)
}

// -------------------------------------------------------------------

// DeleteASGroupRequest

// string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void DeleteASGroupRequest::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& DeleteASGroupRequest::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.as_group.v202212.DeleteASGroupRequest.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeleteASGroupRequest::set_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.as_group.v202212.DeleteASGroupRequest.id)
}
inline std::string* DeleteASGroupRequest::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:kentik.as_group.v202212.DeleteASGroupRequest.id)
  return _s;
}
inline const std::string& DeleteASGroupRequest::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void DeleteASGroupRequest::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(value, GetArena());
}
inline std::string* DeleteASGroupRequest::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* DeleteASGroupRequest::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.as_group.v202212.DeleteASGroupRequest.id)
  return _impl_.id_.Release();
}
inline void DeleteASGroupRequest::set_allocated_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.id_.IsDefault()) {
    _impl_.id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.as_group.v202212.DeleteASGroupRequest.id)
}

// -------------------------------------------------------------------

// DeleteASGroupResponse

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v202212
}  // namespace as_group
}  // namespace kentik


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto_2epb_2eh
