// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: kentik/as_group/v202212/as_group.proto

#include "kentik/as_group/v202212/as_group.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2ftimestamp_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ASGroupConcise_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ASGroupDetailed_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AutonomousSystem_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto;
namespace kentik {
namespace as_group {
namespace v202212 {
class AutonomousSystemDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AutonomousSystem> _instance;
} _AutonomousSystem_default_instance_;
class ASGroupConciseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ASGroupConcise> _instance;
} _ASGroupConcise_default_instance_;
class ASGroupDetailedDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ASGroupDetailed> _instance;
} _ASGroupDetailed_default_instance_;
class ListASGroupsRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ListASGroupsRequest> _instance;
} _ListASGroupsRequest_default_instance_;
class ListASGroupsResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ListASGroupsResponse> _instance;
} _ListASGroupsResponse_default_instance_;
class GetASGroupRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetASGroupRequest> _instance;
} _GetASGroupRequest_default_instance_;
class GetASGroupResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetASGroupResponse> _instance;
} _GetASGroupResponse_default_instance_;
class CreateASGroupRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateASGroupRequest> _instance;
} _CreateASGroupRequest_default_instance_;
class CreateASGroupResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateASGroupResponse> _instance;
} _CreateASGroupResponse_default_instance_;
class UpdateASGroupRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdateASGroupRequest> _instance;
} _UpdateASGroupRequest_default_instance_;
class UpdateASGroupResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdateASGroupResponse> _instance;
} _UpdateASGroupResponse_default_instance_;
class DeleteASGroupRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteASGroupRequest> _instance;
} _DeleteASGroupRequest_default_instance_;
class DeleteASGroupResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteASGroupResponse> _instance;
} _DeleteASGroupResponse_default_instance_;
}  // namespace v202212
}  // namespace as_group
}  // namespace kentik
static void InitDefaultsscc_info_ASGroupConcise_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kentik::as_group::v202212::_ASGroupConcise_default_instance_;
    new (ptr) ::kentik::as_group::v202212::ASGroupConcise();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kentik::as_group::v202212::ASGroupConcise::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ASGroupConcise_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ASGroupConcise_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto}, {
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,}};

static void InitDefaultsscc_info_ASGroupDetailed_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kentik::as_group::v202212::_ASGroupDetailed_default_instance_;
    new (ptr) ::kentik::as_group::v202212::ASGroupDetailed();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kentik::as_group::v202212::ASGroupDetailed::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ASGroupDetailed_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_ASGroupDetailed_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto}, {
      &scc_info_AutonomousSystem_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto.base,
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,}};

static void InitDefaultsscc_info_AutonomousSystem_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kentik::as_group::v202212::_AutonomousSystem_default_instance_;
    new (ptr) ::kentik::as_group::v202212::AutonomousSystem();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kentik::as_group::v202212::AutonomousSystem::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AutonomousSystem_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AutonomousSystem_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto}, {}};

static void InitDefaultsscc_info_CreateASGroupRequest_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kentik::as_group::v202212::_CreateASGroupRequest_default_instance_;
    new (ptr) ::kentik::as_group::v202212::CreateASGroupRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kentik::as_group::v202212::CreateASGroupRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CreateASGroupRequest_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_CreateASGroupRequest_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto}, {
      &scc_info_ASGroupConcise_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto.base,}};

static void InitDefaultsscc_info_CreateASGroupResponse_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kentik::as_group::v202212::_CreateASGroupResponse_default_instance_;
    new (ptr) ::kentik::as_group::v202212::CreateASGroupResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kentik::as_group::v202212::CreateASGroupResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CreateASGroupResponse_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_CreateASGroupResponse_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto}, {
      &scc_info_ASGroupDetailed_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto.base,}};

static void InitDefaultsscc_info_DeleteASGroupRequest_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kentik::as_group::v202212::_DeleteASGroupRequest_default_instance_;
    new (ptr) ::kentik::as_group::v202212::DeleteASGroupRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kentik::as_group::v202212::DeleteASGroupRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteASGroupRequest_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteASGroupRequest_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto}, {}};

static void InitDefaultsscc_info_DeleteASGroupResponse_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kentik::as_group::v202212::_DeleteASGroupResponse_default_instance_;
    new (ptr) ::kentik::as_group::v202212::DeleteASGroupResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kentik::as_group::v202212::DeleteASGroupResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteASGroupResponse_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteASGroupResponse_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto}, {}};

static void InitDefaultsscc_info_GetASGroupRequest_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kentik::as_group::v202212::_GetASGroupRequest_default_instance_;
    new (ptr) ::kentik::as_group::v202212::GetASGroupRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kentik::as_group::v202212::GetASGroupRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetASGroupRequest_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetASGroupRequest_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto}, {}};

static void InitDefaultsscc_info_GetASGroupResponse_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kentik::as_group::v202212::_GetASGroupResponse_default_instance_;
    new (ptr) ::kentik::as_group::v202212::GetASGroupResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kentik::as_group::v202212::GetASGroupResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetASGroupResponse_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetASGroupResponse_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto}, {
      &scc_info_ASGroupDetailed_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto.base,}};

static void InitDefaultsscc_info_ListASGroupsRequest_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kentik::as_group::v202212::_ListASGroupsRequest_default_instance_;
    new (ptr) ::kentik::as_group::v202212::ListASGroupsRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kentik::as_group::v202212::ListASGroupsRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ListASGroupsRequest_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ListASGroupsRequest_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto}, {}};

static void InitDefaultsscc_info_ListASGroupsResponse_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kentik::as_group::v202212::_ListASGroupsResponse_default_instance_;
    new (ptr) ::kentik::as_group::v202212::ListASGroupsResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kentik::as_group::v202212::ListASGroupsResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ListASGroupsResponse_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ListASGroupsResponse_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto}, {
      &scc_info_ASGroupDetailed_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto.base,}};

static void InitDefaultsscc_info_UpdateASGroupRequest_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kentik::as_group::v202212::_UpdateASGroupRequest_default_instance_;
    new (ptr) ::kentik::as_group::v202212::UpdateASGroupRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kentik::as_group::v202212::UpdateASGroupRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_UpdateASGroupRequest_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_UpdateASGroupRequest_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto}, {
      &scc_info_ASGroupConcise_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto.base,}};

static void InitDefaultsscc_info_UpdateASGroupResponse_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kentik::as_group::v202212::_UpdateASGroupResponse_default_instance_;
    new (ptr) ::kentik::as_group::v202212::UpdateASGroupResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kentik::as_group::v202212::UpdateASGroupResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_UpdateASGroupResponse_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_UpdateASGroupResponse_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto}, {
      &scc_info_ASGroupDetailed_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto[13];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kentik::as_group::v202212::AutonomousSystem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kentik::as_group::v202212::AutonomousSystem, asn_),
  PROTOBUF_FIELD_OFFSET(::kentik::as_group::v202212::AutonomousSystem, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kentik::as_group::v202212::ASGroupConcise, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kentik::as_group::v202212::ASGroupConcise, id_),
  PROTOBUF_FIELD_OFFSET(::kentik::as_group::v202212::ASGroupConcise, name_),
  PROTOBUF_FIELD_OFFSET(::kentik::as_group::v202212::ASGroupConcise, asn_),
  PROTOBUF_FIELD_OFFSET(::kentik::as_group::v202212::ASGroupConcise, created_date_),
  PROTOBUF_FIELD_OFFSET(::kentik::as_group::v202212::ASGroupConcise, updated_date_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kentik::as_group::v202212::ASGroupDetailed, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kentik::as_group::v202212::ASGroupDetailed, id_),
  PROTOBUF_FIELD_OFFSET(::kentik::as_group::v202212::ASGroupDetailed, name_),
  PROTOBUF_FIELD_OFFSET(::kentik::as_group::v202212::ASGroupDetailed, asn_),
  PROTOBUF_FIELD_OFFSET(::kentik::as_group::v202212::ASGroupDetailed, created_date_),
  PROTOBUF_FIELD_OFFSET(::kentik::as_group::v202212::ASGroupDetailed, updated_date_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kentik::as_group::v202212::ListASGroupsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kentik::as_group::v202212::ListASGroupsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kentik::as_group::v202212::ListASGroupsResponse, as_groups_),
  PROTOBUF_FIELD_OFFSET(::kentik::as_group::v202212::ListASGroupsResponse, invalid_count_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kentik::as_group::v202212::GetASGroupRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kentik::as_group::v202212::GetASGroupRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kentik::as_group::v202212::GetASGroupResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kentik::as_group::v202212::GetASGroupResponse, as_group_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kentik::as_group::v202212::CreateASGroupRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kentik::as_group::v202212::CreateASGroupRequest, as_group_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kentik::as_group::v202212::CreateASGroupResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kentik::as_group::v202212::CreateASGroupResponse, as_group_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kentik::as_group::v202212::UpdateASGroupRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kentik::as_group::v202212::UpdateASGroupRequest, as_group_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kentik::as_group::v202212::UpdateASGroupResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kentik::as_group::v202212::UpdateASGroupResponse, as_group_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kentik::as_group::v202212::DeleteASGroupRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kentik::as_group::v202212::DeleteASGroupRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kentik::as_group::v202212::DeleteASGroupResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::kentik::as_group::v202212::AutonomousSystem)},
  { 7, -1, sizeof(::kentik::as_group::v202212::ASGroupConcise)},
  { 17, -1, sizeof(::kentik::as_group::v202212::ASGroupDetailed)},
  { 27, -1, sizeof(::kentik::as_group::v202212::ListASGroupsRequest)},
  { 32, -1, sizeof(::kentik::as_group::v202212::ListASGroupsResponse)},
  { 39, -1, sizeof(::kentik::as_group::v202212::GetASGroupRequest)},
  { 45, -1, sizeof(::kentik::as_group::v202212::GetASGroupResponse)},
  { 51, -1, sizeof(::kentik::as_group::v202212::CreateASGroupRequest)},
  { 57, -1, sizeof(::kentik::as_group::v202212::CreateASGroupResponse)},
  { 63, -1, sizeof(::kentik::as_group::v202212::UpdateASGroupRequest)},
  { 69, -1, sizeof(::kentik::as_group::v202212::UpdateASGroupResponse)},
  { 75, -1, sizeof(::kentik::as_group::v202212::DeleteASGroupRequest)},
  { 81, -1, sizeof(::kentik::as_group::v202212::DeleteASGroupResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::kentik::as_group::v202212::_AutonomousSystem_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::kentik::as_group::v202212::_ASGroupConcise_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::kentik::as_group::v202212::_ASGroupDetailed_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::kentik::as_group::v202212::_ListASGroupsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::kentik::as_group::v202212::_ListASGroupsResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::kentik::as_group::v202212::_GetASGroupRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::kentik::as_group::v202212::_GetASGroupResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::kentik::as_group::v202212::_CreateASGroupRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::kentik::as_group::v202212::_CreateASGroupResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::kentik::as_group::v202212::_UpdateASGroupRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::kentik::as_group::v202212::_UpdateASGroupResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::kentik::as_group::v202212::_DeleteASGroupRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::kentik::as_group::v202212::_DeleteASGroupResponse_default_instance_),
};

const char descriptor_table_protodef_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n&kentik/as_group/v202212/as_group.proto"
  "\022\027kentik.as_group.v202212\032\034google/api/an"
  "notations.proto\032\027google/api/client.proto"
  "\032\037google/api/field_behavior.proto\032\037googl"
  "e/protobuf/timestamp.proto\032.protoc-gen-o"
  "penapiv2/options/annotations.proto\032+kent"
  "ik/core/v202012alpha1/annotations.proto\""
  "8\n\020AutonomousSystem\022\020\n\003asn\030\001 \001(\rR\003asn\022\022\n"
  "\004name\030\002 \001(\tR\004name\"\367\002\n\016ASGroupConcise\022;\n\002"
  "id\030\001 \001(\tB+\222A$2\"System generated unique i"
  "dentifier\342A\001\003R\002id\0226\n\004name\030\002 \001(\tB\"\222A\0332\031Us"
  "er selected unique name\342A\001\002R\004name\022#\n\003asn"
  "\030\003 \003(\tB\021\222A\0162\014List of ASNsR\003asn\022`\n\014create"
  "d_date\030\005 \001(\0132\032.google.protobuf.Timestamp"
  "B!\222A\0322\030Creation timestamp (UTC)\342A\001\003R\013cre"
  "atedDate\022i\n\014updated_date\030\006 \001(\0132\032.google."
  "protobuf.TimestampB*\222A#2!Last modificati"
  "on timestamp (UTC)\342A\001\003R\013updatedDate\"\243\003\n\017"
  "ASGroupDetailed\022;\n\002id\030\001 \001(\tB+\222A$2\"System"
  " generated unique identifier\342A\001\003R\002id\0226\n\004"
  "name\030\002 \001(\tB\"\222A\0332\031User selected unique na"
  "me\342A\001\002R\004name\022N\n\003asn\030\003 \003(\0132).kentik.as_gr"
  "oup.v202212.AutonomousSystemB\021\222A\0162\014List "
  "of ASNsR\003asn\022`\n\014created_date\030\005 \001(\0132\032.goo"
  "gle.protobuf.TimestampB!\222A\0322\030Creation ti"
  "mestamp (UTC)\342A\001\003R\013createdDate\022i\n\014update"
  "d_date\030\006 \001(\0132\032.google.protobuf.Timestamp"
  "B*\222A#2!Last modification timestamp (UTC)"
  "\342A\001\003R\013updatedDate\"\025\n\023ListASGroupsRequest"
  "\"\370\001\n\024ListASGroupsResponse\022y\n\tas_groups\030\001"
  " \003(\0132(.kentik.as_group.v202212.ASGroupDe"
  "tailedB2\222A/2-List of configurations of r"
  "equested AS groupsR\010asGroups\022e\n\rinvalid_"
  "count\030\002 \001(\rB@\222A=2;Number of invalid entr"
  "ies encountered while collecting dataR\014i"
  "nvalidCount\"J\n\021GetASGroupRequest\0225\n\002id\030\001"
  " \001(\tB%\222A\0362\034ID of the requested AS group\342"
  "A\001\002R\002id\"\207\001\n\022GetASGroupResponse\022q\n\010as_gro"
  "up\030\001 \001(\0132(.kentik.as_group.v202212.ASGro"
  "upDetailedB,\222A)2\'Configuration of the re"
  "quested AS groupR\007asGroup\"\206\001\n\024CreateASGr"
  "oupRequest\022n\n\010as_group\030\001 \001(\0132\'.kentik.as"
  "_group.v202212.ASGroupConciseB*\222A#2!Conf"
  "iguration of the new AS group\342A\001\002R\007asGro"
  "up\"\216\001\n\025CreateASGroupResponse\022u\n\010as_group"
  "\030\001 \001(\0132(.kentik.as_group.v202212.ASGroup"
  "DetailedB0\222A-2+Configuration of the newl"
  "y created AS groupR\007asGroup\"\241\001\n\024UpdateAS"
  "GroupRequest\022\210\001\n\010as_group\030\001 \001(\0132\'.kentik"
  ".as_group.v202212.ASGroupConciseBD\222A=2;N"
  "ew configuration attributes for the AS g"
  "roup to be updated\342A\001\002R\007asGroup\"\210\001\n\025Upda"
  "teASGroupResponse\022o\n\010as_group\030\001 \001(\0132(.ke"
  "ntik.as_group.v202212.ASGroupDetailedB*\222"
  "A\'2%Updated configuration of the AS grou"
  "pR\007asGroup\"Q\n\024DeleteASGroupRequest\0229\n\002id"
  "\030\001 \001(\tB)\222A\"2 ID of the AS group to be de"
  "leted\342A\001\002R\002id\"\027\n\025DeleteASGroupResponse2\375"
  "\013\n\016ASGroupService\022\364\001\n\014ListASGroups\022,.ken"
  "tik.as_group.v202212.ListASGroupsRequest"
  "\032-.kentik.as_group.v202212.ListASGroupsR"
  "esponse\"\206\001\222AJ\022\023List all AS groups.\032%Retu"
  "rns list of configured AS groups.*\014ListA"
  "SGroups\362\327\002\023admin.as_group:read\202\323\344\223\002\034\022\032/a"
  "s_group/v202212/as_group\022\222\002\n\nGetASGroup\022"
  "*.kentik.as_group.v202212.GetASGroupRequ"
  "est\032+.kentik.as_group.v202212.GetASGroup"
  "Response\"\252\001\222Ai\022%Retrieve configuration o"
  "f a AS group.\0324Returns configuration of "
  "a AS group specified by ID.*\nGetASGroup\362"
  "\327\002\023admin.as_group:read\202\323\344\223\002!\022\037/as_group/"
  "v202212/as_group/{id}\022\256\002\n\rCreateASGroup\022"
  "-.kentik.as_group.v202212.CreateASGroupR"
  "equest\032..kentik.as_group.v202212.CreateA"
  "SGroupResponse\"\275\001\222A}\022\031Configure a new AS"
  " group.\032QCreate configuration for a new "
  "AS group. Returns the newly created conf"
  "iguration.*\rCreateASGroup\362\327\002\024admin.as_gr"
  "oup:write\202\323\344\223\002\037\"\032/as_group/v202212/as_gr"
  "oup:\001*\022\336\002\n\rUpdateASGroup\022-.kentik.as_gro"
  "up.v202212.UpdateASGroupRequest\032..kentik"
  ".as_group.v202212.UpdateASGroupResponse\""
  "\355\001\222A\236\001\022$Updates configuration of a AS gr"
  "oup.\032gReplaces configuration of a AS gro"
  "up with attributes in the request. Retur"
  "ns the updated configuration.*\rUpdateASG"
  "roup\362\327\002\024admin.as_group:write\202\323\344\223\002-\032(/as_"
  "group/v202212/as_group/{as_group.id}:\001*\022"
  "\236\002\n\rDeleteASGroup\022-.kentik.as_group.v202"
  "212.DeleteASGroupRequest\032..kentik.as_gro"
  "up.v202212.DeleteASGroupResponse\"\255\001\222Ak\022#"
  "Delete configuration of a AS group.\0325Del"
  "etes configuration of a AS group with sp"
  "ecific ID.*\rDeleteASGroup\362\327\002\024admin.as_gr"
  "oup:write\202\323\344\223\002!*\037/as_group/v202212/as_gr"
  "oup/{id}\032,\312A\023grpc.api.kentik.com\352\327\002\016admi"
  "n.as_group\220\330\002\003B\311\004ZGgithub.com/kentik/api"
  "-schema-public/go/kentik/as_group/v20221"
  "2;as_group\222A\374\003\022\225\002\n\032AS Group Configuratio"
  "n API\022\246\001# Overview\nThe AS Group Configur"
  "ation API provides programmatic access t"
  "o configuration of AS Groups:\n\n* **AS Gr"
  "oup**: ASNs can be logically grouped int"
  "o an AS group.\"E\n\026Kentik API Engineering"
  "\022+https://github.com/kentik/api-schema-p"
  "ublic2\007v202212*\001\0022\020application/json:\020app"
  "lication/jsonZD\n\036\n\005email\022\025\010\002\032\017X-CH-Auth-"
  "Email \002\n\"\n\005token\022\031\010\002\032\023X-CH-Auth-API-Toke"
  "n \002b\026\n\t\n\005email\022\000\n\t\n\005token\022\000r]\n%General i"
  "nformation about Kentik APIs\0224https://kb"
  ".kentik.com/v0/Ab09.htm#Ab09-APIs_Overvi"
  "ewb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto_deps[6] = {
  &::descriptor_table_google_2fapi_2fannotations_2eproto,
  &::descriptor_table_google_2fapi_2fclient_2eproto,
  &::descriptor_table_google_2fapi_2ffield_5fbehavior_2eproto,
  &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
  &::descriptor_table_kentik_2fcore_2fv202012alpha1_2fannotations_2eproto,
  &::descriptor_table_protoc_2dgen_2dopenapiv2_2foptions_2fannotations_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto_sccs[13] = {
  &scc_info_ASGroupConcise_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto.base,
  &scc_info_ASGroupDetailed_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto.base,
  &scc_info_AutonomousSystem_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto.base,
  &scc_info_CreateASGroupRequest_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto.base,
  &scc_info_CreateASGroupResponse_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto.base,
  &scc_info_DeleteASGroupRequest_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto.base,
  &scc_info_DeleteASGroupResponse_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto.base,
  &scc_info_GetASGroupRequest_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto.base,
  &scc_info_GetASGroupResponse_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto.base,
  &scc_info_ListASGroupsRequest_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto.base,
  &scc_info_ListASGroupsResponse_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto.base,
  &scc_info_UpdateASGroupRequest_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto.base,
  &scc_info_UpdateASGroupResponse_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto = {
  false, false, descriptor_table_protodef_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto, "kentik/as_group/v202212/as_group.proto", 4450,
  &descriptor_table_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto_once, descriptor_table_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto_sccs, descriptor_table_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto_deps, 13, 6,
  schemas, file_default_instances, TableStruct_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto::offsets,
  file_level_metadata_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto, 13, file_level_enum_descriptors_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto, file_level_service_descriptors_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto)), true);
namespace kentik {
namespace as_group {
namespace v202212 {

// ===================================================================

void AutonomousSystem::InitAsDefaultInstance() {
}
class AutonomousSystem::_Internal {
 public:
};

AutonomousSystem::AutonomousSystem(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.as_group.v202212.AutonomousSystem)
}
AutonomousSystem::AutonomousSystem(const AutonomousSystem& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  asn_ = from.asn_;
  // @@protoc_insertion_point(copy_constructor:kentik.as_group.v202212.AutonomousSystem)
}

void AutonomousSystem::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AutonomousSystem_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  asn_ = 0u;
}

AutonomousSystem::~AutonomousSystem() {
  // @@protoc_insertion_point(destructor:kentik.as_group.v202212.AutonomousSystem)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AutonomousSystem::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AutonomousSystem::ArenaDtor(void* object) {
  AutonomousSystem* _this = reinterpret_cast< AutonomousSystem* >(object);
  (void)_this;
}
void AutonomousSystem::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AutonomousSystem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AutonomousSystem& AutonomousSystem::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AutonomousSystem_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto.base);
  return *internal_default_instance();
}


void AutonomousSystem::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.as_group.v202212.AutonomousSystem)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  asn_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AutonomousSystem::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 asn = 1[json_name = "asn"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          asn_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 2[json_name = "name"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "kentik.as_group.v202212.AutonomousSystem.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AutonomousSystem::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kentik.as_group.v202212.AutonomousSystem)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 asn = 1[json_name = "asn"];
  if (this->asn() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_asn(), target);
  }

  // string name = 2[json_name = "name"];
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "kentik.as_group.v202212.AutonomousSystem.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kentik.as_group.v202212.AutonomousSystem)
  return target;
}

size_t AutonomousSystem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kentik.as_group.v202212.AutonomousSystem)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 2[json_name = "name"];
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // uint32 asn = 1[json_name = "asn"];
  if (this->asn() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_asn());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AutonomousSystem::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kentik.as_group.v202212.AutonomousSystem)
  GOOGLE_DCHECK_NE(&from, this);
  const AutonomousSystem* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AutonomousSystem>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kentik.as_group.v202212.AutonomousSystem)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kentik.as_group.v202212.AutonomousSystem)
    MergeFrom(*source);
  }
}

void AutonomousSystem::MergeFrom(const AutonomousSystem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kentik.as_group.v202212.AutonomousSystem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.asn() != 0) {
    _internal_set_asn(from._internal_asn());
  }
}

void AutonomousSystem::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kentik.as_group.v202212.AutonomousSystem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AutonomousSystem::CopyFrom(const AutonomousSystem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.as_group.v202212.AutonomousSystem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AutonomousSystem::IsInitialized() const {
  return true;
}

void AutonomousSystem::InternalSwap(AutonomousSystem* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(asn_, other->asn_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AutonomousSystem::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ASGroupConcise::InitAsDefaultInstance() {
  ::kentik::as_group::v202212::_ASGroupConcise_default_instance_._instance.get_mutable()->created_date_ = const_cast< PROTOBUF_NAMESPACE_ID::Timestamp*>(
      PROTOBUF_NAMESPACE_ID::Timestamp::internal_default_instance());
  ::kentik::as_group::v202212::_ASGroupConcise_default_instance_._instance.get_mutable()->updated_date_ = const_cast< PROTOBUF_NAMESPACE_ID::Timestamp*>(
      PROTOBUF_NAMESPACE_ID::Timestamp::internal_default_instance());
}
class ASGroupConcise::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Timestamp& created_date(const ASGroupConcise* msg);
  static const PROTOBUF_NAMESPACE_ID::Timestamp& updated_date(const ASGroupConcise* msg);
};

const PROTOBUF_NAMESPACE_ID::Timestamp&
ASGroupConcise::_Internal::created_date(const ASGroupConcise* msg) {
  return *msg->created_date_;
}
const PROTOBUF_NAMESPACE_ID::Timestamp&
ASGroupConcise::_Internal::updated_date(const ASGroupConcise* msg) {
  return *msg->updated_date_;
}
void ASGroupConcise::clear_created_date() {
  if (GetArena() == nullptr && created_date_ != nullptr) {
    delete created_date_;
  }
  created_date_ = nullptr;
}
void ASGroupConcise::clear_updated_date() {
  if (GetArena() == nullptr && updated_date_ != nullptr) {
    delete updated_date_;
  }
  updated_date_ = nullptr;
}
ASGroupConcise::ASGroupConcise(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  asn_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.as_group.v202212.ASGroupConcise)
}
ASGroupConcise::ASGroupConcise(const ASGroupConcise& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      asn_(from.asn_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  if (from._internal_has_created_date()) {
    created_date_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.created_date_);
  } else {
    created_date_ = nullptr;
  }
  if (from._internal_has_updated_date()) {
    updated_date_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.updated_date_);
  } else {
    updated_date_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:kentik.as_group.v202212.ASGroupConcise)
}

void ASGroupConcise::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ASGroupConcise_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&created_date_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&updated_date_) -
      reinterpret_cast<char*>(&created_date_)) + sizeof(updated_date_));
}

ASGroupConcise::~ASGroupConcise() {
  // @@protoc_insertion_point(destructor:kentik.as_group.v202212.ASGroupConcise)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ASGroupConcise::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete created_date_;
  if (this != internal_default_instance()) delete updated_date_;
}

void ASGroupConcise::ArenaDtor(void* object) {
  ASGroupConcise* _this = reinterpret_cast< ASGroupConcise* >(object);
  (void)_this;
}
void ASGroupConcise::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ASGroupConcise::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ASGroupConcise& ASGroupConcise::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ASGroupConcise_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto.base);
  return *internal_default_instance();
}


void ASGroupConcise::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.as_group.v202212.ASGroupConcise)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  asn_.Clear();
  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && created_date_ != nullptr) {
    delete created_date_;
  }
  created_date_ = nullptr;
  if (GetArena() == nullptr && updated_date_ != nullptr) {
    delete updated_date_;
  }
  updated_date_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ASGroupConcise::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1[json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "kentik.as_group.v202212.ASGroupConcise.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 2[json_name = "name", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "kentik.as_group.v202212.ASGroupConcise.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string asn = 3[json_name = "asn", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_asn();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "kentik.as_group.v202212.ASGroupConcise.asn"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp created_date = 5[json_name = "createdDate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_created_date(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp updated_date = 6[json_name = "updatedDate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_updated_date(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ASGroupConcise::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kentik.as_group.v202212.ASGroupConcise)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1[json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "kentik.as_group.v202212.ASGroupConcise.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string name = 2[json_name = "name", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "kentik.as_group.v202212.ASGroupConcise.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // repeated string asn = 3[json_name = "asn", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  for (int i = 0, n = this->_internal_asn_size(); i < n; i++) {
    const auto& s = this->_internal_asn(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "kentik.as_group.v202212.ASGroupConcise.asn");
    target = stream->WriteString(3, s, target);
  }

  // .google.protobuf.Timestamp created_date = 5[json_name = "createdDate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->has_created_date()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::created_date(this), target, stream);
  }

  // .google.protobuf.Timestamp updated_date = 6[json_name = "updatedDate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->has_updated_date()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::updated_date(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kentik.as_group.v202212.ASGroupConcise)
  return target;
}

size_t ASGroupConcise::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kentik.as_group.v202212.ASGroupConcise)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string asn = 3[json_name = "asn", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(asn_.size());
  for (int i = 0, n = asn_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      asn_.Get(i));
  }

  // string id = 1[json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string name = 2[json_name = "name", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .google.protobuf.Timestamp created_date = 5[json_name = "createdDate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->has_created_date()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *created_date_);
  }

  // .google.protobuf.Timestamp updated_date = 6[json_name = "updatedDate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->has_updated_date()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *updated_date_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ASGroupConcise::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kentik.as_group.v202212.ASGroupConcise)
  GOOGLE_DCHECK_NE(&from, this);
  const ASGroupConcise* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ASGroupConcise>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kentik.as_group.v202212.ASGroupConcise)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kentik.as_group.v202212.ASGroupConcise)
    MergeFrom(*source);
  }
}

void ASGroupConcise::MergeFrom(const ASGroupConcise& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kentik.as_group.v202212.ASGroupConcise)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  asn_.MergeFrom(from.asn_);
  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.has_created_date()) {
    _internal_mutable_created_date()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_created_date());
  }
  if (from.has_updated_date()) {
    _internal_mutable_updated_date()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_updated_date());
  }
}

void ASGroupConcise::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kentik.as_group.v202212.ASGroupConcise)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ASGroupConcise::CopyFrom(const ASGroupConcise& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.as_group.v202212.ASGroupConcise)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ASGroupConcise::IsInitialized() const {
  return true;
}

void ASGroupConcise::InternalSwap(ASGroupConcise* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  asn_.InternalSwap(&other->asn_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ASGroupConcise, updated_date_)
      + sizeof(ASGroupConcise::updated_date_)
      - PROTOBUF_FIELD_OFFSET(ASGroupConcise, created_date_)>(
          reinterpret_cast<char*>(&created_date_),
          reinterpret_cast<char*>(&other->created_date_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ASGroupConcise::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ASGroupDetailed::InitAsDefaultInstance() {
  ::kentik::as_group::v202212::_ASGroupDetailed_default_instance_._instance.get_mutable()->created_date_ = const_cast< PROTOBUF_NAMESPACE_ID::Timestamp*>(
      PROTOBUF_NAMESPACE_ID::Timestamp::internal_default_instance());
  ::kentik::as_group::v202212::_ASGroupDetailed_default_instance_._instance.get_mutable()->updated_date_ = const_cast< PROTOBUF_NAMESPACE_ID::Timestamp*>(
      PROTOBUF_NAMESPACE_ID::Timestamp::internal_default_instance());
}
class ASGroupDetailed::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Timestamp& created_date(const ASGroupDetailed* msg);
  static const PROTOBUF_NAMESPACE_ID::Timestamp& updated_date(const ASGroupDetailed* msg);
};

const PROTOBUF_NAMESPACE_ID::Timestamp&
ASGroupDetailed::_Internal::created_date(const ASGroupDetailed* msg) {
  return *msg->created_date_;
}
const PROTOBUF_NAMESPACE_ID::Timestamp&
ASGroupDetailed::_Internal::updated_date(const ASGroupDetailed* msg) {
  return *msg->updated_date_;
}
void ASGroupDetailed::clear_created_date() {
  if (GetArena() == nullptr && created_date_ != nullptr) {
    delete created_date_;
  }
  created_date_ = nullptr;
}
void ASGroupDetailed::clear_updated_date() {
  if (GetArena() == nullptr && updated_date_ != nullptr) {
    delete updated_date_;
  }
  updated_date_ = nullptr;
}
ASGroupDetailed::ASGroupDetailed(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  asn_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.as_group.v202212.ASGroupDetailed)
}
ASGroupDetailed::ASGroupDetailed(const ASGroupDetailed& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      asn_(from.asn_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  if (from._internal_has_created_date()) {
    created_date_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.created_date_);
  } else {
    created_date_ = nullptr;
  }
  if (from._internal_has_updated_date()) {
    updated_date_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.updated_date_);
  } else {
    updated_date_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:kentik.as_group.v202212.ASGroupDetailed)
}

void ASGroupDetailed::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ASGroupDetailed_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&created_date_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&updated_date_) -
      reinterpret_cast<char*>(&created_date_)) + sizeof(updated_date_));
}

ASGroupDetailed::~ASGroupDetailed() {
  // @@protoc_insertion_point(destructor:kentik.as_group.v202212.ASGroupDetailed)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ASGroupDetailed::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete created_date_;
  if (this != internal_default_instance()) delete updated_date_;
}

void ASGroupDetailed::ArenaDtor(void* object) {
  ASGroupDetailed* _this = reinterpret_cast< ASGroupDetailed* >(object);
  (void)_this;
}
void ASGroupDetailed::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ASGroupDetailed::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ASGroupDetailed& ASGroupDetailed::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ASGroupDetailed_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto.base);
  return *internal_default_instance();
}


void ASGroupDetailed::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.as_group.v202212.ASGroupDetailed)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  asn_.Clear();
  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && created_date_ != nullptr) {
    delete created_date_;
  }
  created_date_ = nullptr;
  if (GetArena() == nullptr && updated_date_ != nullptr) {
    delete updated_date_;
  }
  updated_date_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ASGroupDetailed::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1[json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "kentik.as_group.v202212.ASGroupDetailed.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 2[json_name = "name", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "kentik.as_group.v202212.ASGroupDetailed.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .kentik.as_group.v202212.AutonomousSystem asn = 3[json_name = "asn", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_asn(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp created_date = 5[json_name = "createdDate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_created_date(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp updated_date = 6[json_name = "updatedDate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_updated_date(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ASGroupDetailed::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kentik.as_group.v202212.ASGroupDetailed)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1[json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "kentik.as_group.v202212.ASGroupDetailed.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string name = 2[json_name = "name", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "kentik.as_group.v202212.ASGroupDetailed.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // repeated .kentik.as_group.v202212.AutonomousSystem asn = 3[json_name = "asn", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_asn_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_asn(i), target, stream);
  }

  // .google.protobuf.Timestamp created_date = 5[json_name = "createdDate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->has_created_date()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::created_date(this), target, stream);
  }

  // .google.protobuf.Timestamp updated_date = 6[json_name = "updatedDate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->has_updated_date()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::updated_date(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kentik.as_group.v202212.ASGroupDetailed)
  return target;
}

size_t ASGroupDetailed::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kentik.as_group.v202212.ASGroupDetailed)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .kentik.as_group.v202212.AutonomousSystem asn = 3[json_name = "asn", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  total_size += 1UL * this->_internal_asn_size();
  for (const auto& msg : this->asn_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string id = 1[json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string name = 2[json_name = "name", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .google.protobuf.Timestamp created_date = 5[json_name = "createdDate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->has_created_date()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *created_date_);
  }

  // .google.protobuf.Timestamp updated_date = 6[json_name = "updatedDate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->has_updated_date()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *updated_date_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ASGroupDetailed::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kentik.as_group.v202212.ASGroupDetailed)
  GOOGLE_DCHECK_NE(&from, this);
  const ASGroupDetailed* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ASGroupDetailed>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kentik.as_group.v202212.ASGroupDetailed)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kentik.as_group.v202212.ASGroupDetailed)
    MergeFrom(*source);
  }
}

void ASGroupDetailed::MergeFrom(const ASGroupDetailed& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kentik.as_group.v202212.ASGroupDetailed)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  asn_.MergeFrom(from.asn_);
  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.has_created_date()) {
    _internal_mutable_created_date()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_created_date());
  }
  if (from.has_updated_date()) {
    _internal_mutable_updated_date()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_updated_date());
  }
}

void ASGroupDetailed::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kentik.as_group.v202212.ASGroupDetailed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ASGroupDetailed::CopyFrom(const ASGroupDetailed& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.as_group.v202212.ASGroupDetailed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ASGroupDetailed::IsInitialized() const {
  return true;
}

void ASGroupDetailed::InternalSwap(ASGroupDetailed* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  asn_.InternalSwap(&other->asn_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ASGroupDetailed, updated_date_)
      + sizeof(ASGroupDetailed::updated_date_)
      - PROTOBUF_FIELD_OFFSET(ASGroupDetailed, created_date_)>(
          reinterpret_cast<char*>(&created_date_),
          reinterpret_cast<char*>(&other->created_date_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ASGroupDetailed::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ListASGroupsRequest::InitAsDefaultInstance() {
}
class ListASGroupsRequest::_Internal {
 public:
};

ListASGroupsRequest::ListASGroupsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.as_group.v202212.ListASGroupsRequest)
}
ListASGroupsRequest::ListASGroupsRequest(const ListASGroupsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:kentik.as_group.v202212.ListASGroupsRequest)
}

void ListASGroupsRequest::SharedCtor() {
}

ListASGroupsRequest::~ListASGroupsRequest() {
  // @@protoc_insertion_point(destructor:kentik.as_group.v202212.ListASGroupsRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ListASGroupsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ListASGroupsRequest::ArenaDtor(void* object) {
  ListASGroupsRequest* _this = reinterpret_cast< ListASGroupsRequest* >(object);
  (void)_this;
}
void ListASGroupsRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListASGroupsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListASGroupsRequest& ListASGroupsRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ListASGroupsRequest_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto.base);
  return *internal_default_instance();
}


void ListASGroupsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.as_group.v202212.ListASGroupsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListASGroupsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListASGroupsRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kentik.as_group.v202212.ListASGroupsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kentik.as_group.v202212.ListASGroupsRequest)
  return target;
}

size_t ListASGroupsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kentik.as_group.v202212.ListASGroupsRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListASGroupsRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kentik.as_group.v202212.ListASGroupsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListASGroupsRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListASGroupsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kentik.as_group.v202212.ListASGroupsRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kentik.as_group.v202212.ListASGroupsRequest)
    MergeFrom(*source);
  }
}

void ListASGroupsRequest::MergeFrom(const ListASGroupsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kentik.as_group.v202212.ListASGroupsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ListASGroupsRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kentik.as_group.v202212.ListASGroupsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListASGroupsRequest::CopyFrom(const ListASGroupsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.as_group.v202212.ListASGroupsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListASGroupsRequest::IsInitialized() const {
  return true;
}

void ListASGroupsRequest::InternalSwap(ListASGroupsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListASGroupsRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ListASGroupsResponse::InitAsDefaultInstance() {
}
class ListASGroupsResponse::_Internal {
 public:
};

ListASGroupsResponse::ListASGroupsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  as_groups_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.as_group.v202212.ListASGroupsResponse)
}
ListASGroupsResponse::ListASGroupsResponse(const ListASGroupsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      as_groups_(from.as_groups_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  invalid_count_ = from.invalid_count_;
  // @@protoc_insertion_point(copy_constructor:kentik.as_group.v202212.ListASGroupsResponse)
}

void ListASGroupsResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ListASGroupsResponse_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto.base);
  invalid_count_ = 0u;
}

ListASGroupsResponse::~ListASGroupsResponse() {
  // @@protoc_insertion_point(destructor:kentik.as_group.v202212.ListASGroupsResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ListASGroupsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ListASGroupsResponse::ArenaDtor(void* object) {
  ListASGroupsResponse* _this = reinterpret_cast< ListASGroupsResponse* >(object);
  (void)_this;
}
void ListASGroupsResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListASGroupsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListASGroupsResponse& ListASGroupsResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ListASGroupsResponse_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto.base);
  return *internal_default_instance();
}


void ListASGroupsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.as_group.v202212.ListASGroupsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  as_groups_.Clear();
  invalid_count_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListASGroupsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .kentik.as_group.v202212.ASGroupDetailed as_groups = 1[json_name = "asGroups", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_as_groups(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // uint32 invalid_count = 2[json_name = "invalidCount", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          invalid_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListASGroupsResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kentik.as_group.v202212.ListASGroupsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .kentik.as_group.v202212.ASGroupDetailed as_groups = 1[json_name = "asGroups", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_as_groups_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_as_groups(i), target, stream);
  }

  // uint32 invalid_count = 2[json_name = "invalidCount", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->invalid_count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_invalid_count(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kentik.as_group.v202212.ListASGroupsResponse)
  return target;
}

size_t ListASGroupsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kentik.as_group.v202212.ListASGroupsResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .kentik.as_group.v202212.ASGroupDetailed as_groups = 1[json_name = "asGroups", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  total_size += 1UL * this->_internal_as_groups_size();
  for (const auto& msg : this->as_groups_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // uint32 invalid_count = 2[json_name = "invalidCount", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->invalid_count() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_invalid_count());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListASGroupsResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kentik.as_group.v202212.ListASGroupsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListASGroupsResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListASGroupsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kentik.as_group.v202212.ListASGroupsResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kentik.as_group.v202212.ListASGroupsResponse)
    MergeFrom(*source);
  }
}

void ListASGroupsResponse::MergeFrom(const ListASGroupsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kentik.as_group.v202212.ListASGroupsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  as_groups_.MergeFrom(from.as_groups_);
  if (from.invalid_count() != 0) {
    _internal_set_invalid_count(from._internal_invalid_count());
  }
}

void ListASGroupsResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kentik.as_group.v202212.ListASGroupsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListASGroupsResponse::CopyFrom(const ListASGroupsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.as_group.v202212.ListASGroupsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListASGroupsResponse::IsInitialized() const {
  return true;
}

void ListASGroupsResponse::InternalSwap(ListASGroupsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  as_groups_.InternalSwap(&other->as_groups_);
  swap(invalid_count_, other->invalid_count_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListASGroupsResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetASGroupRequest::InitAsDefaultInstance() {
}
class GetASGroupRequest::_Internal {
 public:
};

GetASGroupRequest::GetASGroupRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.as_group.v202212.GetASGroupRequest)
}
GetASGroupRequest::GetASGroupRequest(const GetASGroupRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:kentik.as_group.v202212.GetASGroupRequest)
}

void GetASGroupRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetASGroupRequest_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetASGroupRequest::~GetASGroupRequest() {
  // @@protoc_insertion_point(destructor:kentik.as_group.v202212.GetASGroupRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetASGroupRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetASGroupRequest::ArenaDtor(void* object) {
  GetASGroupRequest* _this = reinterpret_cast< GetASGroupRequest* >(object);
  (void)_this;
}
void GetASGroupRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetASGroupRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetASGroupRequest& GetASGroupRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetASGroupRequest_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto.base);
  return *internal_default_instance();
}


void GetASGroupRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.as_group.v202212.GetASGroupRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetASGroupRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1[json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "kentik.as_group.v202212.GetASGroupRequest.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetASGroupRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kentik.as_group.v202212.GetASGroupRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1[json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "kentik.as_group.v202212.GetASGroupRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kentik.as_group.v202212.GetASGroupRequest)
  return target;
}

size_t GetASGroupRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kentik.as_group.v202212.GetASGroupRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1[json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetASGroupRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kentik.as_group.v202212.GetASGroupRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetASGroupRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetASGroupRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kentik.as_group.v202212.GetASGroupRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kentik.as_group.v202212.GetASGroupRequest)
    MergeFrom(*source);
  }
}

void GetASGroupRequest::MergeFrom(const GetASGroupRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kentik.as_group.v202212.GetASGroupRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
}

void GetASGroupRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kentik.as_group.v202212.GetASGroupRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetASGroupRequest::CopyFrom(const GetASGroupRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.as_group.v202212.GetASGroupRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetASGroupRequest::IsInitialized() const {
  return true;
}

void GetASGroupRequest::InternalSwap(GetASGroupRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetASGroupRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetASGroupResponse::InitAsDefaultInstance() {
  ::kentik::as_group::v202212::_GetASGroupResponse_default_instance_._instance.get_mutable()->as_group_ = const_cast< ::kentik::as_group::v202212::ASGroupDetailed*>(
      ::kentik::as_group::v202212::ASGroupDetailed::internal_default_instance());
}
class GetASGroupResponse::_Internal {
 public:
  static const ::kentik::as_group::v202212::ASGroupDetailed& as_group(const GetASGroupResponse* msg);
};

const ::kentik::as_group::v202212::ASGroupDetailed&
GetASGroupResponse::_Internal::as_group(const GetASGroupResponse* msg) {
  return *msg->as_group_;
}
GetASGroupResponse::GetASGroupResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.as_group.v202212.GetASGroupResponse)
}
GetASGroupResponse::GetASGroupResponse(const GetASGroupResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_as_group()) {
    as_group_ = new ::kentik::as_group::v202212::ASGroupDetailed(*from.as_group_);
  } else {
    as_group_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:kentik.as_group.v202212.GetASGroupResponse)
}

void GetASGroupResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetASGroupResponse_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto.base);
  as_group_ = nullptr;
}

GetASGroupResponse::~GetASGroupResponse() {
  // @@protoc_insertion_point(destructor:kentik.as_group.v202212.GetASGroupResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetASGroupResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete as_group_;
}

void GetASGroupResponse::ArenaDtor(void* object) {
  GetASGroupResponse* _this = reinterpret_cast< GetASGroupResponse* >(object);
  (void)_this;
}
void GetASGroupResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetASGroupResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetASGroupResponse& GetASGroupResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetASGroupResponse_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto.base);
  return *internal_default_instance();
}


void GetASGroupResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.as_group.v202212.GetASGroupResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && as_group_ != nullptr) {
    delete as_group_;
  }
  as_group_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetASGroupResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .kentik.as_group.v202212.ASGroupDetailed as_group = 1[json_name = "asGroup", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_as_group(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetASGroupResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kentik.as_group.v202212.GetASGroupResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kentik.as_group.v202212.ASGroupDetailed as_group = 1[json_name = "asGroup", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->has_as_group()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::as_group(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kentik.as_group.v202212.GetASGroupResponse)
  return target;
}

size_t GetASGroupResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kentik.as_group.v202212.GetASGroupResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .kentik.as_group.v202212.ASGroupDetailed as_group = 1[json_name = "asGroup", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->has_as_group()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *as_group_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetASGroupResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kentik.as_group.v202212.GetASGroupResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetASGroupResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetASGroupResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kentik.as_group.v202212.GetASGroupResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kentik.as_group.v202212.GetASGroupResponse)
    MergeFrom(*source);
  }
}

void GetASGroupResponse::MergeFrom(const GetASGroupResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kentik.as_group.v202212.GetASGroupResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_as_group()) {
    _internal_mutable_as_group()->::kentik::as_group::v202212::ASGroupDetailed::MergeFrom(from._internal_as_group());
  }
}

void GetASGroupResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kentik.as_group.v202212.GetASGroupResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetASGroupResponse::CopyFrom(const GetASGroupResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.as_group.v202212.GetASGroupResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetASGroupResponse::IsInitialized() const {
  return true;
}

void GetASGroupResponse::InternalSwap(GetASGroupResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(as_group_, other->as_group_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetASGroupResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CreateASGroupRequest::InitAsDefaultInstance() {
  ::kentik::as_group::v202212::_CreateASGroupRequest_default_instance_._instance.get_mutable()->as_group_ = const_cast< ::kentik::as_group::v202212::ASGroupConcise*>(
      ::kentik::as_group::v202212::ASGroupConcise::internal_default_instance());
}
class CreateASGroupRequest::_Internal {
 public:
  static const ::kentik::as_group::v202212::ASGroupConcise& as_group(const CreateASGroupRequest* msg);
};

const ::kentik::as_group::v202212::ASGroupConcise&
CreateASGroupRequest::_Internal::as_group(const CreateASGroupRequest* msg) {
  return *msg->as_group_;
}
CreateASGroupRequest::CreateASGroupRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.as_group.v202212.CreateASGroupRequest)
}
CreateASGroupRequest::CreateASGroupRequest(const CreateASGroupRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_as_group()) {
    as_group_ = new ::kentik::as_group::v202212::ASGroupConcise(*from.as_group_);
  } else {
    as_group_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:kentik.as_group.v202212.CreateASGroupRequest)
}

void CreateASGroupRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CreateASGroupRequest_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto.base);
  as_group_ = nullptr;
}

CreateASGroupRequest::~CreateASGroupRequest() {
  // @@protoc_insertion_point(destructor:kentik.as_group.v202212.CreateASGroupRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateASGroupRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete as_group_;
}

void CreateASGroupRequest::ArenaDtor(void* object) {
  CreateASGroupRequest* _this = reinterpret_cast< CreateASGroupRequest* >(object);
  (void)_this;
}
void CreateASGroupRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateASGroupRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateASGroupRequest& CreateASGroupRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateASGroupRequest_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto.base);
  return *internal_default_instance();
}


void CreateASGroupRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.as_group.v202212.CreateASGroupRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && as_group_ != nullptr) {
    delete as_group_;
  }
  as_group_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateASGroupRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .kentik.as_group.v202212.ASGroupConcise as_group = 1[json_name = "asGroup", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_as_group(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateASGroupRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kentik.as_group.v202212.CreateASGroupRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kentik.as_group.v202212.ASGroupConcise as_group = 1[json_name = "asGroup", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->has_as_group()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::as_group(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kentik.as_group.v202212.CreateASGroupRequest)
  return target;
}

size_t CreateASGroupRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kentik.as_group.v202212.CreateASGroupRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .kentik.as_group.v202212.ASGroupConcise as_group = 1[json_name = "asGroup", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->has_as_group()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *as_group_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateASGroupRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kentik.as_group.v202212.CreateASGroupRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateASGroupRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateASGroupRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kentik.as_group.v202212.CreateASGroupRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kentik.as_group.v202212.CreateASGroupRequest)
    MergeFrom(*source);
  }
}

void CreateASGroupRequest::MergeFrom(const CreateASGroupRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kentik.as_group.v202212.CreateASGroupRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_as_group()) {
    _internal_mutable_as_group()->::kentik::as_group::v202212::ASGroupConcise::MergeFrom(from._internal_as_group());
  }
}

void CreateASGroupRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kentik.as_group.v202212.CreateASGroupRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateASGroupRequest::CopyFrom(const CreateASGroupRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.as_group.v202212.CreateASGroupRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateASGroupRequest::IsInitialized() const {
  return true;
}

void CreateASGroupRequest::InternalSwap(CreateASGroupRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(as_group_, other->as_group_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateASGroupRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CreateASGroupResponse::InitAsDefaultInstance() {
  ::kentik::as_group::v202212::_CreateASGroupResponse_default_instance_._instance.get_mutable()->as_group_ = const_cast< ::kentik::as_group::v202212::ASGroupDetailed*>(
      ::kentik::as_group::v202212::ASGroupDetailed::internal_default_instance());
}
class CreateASGroupResponse::_Internal {
 public:
  static const ::kentik::as_group::v202212::ASGroupDetailed& as_group(const CreateASGroupResponse* msg);
};

const ::kentik::as_group::v202212::ASGroupDetailed&
CreateASGroupResponse::_Internal::as_group(const CreateASGroupResponse* msg) {
  return *msg->as_group_;
}
CreateASGroupResponse::CreateASGroupResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.as_group.v202212.CreateASGroupResponse)
}
CreateASGroupResponse::CreateASGroupResponse(const CreateASGroupResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_as_group()) {
    as_group_ = new ::kentik::as_group::v202212::ASGroupDetailed(*from.as_group_);
  } else {
    as_group_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:kentik.as_group.v202212.CreateASGroupResponse)
}

void CreateASGroupResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CreateASGroupResponse_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto.base);
  as_group_ = nullptr;
}

CreateASGroupResponse::~CreateASGroupResponse() {
  // @@protoc_insertion_point(destructor:kentik.as_group.v202212.CreateASGroupResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateASGroupResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete as_group_;
}

void CreateASGroupResponse::ArenaDtor(void* object) {
  CreateASGroupResponse* _this = reinterpret_cast< CreateASGroupResponse* >(object);
  (void)_this;
}
void CreateASGroupResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateASGroupResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateASGroupResponse& CreateASGroupResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateASGroupResponse_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto.base);
  return *internal_default_instance();
}


void CreateASGroupResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.as_group.v202212.CreateASGroupResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && as_group_ != nullptr) {
    delete as_group_;
  }
  as_group_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateASGroupResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .kentik.as_group.v202212.ASGroupDetailed as_group = 1[json_name = "asGroup", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_as_group(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateASGroupResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kentik.as_group.v202212.CreateASGroupResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kentik.as_group.v202212.ASGroupDetailed as_group = 1[json_name = "asGroup", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->has_as_group()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::as_group(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kentik.as_group.v202212.CreateASGroupResponse)
  return target;
}

size_t CreateASGroupResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kentik.as_group.v202212.CreateASGroupResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .kentik.as_group.v202212.ASGroupDetailed as_group = 1[json_name = "asGroup", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->has_as_group()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *as_group_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateASGroupResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kentik.as_group.v202212.CreateASGroupResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateASGroupResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateASGroupResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kentik.as_group.v202212.CreateASGroupResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kentik.as_group.v202212.CreateASGroupResponse)
    MergeFrom(*source);
  }
}

void CreateASGroupResponse::MergeFrom(const CreateASGroupResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kentik.as_group.v202212.CreateASGroupResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_as_group()) {
    _internal_mutable_as_group()->::kentik::as_group::v202212::ASGroupDetailed::MergeFrom(from._internal_as_group());
  }
}

void CreateASGroupResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kentik.as_group.v202212.CreateASGroupResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateASGroupResponse::CopyFrom(const CreateASGroupResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.as_group.v202212.CreateASGroupResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateASGroupResponse::IsInitialized() const {
  return true;
}

void CreateASGroupResponse::InternalSwap(CreateASGroupResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(as_group_, other->as_group_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateASGroupResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpdateASGroupRequest::InitAsDefaultInstance() {
  ::kentik::as_group::v202212::_UpdateASGroupRequest_default_instance_._instance.get_mutable()->as_group_ = const_cast< ::kentik::as_group::v202212::ASGroupConcise*>(
      ::kentik::as_group::v202212::ASGroupConcise::internal_default_instance());
}
class UpdateASGroupRequest::_Internal {
 public:
  static const ::kentik::as_group::v202212::ASGroupConcise& as_group(const UpdateASGroupRequest* msg);
};

const ::kentik::as_group::v202212::ASGroupConcise&
UpdateASGroupRequest::_Internal::as_group(const UpdateASGroupRequest* msg) {
  return *msg->as_group_;
}
UpdateASGroupRequest::UpdateASGroupRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.as_group.v202212.UpdateASGroupRequest)
}
UpdateASGroupRequest::UpdateASGroupRequest(const UpdateASGroupRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_as_group()) {
    as_group_ = new ::kentik::as_group::v202212::ASGroupConcise(*from.as_group_);
  } else {
    as_group_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:kentik.as_group.v202212.UpdateASGroupRequest)
}

void UpdateASGroupRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UpdateASGroupRequest_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto.base);
  as_group_ = nullptr;
}

UpdateASGroupRequest::~UpdateASGroupRequest() {
  // @@protoc_insertion_point(destructor:kentik.as_group.v202212.UpdateASGroupRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UpdateASGroupRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete as_group_;
}

void UpdateASGroupRequest::ArenaDtor(void* object) {
  UpdateASGroupRequest* _this = reinterpret_cast< UpdateASGroupRequest* >(object);
  (void)_this;
}
void UpdateASGroupRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateASGroupRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateASGroupRequest& UpdateASGroupRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpdateASGroupRequest_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto.base);
  return *internal_default_instance();
}


void UpdateASGroupRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.as_group.v202212.UpdateASGroupRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && as_group_ != nullptr) {
    delete as_group_;
  }
  as_group_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateASGroupRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .kentik.as_group.v202212.ASGroupConcise as_group = 1[json_name = "asGroup", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_as_group(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateASGroupRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kentik.as_group.v202212.UpdateASGroupRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kentik.as_group.v202212.ASGroupConcise as_group = 1[json_name = "asGroup", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->has_as_group()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::as_group(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kentik.as_group.v202212.UpdateASGroupRequest)
  return target;
}

size_t UpdateASGroupRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kentik.as_group.v202212.UpdateASGroupRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .kentik.as_group.v202212.ASGroupConcise as_group = 1[json_name = "asGroup", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->has_as_group()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *as_group_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateASGroupRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kentik.as_group.v202212.UpdateASGroupRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateASGroupRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateASGroupRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kentik.as_group.v202212.UpdateASGroupRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kentik.as_group.v202212.UpdateASGroupRequest)
    MergeFrom(*source);
  }
}

void UpdateASGroupRequest::MergeFrom(const UpdateASGroupRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kentik.as_group.v202212.UpdateASGroupRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_as_group()) {
    _internal_mutable_as_group()->::kentik::as_group::v202212::ASGroupConcise::MergeFrom(from._internal_as_group());
  }
}

void UpdateASGroupRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kentik.as_group.v202212.UpdateASGroupRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateASGroupRequest::CopyFrom(const UpdateASGroupRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.as_group.v202212.UpdateASGroupRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateASGroupRequest::IsInitialized() const {
  return true;
}

void UpdateASGroupRequest::InternalSwap(UpdateASGroupRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(as_group_, other->as_group_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateASGroupRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpdateASGroupResponse::InitAsDefaultInstance() {
  ::kentik::as_group::v202212::_UpdateASGroupResponse_default_instance_._instance.get_mutable()->as_group_ = const_cast< ::kentik::as_group::v202212::ASGroupDetailed*>(
      ::kentik::as_group::v202212::ASGroupDetailed::internal_default_instance());
}
class UpdateASGroupResponse::_Internal {
 public:
  static const ::kentik::as_group::v202212::ASGroupDetailed& as_group(const UpdateASGroupResponse* msg);
};

const ::kentik::as_group::v202212::ASGroupDetailed&
UpdateASGroupResponse::_Internal::as_group(const UpdateASGroupResponse* msg) {
  return *msg->as_group_;
}
UpdateASGroupResponse::UpdateASGroupResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.as_group.v202212.UpdateASGroupResponse)
}
UpdateASGroupResponse::UpdateASGroupResponse(const UpdateASGroupResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_as_group()) {
    as_group_ = new ::kentik::as_group::v202212::ASGroupDetailed(*from.as_group_);
  } else {
    as_group_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:kentik.as_group.v202212.UpdateASGroupResponse)
}

void UpdateASGroupResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UpdateASGroupResponse_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto.base);
  as_group_ = nullptr;
}

UpdateASGroupResponse::~UpdateASGroupResponse() {
  // @@protoc_insertion_point(destructor:kentik.as_group.v202212.UpdateASGroupResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UpdateASGroupResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete as_group_;
}

void UpdateASGroupResponse::ArenaDtor(void* object) {
  UpdateASGroupResponse* _this = reinterpret_cast< UpdateASGroupResponse* >(object);
  (void)_this;
}
void UpdateASGroupResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateASGroupResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateASGroupResponse& UpdateASGroupResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpdateASGroupResponse_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto.base);
  return *internal_default_instance();
}


void UpdateASGroupResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.as_group.v202212.UpdateASGroupResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && as_group_ != nullptr) {
    delete as_group_;
  }
  as_group_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateASGroupResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .kentik.as_group.v202212.ASGroupDetailed as_group = 1[json_name = "asGroup", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_as_group(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateASGroupResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kentik.as_group.v202212.UpdateASGroupResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kentik.as_group.v202212.ASGroupDetailed as_group = 1[json_name = "asGroup", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->has_as_group()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::as_group(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kentik.as_group.v202212.UpdateASGroupResponse)
  return target;
}

size_t UpdateASGroupResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kentik.as_group.v202212.UpdateASGroupResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .kentik.as_group.v202212.ASGroupDetailed as_group = 1[json_name = "asGroup", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->has_as_group()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *as_group_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateASGroupResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kentik.as_group.v202212.UpdateASGroupResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateASGroupResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateASGroupResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kentik.as_group.v202212.UpdateASGroupResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kentik.as_group.v202212.UpdateASGroupResponse)
    MergeFrom(*source);
  }
}

void UpdateASGroupResponse::MergeFrom(const UpdateASGroupResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kentik.as_group.v202212.UpdateASGroupResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_as_group()) {
    _internal_mutable_as_group()->::kentik::as_group::v202212::ASGroupDetailed::MergeFrom(from._internal_as_group());
  }
}

void UpdateASGroupResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kentik.as_group.v202212.UpdateASGroupResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateASGroupResponse::CopyFrom(const UpdateASGroupResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.as_group.v202212.UpdateASGroupResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateASGroupResponse::IsInitialized() const {
  return true;
}

void UpdateASGroupResponse::InternalSwap(UpdateASGroupResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(as_group_, other->as_group_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateASGroupResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteASGroupRequest::InitAsDefaultInstance() {
}
class DeleteASGroupRequest::_Internal {
 public:
};

DeleteASGroupRequest::DeleteASGroupRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.as_group.v202212.DeleteASGroupRequest)
}
DeleteASGroupRequest::DeleteASGroupRequest(const DeleteASGroupRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:kentik.as_group.v202212.DeleteASGroupRequest)
}

void DeleteASGroupRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DeleteASGroupRequest_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DeleteASGroupRequest::~DeleteASGroupRequest() {
  // @@protoc_insertion_point(destructor:kentik.as_group.v202212.DeleteASGroupRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteASGroupRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteASGroupRequest::ArenaDtor(void* object) {
  DeleteASGroupRequest* _this = reinterpret_cast< DeleteASGroupRequest* >(object);
  (void)_this;
}
void DeleteASGroupRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteASGroupRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteASGroupRequest& DeleteASGroupRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteASGroupRequest_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto.base);
  return *internal_default_instance();
}


void DeleteASGroupRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.as_group.v202212.DeleteASGroupRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteASGroupRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1[json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "kentik.as_group.v202212.DeleteASGroupRequest.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteASGroupRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kentik.as_group.v202212.DeleteASGroupRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1[json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "kentik.as_group.v202212.DeleteASGroupRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kentik.as_group.v202212.DeleteASGroupRequest)
  return target;
}

size_t DeleteASGroupRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kentik.as_group.v202212.DeleteASGroupRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1[json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteASGroupRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kentik.as_group.v202212.DeleteASGroupRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteASGroupRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteASGroupRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kentik.as_group.v202212.DeleteASGroupRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kentik.as_group.v202212.DeleteASGroupRequest)
    MergeFrom(*source);
  }
}

void DeleteASGroupRequest::MergeFrom(const DeleteASGroupRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kentik.as_group.v202212.DeleteASGroupRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
}

void DeleteASGroupRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kentik.as_group.v202212.DeleteASGroupRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteASGroupRequest::CopyFrom(const DeleteASGroupRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.as_group.v202212.DeleteASGroupRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteASGroupRequest::IsInitialized() const {
  return true;
}

void DeleteASGroupRequest::InternalSwap(DeleteASGroupRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteASGroupRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteASGroupResponse::InitAsDefaultInstance() {
}
class DeleteASGroupResponse::_Internal {
 public:
};

DeleteASGroupResponse::DeleteASGroupResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.as_group.v202212.DeleteASGroupResponse)
}
DeleteASGroupResponse::DeleteASGroupResponse(const DeleteASGroupResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:kentik.as_group.v202212.DeleteASGroupResponse)
}

void DeleteASGroupResponse::SharedCtor() {
}

DeleteASGroupResponse::~DeleteASGroupResponse() {
  // @@protoc_insertion_point(destructor:kentik.as_group.v202212.DeleteASGroupResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteASGroupResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void DeleteASGroupResponse::ArenaDtor(void* object) {
  DeleteASGroupResponse* _this = reinterpret_cast< DeleteASGroupResponse* >(object);
  (void)_this;
}
void DeleteASGroupResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteASGroupResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteASGroupResponse& DeleteASGroupResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteASGroupResponse_kentik_2fas_5fgroup_2fv202212_2fas_5fgroup_2eproto.base);
  return *internal_default_instance();
}


void DeleteASGroupResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.as_group.v202212.DeleteASGroupResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteASGroupResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteASGroupResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kentik.as_group.v202212.DeleteASGroupResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kentik.as_group.v202212.DeleteASGroupResponse)
  return target;
}

size_t DeleteASGroupResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kentik.as_group.v202212.DeleteASGroupResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteASGroupResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kentik.as_group.v202212.DeleteASGroupResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteASGroupResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteASGroupResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kentik.as_group.v202212.DeleteASGroupResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kentik.as_group.v202212.DeleteASGroupResponse)
    MergeFrom(*source);
  }
}

void DeleteASGroupResponse::MergeFrom(const DeleteASGroupResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kentik.as_group.v202212.DeleteASGroupResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void DeleteASGroupResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kentik.as_group.v202212.DeleteASGroupResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteASGroupResponse::CopyFrom(const DeleteASGroupResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.as_group.v202212.DeleteASGroupResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteASGroupResponse::IsInitialized() const {
  return true;
}

void DeleteASGroupResponse::InternalSwap(DeleteASGroupResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteASGroupResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v202212
}  // namespace as_group
}  // namespace kentik
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::kentik::as_group::v202212::AutonomousSystem* Arena::CreateMaybeMessage< ::kentik::as_group::v202212::AutonomousSystem >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kentik::as_group::v202212::AutonomousSystem >(arena);
}
template<> PROTOBUF_NOINLINE ::kentik::as_group::v202212::ASGroupConcise* Arena::CreateMaybeMessage< ::kentik::as_group::v202212::ASGroupConcise >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kentik::as_group::v202212::ASGroupConcise >(arena);
}
template<> PROTOBUF_NOINLINE ::kentik::as_group::v202212::ASGroupDetailed* Arena::CreateMaybeMessage< ::kentik::as_group::v202212::ASGroupDetailed >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kentik::as_group::v202212::ASGroupDetailed >(arena);
}
template<> PROTOBUF_NOINLINE ::kentik::as_group::v202212::ListASGroupsRequest* Arena::CreateMaybeMessage< ::kentik::as_group::v202212::ListASGroupsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kentik::as_group::v202212::ListASGroupsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::kentik::as_group::v202212::ListASGroupsResponse* Arena::CreateMaybeMessage< ::kentik::as_group::v202212::ListASGroupsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kentik::as_group::v202212::ListASGroupsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::kentik::as_group::v202212::GetASGroupRequest* Arena::CreateMaybeMessage< ::kentik::as_group::v202212::GetASGroupRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kentik::as_group::v202212::GetASGroupRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::kentik::as_group::v202212::GetASGroupResponse* Arena::CreateMaybeMessage< ::kentik::as_group::v202212::GetASGroupResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kentik::as_group::v202212::GetASGroupResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::kentik::as_group::v202212::CreateASGroupRequest* Arena::CreateMaybeMessage< ::kentik::as_group::v202212::CreateASGroupRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kentik::as_group::v202212::CreateASGroupRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::kentik::as_group::v202212::CreateASGroupResponse* Arena::CreateMaybeMessage< ::kentik::as_group::v202212::CreateASGroupResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kentik::as_group::v202212::CreateASGroupResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::kentik::as_group::v202212::UpdateASGroupRequest* Arena::CreateMaybeMessage< ::kentik::as_group::v202212::UpdateASGroupRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kentik::as_group::v202212::UpdateASGroupRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::kentik::as_group::v202212::UpdateASGroupResponse* Arena::CreateMaybeMessage< ::kentik::as_group::v202212::UpdateASGroupResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kentik::as_group::v202212::UpdateASGroupResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::kentik::as_group::v202212::DeleteASGroupRequest* Arena::CreateMaybeMessage< ::kentik::as_group::v202212::DeleteASGroupRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kentik::as_group::v202212::DeleteASGroupRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::kentik::as_group::v202212::DeleteASGroupResponse* Arena::CreateMaybeMessage< ::kentik::as_group::v202212::DeleteASGroupResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kentik::as_group::v202212::DeleteASGroupResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
