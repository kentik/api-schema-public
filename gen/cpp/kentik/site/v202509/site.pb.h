// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: kentik/site/v202509/site.proto
// Protobuf C++ Version: 5.29.3

#ifndef kentik_2fsite_2fv202509_2fsite_2eproto_2epb_2eh
#define kentik_2fsite_2fv202509_2fsite_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "google/api/annotations.pb.h"
#include "google/api/client.pb.h"
#include "google/api/field_behavior.pb.h"
#include "google/protobuf/timestamp.pb.h"
#include "protoc-gen-openapiv2/options/annotations.pb.h"
#include "kentik/core/v202303/annotations.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_kentik_2fsite_2fv202509_2fsite_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_kentik_2fsite_2fv202509_2fsite_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_kentik_2fsite_2fv202509_2fsite_2eproto;
namespace kentik {
namespace site {
namespace v202509 {
class CreateSiteMarketRequest;
struct CreateSiteMarketRequestDefaultTypeInternal;
extern CreateSiteMarketRequestDefaultTypeInternal _CreateSiteMarketRequest_default_instance_;
class CreateSiteMarketResponse;
struct CreateSiteMarketResponseDefaultTypeInternal;
extern CreateSiteMarketResponseDefaultTypeInternal _CreateSiteMarketResponse_default_instance_;
class CreateSiteRequest;
struct CreateSiteRequestDefaultTypeInternal;
extern CreateSiteRequestDefaultTypeInternal _CreateSiteRequest_default_instance_;
class CreateSiteResponse;
struct CreateSiteResponseDefaultTypeInternal;
extern CreateSiteResponseDefaultTypeInternal _CreateSiteResponse_default_instance_;
class DeleteSiteMarketRequest;
struct DeleteSiteMarketRequestDefaultTypeInternal;
extern DeleteSiteMarketRequestDefaultTypeInternal _DeleteSiteMarketRequest_default_instance_;
class DeleteSiteMarketResponse;
struct DeleteSiteMarketResponseDefaultTypeInternal;
extern DeleteSiteMarketResponseDefaultTypeInternal _DeleteSiteMarketResponse_default_instance_;
class DeleteSiteRequest;
struct DeleteSiteRequestDefaultTypeInternal;
extern DeleteSiteRequestDefaultTypeInternal _DeleteSiteRequest_default_instance_;
class DeleteSiteResponse;
struct DeleteSiteResponseDefaultTypeInternal;
extern DeleteSiteResponseDefaultTypeInternal _DeleteSiteResponse_default_instance_;
class GetSiteMarketRequest;
struct GetSiteMarketRequestDefaultTypeInternal;
extern GetSiteMarketRequestDefaultTypeInternal _GetSiteMarketRequest_default_instance_;
class GetSiteMarketResponse;
struct GetSiteMarketResponseDefaultTypeInternal;
extern GetSiteMarketResponseDefaultTypeInternal _GetSiteMarketResponse_default_instance_;
class GetSiteRequest;
struct GetSiteRequestDefaultTypeInternal;
extern GetSiteRequestDefaultTypeInternal _GetSiteRequest_default_instance_;
class GetSiteResponse;
struct GetSiteResponseDefaultTypeInternal;
extern GetSiteResponseDefaultTypeInternal _GetSiteResponse_default_instance_;
class Layer;
struct LayerDefaultTypeInternal;
extern LayerDefaultTypeInternal _Layer_default_instance_;
class LayerSet;
struct LayerSetDefaultTypeInternal;
extern LayerSetDefaultTypeInternal _LayerSet_default_instance_;
class ListSiteMarketsRequest;
struct ListSiteMarketsRequestDefaultTypeInternal;
extern ListSiteMarketsRequestDefaultTypeInternal _ListSiteMarketsRequest_default_instance_;
class ListSiteMarketsResponse;
struct ListSiteMarketsResponseDefaultTypeInternal;
extern ListSiteMarketsResponseDefaultTypeInternal _ListSiteMarketsResponse_default_instance_;
class ListSitesRequest;
struct ListSitesRequestDefaultTypeInternal;
extern ListSitesRequestDefaultTypeInternal _ListSitesRequest_default_instance_;
class ListSitesResponse;
struct ListSitesResponseDefaultTypeInternal;
extern ListSitesResponseDefaultTypeInternal _ListSitesResponse_default_instance_;
class PeeringDBSiteMapping;
struct PeeringDBSiteMappingDefaultTypeInternal;
extern PeeringDBSiteMappingDefaultTypeInternal _PeeringDBSiteMapping_default_instance_;
class PostalAddress;
struct PostalAddressDefaultTypeInternal;
extern PostalAddressDefaultTypeInternal _PostalAddress_default_instance_;
class Site;
struct SiteDefaultTypeInternal;
extern SiteDefaultTypeInternal _Site_default_instance_;
class SiteIpAddressClassification;
struct SiteIpAddressClassificationDefaultTypeInternal;
extern SiteIpAddressClassificationDefaultTypeInternal _SiteIpAddressClassification_default_instance_;
class SiteMarket;
struct SiteMarketDefaultTypeInternal;
extern SiteMarketDefaultTypeInternal _SiteMarket_default_instance_;
class UpdateSiteMarketRequest;
struct UpdateSiteMarketRequestDefaultTypeInternal;
extern UpdateSiteMarketRequestDefaultTypeInternal _UpdateSiteMarketRequest_default_instance_;
class UpdateSiteMarketResponse;
struct UpdateSiteMarketResponseDefaultTypeInternal;
extern UpdateSiteMarketResponseDefaultTypeInternal _UpdateSiteMarketResponse_default_instance_;
class UpdateSiteRequest;
struct UpdateSiteRequestDefaultTypeInternal;
extern UpdateSiteRequestDefaultTypeInternal _UpdateSiteRequest_default_instance_;
class UpdateSiteResponse;
struct UpdateSiteResponseDefaultTypeInternal;
extern UpdateSiteResponseDefaultTypeInternal _UpdateSiteResponse_default_instance_;
}  // namespace v202509
}  // namespace site
}  // namespace kentik
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace kentik {
namespace site {
namespace v202509 {
enum SiteType : int {
  SITE_TYPE_UNSPECIFIED = 0,
  SITE_TYPE_DATA_CENTER = 1,
  SITE_TYPE_CLOUD = 2,
  SITE_TYPE_BRANCH = 3,
  SITE_TYPE_CONNECTIVITY = 4,
  SITE_TYPE_CUSTOMER = 5,
  SITE_TYPE_OTHER = 6,
  SiteType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  SiteType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool SiteType_IsValid(int value);
extern const uint32_t SiteType_internal_data_[];
constexpr SiteType SiteType_MIN = static_cast<SiteType>(0);
constexpr SiteType SiteType_MAX = static_cast<SiteType>(6);
constexpr int SiteType_ARRAYSIZE = 6 + 1;
const ::google::protobuf::EnumDescriptor*
SiteType_descriptor();
template <typename T>
const std::string& SiteType_Name(T value) {
  static_assert(std::is_same<T, SiteType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to SiteType_Name().");
  return SiteType_Name(static_cast<SiteType>(value));
}
template <>
inline const std::string& SiteType_Name(SiteType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<SiteType_descriptor,
                                                 0, 6>(
      static_cast<int>(value));
}
inline bool SiteType_Parse(absl::string_view name, SiteType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SiteType>(
      SiteType_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class SiteIpAddressClassification final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.site.v202509.SiteIpAddressClassification) */ {
 public:
  inline SiteIpAddressClassification() : SiteIpAddressClassification(nullptr) {}
  ~SiteIpAddressClassification() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SiteIpAddressClassification* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SiteIpAddressClassification));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SiteIpAddressClassification(
      ::google::protobuf::internal::ConstantInitialized);

  inline SiteIpAddressClassification(const SiteIpAddressClassification& from) : SiteIpAddressClassification(nullptr, from) {}
  inline SiteIpAddressClassification(SiteIpAddressClassification&& from) noexcept
      : SiteIpAddressClassification(nullptr, std::move(from)) {}
  inline SiteIpAddressClassification& operator=(const SiteIpAddressClassification& from) {
    CopyFrom(from);
    return *this;
  }
  inline SiteIpAddressClassification& operator=(SiteIpAddressClassification&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SiteIpAddressClassification& default_instance() {
    return *internal_default_instance();
  }
  static inline const SiteIpAddressClassification* internal_default_instance() {
    return reinterpret_cast<const SiteIpAddressClassification*>(
        &_SiteIpAddressClassification_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(SiteIpAddressClassification& a, SiteIpAddressClassification& b) { a.Swap(&b); }
  inline void Swap(SiteIpAddressClassification* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SiteIpAddressClassification* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SiteIpAddressClassification* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SiteIpAddressClassification>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SiteIpAddressClassification& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SiteIpAddressClassification& from) { SiteIpAddressClassification::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SiteIpAddressClassification* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.site.v202509.SiteIpAddressClassification"; }

 protected:
  explicit SiteIpAddressClassification(::google::protobuf::Arena* arena);
  SiteIpAddressClassification(::google::protobuf::Arena* arena, const SiteIpAddressClassification& from);
  SiteIpAddressClassification(::google::protobuf::Arena* arena, SiteIpAddressClassification&& from) noexcept
      : SiteIpAddressClassification(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kInfrastructureNetworksFieldNumber = 1,
    kUserAccessNetworksFieldNumber = 2,
    kOtherNetworksFieldNumber = 3,
  };
  // repeated string infrastructure_networks = 1 [json_name = "infrastructureNetworks", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int infrastructure_networks_size() const;
  private:
  int _internal_infrastructure_networks_size() const;

  public:
  void clear_infrastructure_networks() ;
  const std::string& infrastructure_networks(int index) const;
  std::string* mutable_infrastructure_networks(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_infrastructure_networks(int index, Arg_&& value, Args_... args);
  std::string* add_infrastructure_networks();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_infrastructure_networks(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& infrastructure_networks() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_infrastructure_networks();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_infrastructure_networks() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_infrastructure_networks();

  public:
  // repeated string user_access_networks = 2 [json_name = "userAccessNetworks", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int user_access_networks_size() const;
  private:
  int _internal_user_access_networks_size() const;

  public:
  void clear_user_access_networks() ;
  const std::string& user_access_networks(int index) const;
  std::string* mutable_user_access_networks(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_user_access_networks(int index, Arg_&& value, Args_... args);
  std::string* add_user_access_networks();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_user_access_networks(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& user_access_networks() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_user_access_networks();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_user_access_networks() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_user_access_networks();

  public:
  // repeated string other_networks = 3 [json_name = "otherNetworks", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int other_networks_size() const;
  private:
  int _internal_other_networks_size() const;

  public:
  void clear_other_networks() ;
  const std::string& other_networks(int index) const;
  std::string* mutable_other_networks(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_other_networks(int index, Arg_&& value, Args_... args);
  std::string* add_other_networks();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_other_networks(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& other_networks() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_other_networks();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_other_networks() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_other_networks();

  public:
  // @@protoc_insertion_point(class_scope:kentik.site.v202509.SiteIpAddressClassification)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      113, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SiteIpAddressClassification& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> infrastructure_networks_;
    ::google::protobuf::RepeatedPtrField<std::string> user_access_networks_;
    ::google::protobuf::RepeatedPtrField<std::string> other_networks_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fsite_2fv202509_2fsite_2eproto;
};
// -------------------------------------------------------------------

class PostalAddress final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.site.v202509.PostalAddress) */ {
 public:
  inline PostalAddress() : PostalAddress(nullptr) {}
  ~PostalAddress() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PostalAddress* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PostalAddress));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PostalAddress(
      ::google::protobuf::internal::ConstantInitialized);

  inline PostalAddress(const PostalAddress& from) : PostalAddress(nullptr, from) {}
  inline PostalAddress(PostalAddress&& from) noexcept
      : PostalAddress(nullptr, std::move(from)) {}
  inline PostalAddress& operator=(const PostalAddress& from) {
    CopyFrom(from);
    return *this;
  }
  inline PostalAddress& operator=(PostalAddress&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PostalAddress& default_instance() {
    return *internal_default_instance();
  }
  static inline const PostalAddress* internal_default_instance() {
    return reinterpret_cast<const PostalAddress*>(
        &_PostalAddress_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(PostalAddress& a, PostalAddress& b) { a.Swap(&b); }
  inline void Swap(PostalAddress* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PostalAddress* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PostalAddress* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PostalAddress>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PostalAddress& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PostalAddress& from) { PostalAddress::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PostalAddress* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.site.v202509.PostalAddress"; }

 protected:
  explicit PostalAddress(::google::protobuf::Arena* arena);
  PostalAddress(::google::protobuf::Arena* arena, const PostalAddress& from);
  PostalAddress(::google::protobuf::Arena* arena, PostalAddress&& from) noexcept
      : PostalAddress(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAddressFieldNumber = 1,
    kCityFieldNumber = 2,
    kRegionFieldNumber = 3,
    kPostalCodeFieldNumber = 4,
    kCountryFieldNumber = 5,
  };
  // string address = 1 [json_name = "address", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_address() ;
  const std::string& address() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_address(Arg_&& arg, Args_... args);
  std::string* mutable_address();
  PROTOBUF_NODISCARD std::string* release_address();
  void set_allocated_address(std::string* value);

  private:
  const std::string& _internal_address() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_address(
      const std::string& value);
  std::string* _internal_mutable_address();

  public:
  // string city = 2 [json_name = "city", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_city() ;
  const std::string& city() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_city(Arg_&& arg, Args_... args);
  std::string* mutable_city();
  PROTOBUF_NODISCARD std::string* release_city();
  void set_allocated_city(std::string* value);

  private:
  const std::string& _internal_city() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_city(
      const std::string& value);
  std::string* _internal_mutable_city();

  public:
  // string region = 3 [json_name = "region", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_region() ;
  const std::string& region() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_region(Arg_&& arg, Args_... args);
  std::string* mutable_region();
  PROTOBUF_NODISCARD std::string* release_region();
  void set_allocated_region(std::string* value);

  private:
  const std::string& _internal_region() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_region(
      const std::string& value);
  std::string* _internal_mutable_region();

  public:
  // string postal_code = 4 [json_name = "postalCode", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_postal_code() ;
  const std::string& postal_code() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_postal_code(Arg_&& arg, Args_... args);
  std::string* mutable_postal_code();
  PROTOBUF_NODISCARD std::string* release_postal_code();
  void set_allocated_postal_code(std::string* value);

  private:
  const std::string& _internal_postal_code() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_postal_code(
      const std::string& value);
  std::string* _internal_mutable_postal_code();

  public:
  // string country = 5 [json_name = "country", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_country() ;
  const std::string& country() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_country(Arg_&& arg, Args_... args);
  std::string* mutable_country();
  PROTOBUF_NODISCARD std::string* release_country();
  void set_allocated_country(std::string* value);

  private:
  const std::string& _internal_country() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_country(
      const std::string& value);
  std::string* _internal_mutable_country();

  public:
  // @@protoc_insertion_point(class_scope:kentik.site.v202509.PostalAddress)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      77, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PostalAddress& from_msg);
    ::google::protobuf::internal::ArenaStringPtr address_;
    ::google::protobuf::internal::ArenaStringPtr city_;
    ::google::protobuf::internal::ArenaStringPtr region_;
    ::google::protobuf::internal::ArenaStringPtr postal_code_;
    ::google::protobuf::internal::ArenaStringPtr country_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fsite_2fv202509_2fsite_2eproto;
};
// -------------------------------------------------------------------

class ListSitesRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:kentik.site.v202509.ListSitesRequest) */ {
 public:
  inline ListSitesRequest() : ListSitesRequest(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ListSitesRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ListSitesRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListSitesRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListSitesRequest(const ListSitesRequest& from) : ListSitesRequest(nullptr, from) {}
  inline ListSitesRequest(ListSitesRequest&& from) noexcept
      : ListSitesRequest(nullptr, std::move(from)) {}
  inline ListSitesRequest& operator=(const ListSitesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListSitesRequest& operator=(ListSitesRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListSitesRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListSitesRequest* internal_default_instance() {
    return reinterpret_cast<const ListSitesRequest*>(
        &_ListSitesRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(ListSitesRequest& a, ListSitesRequest& b) { a.Swap(&b); }
  inline void Swap(ListSitesRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListSitesRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListSitesRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<ListSitesRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const ListSitesRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const ListSitesRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.site.v202509.ListSitesRequest"; }

 protected:
  explicit ListSitesRequest(::google::protobuf::Arena* arena);
  ListSitesRequest(::google::protobuf::Arena* arena, const ListSitesRequest& from);
  ListSitesRequest(::google::protobuf::Arena* arena, ListSitesRequest&& from) noexcept
      : ListSitesRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:kentik.site.v202509.ListSitesRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListSitesRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_kentik_2fsite_2fv202509_2fsite_2eproto;
};
// -------------------------------------------------------------------

class ListSiteMarketsRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:kentik.site.v202509.ListSiteMarketsRequest) */ {
 public:
  inline ListSiteMarketsRequest() : ListSiteMarketsRequest(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ListSiteMarketsRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ListSiteMarketsRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListSiteMarketsRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListSiteMarketsRequest(const ListSiteMarketsRequest& from) : ListSiteMarketsRequest(nullptr, from) {}
  inline ListSiteMarketsRequest(ListSiteMarketsRequest&& from) noexcept
      : ListSiteMarketsRequest(nullptr, std::move(from)) {}
  inline ListSiteMarketsRequest& operator=(const ListSiteMarketsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListSiteMarketsRequest& operator=(ListSiteMarketsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListSiteMarketsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListSiteMarketsRequest* internal_default_instance() {
    return reinterpret_cast<const ListSiteMarketsRequest*>(
        &_ListSiteMarketsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 17;
  friend void swap(ListSiteMarketsRequest& a, ListSiteMarketsRequest& b) { a.Swap(&b); }
  inline void Swap(ListSiteMarketsRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListSiteMarketsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListSiteMarketsRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<ListSiteMarketsRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const ListSiteMarketsRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const ListSiteMarketsRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.site.v202509.ListSiteMarketsRequest"; }

 protected:
  explicit ListSiteMarketsRequest(::google::protobuf::Arena* arena);
  ListSiteMarketsRequest(::google::protobuf::Arena* arena, const ListSiteMarketsRequest& from);
  ListSiteMarketsRequest(::google::protobuf::Arena* arena, ListSiteMarketsRequest&& from) noexcept
      : ListSiteMarketsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:kentik.site.v202509.ListSiteMarketsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListSiteMarketsRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_kentik_2fsite_2fv202509_2fsite_2eproto;
};
// -------------------------------------------------------------------

class Layer final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.site.v202509.Layer) */ {
 public:
  inline Layer() : Layer(nullptr) {}
  ~Layer() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Layer* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Layer));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Layer(
      ::google::protobuf::internal::ConstantInitialized);

  inline Layer(const Layer& from) : Layer(nullptr, from) {}
  inline Layer(Layer&& from) noexcept
      : Layer(nullptr, std::move(from)) {}
  inline Layer& operator=(const Layer& from) {
    CopyFrom(from);
    return *this;
  }
  inline Layer& operator=(Layer&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Layer& default_instance() {
    return *internal_default_instance();
  }
  static inline const Layer* internal_default_instance() {
    return reinterpret_cast<const Layer*>(
        &_Layer_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(Layer& a, Layer& b) { a.Swap(&b); }
  inline void Swap(Layer* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Layer* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Layer* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Layer>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Layer& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Layer& from) { Layer::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Layer* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.site.v202509.Layer"; }

 protected:
  explicit Layer(::google::protobuf::Arena* arena);
  Layer(::google::protobuf::Arena* arena, const Layer& from);
  Layer(::google::protobuf::Arena* arena, Layer&& from) noexcept
      : Layer(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDeviceIdsFieldNumber = 2,
    kNameFieldNumber = 1,
  };
  // repeated string device_ids = 2 [json_name = "deviceIds", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int device_ids_size() const;
  private:
  int _internal_device_ids_size() const;

  public:
  void clear_device_ids() ;
  const std::string& device_ids(int index) const;
  std::string* mutable_device_ids(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_device_ids(int index, Arg_&& value, Args_... args);
  std::string* add_device_ids();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_device_ids(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& device_ids() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_device_ids();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_device_ids() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_device_ids();

  public:
  // string name = 1 [json_name = "name", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // @@protoc_insertion_point(class_scope:kentik.site.v202509.Layer)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      48, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Layer& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> device_ids_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fsite_2fv202509_2fsite_2eproto;
};
// -------------------------------------------------------------------

class GetSiteRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.site.v202509.GetSiteRequest) */ {
 public:
  inline GetSiteRequest() : GetSiteRequest(nullptr) {}
  ~GetSiteRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetSiteRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetSiteRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetSiteRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetSiteRequest(const GetSiteRequest& from) : GetSiteRequest(nullptr, from) {}
  inline GetSiteRequest(GetSiteRequest&& from) noexcept
      : GetSiteRequest(nullptr, std::move(from)) {}
  inline GetSiteRequest& operator=(const GetSiteRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetSiteRequest& operator=(GetSiteRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetSiteRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetSiteRequest* internal_default_instance() {
    return reinterpret_cast<const GetSiteRequest*>(
        &_GetSiteRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(GetSiteRequest& a, GetSiteRequest& b) { a.Swap(&b); }
  inline void Swap(GetSiteRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetSiteRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetSiteRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetSiteRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetSiteRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetSiteRequest& from) { GetSiteRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetSiteRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.site.v202509.GetSiteRequest"; }

 protected:
  explicit GetSiteRequest(::google::protobuf::Arena* arena);
  GetSiteRequest(::google::protobuf::Arena* arena, const GetSiteRequest& from);
  GetSiteRequest(::google::protobuf::Arena* arena, GetSiteRequest&& from) noexcept
      : GetSiteRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
  };
  // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // @@protoc_insertion_point(class_scope:kentik.site.v202509.GetSiteRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      45, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetSiteRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fsite_2fv202509_2fsite_2eproto;
};
// -------------------------------------------------------------------

class GetSiteMarketRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.site.v202509.GetSiteMarketRequest) */ {
 public:
  inline GetSiteMarketRequest() : GetSiteMarketRequest(nullptr) {}
  ~GetSiteMarketRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetSiteMarketRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetSiteMarketRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetSiteMarketRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetSiteMarketRequest(const GetSiteMarketRequest& from) : GetSiteMarketRequest(nullptr, from) {}
  inline GetSiteMarketRequest(GetSiteMarketRequest&& from) noexcept
      : GetSiteMarketRequest(nullptr, std::move(from)) {}
  inline GetSiteMarketRequest& operator=(const GetSiteMarketRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetSiteMarketRequest& operator=(GetSiteMarketRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetSiteMarketRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetSiteMarketRequest* internal_default_instance() {
    return reinterpret_cast<const GetSiteMarketRequest*>(
        &_GetSiteMarketRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 19;
  friend void swap(GetSiteMarketRequest& a, GetSiteMarketRequest& b) { a.Swap(&b); }
  inline void Swap(GetSiteMarketRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetSiteMarketRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetSiteMarketRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetSiteMarketRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetSiteMarketRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetSiteMarketRequest& from) { GetSiteMarketRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetSiteMarketRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.site.v202509.GetSiteMarketRequest"; }

 protected:
  explicit GetSiteMarketRequest(::google::protobuf::Arena* arena);
  GetSiteMarketRequest(::google::protobuf::Arena* arena, const GetSiteMarketRequest& from);
  GetSiteMarketRequest(::google::protobuf::Arena* arena, GetSiteMarketRequest&& from) noexcept
      : GetSiteMarketRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
  };
  // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // @@protoc_insertion_point(class_scope:kentik.site.v202509.GetSiteMarketRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      51, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetSiteMarketRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fsite_2fv202509_2fsite_2eproto;
};
// -------------------------------------------------------------------

class DeleteSiteResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:kentik.site.v202509.DeleteSiteResponse) */ {
 public:
  inline DeleteSiteResponse() : DeleteSiteResponse(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DeleteSiteResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DeleteSiteResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeleteSiteResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline DeleteSiteResponse(const DeleteSiteResponse& from) : DeleteSiteResponse(nullptr, from) {}
  inline DeleteSiteResponse(DeleteSiteResponse&& from) noexcept
      : DeleteSiteResponse(nullptr, std::move(from)) {}
  inline DeleteSiteResponse& operator=(const DeleteSiteResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteSiteResponse& operator=(DeleteSiteResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeleteSiteResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeleteSiteResponse* internal_default_instance() {
    return reinterpret_cast<const DeleteSiteResponse*>(
        &_DeleteSiteResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 15;
  friend void swap(DeleteSiteResponse& a, DeleteSiteResponse& b) { a.Swap(&b); }
  inline void Swap(DeleteSiteResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteSiteResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeleteSiteResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<DeleteSiteResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const DeleteSiteResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const DeleteSiteResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.site.v202509.DeleteSiteResponse"; }

 protected:
  explicit DeleteSiteResponse(::google::protobuf::Arena* arena);
  DeleteSiteResponse(::google::protobuf::Arena* arena, const DeleteSiteResponse& from);
  DeleteSiteResponse(::google::protobuf::Arena* arena, DeleteSiteResponse&& from) noexcept
      : DeleteSiteResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:kentik.site.v202509.DeleteSiteResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DeleteSiteResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_kentik_2fsite_2fv202509_2fsite_2eproto;
};
// -------------------------------------------------------------------

class DeleteSiteRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.site.v202509.DeleteSiteRequest) */ {
 public:
  inline DeleteSiteRequest() : DeleteSiteRequest(nullptr) {}
  ~DeleteSiteRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DeleteSiteRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DeleteSiteRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeleteSiteRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline DeleteSiteRequest(const DeleteSiteRequest& from) : DeleteSiteRequest(nullptr, from) {}
  inline DeleteSiteRequest(DeleteSiteRequest&& from) noexcept
      : DeleteSiteRequest(nullptr, std::move(from)) {}
  inline DeleteSiteRequest& operator=(const DeleteSiteRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteSiteRequest& operator=(DeleteSiteRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeleteSiteRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeleteSiteRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteSiteRequest*>(
        &_DeleteSiteRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 14;
  friend void swap(DeleteSiteRequest& a, DeleteSiteRequest& b) { a.Swap(&b); }
  inline void Swap(DeleteSiteRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteSiteRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeleteSiteRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DeleteSiteRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DeleteSiteRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DeleteSiteRequest& from) { DeleteSiteRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DeleteSiteRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.site.v202509.DeleteSiteRequest"; }

 protected:
  explicit DeleteSiteRequest(::google::protobuf::Arena* arena);
  DeleteSiteRequest(::google::protobuf::Arena* arena, const DeleteSiteRequest& from);
  DeleteSiteRequest(::google::protobuf::Arena* arena, DeleteSiteRequest&& from) noexcept
      : DeleteSiteRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
  };
  // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // @@protoc_insertion_point(class_scope:kentik.site.v202509.DeleteSiteRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      48, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DeleteSiteRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fsite_2fv202509_2fsite_2eproto;
};
// -------------------------------------------------------------------

class DeleteSiteMarketResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:kentik.site.v202509.DeleteSiteMarketResponse) */ {
 public:
  inline DeleteSiteMarketResponse() : DeleteSiteMarketResponse(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DeleteSiteMarketResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DeleteSiteMarketResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeleteSiteMarketResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline DeleteSiteMarketResponse(const DeleteSiteMarketResponse& from) : DeleteSiteMarketResponse(nullptr, from) {}
  inline DeleteSiteMarketResponse(DeleteSiteMarketResponse&& from) noexcept
      : DeleteSiteMarketResponse(nullptr, std::move(from)) {}
  inline DeleteSiteMarketResponse& operator=(const DeleteSiteMarketResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteSiteMarketResponse& operator=(DeleteSiteMarketResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeleteSiteMarketResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeleteSiteMarketResponse* internal_default_instance() {
    return reinterpret_cast<const DeleteSiteMarketResponse*>(
        &_DeleteSiteMarketResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 26;
  friend void swap(DeleteSiteMarketResponse& a, DeleteSiteMarketResponse& b) { a.Swap(&b); }
  inline void Swap(DeleteSiteMarketResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteSiteMarketResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeleteSiteMarketResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<DeleteSiteMarketResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const DeleteSiteMarketResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const DeleteSiteMarketResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.site.v202509.DeleteSiteMarketResponse"; }

 protected:
  explicit DeleteSiteMarketResponse(::google::protobuf::Arena* arena);
  DeleteSiteMarketResponse(::google::protobuf::Arena* arena, const DeleteSiteMarketResponse& from);
  DeleteSiteMarketResponse(::google::protobuf::Arena* arena, DeleteSiteMarketResponse&& from) noexcept
      : DeleteSiteMarketResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:kentik.site.v202509.DeleteSiteMarketResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DeleteSiteMarketResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_kentik_2fsite_2fv202509_2fsite_2eproto;
};
// -------------------------------------------------------------------

class DeleteSiteMarketRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.site.v202509.DeleteSiteMarketRequest) */ {
 public:
  inline DeleteSiteMarketRequest() : DeleteSiteMarketRequest(nullptr) {}
  ~DeleteSiteMarketRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DeleteSiteMarketRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DeleteSiteMarketRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeleteSiteMarketRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline DeleteSiteMarketRequest(const DeleteSiteMarketRequest& from) : DeleteSiteMarketRequest(nullptr, from) {}
  inline DeleteSiteMarketRequest(DeleteSiteMarketRequest&& from) noexcept
      : DeleteSiteMarketRequest(nullptr, std::move(from)) {}
  inline DeleteSiteMarketRequest& operator=(const DeleteSiteMarketRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteSiteMarketRequest& operator=(DeleteSiteMarketRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeleteSiteMarketRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeleteSiteMarketRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteSiteMarketRequest*>(
        &_DeleteSiteMarketRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 25;
  friend void swap(DeleteSiteMarketRequest& a, DeleteSiteMarketRequest& b) { a.Swap(&b); }
  inline void Swap(DeleteSiteMarketRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteSiteMarketRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeleteSiteMarketRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DeleteSiteMarketRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DeleteSiteMarketRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DeleteSiteMarketRequest& from) { DeleteSiteMarketRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DeleteSiteMarketRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.site.v202509.DeleteSiteMarketRequest"; }

 protected:
  explicit DeleteSiteMarketRequest(::google::protobuf::Arena* arena);
  DeleteSiteMarketRequest(::google::protobuf::Arena* arena, const DeleteSiteMarketRequest& from);
  DeleteSiteMarketRequest(::google::protobuf::Arena* arena, DeleteSiteMarketRequest&& from) noexcept
      : DeleteSiteMarketRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
  };
  // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // @@protoc_insertion_point(class_scope:kentik.site.v202509.DeleteSiteMarketRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      54, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DeleteSiteMarketRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fsite_2fv202509_2fsite_2eproto;
};
// -------------------------------------------------------------------

class SiteMarket final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.site.v202509.SiteMarket) */ {
 public:
  inline SiteMarket() : SiteMarket(nullptr) {}
  ~SiteMarket() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SiteMarket* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SiteMarket));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SiteMarket(
      ::google::protobuf::internal::ConstantInitialized);

  inline SiteMarket(const SiteMarket& from) : SiteMarket(nullptr, from) {}
  inline SiteMarket(SiteMarket&& from) noexcept
      : SiteMarket(nullptr, std::move(from)) {}
  inline SiteMarket& operator=(const SiteMarket& from) {
    CopyFrom(from);
    return *this;
  }
  inline SiteMarket& operator=(SiteMarket&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SiteMarket& default_instance() {
    return *internal_default_instance();
  }
  static inline const SiteMarket* internal_default_instance() {
    return reinterpret_cast<const SiteMarket*>(
        &_SiteMarket_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 16;
  friend void swap(SiteMarket& a, SiteMarket& b) { a.Swap(&b); }
  inline void Swap(SiteMarket* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SiteMarket* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SiteMarket* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SiteMarket>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SiteMarket& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SiteMarket& from) { SiteMarket::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SiteMarket* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.site.v202509.SiteMarket"; }

 protected:
  explicit SiteMarket(::google::protobuf::Arena* arena);
  SiteMarket(::google::protobuf::Arena* arena, const SiteMarket& from);
  SiteMarket(::google::protobuf::Arena* arena, SiteMarket&& from) noexcept
      : SiteMarket(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
    kNameFieldNumber = 2,
    kDescriptionFieldNumber = 3,
    kCdateFieldNumber = 5,
    kEdateFieldNumber = 6,
    kNumberOfSitesFieldNumber = 4,
  };
  // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // string name = 2 [json_name = "name", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // string description = 3 [json_name = "description", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_description() ;
  const std::string& description() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_description(Arg_&& arg, Args_... args);
  std::string* mutable_description();
  PROTOBUF_NODISCARD std::string* release_description();
  void set_allocated_description(std::string* value);

  private:
  const std::string& _internal_description() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_description(
      const std::string& value);
  std::string* _internal_mutable_description();

  public:
  // .google.protobuf.Timestamp cdate = 5 [json_name = "cdate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_cdate() const;
  void clear_cdate() ;
  const ::google::protobuf::Timestamp& cdate() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_cdate();
  ::google::protobuf::Timestamp* mutable_cdate();
  void set_allocated_cdate(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_cdate(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_cdate();

  private:
  const ::google::protobuf::Timestamp& _internal_cdate() const;
  ::google::protobuf::Timestamp* _internal_mutable_cdate();

  public:
  // .google.protobuf.Timestamp edate = 6 [json_name = "edate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_edate() const;
  void clear_edate() ;
  const ::google::protobuf::Timestamp& edate() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_edate();
  ::google::protobuf::Timestamp* mutable_edate();
  void set_allocated_edate(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_edate(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_edate();

  private:
  const ::google::protobuf::Timestamp& _internal_edate() const;
  ::google::protobuf::Timestamp* _internal_mutable_edate();

  public:
  // uint32 number_of_sites = 4 [json_name = "numberOfSites", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_number_of_sites() ;
  ::uint32_t number_of_sites() const;
  void set_number_of_sites(::uint32_t value);

  private:
  ::uint32_t _internal_number_of_sites() const;
  void _internal_set_number_of_sites(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.site.v202509.SiteMarket)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 2,
      56, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SiteMarket& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr description_;
    ::google::protobuf::Timestamp* cdate_;
    ::google::protobuf::Timestamp* edate_;
    ::uint32_t number_of_sites_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fsite_2fv202509_2fsite_2eproto;
};
// -------------------------------------------------------------------

class PeeringDBSiteMapping final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.site.v202509.PeeringDBSiteMapping) */ {
 public:
  inline PeeringDBSiteMapping() : PeeringDBSiteMapping(nullptr) {}
  ~PeeringDBSiteMapping() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PeeringDBSiteMapping* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PeeringDBSiteMapping));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PeeringDBSiteMapping(
      ::google::protobuf::internal::ConstantInitialized);

  inline PeeringDBSiteMapping(const PeeringDBSiteMapping& from) : PeeringDBSiteMapping(nullptr, from) {}
  inline PeeringDBSiteMapping(PeeringDBSiteMapping&& from) noexcept
      : PeeringDBSiteMapping(nullptr, std::move(from)) {}
  inline PeeringDBSiteMapping& operator=(const PeeringDBSiteMapping& from) {
    CopyFrom(from);
    return *this;
  }
  inline PeeringDBSiteMapping& operator=(PeeringDBSiteMapping&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PeeringDBSiteMapping& default_instance() {
    return *internal_default_instance();
  }
  static inline const PeeringDBSiteMapping* internal_default_instance() {
    return reinterpret_cast<const PeeringDBSiteMapping*>(
        &_PeeringDBSiteMapping_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(PeeringDBSiteMapping& a, PeeringDBSiteMapping& b) { a.Swap(&b); }
  inline void Swap(PeeringDBSiteMapping* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PeeringDBSiteMapping* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PeeringDBSiteMapping* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PeeringDBSiteMapping>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PeeringDBSiteMapping& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PeeringDBSiteMapping& from) { PeeringDBSiteMapping::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PeeringDBSiteMapping* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.site.v202509.PeeringDBSiteMapping"; }

 protected:
  explicit PeeringDBSiteMapping(::google::protobuf::Arena* arena);
  PeeringDBSiteMapping(::google::protobuf::Arena* arena, const PeeringDBSiteMapping& from);
  PeeringDBSiteMapping(::google::protobuf::Arena* arena, PeeringDBSiteMapping&& from) noexcept
      : PeeringDBSiteMapping(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
    kSiteIdFieldNumber = 2,
    kPeeringdbFacIdFieldNumber = 3,
    kCompanyIdFieldNumber = 6,
    kEdateFieldNumber = 4,
    kCdateFieldNumber = 5,
  };
  // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // string site_id = 2 [json_name = "siteId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_site_id() ;
  const std::string& site_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_site_id(Arg_&& arg, Args_... args);
  std::string* mutable_site_id();
  PROTOBUF_NODISCARD std::string* release_site_id();
  void set_allocated_site_id(std::string* value);

  private:
  const std::string& _internal_site_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_site_id(
      const std::string& value);
  std::string* _internal_mutable_site_id();

  public:
  // string peeringdb_fac_id = 3 [json_name = "peeringdbFacId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_peeringdb_fac_id() ;
  const std::string& peeringdb_fac_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_peeringdb_fac_id(Arg_&& arg, Args_... args);
  std::string* mutable_peeringdb_fac_id();
  PROTOBUF_NODISCARD std::string* release_peeringdb_fac_id();
  void set_allocated_peeringdb_fac_id(std::string* value);

  private:
  const std::string& _internal_peeringdb_fac_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_peeringdb_fac_id(
      const std::string& value);
  std::string* _internal_mutable_peeringdb_fac_id();

  public:
  // string company_id = 6 [json_name = "companyId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_company_id() ;
  const std::string& company_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_company_id(Arg_&& arg, Args_... args);
  std::string* mutable_company_id();
  PROTOBUF_NODISCARD std::string* release_company_id();
  void set_allocated_company_id(std::string* value);

  private:
  const std::string& _internal_company_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_company_id(
      const std::string& value);
  std::string* _internal_mutable_company_id();

  public:
  // .google.protobuf.Timestamp edate = 4 [json_name = "edate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_edate() const;
  void clear_edate() ;
  const ::google::protobuf::Timestamp& edate() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_edate();
  ::google::protobuf::Timestamp* mutable_edate();
  void set_allocated_edate(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_edate(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_edate();

  private:
  const ::google::protobuf::Timestamp& _internal_edate() const;
  ::google::protobuf::Timestamp* _internal_mutable_edate();

  public:
  // .google.protobuf.Timestamp cdate = 5 [json_name = "cdate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_cdate() const;
  void clear_cdate() ;
  const ::google::protobuf::Timestamp& cdate() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_cdate();
  ::google::protobuf::Timestamp* mutable_cdate();
  void set_allocated_cdate(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_cdate(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_cdate();

  private:
  const ::google::protobuf::Timestamp& _internal_cdate() const;
  ::google::protobuf::Timestamp* _internal_mutable_cdate();

  public:
  // @@protoc_insertion_point(class_scope:kentik.site.v202509.PeeringDBSiteMapping)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 2,
      84, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PeeringDBSiteMapping& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::ArenaStringPtr site_id_;
    ::google::protobuf::internal::ArenaStringPtr peeringdb_fac_id_;
    ::google::protobuf::internal::ArenaStringPtr company_id_;
    ::google::protobuf::Timestamp* edate_;
    ::google::protobuf::Timestamp* cdate_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fsite_2fv202509_2fsite_2eproto;
};
// -------------------------------------------------------------------

class LayerSet final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.site.v202509.LayerSet) */ {
 public:
  inline LayerSet() : LayerSet(nullptr) {}
  ~LayerSet() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(LayerSet* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(LayerSet));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LayerSet(
      ::google::protobuf::internal::ConstantInitialized);

  inline LayerSet(const LayerSet& from) : LayerSet(nullptr, from) {}
  inline LayerSet(LayerSet&& from) noexcept
      : LayerSet(nullptr, std::move(from)) {}
  inline LayerSet& operator=(const LayerSet& from) {
    CopyFrom(from);
    return *this;
  }
  inline LayerSet& operator=(LayerSet&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LayerSet& default_instance() {
    return *internal_default_instance();
  }
  static inline const LayerSet* internal_default_instance() {
    return reinterpret_cast<const LayerSet*>(
        &_LayerSet_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(LayerSet& a, LayerSet& b) { a.Swap(&b); }
  inline void Swap(LayerSet* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LayerSet* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LayerSet* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<LayerSet>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LayerSet& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LayerSet& from) { LayerSet::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(LayerSet* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.site.v202509.LayerSet"; }

 protected:
  explicit LayerSet(::google::protobuf::Arena* arena);
  LayerSet(::google::protobuf::Arena* arena, const LayerSet& from);
  LayerSet(::google::protobuf::Arena* arena, LayerSet&& from) noexcept
      : LayerSet(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLayersFieldNumber = 1,
  };
  // repeated .kentik.site.v202509.Layer layers = 1 [json_name = "layers", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int layers_size() const;
  private:
  int _internal_layers_size() const;

  public:
  void clear_layers() ;
  ::kentik::site::v202509::Layer* mutable_layers(int index);
  ::google::protobuf::RepeatedPtrField<::kentik::site::v202509::Layer>* mutable_layers();

  private:
  const ::google::protobuf::RepeatedPtrField<::kentik::site::v202509::Layer>& _internal_layers() const;
  ::google::protobuf::RepeatedPtrField<::kentik::site::v202509::Layer>* _internal_mutable_layers();
  public:
  const ::kentik::site::v202509::Layer& layers(int index) const;
  ::kentik::site::v202509::Layer* add_layers();
  const ::google::protobuf::RepeatedPtrField<::kentik::site::v202509::Layer>& layers() const;
  // @@protoc_insertion_point(class_scope:kentik.site.v202509.LayerSet)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const LayerSet& from_msg);
    ::google::protobuf::RepeatedPtrField< ::kentik::site::v202509::Layer > layers_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fsite_2fv202509_2fsite_2eproto;
};
// -------------------------------------------------------------------

class UpdateSiteMarketResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.site.v202509.UpdateSiteMarketResponse) */ {
 public:
  inline UpdateSiteMarketResponse() : UpdateSiteMarketResponse(nullptr) {}
  ~UpdateSiteMarketResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UpdateSiteMarketResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UpdateSiteMarketResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateSiteMarketResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdateSiteMarketResponse(const UpdateSiteMarketResponse& from) : UpdateSiteMarketResponse(nullptr, from) {}
  inline UpdateSiteMarketResponse(UpdateSiteMarketResponse&& from) noexcept
      : UpdateSiteMarketResponse(nullptr, std::move(from)) {}
  inline UpdateSiteMarketResponse& operator=(const UpdateSiteMarketResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateSiteMarketResponse& operator=(UpdateSiteMarketResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateSiteMarketResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateSiteMarketResponse* internal_default_instance() {
    return reinterpret_cast<const UpdateSiteMarketResponse*>(
        &_UpdateSiteMarketResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 24;
  friend void swap(UpdateSiteMarketResponse& a, UpdateSiteMarketResponse& b) { a.Swap(&b); }
  inline void Swap(UpdateSiteMarketResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateSiteMarketResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateSiteMarketResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<UpdateSiteMarketResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateSiteMarketResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateSiteMarketResponse& from) { UpdateSiteMarketResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(UpdateSiteMarketResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.site.v202509.UpdateSiteMarketResponse"; }

 protected:
  explicit UpdateSiteMarketResponse(::google::protobuf::Arena* arena);
  UpdateSiteMarketResponse(::google::protobuf::Arena* arena, const UpdateSiteMarketResponse& from);
  UpdateSiteMarketResponse(::google::protobuf::Arena* arena, UpdateSiteMarketResponse&& from) noexcept
      : UpdateSiteMarketResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSiteMarketFieldNumber = 1,
  };
  // .kentik.site.v202509.SiteMarket site_market = 1 [json_name = "siteMarket", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_site_market() const;
  void clear_site_market() ;
  const ::kentik::site::v202509::SiteMarket& site_market() const;
  PROTOBUF_NODISCARD ::kentik::site::v202509::SiteMarket* release_site_market();
  ::kentik::site::v202509::SiteMarket* mutable_site_market();
  void set_allocated_site_market(::kentik::site::v202509::SiteMarket* value);
  void unsafe_arena_set_allocated_site_market(::kentik::site::v202509::SiteMarket* value);
  ::kentik::site::v202509::SiteMarket* unsafe_arena_release_site_market();

  private:
  const ::kentik::site::v202509::SiteMarket& _internal_site_market() const;
  ::kentik::site::v202509::SiteMarket* _internal_mutable_site_market();

  public:
  // @@protoc_insertion_point(class_scope:kentik.site.v202509.UpdateSiteMarketResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdateSiteMarketResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::kentik::site::v202509::SiteMarket* site_market_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fsite_2fv202509_2fsite_2eproto;
};
// -------------------------------------------------------------------

class UpdateSiteMarketRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.site.v202509.UpdateSiteMarketRequest) */ {
 public:
  inline UpdateSiteMarketRequest() : UpdateSiteMarketRequest(nullptr) {}
  ~UpdateSiteMarketRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UpdateSiteMarketRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UpdateSiteMarketRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateSiteMarketRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdateSiteMarketRequest(const UpdateSiteMarketRequest& from) : UpdateSiteMarketRequest(nullptr, from) {}
  inline UpdateSiteMarketRequest(UpdateSiteMarketRequest&& from) noexcept
      : UpdateSiteMarketRequest(nullptr, std::move(from)) {}
  inline UpdateSiteMarketRequest& operator=(const UpdateSiteMarketRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateSiteMarketRequest& operator=(UpdateSiteMarketRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateSiteMarketRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateSiteMarketRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateSiteMarketRequest*>(
        &_UpdateSiteMarketRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 23;
  friend void swap(UpdateSiteMarketRequest& a, UpdateSiteMarketRequest& b) { a.Swap(&b); }
  inline void Swap(UpdateSiteMarketRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateSiteMarketRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateSiteMarketRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<UpdateSiteMarketRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateSiteMarketRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateSiteMarketRequest& from) { UpdateSiteMarketRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(UpdateSiteMarketRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.site.v202509.UpdateSiteMarketRequest"; }

 protected:
  explicit UpdateSiteMarketRequest(::google::protobuf::Arena* arena);
  UpdateSiteMarketRequest(::google::protobuf::Arena* arena, const UpdateSiteMarketRequest& from);
  UpdateSiteMarketRequest(::google::protobuf::Arena* arena, UpdateSiteMarketRequest&& from) noexcept
      : UpdateSiteMarketRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSiteMarketFieldNumber = 1,
  };
  // .kentik.site.v202509.SiteMarket site_market = 1 [json_name = "siteMarket", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_site_market() const;
  void clear_site_market() ;
  const ::kentik::site::v202509::SiteMarket& site_market() const;
  PROTOBUF_NODISCARD ::kentik::site::v202509::SiteMarket* release_site_market();
  ::kentik::site::v202509::SiteMarket* mutable_site_market();
  void set_allocated_site_market(::kentik::site::v202509::SiteMarket* value);
  void unsafe_arena_set_allocated_site_market(::kentik::site::v202509::SiteMarket* value);
  ::kentik::site::v202509::SiteMarket* unsafe_arena_release_site_market();

  private:
  const ::kentik::site::v202509::SiteMarket& _internal_site_market() const;
  ::kentik::site::v202509::SiteMarket* _internal_mutable_site_market();

  public:
  // @@protoc_insertion_point(class_scope:kentik.site.v202509.UpdateSiteMarketRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdateSiteMarketRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::kentik::site::v202509::SiteMarket* site_market_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fsite_2fv202509_2fsite_2eproto;
};
// -------------------------------------------------------------------

class Site final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.site.v202509.Site) */ {
 public:
  inline Site() : Site(nullptr) {}
  ~Site() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Site* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Site));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Site(
      ::google::protobuf::internal::ConstantInitialized);

  inline Site(const Site& from) : Site(nullptr, from) {}
  inline Site(Site&& from) noexcept
      : Site(nullptr, std::move(from)) {}
  inline Site& operator=(const Site& from) {
    CopyFrom(from);
    return *this;
  }
  inline Site& operator=(Site&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Site& default_instance() {
    return *internal_default_instance();
  }
  static inline const Site* internal_default_instance() {
    return reinterpret_cast<const Site*>(
        &_Site_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(Site& a, Site& b) { a.Swap(&b); }
  inline void Swap(Site* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Site* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Site* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Site>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Site& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Site& from) { Site::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Site* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.site.v202509.Site"; }

 protected:
  explicit Site(::google::protobuf::Arena* arena);
  Site(::google::protobuf::Arena* arena, const Site& from);
  Site(::google::protobuf::Arena* arena, Site&& from) noexcept
      : Site(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kArchitectureFieldNumber = 9,
    kPeeringdbSiteMappingFieldNumber = 11,
    kIdFieldNumber = 1,
    kTitleFieldNumber = 2,
    kPostalAddressFieldNumber = 6,
    kAddressClassificationFieldNumber = 8,
    kSiteMarketFieldNumber = 10,
    kLatFieldNumber = 4,
    kLonFieldNumber = 5,
    kTypeFieldNumber = 7,
  };
  // repeated .kentik.site.v202509.LayerSet architecture = 9 [json_name = "architecture", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int architecture_size() const;
  private:
  int _internal_architecture_size() const;

  public:
  void clear_architecture() ;
  ::kentik::site::v202509::LayerSet* mutable_architecture(int index);
  ::google::protobuf::RepeatedPtrField<::kentik::site::v202509::LayerSet>* mutable_architecture();

  private:
  const ::google::protobuf::RepeatedPtrField<::kentik::site::v202509::LayerSet>& _internal_architecture() const;
  ::google::protobuf::RepeatedPtrField<::kentik::site::v202509::LayerSet>* _internal_mutable_architecture();
  public:
  const ::kentik::site::v202509::LayerSet& architecture(int index) const;
  ::kentik::site::v202509::LayerSet* add_architecture();
  const ::google::protobuf::RepeatedPtrField<::kentik::site::v202509::LayerSet>& architecture() const;
  // repeated .kentik.site.v202509.PeeringDBSiteMapping peeringdb_site_mapping = 11 [json_name = "peeringdbSiteMapping", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int peeringdb_site_mapping_size() const;
  private:
  int _internal_peeringdb_site_mapping_size() const;

  public:
  void clear_peeringdb_site_mapping() ;
  ::kentik::site::v202509::PeeringDBSiteMapping* mutable_peeringdb_site_mapping(int index);
  ::google::protobuf::RepeatedPtrField<::kentik::site::v202509::PeeringDBSiteMapping>* mutable_peeringdb_site_mapping();

  private:
  const ::google::protobuf::RepeatedPtrField<::kentik::site::v202509::PeeringDBSiteMapping>& _internal_peeringdb_site_mapping() const;
  ::google::protobuf::RepeatedPtrField<::kentik::site::v202509::PeeringDBSiteMapping>* _internal_mutable_peeringdb_site_mapping();
  public:
  const ::kentik::site::v202509::PeeringDBSiteMapping& peeringdb_site_mapping(int index) const;
  ::kentik::site::v202509::PeeringDBSiteMapping* add_peeringdb_site_mapping();
  const ::google::protobuf::RepeatedPtrField<::kentik::site::v202509::PeeringDBSiteMapping>& peeringdb_site_mapping() const;
  // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // string title = 2 [json_name = "title", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_title() ;
  const std::string& title() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_title(Arg_&& arg, Args_... args);
  std::string* mutable_title();
  PROTOBUF_NODISCARD std::string* release_title();
  void set_allocated_title(std::string* value);

  private:
  const std::string& _internal_title() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_title(
      const std::string& value);
  std::string* _internal_mutable_title();

  public:
  // .kentik.site.v202509.PostalAddress postal_address = 6 [json_name = "postalAddress", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_postal_address() const;
  void clear_postal_address() ;
  const ::kentik::site::v202509::PostalAddress& postal_address() const;
  PROTOBUF_NODISCARD ::kentik::site::v202509::PostalAddress* release_postal_address();
  ::kentik::site::v202509::PostalAddress* mutable_postal_address();
  void set_allocated_postal_address(::kentik::site::v202509::PostalAddress* value);
  void unsafe_arena_set_allocated_postal_address(::kentik::site::v202509::PostalAddress* value);
  ::kentik::site::v202509::PostalAddress* unsafe_arena_release_postal_address();

  private:
  const ::kentik::site::v202509::PostalAddress& _internal_postal_address() const;
  ::kentik::site::v202509::PostalAddress* _internal_mutable_postal_address();

  public:
  // .kentik.site.v202509.SiteIpAddressClassification address_classification = 8 [json_name = "addressClassification", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_address_classification() const;
  void clear_address_classification() ;
  const ::kentik::site::v202509::SiteIpAddressClassification& address_classification() const;
  PROTOBUF_NODISCARD ::kentik::site::v202509::SiteIpAddressClassification* release_address_classification();
  ::kentik::site::v202509::SiteIpAddressClassification* mutable_address_classification();
  void set_allocated_address_classification(::kentik::site::v202509::SiteIpAddressClassification* value);
  void unsafe_arena_set_allocated_address_classification(::kentik::site::v202509::SiteIpAddressClassification* value);
  ::kentik::site::v202509::SiteIpAddressClassification* unsafe_arena_release_address_classification();

  private:
  const ::kentik::site::v202509::SiteIpAddressClassification& _internal_address_classification() const;
  ::kentik::site::v202509::SiteIpAddressClassification* _internal_mutable_address_classification();

  public:
  // .kentik.site.v202509.SiteMarket site_market = 10 [json_name = "siteMarket", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_site_market() const;
  void clear_site_market() ;
  const ::kentik::site::v202509::SiteMarket& site_market() const;
  PROTOBUF_NODISCARD ::kentik::site::v202509::SiteMarket* release_site_market();
  ::kentik::site::v202509::SiteMarket* mutable_site_market();
  void set_allocated_site_market(::kentik::site::v202509::SiteMarket* value);
  void unsafe_arena_set_allocated_site_market(::kentik::site::v202509::SiteMarket* value);
  ::kentik::site::v202509::SiteMarket* unsafe_arena_release_site_market();

  private:
  const ::kentik::site::v202509::SiteMarket& _internal_site_market() const;
  ::kentik::site::v202509::SiteMarket* _internal_mutable_site_market();

  public:
  // double lat = 4 [json_name = "lat", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_lat() ;
  double lat() const;
  void set_lat(double value);

  private:
  double _internal_lat() const;
  void _internal_set_lat(double value);

  public:
  // double lon = 5 [json_name = "lon", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_lon() ;
  double lon() const;
  void set_lon(double value);

  private:
  double _internal_lon() const;
  void _internal_set_lon(double value);

  public:
  // .kentik.site.v202509.SiteType type = 7 [json_name = "type", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_type() ;
  ::kentik::site::v202509::SiteType type() const;
  void set_type(::kentik::site::v202509::SiteType value);

  private:
  ::kentik::site::v202509::SiteType _internal_type() const;
  void _internal_set_type(::kentik::site::v202509::SiteType value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.site.v202509.Site)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 10, 5,
      48, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Site& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::kentik::site::v202509::LayerSet > architecture_;
    ::google::protobuf::RepeatedPtrField< ::kentik::site::v202509::PeeringDBSiteMapping > peeringdb_site_mapping_;
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::ArenaStringPtr title_;
    ::kentik::site::v202509::PostalAddress* postal_address_;
    ::kentik::site::v202509::SiteIpAddressClassification* address_classification_;
    ::kentik::site::v202509::SiteMarket* site_market_;
    double lat_;
    double lon_;
    int type_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fsite_2fv202509_2fsite_2eproto;
};
// -------------------------------------------------------------------

class ListSiteMarketsResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.site.v202509.ListSiteMarketsResponse) */ {
 public:
  inline ListSiteMarketsResponse() : ListSiteMarketsResponse(nullptr) {}
  ~ListSiteMarketsResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ListSiteMarketsResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ListSiteMarketsResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListSiteMarketsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListSiteMarketsResponse(const ListSiteMarketsResponse& from) : ListSiteMarketsResponse(nullptr, from) {}
  inline ListSiteMarketsResponse(ListSiteMarketsResponse&& from) noexcept
      : ListSiteMarketsResponse(nullptr, std::move(from)) {}
  inline ListSiteMarketsResponse& operator=(const ListSiteMarketsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListSiteMarketsResponse& operator=(ListSiteMarketsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListSiteMarketsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListSiteMarketsResponse* internal_default_instance() {
    return reinterpret_cast<const ListSiteMarketsResponse*>(
        &_ListSiteMarketsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 18;
  friend void swap(ListSiteMarketsResponse& a, ListSiteMarketsResponse& b) { a.Swap(&b); }
  inline void Swap(ListSiteMarketsResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListSiteMarketsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListSiteMarketsResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ListSiteMarketsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListSiteMarketsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListSiteMarketsResponse& from) { ListSiteMarketsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ListSiteMarketsResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.site.v202509.ListSiteMarketsResponse"; }

 protected:
  explicit ListSiteMarketsResponse(::google::protobuf::Arena* arena);
  ListSiteMarketsResponse(::google::protobuf::Arena* arena, const ListSiteMarketsResponse& from);
  ListSiteMarketsResponse(::google::protobuf::Arena* arena, ListSiteMarketsResponse&& from) noexcept
      : ListSiteMarketsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSiteMarketsFieldNumber = 1,
    kInvalidCountFieldNumber = 2,
  };
  // repeated .kentik.site.v202509.SiteMarket site_markets = 1 [json_name = "siteMarkets", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int site_markets_size() const;
  private:
  int _internal_site_markets_size() const;

  public:
  void clear_site_markets() ;
  ::kentik::site::v202509::SiteMarket* mutable_site_markets(int index);
  ::google::protobuf::RepeatedPtrField<::kentik::site::v202509::SiteMarket>* mutable_site_markets();

  private:
  const ::google::protobuf::RepeatedPtrField<::kentik::site::v202509::SiteMarket>& _internal_site_markets() const;
  ::google::protobuf::RepeatedPtrField<::kentik::site::v202509::SiteMarket>* _internal_mutable_site_markets();
  public:
  const ::kentik::site::v202509::SiteMarket& site_markets(int index) const;
  ::kentik::site::v202509::SiteMarket* add_site_markets();
  const ::google::protobuf::RepeatedPtrField<::kentik::site::v202509::SiteMarket>& site_markets() const;
  // uint32 invalid_count = 2 [json_name = "invalidCount", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_invalid_count() ;
  ::uint32_t invalid_count() const;
  void set_invalid_count(::uint32_t value);

  private:
  ::uint32_t _internal_invalid_count() const;
  void _internal_set_invalid_count(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.site.v202509.ListSiteMarketsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListSiteMarketsResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::kentik::site::v202509::SiteMarket > site_markets_;
    ::uint32_t invalid_count_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fsite_2fv202509_2fsite_2eproto;
};
// -------------------------------------------------------------------

class GetSiteMarketResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.site.v202509.GetSiteMarketResponse) */ {
 public:
  inline GetSiteMarketResponse() : GetSiteMarketResponse(nullptr) {}
  ~GetSiteMarketResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetSiteMarketResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetSiteMarketResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetSiteMarketResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetSiteMarketResponse(const GetSiteMarketResponse& from) : GetSiteMarketResponse(nullptr, from) {}
  inline GetSiteMarketResponse(GetSiteMarketResponse&& from) noexcept
      : GetSiteMarketResponse(nullptr, std::move(from)) {}
  inline GetSiteMarketResponse& operator=(const GetSiteMarketResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetSiteMarketResponse& operator=(GetSiteMarketResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetSiteMarketResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetSiteMarketResponse* internal_default_instance() {
    return reinterpret_cast<const GetSiteMarketResponse*>(
        &_GetSiteMarketResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 20;
  friend void swap(GetSiteMarketResponse& a, GetSiteMarketResponse& b) { a.Swap(&b); }
  inline void Swap(GetSiteMarketResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetSiteMarketResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetSiteMarketResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetSiteMarketResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetSiteMarketResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetSiteMarketResponse& from) { GetSiteMarketResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetSiteMarketResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.site.v202509.GetSiteMarketResponse"; }

 protected:
  explicit GetSiteMarketResponse(::google::protobuf::Arena* arena);
  GetSiteMarketResponse(::google::protobuf::Arena* arena, const GetSiteMarketResponse& from);
  GetSiteMarketResponse(::google::protobuf::Arena* arena, GetSiteMarketResponse&& from) noexcept
      : GetSiteMarketResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSiteMarketFieldNumber = 1,
  };
  // .kentik.site.v202509.SiteMarket site_market = 1 [json_name = "siteMarket", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_site_market() const;
  void clear_site_market() ;
  const ::kentik::site::v202509::SiteMarket& site_market() const;
  PROTOBUF_NODISCARD ::kentik::site::v202509::SiteMarket* release_site_market();
  ::kentik::site::v202509::SiteMarket* mutable_site_market();
  void set_allocated_site_market(::kentik::site::v202509::SiteMarket* value);
  void unsafe_arena_set_allocated_site_market(::kentik::site::v202509::SiteMarket* value);
  ::kentik::site::v202509::SiteMarket* unsafe_arena_release_site_market();

  private:
  const ::kentik::site::v202509::SiteMarket& _internal_site_market() const;
  ::kentik::site::v202509::SiteMarket* _internal_mutable_site_market();

  public:
  // @@protoc_insertion_point(class_scope:kentik.site.v202509.GetSiteMarketResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetSiteMarketResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::kentik::site::v202509::SiteMarket* site_market_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fsite_2fv202509_2fsite_2eproto;
};
// -------------------------------------------------------------------

class CreateSiteMarketResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.site.v202509.CreateSiteMarketResponse) */ {
 public:
  inline CreateSiteMarketResponse() : CreateSiteMarketResponse(nullptr) {}
  ~CreateSiteMarketResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CreateSiteMarketResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CreateSiteMarketResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateSiteMarketResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateSiteMarketResponse(const CreateSiteMarketResponse& from) : CreateSiteMarketResponse(nullptr, from) {}
  inline CreateSiteMarketResponse(CreateSiteMarketResponse&& from) noexcept
      : CreateSiteMarketResponse(nullptr, std::move(from)) {}
  inline CreateSiteMarketResponse& operator=(const CreateSiteMarketResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateSiteMarketResponse& operator=(CreateSiteMarketResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateSiteMarketResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateSiteMarketResponse* internal_default_instance() {
    return reinterpret_cast<const CreateSiteMarketResponse*>(
        &_CreateSiteMarketResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 22;
  friend void swap(CreateSiteMarketResponse& a, CreateSiteMarketResponse& b) { a.Swap(&b); }
  inline void Swap(CreateSiteMarketResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateSiteMarketResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateSiteMarketResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CreateSiteMarketResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateSiteMarketResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateSiteMarketResponse& from) { CreateSiteMarketResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CreateSiteMarketResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.site.v202509.CreateSiteMarketResponse"; }

 protected:
  explicit CreateSiteMarketResponse(::google::protobuf::Arena* arena);
  CreateSiteMarketResponse(::google::protobuf::Arena* arena, const CreateSiteMarketResponse& from);
  CreateSiteMarketResponse(::google::protobuf::Arena* arena, CreateSiteMarketResponse&& from) noexcept
      : CreateSiteMarketResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSiteMarketFieldNumber = 1,
  };
  // .kentik.site.v202509.SiteMarket site_market = 1 [json_name = "siteMarket", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_site_market() const;
  void clear_site_market() ;
  const ::kentik::site::v202509::SiteMarket& site_market() const;
  PROTOBUF_NODISCARD ::kentik::site::v202509::SiteMarket* release_site_market();
  ::kentik::site::v202509::SiteMarket* mutable_site_market();
  void set_allocated_site_market(::kentik::site::v202509::SiteMarket* value);
  void unsafe_arena_set_allocated_site_market(::kentik::site::v202509::SiteMarket* value);
  ::kentik::site::v202509::SiteMarket* unsafe_arena_release_site_market();

  private:
  const ::kentik::site::v202509::SiteMarket& _internal_site_market() const;
  ::kentik::site::v202509::SiteMarket* _internal_mutable_site_market();

  public:
  // @@protoc_insertion_point(class_scope:kentik.site.v202509.CreateSiteMarketResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateSiteMarketResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::kentik::site::v202509::SiteMarket* site_market_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fsite_2fv202509_2fsite_2eproto;
};
// -------------------------------------------------------------------

class CreateSiteMarketRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.site.v202509.CreateSiteMarketRequest) */ {
 public:
  inline CreateSiteMarketRequest() : CreateSiteMarketRequest(nullptr) {}
  ~CreateSiteMarketRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CreateSiteMarketRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CreateSiteMarketRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateSiteMarketRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateSiteMarketRequest(const CreateSiteMarketRequest& from) : CreateSiteMarketRequest(nullptr, from) {}
  inline CreateSiteMarketRequest(CreateSiteMarketRequest&& from) noexcept
      : CreateSiteMarketRequest(nullptr, std::move(from)) {}
  inline CreateSiteMarketRequest& operator=(const CreateSiteMarketRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateSiteMarketRequest& operator=(CreateSiteMarketRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateSiteMarketRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateSiteMarketRequest* internal_default_instance() {
    return reinterpret_cast<const CreateSiteMarketRequest*>(
        &_CreateSiteMarketRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 21;
  friend void swap(CreateSiteMarketRequest& a, CreateSiteMarketRequest& b) { a.Swap(&b); }
  inline void Swap(CreateSiteMarketRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateSiteMarketRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateSiteMarketRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CreateSiteMarketRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateSiteMarketRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateSiteMarketRequest& from) { CreateSiteMarketRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CreateSiteMarketRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.site.v202509.CreateSiteMarketRequest"; }

 protected:
  explicit CreateSiteMarketRequest(::google::protobuf::Arena* arena);
  CreateSiteMarketRequest(::google::protobuf::Arena* arena, const CreateSiteMarketRequest& from);
  CreateSiteMarketRequest(::google::protobuf::Arena* arena, CreateSiteMarketRequest&& from) noexcept
      : CreateSiteMarketRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSiteMarketFieldNumber = 1,
  };
  // .kentik.site.v202509.SiteMarket site_market = 1 [json_name = "siteMarket", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_site_market() const;
  void clear_site_market() ;
  const ::kentik::site::v202509::SiteMarket& site_market() const;
  PROTOBUF_NODISCARD ::kentik::site::v202509::SiteMarket* release_site_market();
  ::kentik::site::v202509::SiteMarket* mutable_site_market();
  void set_allocated_site_market(::kentik::site::v202509::SiteMarket* value);
  void unsafe_arena_set_allocated_site_market(::kentik::site::v202509::SiteMarket* value);
  ::kentik::site::v202509::SiteMarket* unsafe_arena_release_site_market();

  private:
  const ::kentik::site::v202509::SiteMarket& _internal_site_market() const;
  ::kentik::site::v202509::SiteMarket* _internal_mutable_site_market();

  public:
  // @@protoc_insertion_point(class_scope:kentik.site.v202509.CreateSiteMarketRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateSiteMarketRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::kentik::site::v202509::SiteMarket* site_market_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fsite_2fv202509_2fsite_2eproto;
};
// -------------------------------------------------------------------

class UpdateSiteResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.site.v202509.UpdateSiteResponse) */ {
 public:
  inline UpdateSiteResponse() : UpdateSiteResponse(nullptr) {}
  ~UpdateSiteResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UpdateSiteResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UpdateSiteResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateSiteResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdateSiteResponse(const UpdateSiteResponse& from) : UpdateSiteResponse(nullptr, from) {}
  inline UpdateSiteResponse(UpdateSiteResponse&& from) noexcept
      : UpdateSiteResponse(nullptr, std::move(from)) {}
  inline UpdateSiteResponse& operator=(const UpdateSiteResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateSiteResponse& operator=(UpdateSiteResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateSiteResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateSiteResponse* internal_default_instance() {
    return reinterpret_cast<const UpdateSiteResponse*>(
        &_UpdateSiteResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 13;
  friend void swap(UpdateSiteResponse& a, UpdateSiteResponse& b) { a.Swap(&b); }
  inline void Swap(UpdateSiteResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateSiteResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateSiteResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<UpdateSiteResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateSiteResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateSiteResponse& from) { UpdateSiteResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(UpdateSiteResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.site.v202509.UpdateSiteResponse"; }

 protected:
  explicit UpdateSiteResponse(::google::protobuf::Arena* arena);
  UpdateSiteResponse(::google::protobuf::Arena* arena, const UpdateSiteResponse& from);
  UpdateSiteResponse(::google::protobuf::Arena* arena, UpdateSiteResponse&& from) noexcept
      : UpdateSiteResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSiteFieldNumber = 1,
  };
  // .kentik.site.v202509.Site site = 1 [json_name = "site", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_site() const;
  void clear_site() ;
  const ::kentik::site::v202509::Site& site() const;
  PROTOBUF_NODISCARD ::kentik::site::v202509::Site* release_site();
  ::kentik::site::v202509::Site* mutable_site();
  void set_allocated_site(::kentik::site::v202509::Site* value);
  void unsafe_arena_set_allocated_site(::kentik::site::v202509::Site* value);
  ::kentik::site::v202509::Site* unsafe_arena_release_site();

  private:
  const ::kentik::site::v202509::Site& _internal_site() const;
  ::kentik::site::v202509::Site* _internal_mutable_site();

  public:
  // @@protoc_insertion_point(class_scope:kentik.site.v202509.UpdateSiteResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdateSiteResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::kentik::site::v202509::Site* site_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fsite_2fv202509_2fsite_2eproto;
};
// -------------------------------------------------------------------

class UpdateSiteRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.site.v202509.UpdateSiteRequest) */ {
 public:
  inline UpdateSiteRequest() : UpdateSiteRequest(nullptr) {}
  ~UpdateSiteRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UpdateSiteRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UpdateSiteRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateSiteRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdateSiteRequest(const UpdateSiteRequest& from) : UpdateSiteRequest(nullptr, from) {}
  inline UpdateSiteRequest(UpdateSiteRequest&& from) noexcept
      : UpdateSiteRequest(nullptr, std::move(from)) {}
  inline UpdateSiteRequest& operator=(const UpdateSiteRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateSiteRequest& operator=(UpdateSiteRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateSiteRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateSiteRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateSiteRequest*>(
        &_UpdateSiteRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(UpdateSiteRequest& a, UpdateSiteRequest& b) { a.Swap(&b); }
  inline void Swap(UpdateSiteRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateSiteRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateSiteRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<UpdateSiteRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateSiteRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateSiteRequest& from) { UpdateSiteRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(UpdateSiteRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.site.v202509.UpdateSiteRequest"; }

 protected:
  explicit UpdateSiteRequest(::google::protobuf::Arena* arena);
  UpdateSiteRequest(::google::protobuf::Arena* arena, const UpdateSiteRequest& from);
  UpdateSiteRequest(::google::protobuf::Arena* arena, UpdateSiteRequest&& from) noexcept
      : UpdateSiteRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSiteFieldNumber = 1,
  };
  // .kentik.site.v202509.Site site = 1 [json_name = "site", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_site() const;
  void clear_site() ;
  const ::kentik::site::v202509::Site& site() const;
  PROTOBUF_NODISCARD ::kentik::site::v202509::Site* release_site();
  ::kentik::site::v202509::Site* mutable_site();
  void set_allocated_site(::kentik::site::v202509::Site* value);
  void unsafe_arena_set_allocated_site(::kentik::site::v202509::Site* value);
  ::kentik::site::v202509::Site* unsafe_arena_release_site();

  private:
  const ::kentik::site::v202509::Site& _internal_site() const;
  ::kentik::site::v202509::Site* _internal_mutable_site();

  public:
  // @@protoc_insertion_point(class_scope:kentik.site.v202509.UpdateSiteRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdateSiteRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::kentik::site::v202509::Site* site_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fsite_2fv202509_2fsite_2eproto;
};
// -------------------------------------------------------------------

class ListSitesResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.site.v202509.ListSitesResponse) */ {
 public:
  inline ListSitesResponse() : ListSitesResponse(nullptr) {}
  ~ListSitesResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ListSitesResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ListSitesResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListSitesResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListSitesResponse(const ListSitesResponse& from) : ListSitesResponse(nullptr, from) {}
  inline ListSitesResponse(ListSitesResponse&& from) noexcept
      : ListSitesResponse(nullptr, std::move(from)) {}
  inline ListSitesResponse& operator=(const ListSitesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListSitesResponse& operator=(ListSitesResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListSitesResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListSitesResponse* internal_default_instance() {
    return reinterpret_cast<const ListSitesResponse*>(
        &_ListSitesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(ListSitesResponse& a, ListSitesResponse& b) { a.Swap(&b); }
  inline void Swap(ListSitesResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListSitesResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListSitesResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ListSitesResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListSitesResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListSitesResponse& from) { ListSitesResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ListSitesResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.site.v202509.ListSitesResponse"; }

 protected:
  explicit ListSitesResponse(::google::protobuf::Arena* arena);
  ListSitesResponse(::google::protobuf::Arena* arena, const ListSitesResponse& from);
  ListSitesResponse(::google::protobuf::Arena* arena, ListSitesResponse&& from) noexcept
      : ListSitesResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSitesFieldNumber = 1,
    kInvalidCountFieldNumber = 2,
  };
  // repeated .kentik.site.v202509.Site sites = 1 [json_name = "sites", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int sites_size() const;
  private:
  int _internal_sites_size() const;

  public:
  void clear_sites() ;
  ::kentik::site::v202509::Site* mutable_sites(int index);
  ::google::protobuf::RepeatedPtrField<::kentik::site::v202509::Site>* mutable_sites();

  private:
  const ::google::protobuf::RepeatedPtrField<::kentik::site::v202509::Site>& _internal_sites() const;
  ::google::protobuf::RepeatedPtrField<::kentik::site::v202509::Site>* _internal_mutable_sites();
  public:
  const ::kentik::site::v202509::Site& sites(int index) const;
  ::kentik::site::v202509::Site* add_sites();
  const ::google::protobuf::RepeatedPtrField<::kentik::site::v202509::Site>& sites() const;
  // uint32 invalid_count = 2 [json_name = "invalidCount", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_invalid_count() ;
  ::uint32_t invalid_count() const;
  void set_invalid_count(::uint32_t value);

  private:
  ::uint32_t _internal_invalid_count() const;
  void _internal_set_invalid_count(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.site.v202509.ListSitesResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListSitesResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::kentik::site::v202509::Site > sites_;
    ::uint32_t invalid_count_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fsite_2fv202509_2fsite_2eproto;
};
// -------------------------------------------------------------------

class GetSiteResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.site.v202509.GetSiteResponse) */ {
 public:
  inline GetSiteResponse() : GetSiteResponse(nullptr) {}
  ~GetSiteResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetSiteResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetSiteResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetSiteResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetSiteResponse(const GetSiteResponse& from) : GetSiteResponse(nullptr, from) {}
  inline GetSiteResponse(GetSiteResponse&& from) noexcept
      : GetSiteResponse(nullptr, std::move(from)) {}
  inline GetSiteResponse& operator=(const GetSiteResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetSiteResponse& operator=(GetSiteResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetSiteResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetSiteResponse* internal_default_instance() {
    return reinterpret_cast<const GetSiteResponse*>(
        &_GetSiteResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(GetSiteResponse& a, GetSiteResponse& b) { a.Swap(&b); }
  inline void Swap(GetSiteResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetSiteResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetSiteResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetSiteResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetSiteResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetSiteResponse& from) { GetSiteResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetSiteResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.site.v202509.GetSiteResponse"; }

 protected:
  explicit GetSiteResponse(::google::protobuf::Arena* arena);
  GetSiteResponse(::google::protobuf::Arena* arena, const GetSiteResponse& from);
  GetSiteResponse(::google::protobuf::Arena* arena, GetSiteResponse&& from) noexcept
      : GetSiteResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSiteFieldNumber = 1,
  };
  // .kentik.site.v202509.Site site = 1 [json_name = "site", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_site() const;
  void clear_site() ;
  const ::kentik::site::v202509::Site& site() const;
  PROTOBUF_NODISCARD ::kentik::site::v202509::Site* release_site();
  ::kentik::site::v202509::Site* mutable_site();
  void set_allocated_site(::kentik::site::v202509::Site* value);
  void unsafe_arena_set_allocated_site(::kentik::site::v202509::Site* value);
  ::kentik::site::v202509::Site* unsafe_arena_release_site();

  private:
  const ::kentik::site::v202509::Site& _internal_site() const;
  ::kentik::site::v202509::Site* _internal_mutable_site();

  public:
  // @@protoc_insertion_point(class_scope:kentik.site.v202509.GetSiteResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetSiteResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::kentik::site::v202509::Site* site_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fsite_2fv202509_2fsite_2eproto;
};
// -------------------------------------------------------------------

class CreateSiteResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.site.v202509.CreateSiteResponse) */ {
 public:
  inline CreateSiteResponse() : CreateSiteResponse(nullptr) {}
  ~CreateSiteResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CreateSiteResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CreateSiteResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateSiteResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateSiteResponse(const CreateSiteResponse& from) : CreateSiteResponse(nullptr, from) {}
  inline CreateSiteResponse(CreateSiteResponse&& from) noexcept
      : CreateSiteResponse(nullptr, std::move(from)) {}
  inline CreateSiteResponse& operator=(const CreateSiteResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateSiteResponse& operator=(CreateSiteResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateSiteResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateSiteResponse* internal_default_instance() {
    return reinterpret_cast<const CreateSiteResponse*>(
        &_CreateSiteResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(CreateSiteResponse& a, CreateSiteResponse& b) { a.Swap(&b); }
  inline void Swap(CreateSiteResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateSiteResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateSiteResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CreateSiteResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateSiteResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateSiteResponse& from) { CreateSiteResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CreateSiteResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.site.v202509.CreateSiteResponse"; }

 protected:
  explicit CreateSiteResponse(::google::protobuf::Arena* arena);
  CreateSiteResponse(::google::protobuf::Arena* arena, const CreateSiteResponse& from);
  CreateSiteResponse(::google::protobuf::Arena* arena, CreateSiteResponse&& from) noexcept
      : CreateSiteResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSiteFieldNumber = 1,
  };
  // .kentik.site.v202509.Site site = 1 [json_name = "site", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_site() const;
  void clear_site() ;
  const ::kentik::site::v202509::Site& site() const;
  PROTOBUF_NODISCARD ::kentik::site::v202509::Site* release_site();
  ::kentik::site::v202509::Site* mutable_site();
  void set_allocated_site(::kentik::site::v202509::Site* value);
  void unsafe_arena_set_allocated_site(::kentik::site::v202509::Site* value);
  ::kentik::site::v202509::Site* unsafe_arena_release_site();

  private:
  const ::kentik::site::v202509::Site& _internal_site() const;
  ::kentik::site::v202509::Site* _internal_mutable_site();

  public:
  // @@protoc_insertion_point(class_scope:kentik.site.v202509.CreateSiteResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateSiteResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::kentik::site::v202509::Site* site_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fsite_2fv202509_2fsite_2eproto;
};
// -------------------------------------------------------------------

class CreateSiteRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.site.v202509.CreateSiteRequest) */ {
 public:
  inline CreateSiteRequest() : CreateSiteRequest(nullptr) {}
  ~CreateSiteRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CreateSiteRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CreateSiteRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateSiteRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateSiteRequest(const CreateSiteRequest& from) : CreateSiteRequest(nullptr, from) {}
  inline CreateSiteRequest(CreateSiteRequest&& from) noexcept
      : CreateSiteRequest(nullptr, std::move(from)) {}
  inline CreateSiteRequest& operator=(const CreateSiteRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateSiteRequest& operator=(CreateSiteRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateSiteRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateSiteRequest* internal_default_instance() {
    return reinterpret_cast<const CreateSiteRequest*>(
        &_CreateSiteRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(CreateSiteRequest& a, CreateSiteRequest& b) { a.Swap(&b); }
  inline void Swap(CreateSiteRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateSiteRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateSiteRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CreateSiteRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateSiteRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateSiteRequest& from) { CreateSiteRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CreateSiteRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.site.v202509.CreateSiteRequest"; }

 protected:
  explicit CreateSiteRequest(::google::protobuf::Arena* arena);
  CreateSiteRequest(::google::protobuf::Arena* arena, const CreateSiteRequest& from);
  CreateSiteRequest(::google::protobuf::Arena* arena, CreateSiteRequest&& from) noexcept
      : CreateSiteRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSiteFieldNumber = 1,
  };
  // .kentik.site.v202509.Site site = 1 [json_name = "site", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_site() const;
  void clear_site() ;
  const ::kentik::site::v202509::Site& site() const;
  PROTOBUF_NODISCARD ::kentik::site::v202509::Site* release_site();
  ::kentik::site::v202509::Site* mutable_site();
  void set_allocated_site(::kentik::site::v202509::Site* value);
  void unsafe_arena_set_allocated_site(::kentik::site::v202509::Site* value);
  ::kentik::site::v202509::Site* unsafe_arena_release_site();

  private:
  const ::kentik::site::v202509::Site& _internal_site() const;
  ::kentik::site::v202509::Site* _internal_mutable_site();

  public:
  // @@protoc_insertion_point(class_scope:kentik.site.v202509.CreateSiteRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateSiteRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::kentik::site::v202509::Site* site_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fsite_2fv202509_2fsite_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// SiteIpAddressClassification

// repeated string infrastructure_networks = 1 [json_name = "infrastructureNetworks", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int SiteIpAddressClassification::_internal_infrastructure_networks_size() const {
  return _internal_infrastructure_networks().size();
}
inline int SiteIpAddressClassification::infrastructure_networks_size() const {
  return _internal_infrastructure_networks_size();
}
inline void SiteIpAddressClassification::clear_infrastructure_networks() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.infrastructure_networks_.Clear();
}
inline std::string* SiteIpAddressClassification::add_infrastructure_networks() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_infrastructure_networks()->Add();
  // @@protoc_insertion_point(field_add_mutable:kentik.site.v202509.SiteIpAddressClassification.infrastructure_networks)
  return _s;
}
inline const std::string& SiteIpAddressClassification::infrastructure_networks(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.site.v202509.SiteIpAddressClassification.infrastructure_networks)
  return _internal_infrastructure_networks().Get(index);
}
inline std::string* SiteIpAddressClassification::mutable_infrastructure_networks(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.site.v202509.SiteIpAddressClassification.infrastructure_networks)
  return _internal_mutable_infrastructure_networks()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void SiteIpAddressClassification::set_infrastructure_networks(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_infrastructure_networks()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:kentik.site.v202509.SiteIpAddressClassification.infrastructure_networks)
}
template <typename Arg_, typename... Args_>
inline void SiteIpAddressClassification::add_infrastructure_networks(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_infrastructure_networks(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:kentik.site.v202509.SiteIpAddressClassification.infrastructure_networks)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
SiteIpAddressClassification::infrastructure_networks() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.site.v202509.SiteIpAddressClassification.infrastructure_networks)
  return _internal_infrastructure_networks();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
SiteIpAddressClassification::mutable_infrastructure_networks() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.site.v202509.SiteIpAddressClassification.infrastructure_networks)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_infrastructure_networks();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
SiteIpAddressClassification::_internal_infrastructure_networks() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.infrastructure_networks_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
SiteIpAddressClassification::_internal_mutable_infrastructure_networks() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.infrastructure_networks_;
}

// repeated string user_access_networks = 2 [json_name = "userAccessNetworks", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int SiteIpAddressClassification::_internal_user_access_networks_size() const {
  return _internal_user_access_networks().size();
}
inline int SiteIpAddressClassification::user_access_networks_size() const {
  return _internal_user_access_networks_size();
}
inline void SiteIpAddressClassification::clear_user_access_networks() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.user_access_networks_.Clear();
}
inline std::string* SiteIpAddressClassification::add_user_access_networks() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_user_access_networks()->Add();
  // @@protoc_insertion_point(field_add_mutable:kentik.site.v202509.SiteIpAddressClassification.user_access_networks)
  return _s;
}
inline const std::string& SiteIpAddressClassification::user_access_networks(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.site.v202509.SiteIpAddressClassification.user_access_networks)
  return _internal_user_access_networks().Get(index);
}
inline std::string* SiteIpAddressClassification::mutable_user_access_networks(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.site.v202509.SiteIpAddressClassification.user_access_networks)
  return _internal_mutable_user_access_networks()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void SiteIpAddressClassification::set_user_access_networks(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_user_access_networks()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:kentik.site.v202509.SiteIpAddressClassification.user_access_networks)
}
template <typename Arg_, typename... Args_>
inline void SiteIpAddressClassification::add_user_access_networks(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_user_access_networks(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:kentik.site.v202509.SiteIpAddressClassification.user_access_networks)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
SiteIpAddressClassification::user_access_networks() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.site.v202509.SiteIpAddressClassification.user_access_networks)
  return _internal_user_access_networks();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
SiteIpAddressClassification::mutable_user_access_networks() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.site.v202509.SiteIpAddressClassification.user_access_networks)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_user_access_networks();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
SiteIpAddressClassification::_internal_user_access_networks() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.user_access_networks_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
SiteIpAddressClassification::_internal_mutable_user_access_networks() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.user_access_networks_;
}

// repeated string other_networks = 3 [json_name = "otherNetworks", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int SiteIpAddressClassification::_internal_other_networks_size() const {
  return _internal_other_networks().size();
}
inline int SiteIpAddressClassification::other_networks_size() const {
  return _internal_other_networks_size();
}
inline void SiteIpAddressClassification::clear_other_networks() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.other_networks_.Clear();
}
inline std::string* SiteIpAddressClassification::add_other_networks() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_other_networks()->Add();
  // @@protoc_insertion_point(field_add_mutable:kentik.site.v202509.SiteIpAddressClassification.other_networks)
  return _s;
}
inline const std::string& SiteIpAddressClassification::other_networks(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.site.v202509.SiteIpAddressClassification.other_networks)
  return _internal_other_networks().Get(index);
}
inline std::string* SiteIpAddressClassification::mutable_other_networks(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.site.v202509.SiteIpAddressClassification.other_networks)
  return _internal_mutable_other_networks()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void SiteIpAddressClassification::set_other_networks(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_other_networks()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:kentik.site.v202509.SiteIpAddressClassification.other_networks)
}
template <typename Arg_, typename... Args_>
inline void SiteIpAddressClassification::add_other_networks(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_other_networks(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:kentik.site.v202509.SiteIpAddressClassification.other_networks)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
SiteIpAddressClassification::other_networks() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.site.v202509.SiteIpAddressClassification.other_networks)
  return _internal_other_networks();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
SiteIpAddressClassification::mutable_other_networks() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.site.v202509.SiteIpAddressClassification.other_networks)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_other_networks();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
SiteIpAddressClassification::_internal_other_networks() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.other_networks_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
SiteIpAddressClassification::_internal_mutable_other_networks() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.other_networks_;
}

// -------------------------------------------------------------------

// Layer

// string name = 1 [json_name = "name", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Layer::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& Layer::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.site.v202509.Layer.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Layer::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.site.v202509.Layer.name)
}
inline std::string* Layer::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:kentik.site.v202509.Layer.name)
  return _s;
}
inline const std::string& Layer::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void Layer::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* Layer::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* Layer::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.site.v202509.Layer.name)
  return _impl_.name_.Release();
}
inline void Layer::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.site.v202509.Layer.name)
}

// repeated string device_ids = 2 [json_name = "deviceIds", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int Layer::_internal_device_ids_size() const {
  return _internal_device_ids().size();
}
inline int Layer::device_ids_size() const {
  return _internal_device_ids_size();
}
inline void Layer::clear_device_ids() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_ids_.Clear();
}
inline std::string* Layer::add_device_ids() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_device_ids()->Add();
  // @@protoc_insertion_point(field_add_mutable:kentik.site.v202509.Layer.device_ids)
  return _s;
}
inline const std::string& Layer::device_ids(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.site.v202509.Layer.device_ids)
  return _internal_device_ids().Get(index);
}
inline std::string* Layer::mutable_device_ids(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.site.v202509.Layer.device_ids)
  return _internal_mutable_device_ids()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void Layer::set_device_ids(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_device_ids()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:kentik.site.v202509.Layer.device_ids)
}
template <typename Arg_, typename... Args_>
inline void Layer::add_device_ids(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_device_ids(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:kentik.site.v202509.Layer.device_ids)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Layer::device_ids() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.site.v202509.Layer.device_ids)
  return _internal_device_ids();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
Layer::mutable_device_ids() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.site.v202509.Layer.device_ids)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_device_ids();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Layer::_internal_device_ids() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.device_ids_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
Layer::_internal_mutable_device_ids() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.device_ids_;
}

// -------------------------------------------------------------------

// LayerSet

// repeated .kentik.site.v202509.Layer layers = 1 [json_name = "layers", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int LayerSet::_internal_layers_size() const {
  return _internal_layers().size();
}
inline int LayerSet::layers_size() const {
  return _internal_layers_size();
}
inline void LayerSet::clear_layers() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.layers_.Clear();
}
inline ::kentik::site::v202509::Layer* LayerSet::mutable_layers(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.site.v202509.LayerSet.layers)
  return _internal_mutable_layers()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::kentik::site::v202509::Layer>* LayerSet::mutable_layers()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.site.v202509.LayerSet.layers)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_layers();
}
inline const ::kentik::site::v202509::Layer& LayerSet::layers(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.site.v202509.LayerSet.layers)
  return _internal_layers().Get(index);
}
inline ::kentik::site::v202509::Layer* LayerSet::add_layers() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::kentik::site::v202509::Layer* _add = _internal_mutable_layers()->Add();
  // @@protoc_insertion_point(field_add:kentik.site.v202509.LayerSet.layers)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::site::v202509::Layer>& LayerSet::layers() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.site.v202509.LayerSet.layers)
  return _internal_layers();
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::site::v202509::Layer>&
LayerSet::_internal_layers() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.layers_;
}
inline ::google::protobuf::RepeatedPtrField<::kentik::site::v202509::Layer>*
LayerSet::_internal_mutable_layers() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.layers_;
}

// -------------------------------------------------------------------

// PostalAddress

// string address = 1 [json_name = "address", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void PostalAddress::clear_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.ClearToEmpty();
}
inline const std::string& PostalAddress::address() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.site.v202509.PostalAddress.address)
  return _internal_address();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PostalAddress::set_address(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.site.v202509.PostalAddress.address)
}
inline std::string* PostalAddress::mutable_address() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_address();
  // @@protoc_insertion_point(field_mutable:kentik.site.v202509.PostalAddress.address)
  return _s;
}
inline const std::string& PostalAddress::_internal_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.address_.Get();
}
inline void PostalAddress::_internal_set_address(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.Set(value, GetArena());
}
inline std::string* PostalAddress::_internal_mutable_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.address_.Mutable( GetArena());
}
inline std::string* PostalAddress::release_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.site.v202509.PostalAddress.address)
  return _impl_.address_.Release();
}
inline void PostalAddress::set_allocated_address(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.address_.IsDefault()) {
    _impl_.address_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.site.v202509.PostalAddress.address)
}

// string city = 2 [json_name = "city", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void PostalAddress::clear_city() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.city_.ClearToEmpty();
}
inline const std::string& PostalAddress::city() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.site.v202509.PostalAddress.city)
  return _internal_city();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PostalAddress::set_city(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.city_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.site.v202509.PostalAddress.city)
}
inline std::string* PostalAddress::mutable_city() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_city();
  // @@protoc_insertion_point(field_mutable:kentik.site.v202509.PostalAddress.city)
  return _s;
}
inline const std::string& PostalAddress::_internal_city() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.city_.Get();
}
inline void PostalAddress::_internal_set_city(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.city_.Set(value, GetArena());
}
inline std::string* PostalAddress::_internal_mutable_city() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.city_.Mutable( GetArena());
}
inline std::string* PostalAddress::release_city() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.site.v202509.PostalAddress.city)
  return _impl_.city_.Release();
}
inline void PostalAddress::set_allocated_city(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.city_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.city_.IsDefault()) {
    _impl_.city_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.site.v202509.PostalAddress.city)
}

// string region = 3 [json_name = "region", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void PostalAddress::clear_region() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.region_.ClearToEmpty();
}
inline const std::string& PostalAddress::region() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.site.v202509.PostalAddress.region)
  return _internal_region();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PostalAddress::set_region(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.region_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.site.v202509.PostalAddress.region)
}
inline std::string* PostalAddress::mutable_region() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_region();
  // @@protoc_insertion_point(field_mutable:kentik.site.v202509.PostalAddress.region)
  return _s;
}
inline const std::string& PostalAddress::_internal_region() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.region_.Get();
}
inline void PostalAddress::_internal_set_region(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.region_.Set(value, GetArena());
}
inline std::string* PostalAddress::_internal_mutable_region() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.region_.Mutable( GetArena());
}
inline std::string* PostalAddress::release_region() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.site.v202509.PostalAddress.region)
  return _impl_.region_.Release();
}
inline void PostalAddress::set_allocated_region(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.region_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.region_.IsDefault()) {
    _impl_.region_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.site.v202509.PostalAddress.region)
}

// string postal_code = 4 [json_name = "postalCode", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void PostalAddress::clear_postal_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.postal_code_.ClearToEmpty();
}
inline const std::string& PostalAddress::postal_code() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.site.v202509.PostalAddress.postal_code)
  return _internal_postal_code();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PostalAddress::set_postal_code(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.postal_code_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.site.v202509.PostalAddress.postal_code)
}
inline std::string* PostalAddress::mutable_postal_code() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_postal_code();
  // @@protoc_insertion_point(field_mutable:kentik.site.v202509.PostalAddress.postal_code)
  return _s;
}
inline const std::string& PostalAddress::_internal_postal_code() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.postal_code_.Get();
}
inline void PostalAddress::_internal_set_postal_code(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.postal_code_.Set(value, GetArena());
}
inline std::string* PostalAddress::_internal_mutable_postal_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.postal_code_.Mutable( GetArena());
}
inline std::string* PostalAddress::release_postal_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.site.v202509.PostalAddress.postal_code)
  return _impl_.postal_code_.Release();
}
inline void PostalAddress::set_allocated_postal_code(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.postal_code_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.postal_code_.IsDefault()) {
    _impl_.postal_code_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.site.v202509.PostalAddress.postal_code)
}

// string country = 5 [json_name = "country", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void PostalAddress::clear_country() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.country_.ClearToEmpty();
}
inline const std::string& PostalAddress::country() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.site.v202509.PostalAddress.country)
  return _internal_country();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PostalAddress::set_country(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.country_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.site.v202509.PostalAddress.country)
}
inline std::string* PostalAddress::mutable_country() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_country();
  // @@protoc_insertion_point(field_mutable:kentik.site.v202509.PostalAddress.country)
  return _s;
}
inline const std::string& PostalAddress::_internal_country() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.country_.Get();
}
inline void PostalAddress::_internal_set_country(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.country_.Set(value, GetArena());
}
inline std::string* PostalAddress::_internal_mutable_country() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.country_.Mutable( GetArena());
}
inline std::string* PostalAddress::release_country() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.site.v202509.PostalAddress.country)
  return _impl_.country_.Release();
}
inline void PostalAddress::set_allocated_country(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.country_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.country_.IsDefault()) {
    _impl_.country_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.site.v202509.PostalAddress.country)
}

// -------------------------------------------------------------------

// PeeringDBSiteMapping

// string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void PeeringDBSiteMapping::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& PeeringDBSiteMapping::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.site.v202509.PeeringDBSiteMapping.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PeeringDBSiteMapping::set_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.site.v202509.PeeringDBSiteMapping.id)
}
inline std::string* PeeringDBSiteMapping::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:kentik.site.v202509.PeeringDBSiteMapping.id)
  return _s;
}
inline const std::string& PeeringDBSiteMapping::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void PeeringDBSiteMapping::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(value, GetArena());
}
inline std::string* PeeringDBSiteMapping::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* PeeringDBSiteMapping::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.site.v202509.PeeringDBSiteMapping.id)
  return _impl_.id_.Release();
}
inline void PeeringDBSiteMapping::set_allocated_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.id_.IsDefault()) {
    _impl_.id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.site.v202509.PeeringDBSiteMapping.id)
}

// string site_id = 2 [json_name = "siteId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void PeeringDBSiteMapping::clear_site_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.site_id_.ClearToEmpty();
}
inline const std::string& PeeringDBSiteMapping::site_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.site.v202509.PeeringDBSiteMapping.site_id)
  return _internal_site_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PeeringDBSiteMapping::set_site_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.site_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.site.v202509.PeeringDBSiteMapping.site_id)
}
inline std::string* PeeringDBSiteMapping::mutable_site_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_site_id();
  // @@protoc_insertion_point(field_mutable:kentik.site.v202509.PeeringDBSiteMapping.site_id)
  return _s;
}
inline const std::string& PeeringDBSiteMapping::_internal_site_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.site_id_.Get();
}
inline void PeeringDBSiteMapping::_internal_set_site_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.site_id_.Set(value, GetArena());
}
inline std::string* PeeringDBSiteMapping::_internal_mutable_site_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.site_id_.Mutable( GetArena());
}
inline std::string* PeeringDBSiteMapping::release_site_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.site.v202509.PeeringDBSiteMapping.site_id)
  return _impl_.site_id_.Release();
}
inline void PeeringDBSiteMapping::set_allocated_site_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.site_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.site_id_.IsDefault()) {
    _impl_.site_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.site.v202509.PeeringDBSiteMapping.site_id)
}

// string peeringdb_fac_id = 3 [json_name = "peeringdbFacId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void PeeringDBSiteMapping::clear_peeringdb_fac_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.peeringdb_fac_id_.ClearToEmpty();
}
inline const std::string& PeeringDBSiteMapping::peeringdb_fac_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.site.v202509.PeeringDBSiteMapping.peeringdb_fac_id)
  return _internal_peeringdb_fac_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PeeringDBSiteMapping::set_peeringdb_fac_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.peeringdb_fac_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.site.v202509.PeeringDBSiteMapping.peeringdb_fac_id)
}
inline std::string* PeeringDBSiteMapping::mutable_peeringdb_fac_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_peeringdb_fac_id();
  // @@protoc_insertion_point(field_mutable:kentik.site.v202509.PeeringDBSiteMapping.peeringdb_fac_id)
  return _s;
}
inline const std::string& PeeringDBSiteMapping::_internal_peeringdb_fac_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.peeringdb_fac_id_.Get();
}
inline void PeeringDBSiteMapping::_internal_set_peeringdb_fac_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.peeringdb_fac_id_.Set(value, GetArena());
}
inline std::string* PeeringDBSiteMapping::_internal_mutable_peeringdb_fac_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.peeringdb_fac_id_.Mutable( GetArena());
}
inline std::string* PeeringDBSiteMapping::release_peeringdb_fac_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.site.v202509.PeeringDBSiteMapping.peeringdb_fac_id)
  return _impl_.peeringdb_fac_id_.Release();
}
inline void PeeringDBSiteMapping::set_allocated_peeringdb_fac_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.peeringdb_fac_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.peeringdb_fac_id_.IsDefault()) {
    _impl_.peeringdb_fac_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.site.v202509.PeeringDBSiteMapping.peeringdb_fac_id)
}

// .google.protobuf.Timestamp edate = 4 [json_name = "edate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool PeeringDBSiteMapping::has_edate() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.edate_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& PeeringDBSiteMapping::_internal_edate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.edate_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& PeeringDBSiteMapping::edate() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.site.v202509.PeeringDBSiteMapping.edate)
  return _internal_edate();
}
inline void PeeringDBSiteMapping::unsafe_arena_set_allocated_edate(::google::protobuf::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.edate_);
  }
  _impl_.edate_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.site.v202509.PeeringDBSiteMapping.edate)
}
inline ::google::protobuf::Timestamp* PeeringDBSiteMapping::release_edate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* released = _impl_.edate_;
  _impl_.edate_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* PeeringDBSiteMapping::unsafe_arena_release_edate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.site.v202509.PeeringDBSiteMapping.edate)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* temp = _impl_.edate_;
  _impl_.edate_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* PeeringDBSiteMapping::_internal_mutable_edate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.edate_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.edate_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.edate_;
}
inline ::google::protobuf::Timestamp* PeeringDBSiteMapping::mutable_edate() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_edate();
  // @@protoc_insertion_point(field_mutable:kentik.site.v202509.PeeringDBSiteMapping.edate)
  return _msg;
}
inline void PeeringDBSiteMapping::set_allocated_edate(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.edate_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.edate_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.site.v202509.PeeringDBSiteMapping.edate)
}

// .google.protobuf.Timestamp cdate = 5 [json_name = "cdate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool PeeringDBSiteMapping::has_cdate() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.cdate_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& PeeringDBSiteMapping::_internal_cdate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.cdate_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& PeeringDBSiteMapping::cdate() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.site.v202509.PeeringDBSiteMapping.cdate)
  return _internal_cdate();
}
inline void PeeringDBSiteMapping::unsafe_arena_set_allocated_cdate(::google::protobuf::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.cdate_);
  }
  _impl_.cdate_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.site.v202509.PeeringDBSiteMapping.cdate)
}
inline ::google::protobuf::Timestamp* PeeringDBSiteMapping::release_cdate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* released = _impl_.cdate_;
  _impl_.cdate_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* PeeringDBSiteMapping::unsafe_arena_release_cdate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.site.v202509.PeeringDBSiteMapping.cdate)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* temp = _impl_.cdate_;
  _impl_.cdate_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* PeeringDBSiteMapping::_internal_mutable_cdate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.cdate_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.cdate_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.cdate_;
}
inline ::google::protobuf::Timestamp* PeeringDBSiteMapping::mutable_cdate() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_cdate();
  // @@protoc_insertion_point(field_mutable:kentik.site.v202509.PeeringDBSiteMapping.cdate)
  return _msg;
}
inline void PeeringDBSiteMapping::set_allocated_cdate(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.cdate_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.cdate_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.site.v202509.PeeringDBSiteMapping.cdate)
}

// string company_id = 6 [json_name = "companyId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void PeeringDBSiteMapping::clear_company_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.company_id_.ClearToEmpty();
}
inline const std::string& PeeringDBSiteMapping::company_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.site.v202509.PeeringDBSiteMapping.company_id)
  return _internal_company_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PeeringDBSiteMapping::set_company_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.company_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.site.v202509.PeeringDBSiteMapping.company_id)
}
inline std::string* PeeringDBSiteMapping::mutable_company_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_company_id();
  // @@protoc_insertion_point(field_mutable:kentik.site.v202509.PeeringDBSiteMapping.company_id)
  return _s;
}
inline const std::string& PeeringDBSiteMapping::_internal_company_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.company_id_.Get();
}
inline void PeeringDBSiteMapping::_internal_set_company_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.company_id_.Set(value, GetArena());
}
inline std::string* PeeringDBSiteMapping::_internal_mutable_company_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.company_id_.Mutable( GetArena());
}
inline std::string* PeeringDBSiteMapping::release_company_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.site.v202509.PeeringDBSiteMapping.company_id)
  return _impl_.company_id_.Release();
}
inline void PeeringDBSiteMapping::set_allocated_company_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.company_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.company_id_.IsDefault()) {
    _impl_.company_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.site.v202509.PeeringDBSiteMapping.company_id)
}

// -------------------------------------------------------------------

// Site

// string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Site::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& Site::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.site.v202509.Site.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Site::set_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.site.v202509.Site.id)
}
inline std::string* Site::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:kentik.site.v202509.Site.id)
  return _s;
}
inline const std::string& Site::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void Site::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(value, GetArena());
}
inline std::string* Site::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* Site::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.site.v202509.Site.id)
  return _impl_.id_.Release();
}
inline void Site::set_allocated_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.id_.IsDefault()) {
    _impl_.id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.site.v202509.Site.id)
}

// string title = 2 [json_name = "title", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Site::clear_title() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.title_.ClearToEmpty();
}
inline const std::string& Site::title() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.site.v202509.Site.title)
  return _internal_title();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Site::set_title(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.title_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.site.v202509.Site.title)
}
inline std::string* Site::mutable_title() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_title();
  // @@protoc_insertion_point(field_mutable:kentik.site.v202509.Site.title)
  return _s;
}
inline const std::string& Site::_internal_title() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.title_.Get();
}
inline void Site::_internal_set_title(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.title_.Set(value, GetArena());
}
inline std::string* Site::_internal_mutable_title() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.title_.Mutable( GetArena());
}
inline std::string* Site::release_title() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.site.v202509.Site.title)
  return _impl_.title_.Release();
}
inline void Site::set_allocated_title(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.title_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.title_.IsDefault()) {
    _impl_.title_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.site.v202509.Site.title)
}

// double lat = 4 [json_name = "lat", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Site::clear_lat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lat_ = 0;
}
inline double Site::lat() const {
  // @@protoc_insertion_point(field_get:kentik.site.v202509.Site.lat)
  return _internal_lat();
}
inline void Site::set_lat(double value) {
  _internal_set_lat(value);
  // @@protoc_insertion_point(field_set:kentik.site.v202509.Site.lat)
}
inline double Site::_internal_lat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.lat_;
}
inline void Site::_internal_set_lat(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lat_ = value;
}

// double lon = 5 [json_name = "lon", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Site::clear_lon() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lon_ = 0;
}
inline double Site::lon() const {
  // @@protoc_insertion_point(field_get:kentik.site.v202509.Site.lon)
  return _internal_lon();
}
inline void Site::set_lon(double value) {
  _internal_set_lon(value);
  // @@protoc_insertion_point(field_set:kentik.site.v202509.Site.lon)
}
inline double Site::_internal_lon() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.lon_;
}
inline void Site::_internal_set_lon(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lon_ = value;
}

// .kentik.site.v202509.PostalAddress postal_address = 6 [json_name = "postalAddress", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool Site::has_postal_address() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.postal_address_ != nullptr);
  return value;
}
inline void Site::clear_postal_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.postal_address_ != nullptr) _impl_.postal_address_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::kentik::site::v202509::PostalAddress& Site::_internal_postal_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::site::v202509::PostalAddress* p = _impl_.postal_address_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::site::v202509::PostalAddress&>(::kentik::site::v202509::_PostalAddress_default_instance_);
}
inline const ::kentik::site::v202509::PostalAddress& Site::postal_address() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.site.v202509.Site.postal_address)
  return _internal_postal_address();
}
inline void Site::unsafe_arena_set_allocated_postal_address(::kentik::site::v202509::PostalAddress* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.postal_address_);
  }
  _impl_.postal_address_ = reinterpret_cast<::kentik::site::v202509::PostalAddress*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.site.v202509.Site.postal_address)
}
inline ::kentik::site::v202509::PostalAddress* Site::release_postal_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::site::v202509::PostalAddress* released = _impl_.postal_address_;
  _impl_.postal_address_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::site::v202509::PostalAddress* Site::unsafe_arena_release_postal_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.site.v202509.Site.postal_address)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::site::v202509::PostalAddress* temp = _impl_.postal_address_;
  _impl_.postal_address_ = nullptr;
  return temp;
}
inline ::kentik::site::v202509::PostalAddress* Site::_internal_mutable_postal_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.postal_address_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::site::v202509::PostalAddress>(GetArena());
    _impl_.postal_address_ = reinterpret_cast<::kentik::site::v202509::PostalAddress*>(p);
  }
  return _impl_.postal_address_;
}
inline ::kentik::site::v202509::PostalAddress* Site::mutable_postal_address() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::kentik::site::v202509::PostalAddress* _msg = _internal_mutable_postal_address();
  // @@protoc_insertion_point(field_mutable:kentik.site.v202509.Site.postal_address)
  return _msg;
}
inline void Site::set_allocated_postal_address(::kentik::site::v202509::PostalAddress* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.postal_address_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.postal_address_ = reinterpret_cast<::kentik::site::v202509::PostalAddress*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.site.v202509.Site.postal_address)
}

// .kentik.site.v202509.SiteType type = 7 [json_name = "type", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Site::clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = 0;
}
inline ::kentik::site::v202509::SiteType Site::type() const {
  // @@protoc_insertion_point(field_get:kentik.site.v202509.Site.type)
  return _internal_type();
}
inline void Site::set_type(::kentik::site::v202509::SiteType value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:kentik.site.v202509.Site.type)
}
inline ::kentik::site::v202509::SiteType Site::_internal_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::kentik::site::v202509::SiteType>(_impl_.type_);
}
inline void Site::_internal_set_type(::kentik::site::v202509::SiteType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = value;
}

// .kentik.site.v202509.SiteIpAddressClassification address_classification = 8 [json_name = "addressClassification", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool Site::has_address_classification() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.address_classification_ != nullptr);
  return value;
}
inline void Site::clear_address_classification() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.address_classification_ != nullptr) _impl_.address_classification_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::kentik::site::v202509::SiteIpAddressClassification& Site::_internal_address_classification() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::site::v202509::SiteIpAddressClassification* p = _impl_.address_classification_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::site::v202509::SiteIpAddressClassification&>(::kentik::site::v202509::_SiteIpAddressClassification_default_instance_);
}
inline const ::kentik::site::v202509::SiteIpAddressClassification& Site::address_classification() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.site.v202509.Site.address_classification)
  return _internal_address_classification();
}
inline void Site::unsafe_arena_set_allocated_address_classification(::kentik::site::v202509::SiteIpAddressClassification* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.address_classification_);
  }
  _impl_.address_classification_ = reinterpret_cast<::kentik::site::v202509::SiteIpAddressClassification*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.site.v202509.Site.address_classification)
}
inline ::kentik::site::v202509::SiteIpAddressClassification* Site::release_address_classification() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::kentik::site::v202509::SiteIpAddressClassification* released = _impl_.address_classification_;
  _impl_.address_classification_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::site::v202509::SiteIpAddressClassification* Site::unsafe_arena_release_address_classification() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.site.v202509.Site.address_classification)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::kentik::site::v202509::SiteIpAddressClassification* temp = _impl_.address_classification_;
  _impl_.address_classification_ = nullptr;
  return temp;
}
inline ::kentik::site::v202509::SiteIpAddressClassification* Site::_internal_mutable_address_classification() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.address_classification_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::site::v202509::SiteIpAddressClassification>(GetArena());
    _impl_.address_classification_ = reinterpret_cast<::kentik::site::v202509::SiteIpAddressClassification*>(p);
  }
  return _impl_.address_classification_;
}
inline ::kentik::site::v202509::SiteIpAddressClassification* Site::mutable_address_classification() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::kentik::site::v202509::SiteIpAddressClassification* _msg = _internal_mutable_address_classification();
  // @@protoc_insertion_point(field_mutable:kentik.site.v202509.Site.address_classification)
  return _msg;
}
inline void Site::set_allocated_address_classification(::kentik::site::v202509::SiteIpAddressClassification* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.address_classification_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.address_classification_ = reinterpret_cast<::kentik::site::v202509::SiteIpAddressClassification*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.site.v202509.Site.address_classification)
}

// repeated .kentik.site.v202509.LayerSet architecture = 9 [json_name = "architecture", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int Site::_internal_architecture_size() const {
  return _internal_architecture().size();
}
inline int Site::architecture_size() const {
  return _internal_architecture_size();
}
inline void Site::clear_architecture() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.architecture_.Clear();
}
inline ::kentik::site::v202509::LayerSet* Site::mutable_architecture(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.site.v202509.Site.architecture)
  return _internal_mutable_architecture()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::kentik::site::v202509::LayerSet>* Site::mutable_architecture()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.site.v202509.Site.architecture)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_architecture();
}
inline const ::kentik::site::v202509::LayerSet& Site::architecture(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.site.v202509.Site.architecture)
  return _internal_architecture().Get(index);
}
inline ::kentik::site::v202509::LayerSet* Site::add_architecture() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::kentik::site::v202509::LayerSet* _add = _internal_mutable_architecture()->Add();
  // @@protoc_insertion_point(field_add:kentik.site.v202509.Site.architecture)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::site::v202509::LayerSet>& Site::architecture() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.site.v202509.Site.architecture)
  return _internal_architecture();
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::site::v202509::LayerSet>&
Site::_internal_architecture() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.architecture_;
}
inline ::google::protobuf::RepeatedPtrField<::kentik::site::v202509::LayerSet>*
Site::_internal_mutable_architecture() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.architecture_;
}

// .kentik.site.v202509.SiteMarket site_market = 10 [json_name = "siteMarket", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool Site::has_site_market() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.site_market_ != nullptr);
  return value;
}
inline void Site::clear_site_market() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.site_market_ != nullptr) _impl_.site_market_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::kentik::site::v202509::SiteMarket& Site::_internal_site_market() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::site::v202509::SiteMarket* p = _impl_.site_market_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::site::v202509::SiteMarket&>(::kentik::site::v202509::_SiteMarket_default_instance_);
}
inline const ::kentik::site::v202509::SiteMarket& Site::site_market() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.site.v202509.Site.site_market)
  return _internal_site_market();
}
inline void Site::unsafe_arena_set_allocated_site_market(::kentik::site::v202509::SiteMarket* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.site_market_);
  }
  _impl_.site_market_ = reinterpret_cast<::kentik::site::v202509::SiteMarket*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.site.v202509.Site.site_market)
}
inline ::kentik::site::v202509::SiteMarket* Site::release_site_market() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::kentik::site::v202509::SiteMarket* released = _impl_.site_market_;
  _impl_.site_market_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::site::v202509::SiteMarket* Site::unsafe_arena_release_site_market() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.site.v202509.Site.site_market)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::kentik::site::v202509::SiteMarket* temp = _impl_.site_market_;
  _impl_.site_market_ = nullptr;
  return temp;
}
inline ::kentik::site::v202509::SiteMarket* Site::_internal_mutable_site_market() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.site_market_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::site::v202509::SiteMarket>(GetArena());
    _impl_.site_market_ = reinterpret_cast<::kentik::site::v202509::SiteMarket*>(p);
  }
  return _impl_.site_market_;
}
inline ::kentik::site::v202509::SiteMarket* Site::mutable_site_market() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::kentik::site::v202509::SiteMarket* _msg = _internal_mutable_site_market();
  // @@protoc_insertion_point(field_mutable:kentik.site.v202509.Site.site_market)
  return _msg;
}
inline void Site::set_allocated_site_market(::kentik::site::v202509::SiteMarket* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.site_market_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.site_market_ = reinterpret_cast<::kentik::site::v202509::SiteMarket*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.site.v202509.Site.site_market)
}

// repeated .kentik.site.v202509.PeeringDBSiteMapping peeringdb_site_mapping = 11 [json_name = "peeringdbSiteMapping", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int Site::_internal_peeringdb_site_mapping_size() const {
  return _internal_peeringdb_site_mapping().size();
}
inline int Site::peeringdb_site_mapping_size() const {
  return _internal_peeringdb_site_mapping_size();
}
inline void Site::clear_peeringdb_site_mapping() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.peeringdb_site_mapping_.Clear();
}
inline ::kentik::site::v202509::PeeringDBSiteMapping* Site::mutable_peeringdb_site_mapping(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.site.v202509.Site.peeringdb_site_mapping)
  return _internal_mutable_peeringdb_site_mapping()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::kentik::site::v202509::PeeringDBSiteMapping>* Site::mutable_peeringdb_site_mapping()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.site.v202509.Site.peeringdb_site_mapping)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_peeringdb_site_mapping();
}
inline const ::kentik::site::v202509::PeeringDBSiteMapping& Site::peeringdb_site_mapping(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.site.v202509.Site.peeringdb_site_mapping)
  return _internal_peeringdb_site_mapping().Get(index);
}
inline ::kentik::site::v202509::PeeringDBSiteMapping* Site::add_peeringdb_site_mapping() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::kentik::site::v202509::PeeringDBSiteMapping* _add = _internal_mutable_peeringdb_site_mapping()->Add();
  // @@protoc_insertion_point(field_add:kentik.site.v202509.Site.peeringdb_site_mapping)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::site::v202509::PeeringDBSiteMapping>& Site::peeringdb_site_mapping() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.site.v202509.Site.peeringdb_site_mapping)
  return _internal_peeringdb_site_mapping();
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::site::v202509::PeeringDBSiteMapping>&
Site::_internal_peeringdb_site_mapping() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.peeringdb_site_mapping_;
}
inline ::google::protobuf::RepeatedPtrField<::kentik::site::v202509::PeeringDBSiteMapping>*
Site::_internal_mutable_peeringdb_site_mapping() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.peeringdb_site_mapping_;
}

// -------------------------------------------------------------------

// ListSitesRequest

// -------------------------------------------------------------------

// ListSitesResponse

// repeated .kentik.site.v202509.Site sites = 1 [json_name = "sites", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int ListSitesResponse::_internal_sites_size() const {
  return _internal_sites().size();
}
inline int ListSitesResponse::sites_size() const {
  return _internal_sites_size();
}
inline void ListSitesResponse::clear_sites() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sites_.Clear();
}
inline ::kentik::site::v202509::Site* ListSitesResponse::mutable_sites(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.site.v202509.ListSitesResponse.sites)
  return _internal_mutable_sites()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::kentik::site::v202509::Site>* ListSitesResponse::mutable_sites()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.site.v202509.ListSitesResponse.sites)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_sites();
}
inline const ::kentik::site::v202509::Site& ListSitesResponse::sites(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.site.v202509.ListSitesResponse.sites)
  return _internal_sites().Get(index);
}
inline ::kentik::site::v202509::Site* ListSitesResponse::add_sites() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::kentik::site::v202509::Site* _add = _internal_mutable_sites()->Add();
  // @@protoc_insertion_point(field_add:kentik.site.v202509.ListSitesResponse.sites)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::site::v202509::Site>& ListSitesResponse::sites() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.site.v202509.ListSitesResponse.sites)
  return _internal_sites();
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::site::v202509::Site>&
ListSitesResponse::_internal_sites() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sites_;
}
inline ::google::protobuf::RepeatedPtrField<::kentik::site::v202509::Site>*
ListSitesResponse::_internal_mutable_sites() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.sites_;
}

// uint32 invalid_count = 2 [json_name = "invalidCount", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void ListSitesResponse::clear_invalid_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.invalid_count_ = 0u;
}
inline ::uint32_t ListSitesResponse::invalid_count() const {
  // @@protoc_insertion_point(field_get:kentik.site.v202509.ListSitesResponse.invalid_count)
  return _internal_invalid_count();
}
inline void ListSitesResponse::set_invalid_count(::uint32_t value) {
  _internal_set_invalid_count(value);
  // @@protoc_insertion_point(field_set:kentik.site.v202509.ListSitesResponse.invalid_count)
}
inline ::uint32_t ListSitesResponse::_internal_invalid_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.invalid_count_;
}
inline void ListSitesResponse::_internal_set_invalid_count(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.invalid_count_ = value;
}

// -------------------------------------------------------------------

// GetSiteRequest

// string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void GetSiteRequest::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& GetSiteRequest::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.site.v202509.GetSiteRequest.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetSiteRequest::set_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.site.v202509.GetSiteRequest.id)
}
inline std::string* GetSiteRequest::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:kentik.site.v202509.GetSiteRequest.id)
  return _s;
}
inline const std::string& GetSiteRequest::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void GetSiteRequest::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(value, GetArena());
}
inline std::string* GetSiteRequest::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* GetSiteRequest::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.site.v202509.GetSiteRequest.id)
  return _impl_.id_.Release();
}
inline void GetSiteRequest::set_allocated_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.id_.IsDefault()) {
    _impl_.id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.site.v202509.GetSiteRequest.id)
}

// -------------------------------------------------------------------

// GetSiteResponse

// .kentik.site.v202509.Site site = 1 [json_name = "site", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool GetSiteResponse::has_site() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.site_ != nullptr);
  return value;
}
inline void GetSiteResponse::clear_site() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.site_ != nullptr) _impl_.site_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::kentik::site::v202509::Site& GetSiteResponse::_internal_site() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::site::v202509::Site* p = _impl_.site_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::site::v202509::Site&>(::kentik::site::v202509::_Site_default_instance_);
}
inline const ::kentik::site::v202509::Site& GetSiteResponse::site() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.site.v202509.GetSiteResponse.site)
  return _internal_site();
}
inline void GetSiteResponse::unsafe_arena_set_allocated_site(::kentik::site::v202509::Site* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.site_);
  }
  _impl_.site_ = reinterpret_cast<::kentik::site::v202509::Site*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.site.v202509.GetSiteResponse.site)
}
inline ::kentik::site::v202509::Site* GetSiteResponse::release_site() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::site::v202509::Site* released = _impl_.site_;
  _impl_.site_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::site::v202509::Site* GetSiteResponse::unsafe_arena_release_site() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.site.v202509.GetSiteResponse.site)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::site::v202509::Site* temp = _impl_.site_;
  _impl_.site_ = nullptr;
  return temp;
}
inline ::kentik::site::v202509::Site* GetSiteResponse::_internal_mutable_site() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.site_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::site::v202509::Site>(GetArena());
    _impl_.site_ = reinterpret_cast<::kentik::site::v202509::Site*>(p);
  }
  return _impl_.site_;
}
inline ::kentik::site::v202509::Site* GetSiteResponse::mutable_site() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::kentik::site::v202509::Site* _msg = _internal_mutable_site();
  // @@protoc_insertion_point(field_mutable:kentik.site.v202509.GetSiteResponse.site)
  return _msg;
}
inline void GetSiteResponse::set_allocated_site(::kentik::site::v202509::Site* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.site_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.site_ = reinterpret_cast<::kentik::site::v202509::Site*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.site.v202509.GetSiteResponse.site)
}

// -------------------------------------------------------------------

// CreateSiteRequest

// .kentik.site.v202509.Site site = 1 [json_name = "site", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool CreateSiteRequest::has_site() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.site_ != nullptr);
  return value;
}
inline void CreateSiteRequest::clear_site() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.site_ != nullptr) _impl_.site_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::kentik::site::v202509::Site& CreateSiteRequest::_internal_site() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::site::v202509::Site* p = _impl_.site_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::site::v202509::Site&>(::kentik::site::v202509::_Site_default_instance_);
}
inline const ::kentik::site::v202509::Site& CreateSiteRequest::site() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.site.v202509.CreateSiteRequest.site)
  return _internal_site();
}
inline void CreateSiteRequest::unsafe_arena_set_allocated_site(::kentik::site::v202509::Site* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.site_);
  }
  _impl_.site_ = reinterpret_cast<::kentik::site::v202509::Site*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.site.v202509.CreateSiteRequest.site)
}
inline ::kentik::site::v202509::Site* CreateSiteRequest::release_site() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::site::v202509::Site* released = _impl_.site_;
  _impl_.site_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::site::v202509::Site* CreateSiteRequest::unsafe_arena_release_site() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.site.v202509.CreateSiteRequest.site)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::site::v202509::Site* temp = _impl_.site_;
  _impl_.site_ = nullptr;
  return temp;
}
inline ::kentik::site::v202509::Site* CreateSiteRequest::_internal_mutable_site() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.site_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::site::v202509::Site>(GetArena());
    _impl_.site_ = reinterpret_cast<::kentik::site::v202509::Site*>(p);
  }
  return _impl_.site_;
}
inline ::kentik::site::v202509::Site* CreateSiteRequest::mutable_site() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::kentik::site::v202509::Site* _msg = _internal_mutable_site();
  // @@protoc_insertion_point(field_mutable:kentik.site.v202509.CreateSiteRequest.site)
  return _msg;
}
inline void CreateSiteRequest::set_allocated_site(::kentik::site::v202509::Site* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.site_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.site_ = reinterpret_cast<::kentik::site::v202509::Site*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.site.v202509.CreateSiteRequest.site)
}

// -------------------------------------------------------------------

// CreateSiteResponse

// .kentik.site.v202509.Site site = 1 [json_name = "site", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool CreateSiteResponse::has_site() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.site_ != nullptr);
  return value;
}
inline void CreateSiteResponse::clear_site() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.site_ != nullptr) _impl_.site_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::kentik::site::v202509::Site& CreateSiteResponse::_internal_site() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::site::v202509::Site* p = _impl_.site_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::site::v202509::Site&>(::kentik::site::v202509::_Site_default_instance_);
}
inline const ::kentik::site::v202509::Site& CreateSiteResponse::site() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.site.v202509.CreateSiteResponse.site)
  return _internal_site();
}
inline void CreateSiteResponse::unsafe_arena_set_allocated_site(::kentik::site::v202509::Site* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.site_);
  }
  _impl_.site_ = reinterpret_cast<::kentik::site::v202509::Site*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.site.v202509.CreateSiteResponse.site)
}
inline ::kentik::site::v202509::Site* CreateSiteResponse::release_site() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::site::v202509::Site* released = _impl_.site_;
  _impl_.site_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::site::v202509::Site* CreateSiteResponse::unsafe_arena_release_site() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.site.v202509.CreateSiteResponse.site)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::site::v202509::Site* temp = _impl_.site_;
  _impl_.site_ = nullptr;
  return temp;
}
inline ::kentik::site::v202509::Site* CreateSiteResponse::_internal_mutable_site() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.site_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::site::v202509::Site>(GetArena());
    _impl_.site_ = reinterpret_cast<::kentik::site::v202509::Site*>(p);
  }
  return _impl_.site_;
}
inline ::kentik::site::v202509::Site* CreateSiteResponse::mutable_site() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::kentik::site::v202509::Site* _msg = _internal_mutable_site();
  // @@protoc_insertion_point(field_mutable:kentik.site.v202509.CreateSiteResponse.site)
  return _msg;
}
inline void CreateSiteResponse::set_allocated_site(::kentik::site::v202509::Site* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.site_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.site_ = reinterpret_cast<::kentik::site::v202509::Site*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.site.v202509.CreateSiteResponse.site)
}

// -------------------------------------------------------------------

// UpdateSiteRequest

// .kentik.site.v202509.Site site = 1 [json_name = "site", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool UpdateSiteRequest::has_site() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.site_ != nullptr);
  return value;
}
inline void UpdateSiteRequest::clear_site() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.site_ != nullptr) _impl_.site_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::kentik::site::v202509::Site& UpdateSiteRequest::_internal_site() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::site::v202509::Site* p = _impl_.site_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::site::v202509::Site&>(::kentik::site::v202509::_Site_default_instance_);
}
inline const ::kentik::site::v202509::Site& UpdateSiteRequest::site() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.site.v202509.UpdateSiteRequest.site)
  return _internal_site();
}
inline void UpdateSiteRequest::unsafe_arena_set_allocated_site(::kentik::site::v202509::Site* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.site_);
  }
  _impl_.site_ = reinterpret_cast<::kentik::site::v202509::Site*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.site.v202509.UpdateSiteRequest.site)
}
inline ::kentik::site::v202509::Site* UpdateSiteRequest::release_site() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::site::v202509::Site* released = _impl_.site_;
  _impl_.site_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::site::v202509::Site* UpdateSiteRequest::unsafe_arena_release_site() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.site.v202509.UpdateSiteRequest.site)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::site::v202509::Site* temp = _impl_.site_;
  _impl_.site_ = nullptr;
  return temp;
}
inline ::kentik::site::v202509::Site* UpdateSiteRequest::_internal_mutable_site() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.site_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::site::v202509::Site>(GetArena());
    _impl_.site_ = reinterpret_cast<::kentik::site::v202509::Site*>(p);
  }
  return _impl_.site_;
}
inline ::kentik::site::v202509::Site* UpdateSiteRequest::mutable_site() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::kentik::site::v202509::Site* _msg = _internal_mutable_site();
  // @@protoc_insertion_point(field_mutable:kentik.site.v202509.UpdateSiteRequest.site)
  return _msg;
}
inline void UpdateSiteRequest::set_allocated_site(::kentik::site::v202509::Site* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.site_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.site_ = reinterpret_cast<::kentik::site::v202509::Site*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.site.v202509.UpdateSiteRequest.site)
}

// -------------------------------------------------------------------

// UpdateSiteResponse

// .kentik.site.v202509.Site site = 1 [json_name = "site", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool UpdateSiteResponse::has_site() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.site_ != nullptr);
  return value;
}
inline void UpdateSiteResponse::clear_site() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.site_ != nullptr) _impl_.site_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::kentik::site::v202509::Site& UpdateSiteResponse::_internal_site() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::site::v202509::Site* p = _impl_.site_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::site::v202509::Site&>(::kentik::site::v202509::_Site_default_instance_);
}
inline const ::kentik::site::v202509::Site& UpdateSiteResponse::site() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.site.v202509.UpdateSiteResponse.site)
  return _internal_site();
}
inline void UpdateSiteResponse::unsafe_arena_set_allocated_site(::kentik::site::v202509::Site* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.site_);
  }
  _impl_.site_ = reinterpret_cast<::kentik::site::v202509::Site*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.site.v202509.UpdateSiteResponse.site)
}
inline ::kentik::site::v202509::Site* UpdateSiteResponse::release_site() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::site::v202509::Site* released = _impl_.site_;
  _impl_.site_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::site::v202509::Site* UpdateSiteResponse::unsafe_arena_release_site() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.site.v202509.UpdateSiteResponse.site)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::site::v202509::Site* temp = _impl_.site_;
  _impl_.site_ = nullptr;
  return temp;
}
inline ::kentik::site::v202509::Site* UpdateSiteResponse::_internal_mutable_site() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.site_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::site::v202509::Site>(GetArena());
    _impl_.site_ = reinterpret_cast<::kentik::site::v202509::Site*>(p);
  }
  return _impl_.site_;
}
inline ::kentik::site::v202509::Site* UpdateSiteResponse::mutable_site() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::kentik::site::v202509::Site* _msg = _internal_mutable_site();
  // @@protoc_insertion_point(field_mutable:kentik.site.v202509.UpdateSiteResponse.site)
  return _msg;
}
inline void UpdateSiteResponse::set_allocated_site(::kentik::site::v202509::Site* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.site_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.site_ = reinterpret_cast<::kentik::site::v202509::Site*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.site.v202509.UpdateSiteResponse.site)
}

// -------------------------------------------------------------------

// DeleteSiteRequest

// string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void DeleteSiteRequest::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& DeleteSiteRequest::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.site.v202509.DeleteSiteRequest.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeleteSiteRequest::set_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.site.v202509.DeleteSiteRequest.id)
}
inline std::string* DeleteSiteRequest::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:kentik.site.v202509.DeleteSiteRequest.id)
  return _s;
}
inline const std::string& DeleteSiteRequest::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void DeleteSiteRequest::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(value, GetArena());
}
inline std::string* DeleteSiteRequest::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* DeleteSiteRequest::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.site.v202509.DeleteSiteRequest.id)
  return _impl_.id_.Release();
}
inline void DeleteSiteRequest::set_allocated_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.id_.IsDefault()) {
    _impl_.id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.site.v202509.DeleteSiteRequest.id)
}

// -------------------------------------------------------------------

// DeleteSiteResponse

// -------------------------------------------------------------------

// SiteMarket

// string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void SiteMarket::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& SiteMarket::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.site.v202509.SiteMarket.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SiteMarket::set_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.site.v202509.SiteMarket.id)
}
inline std::string* SiteMarket::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:kentik.site.v202509.SiteMarket.id)
  return _s;
}
inline const std::string& SiteMarket::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void SiteMarket::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(value, GetArena());
}
inline std::string* SiteMarket::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* SiteMarket::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.site.v202509.SiteMarket.id)
  return _impl_.id_.Release();
}
inline void SiteMarket::set_allocated_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.id_.IsDefault()) {
    _impl_.id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.site.v202509.SiteMarket.id)
}

// string name = 2 [json_name = "name", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void SiteMarket::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& SiteMarket::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.site.v202509.SiteMarket.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SiteMarket::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.site.v202509.SiteMarket.name)
}
inline std::string* SiteMarket::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:kentik.site.v202509.SiteMarket.name)
  return _s;
}
inline const std::string& SiteMarket::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void SiteMarket::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* SiteMarket::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* SiteMarket::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.site.v202509.SiteMarket.name)
  return _impl_.name_.Release();
}
inline void SiteMarket::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.site.v202509.SiteMarket.name)
}

// string description = 3 [json_name = "description", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void SiteMarket::clear_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.ClearToEmpty();
}
inline const std::string& SiteMarket::description() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.site.v202509.SiteMarket.description)
  return _internal_description();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SiteMarket::set_description(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.site.v202509.SiteMarket.description)
}
inline std::string* SiteMarket::mutable_description() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_description();
  // @@protoc_insertion_point(field_mutable:kentik.site.v202509.SiteMarket.description)
  return _s;
}
inline const std::string& SiteMarket::_internal_description() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.description_.Get();
}
inline void SiteMarket::_internal_set_description(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.Set(value, GetArena());
}
inline std::string* SiteMarket::_internal_mutable_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.description_.Mutable( GetArena());
}
inline std::string* SiteMarket::release_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.site.v202509.SiteMarket.description)
  return _impl_.description_.Release();
}
inline void SiteMarket::set_allocated_description(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.description_.IsDefault()) {
    _impl_.description_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.site.v202509.SiteMarket.description)
}

// uint32 number_of_sites = 4 [json_name = "numberOfSites", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void SiteMarket::clear_number_of_sites() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.number_of_sites_ = 0u;
}
inline ::uint32_t SiteMarket::number_of_sites() const {
  // @@protoc_insertion_point(field_get:kentik.site.v202509.SiteMarket.number_of_sites)
  return _internal_number_of_sites();
}
inline void SiteMarket::set_number_of_sites(::uint32_t value) {
  _internal_set_number_of_sites(value);
  // @@protoc_insertion_point(field_set:kentik.site.v202509.SiteMarket.number_of_sites)
}
inline ::uint32_t SiteMarket::_internal_number_of_sites() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.number_of_sites_;
}
inline void SiteMarket::_internal_set_number_of_sites(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.number_of_sites_ = value;
}

// .google.protobuf.Timestamp cdate = 5 [json_name = "cdate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool SiteMarket::has_cdate() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.cdate_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& SiteMarket::_internal_cdate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.cdate_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& SiteMarket::cdate() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.site.v202509.SiteMarket.cdate)
  return _internal_cdate();
}
inline void SiteMarket::unsafe_arena_set_allocated_cdate(::google::protobuf::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.cdate_);
  }
  _impl_.cdate_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.site.v202509.SiteMarket.cdate)
}
inline ::google::protobuf::Timestamp* SiteMarket::release_cdate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* released = _impl_.cdate_;
  _impl_.cdate_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* SiteMarket::unsafe_arena_release_cdate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.site.v202509.SiteMarket.cdate)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* temp = _impl_.cdate_;
  _impl_.cdate_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* SiteMarket::_internal_mutable_cdate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.cdate_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.cdate_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.cdate_;
}
inline ::google::protobuf::Timestamp* SiteMarket::mutable_cdate() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_cdate();
  // @@protoc_insertion_point(field_mutable:kentik.site.v202509.SiteMarket.cdate)
  return _msg;
}
inline void SiteMarket::set_allocated_cdate(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.cdate_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.cdate_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.site.v202509.SiteMarket.cdate)
}

// .google.protobuf.Timestamp edate = 6 [json_name = "edate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool SiteMarket::has_edate() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.edate_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& SiteMarket::_internal_edate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.edate_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& SiteMarket::edate() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.site.v202509.SiteMarket.edate)
  return _internal_edate();
}
inline void SiteMarket::unsafe_arena_set_allocated_edate(::google::protobuf::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.edate_);
  }
  _impl_.edate_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.site.v202509.SiteMarket.edate)
}
inline ::google::protobuf::Timestamp* SiteMarket::release_edate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* released = _impl_.edate_;
  _impl_.edate_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* SiteMarket::unsafe_arena_release_edate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.site.v202509.SiteMarket.edate)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* temp = _impl_.edate_;
  _impl_.edate_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* SiteMarket::_internal_mutable_edate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.edate_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.edate_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.edate_;
}
inline ::google::protobuf::Timestamp* SiteMarket::mutable_edate() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_edate();
  // @@protoc_insertion_point(field_mutable:kentik.site.v202509.SiteMarket.edate)
  return _msg;
}
inline void SiteMarket::set_allocated_edate(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.edate_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.edate_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.site.v202509.SiteMarket.edate)
}

// -------------------------------------------------------------------

// ListSiteMarketsRequest

// -------------------------------------------------------------------

// ListSiteMarketsResponse

// repeated .kentik.site.v202509.SiteMarket site_markets = 1 [json_name = "siteMarkets", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int ListSiteMarketsResponse::_internal_site_markets_size() const {
  return _internal_site_markets().size();
}
inline int ListSiteMarketsResponse::site_markets_size() const {
  return _internal_site_markets_size();
}
inline void ListSiteMarketsResponse::clear_site_markets() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.site_markets_.Clear();
}
inline ::kentik::site::v202509::SiteMarket* ListSiteMarketsResponse::mutable_site_markets(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.site.v202509.ListSiteMarketsResponse.site_markets)
  return _internal_mutable_site_markets()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::kentik::site::v202509::SiteMarket>* ListSiteMarketsResponse::mutable_site_markets()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.site.v202509.ListSiteMarketsResponse.site_markets)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_site_markets();
}
inline const ::kentik::site::v202509::SiteMarket& ListSiteMarketsResponse::site_markets(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.site.v202509.ListSiteMarketsResponse.site_markets)
  return _internal_site_markets().Get(index);
}
inline ::kentik::site::v202509::SiteMarket* ListSiteMarketsResponse::add_site_markets() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::kentik::site::v202509::SiteMarket* _add = _internal_mutable_site_markets()->Add();
  // @@protoc_insertion_point(field_add:kentik.site.v202509.ListSiteMarketsResponse.site_markets)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::site::v202509::SiteMarket>& ListSiteMarketsResponse::site_markets() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.site.v202509.ListSiteMarketsResponse.site_markets)
  return _internal_site_markets();
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::site::v202509::SiteMarket>&
ListSiteMarketsResponse::_internal_site_markets() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.site_markets_;
}
inline ::google::protobuf::RepeatedPtrField<::kentik::site::v202509::SiteMarket>*
ListSiteMarketsResponse::_internal_mutable_site_markets() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.site_markets_;
}

// uint32 invalid_count = 2 [json_name = "invalidCount", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void ListSiteMarketsResponse::clear_invalid_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.invalid_count_ = 0u;
}
inline ::uint32_t ListSiteMarketsResponse::invalid_count() const {
  // @@protoc_insertion_point(field_get:kentik.site.v202509.ListSiteMarketsResponse.invalid_count)
  return _internal_invalid_count();
}
inline void ListSiteMarketsResponse::set_invalid_count(::uint32_t value) {
  _internal_set_invalid_count(value);
  // @@protoc_insertion_point(field_set:kentik.site.v202509.ListSiteMarketsResponse.invalid_count)
}
inline ::uint32_t ListSiteMarketsResponse::_internal_invalid_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.invalid_count_;
}
inline void ListSiteMarketsResponse::_internal_set_invalid_count(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.invalid_count_ = value;
}

// -------------------------------------------------------------------

// GetSiteMarketRequest

// string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void GetSiteMarketRequest::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& GetSiteMarketRequest::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.site.v202509.GetSiteMarketRequest.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetSiteMarketRequest::set_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.site.v202509.GetSiteMarketRequest.id)
}
inline std::string* GetSiteMarketRequest::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:kentik.site.v202509.GetSiteMarketRequest.id)
  return _s;
}
inline const std::string& GetSiteMarketRequest::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void GetSiteMarketRequest::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(value, GetArena());
}
inline std::string* GetSiteMarketRequest::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* GetSiteMarketRequest::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.site.v202509.GetSiteMarketRequest.id)
  return _impl_.id_.Release();
}
inline void GetSiteMarketRequest::set_allocated_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.id_.IsDefault()) {
    _impl_.id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.site.v202509.GetSiteMarketRequest.id)
}

// -------------------------------------------------------------------

// GetSiteMarketResponse

// .kentik.site.v202509.SiteMarket site_market = 1 [json_name = "siteMarket", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool GetSiteMarketResponse::has_site_market() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.site_market_ != nullptr);
  return value;
}
inline void GetSiteMarketResponse::clear_site_market() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.site_market_ != nullptr) _impl_.site_market_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::kentik::site::v202509::SiteMarket& GetSiteMarketResponse::_internal_site_market() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::site::v202509::SiteMarket* p = _impl_.site_market_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::site::v202509::SiteMarket&>(::kentik::site::v202509::_SiteMarket_default_instance_);
}
inline const ::kentik::site::v202509::SiteMarket& GetSiteMarketResponse::site_market() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.site.v202509.GetSiteMarketResponse.site_market)
  return _internal_site_market();
}
inline void GetSiteMarketResponse::unsafe_arena_set_allocated_site_market(::kentik::site::v202509::SiteMarket* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.site_market_);
  }
  _impl_.site_market_ = reinterpret_cast<::kentik::site::v202509::SiteMarket*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.site.v202509.GetSiteMarketResponse.site_market)
}
inline ::kentik::site::v202509::SiteMarket* GetSiteMarketResponse::release_site_market() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::site::v202509::SiteMarket* released = _impl_.site_market_;
  _impl_.site_market_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::site::v202509::SiteMarket* GetSiteMarketResponse::unsafe_arena_release_site_market() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.site.v202509.GetSiteMarketResponse.site_market)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::site::v202509::SiteMarket* temp = _impl_.site_market_;
  _impl_.site_market_ = nullptr;
  return temp;
}
inline ::kentik::site::v202509::SiteMarket* GetSiteMarketResponse::_internal_mutable_site_market() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.site_market_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::site::v202509::SiteMarket>(GetArena());
    _impl_.site_market_ = reinterpret_cast<::kentik::site::v202509::SiteMarket*>(p);
  }
  return _impl_.site_market_;
}
inline ::kentik::site::v202509::SiteMarket* GetSiteMarketResponse::mutable_site_market() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::kentik::site::v202509::SiteMarket* _msg = _internal_mutable_site_market();
  // @@protoc_insertion_point(field_mutable:kentik.site.v202509.GetSiteMarketResponse.site_market)
  return _msg;
}
inline void GetSiteMarketResponse::set_allocated_site_market(::kentik::site::v202509::SiteMarket* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.site_market_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.site_market_ = reinterpret_cast<::kentik::site::v202509::SiteMarket*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.site.v202509.GetSiteMarketResponse.site_market)
}

// -------------------------------------------------------------------

// CreateSiteMarketRequest

// .kentik.site.v202509.SiteMarket site_market = 1 [json_name = "siteMarket", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool CreateSiteMarketRequest::has_site_market() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.site_market_ != nullptr);
  return value;
}
inline void CreateSiteMarketRequest::clear_site_market() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.site_market_ != nullptr) _impl_.site_market_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::kentik::site::v202509::SiteMarket& CreateSiteMarketRequest::_internal_site_market() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::site::v202509::SiteMarket* p = _impl_.site_market_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::site::v202509::SiteMarket&>(::kentik::site::v202509::_SiteMarket_default_instance_);
}
inline const ::kentik::site::v202509::SiteMarket& CreateSiteMarketRequest::site_market() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.site.v202509.CreateSiteMarketRequest.site_market)
  return _internal_site_market();
}
inline void CreateSiteMarketRequest::unsafe_arena_set_allocated_site_market(::kentik::site::v202509::SiteMarket* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.site_market_);
  }
  _impl_.site_market_ = reinterpret_cast<::kentik::site::v202509::SiteMarket*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.site.v202509.CreateSiteMarketRequest.site_market)
}
inline ::kentik::site::v202509::SiteMarket* CreateSiteMarketRequest::release_site_market() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::site::v202509::SiteMarket* released = _impl_.site_market_;
  _impl_.site_market_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::site::v202509::SiteMarket* CreateSiteMarketRequest::unsafe_arena_release_site_market() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.site.v202509.CreateSiteMarketRequest.site_market)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::site::v202509::SiteMarket* temp = _impl_.site_market_;
  _impl_.site_market_ = nullptr;
  return temp;
}
inline ::kentik::site::v202509::SiteMarket* CreateSiteMarketRequest::_internal_mutable_site_market() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.site_market_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::site::v202509::SiteMarket>(GetArena());
    _impl_.site_market_ = reinterpret_cast<::kentik::site::v202509::SiteMarket*>(p);
  }
  return _impl_.site_market_;
}
inline ::kentik::site::v202509::SiteMarket* CreateSiteMarketRequest::mutable_site_market() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::kentik::site::v202509::SiteMarket* _msg = _internal_mutable_site_market();
  // @@protoc_insertion_point(field_mutable:kentik.site.v202509.CreateSiteMarketRequest.site_market)
  return _msg;
}
inline void CreateSiteMarketRequest::set_allocated_site_market(::kentik::site::v202509::SiteMarket* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.site_market_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.site_market_ = reinterpret_cast<::kentik::site::v202509::SiteMarket*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.site.v202509.CreateSiteMarketRequest.site_market)
}

// -------------------------------------------------------------------

// CreateSiteMarketResponse

// .kentik.site.v202509.SiteMarket site_market = 1 [json_name = "siteMarket", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool CreateSiteMarketResponse::has_site_market() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.site_market_ != nullptr);
  return value;
}
inline void CreateSiteMarketResponse::clear_site_market() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.site_market_ != nullptr) _impl_.site_market_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::kentik::site::v202509::SiteMarket& CreateSiteMarketResponse::_internal_site_market() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::site::v202509::SiteMarket* p = _impl_.site_market_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::site::v202509::SiteMarket&>(::kentik::site::v202509::_SiteMarket_default_instance_);
}
inline const ::kentik::site::v202509::SiteMarket& CreateSiteMarketResponse::site_market() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.site.v202509.CreateSiteMarketResponse.site_market)
  return _internal_site_market();
}
inline void CreateSiteMarketResponse::unsafe_arena_set_allocated_site_market(::kentik::site::v202509::SiteMarket* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.site_market_);
  }
  _impl_.site_market_ = reinterpret_cast<::kentik::site::v202509::SiteMarket*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.site.v202509.CreateSiteMarketResponse.site_market)
}
inline ::kentik::site::v202509::SiteMarket* CreateSiteMarketResponse::release_site_market() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::site::v202509::SiteMarket* released = _impl_.site_market_;
  _impl_.site_market_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::site::v202509::SiteMarket* CreateSiteMarketResponse::unsafe_arena_release_site_market() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.site.v202509.CreateSiteMarketResponse.site_market)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::site::v202509::SiteMarket* temp = _impl_.site_market_;
  _impl_.site_market_ = nullptr;
  return temp;
}
inline ::kentik::site::v202509::SiteMarket* CreateSiteMarketResponse::_internal_mutable_site_market() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.site_market_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::site::v202509::SiteMarket>(GetArena());
    _impl_.site_market_ = reinterpret_cast<::kentik::site::v202509::SiteMarket*>(p);
  }
  return _impl_.site_market_;
}
inline ::kentik::site::v202509::SiteMarket* CreateSiteMarketResponse::mutable_site_market() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::kentik::site::v202509::SiteMarket* _msg = _internal_mutable_site_market();
  // @@protoc_insertion_point(field_mutable:kentik.site.v202509.CreateSiteMarketResponse.site_market)
  return _msg;
}
inline void CreateSiteMarketResponse::set_allocated_site_market(::kentik::site::v202509::SiteMarket* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.site_market_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.site_market_ = reinterpret_cast<::kentik::site::v202509::SiteMarket*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.site.v202509.CreateSiteMarketResponse.site_market)
}

// -------------------------------------------------------------------

// UpdateSiteMarketRequest

// .kentik.site.v202509.SiteMarket site_market = 1 [json_name = "siteMarket", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool UpdateSiteMarketRequest::has_site_market() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.site_market_ != nullptr);
  return value;
}
inline void UpdateSiteMarketRequest::clear_site_market() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.site_market_ != nullptr) _impl_.site_market_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::kentik::site::v202509::SiteMarket& UpdateSiteMarketRequest::_internal_site_market() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::site::v202509::SiteMarket* p = _impl_.site_market_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::site::v202509::SiteMarket&>(::kentik::site::v202509::_SiteMarket_default_instance_);
}
inline const ::kentik::site::v202509::SiteMarket& UpdateSiteMarketRequest::site_market() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.site.v202509.UpdateSiteMarketRequest.site_market)
  return _internal_site_market();
}
inline void UpdateSiteMarketRequest::unsafe_arena_set_allocated_site_market(::kentik::site::v202509::SiteMarket* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.site_market_);
  }
  _impl_.site_market_ = reinterpret_cast<::kentik::site::v202509::SiteMarket*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.site.v202509.UpdateSiteMarketRequest.site_market)
}
inline ::kentik::site::v202509::SiteMarket* UpdateSiteMarketRequest::release_site_market() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::site::v202509::SiteMarket* released = _impl_.site_market_;
  _impl_.site_market_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::site::v202509::SiteMarket* UpdateSiteMarketRequest::unsafe_arena_release_site_market() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.site.v202509.UpdateSiteMarketRequest.site_market)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::site::v202509::SiteMarket* temp = _impl_.site_market_;
  _impl_.site_market_ = nullptr;
  return temp;
}
inline ::kentik::site::v202509::SiteMarket* UpdateSiteMarketRequest::_internal_mutable_site_market() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.site_market_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::site::v202509::SiteMarket>(GetArena());
    _impl_.site_market_ = reinterpret_cast<::kentik::site::v202509::SiteMarket*>(p);
  }
  return _impl_.site_market_;
}
inline ::kentik::site::v202509::SiteMarket* UpdateSiteMarketRequest::mutable_site_market() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::kentik::site::v202509::SiteMarket* _msg = _internal_mutable_site_market();
  // @@protoc_insertion_point(field_mutable:kentik.site.v202509.UpdateSiteMarketRequest.site_market)
  return _msg;
}
inline void UpdateSiteMarketRequest::set_allocated_site_market(::kentik::site::v202509::SiteMarket* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.site_market_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.site_market_ = reinterpret_cast<::kentik::site::v202509::SiteMarket*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.site.v202509.UpdateSiteMarketRequest.site_market)
}

// -------------------------------------------------------------------

// UpdateSiteMarketResponse

// .kentik.site.v202509.SiteMarket site_market = 1 [json_name = "siteMarket", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool UpdateSiteMarketResponse::has_site_market() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.site_market_ != nullptr);
  return value;
}
inline void UpdateSiteMarketResponse::clear_site_market() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.site_market_ != nullptr) _impl_.site_market_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::kentik::site::v202509::SiteMarket& UpdateSiteMarketResponse::_internal_site_market() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::site::v202509::SiteMarket* p = _impl_.site_market_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::site::v202509::SiteMarket&>(::kentik::site::v202509::_SiteMarket_default_instance_);
}
inline const ::kentik::site::v202509::SiteMarket& UpdateSiteMarketResponse::site_market() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.site.v202509.UpdateSiteMarketResponse.site_market)
  return _internal_site_market();
}
inline void UpdateSiteMarketResponse::unsafe_arena_set_allocated_site_market(::kentik::site::v202509::SiteMarket* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.site_market_);
  }
  _impl_.site_market_ = reinterpret_cast<::kentik::site::v202509::SiteMarket*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.site.v202509.UpdateSiteMarketResponse.site_market)
}
inline ::kentik::site::v202509::SiteMarket* UpdateSiteMarketResponse::release_site_market() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::site::v202509::SiteMarket* released = _impl_.site_market_;
  _impl_.site_market_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::site::v202509::SiteMarket* UpdateSiteMarketResponse::unsafe_arena_release_site_market() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.site.v202509.UpdateSiteMarketResponse.site_market)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::site::v202509::SiteMarket* temp = _impl_.site_market_;
  _impl_.site_market_ = nullptr;
  return temp;
}
inline ::kentik::site::v202509::SiteMarket* UpdateSiteMarketResponse::_internal_mutable_site_market() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.site_market_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::site::v202509::SiteMarket>(GetArena());
    _impl_.site_market_ = reinterpret_cast<::kentik::site::v202509::SiteMarket*>(p);
  }
  return _impl_.site_market_;
}
inline ::kentik::site::v202509::SiteMarket* UpdateSiteMarketResponse::mutable_site_market() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::kentik::site::v202509::SiteMarket* _msg = _internal_mutable_site_market();
  // @@protoc_insertion_point(field_mutable:kentik.site.v202509.UpdateSiteMarketResponse.site_market)
  return _msg;
}
inline void UpdateSiteMarketResponse::set_allocated_site_market(::kentik::site::v202509::SiteMarket* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.site_market_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.site_market_ = reinterpret_cast<::kentik::site::v202509::SiteMarket*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.site.v202509.UpdateSiteMarketResponse.site_market)
}

// -------------------------------------------------------------------

// DeleteSiteMarketRequest

// string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void DeleteSiteMarketRequest::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& DeleteSiteMarketRequest::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.site.v202509.DeleteSiteMarketRequest.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeleteSiteMarketRequest::set_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.site.v202509.DeleteSiteMarketRequest.id)
}
inline std::string* DeleteSiteMarketRequest::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:kentik.site.v202509.DeleteSiteMarketRequest.id)
  return _s;
}
inline const std::string& DeleteSiteMarketRequest::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void DeleteSiteMarketRequest::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(value, GetArena());
}
inline std::string* DeleteSiteMarketRequest::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* DeleteSiteMarketRequest::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.site.v202509.DeleteSiteMarketRequest.id)
  return _impl_.id_.Release();
}
inline void DeleteSiteMarketRequest::set_allocated_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.id_.IsDefault()) {
    _impl_.id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.site.v202509.DeleteSiteMarketRequest.id)
}

// -------------------------------------------------------------------

// DeleteSiteMarketResponse

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v202509
}  // namespace site
}  // namespace kentik


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::kentik::site::v202509::SiteType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::kentik::site::v202509::SiteType>() {
  return ::kentik::site::v202509::SiteType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // kentik_2fsite_2fv202509_2fsite_2eproto_2epb_2eh
