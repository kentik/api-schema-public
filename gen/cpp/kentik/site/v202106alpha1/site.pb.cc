// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: kentik/site/v202106alpha1/site.proto
// Protobuf C++ Version: 5.29.3

#include "kentik/site/v202106alpha1/site.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace kentik {
namespace site {
namespace v202106alpha1 {

inline constexpr SubLayer::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : device_ids_{},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SubLayer::SubLayer(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SubLayerDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubLayerDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubLayerDefaultTypeInternal() {}
  union {
    SubLayer _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubLayerDefaultTypeInternal _SubLayer_default_instance_;

inline constexpr SiteIpClassification::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : infrastructure_networks_{},
        user_access_networks_{},
        other_ips_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SiteIpClassification::SiteIpClassification(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SiteIpClassificationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SiteIpClassificationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SiteIpClassificationDefaultTypeInternal() {}
  union {
    SiteIpClassification _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SiteIpClassificationDefaultTypeInternal _SiteIpClassification_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR ListSiteRequest::ListSiteRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct ListSiteRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListSiteRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListSiteRequestDefaultTypeInternal() {}
  union {
    ListSiteRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListSiteRequestDefaultTypeInternal _ListSiteRequest_default_instance_;

inline constexpr GetSiteRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetSiteRequest::GetSiteRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetSiteRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetSiteRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetSiteRequestDefaultTypeInternal() {}
  union {
    GetSiteRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetSiteRequestDefaultTypeInternal _GetSiteRequest_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR DeleteSiteResponse::DeleteSiteResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct DeleteSiteResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteSiteResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteSiteResponseDefaultTypeInternal() {}
  union {
    DeleteSiteResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteSiteResponseDefaultTypeInternal _DeleteSiteResponse_default_instance_;

inline constexpr DeleteSiteRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DeleteSiteRequest::DeleteSiteRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DeleteSiteRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteSiteRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteSiteRequestDefaultTypeInternal() {}
  union {
    DeleteSiteRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteSiteRequestDefaultTypeInternal _DeleteSiteRequest_default_instance_;

inline constexpr Layer::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : sub_layers_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Layer::Layer(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct LayerDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LayerDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LayerDefaultTypeInternal() {}
  union {
    Layer _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LayerDefaultTypeInternal _Layer_default_instance_;

inline constexpr Site::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        architecture_{},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        title_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        coordinate_{nullptr},
        address_{nullptr},
        classification_{nullptr},
        type_{static_cast< ::kentik::site::v202106alpha1::SiteType >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR Site::Site(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SiteDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SiteDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SiteDefaultTypeInternal() {}
  union {
    Site _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SiteDefaultTypeInternal _Site_default_instance_;

inline constexpr UpdateSiteResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        site_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR UpdateSiteResponse::UpdateSiteResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct UpdateSiteResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateSiteResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateSiteResponseDefaultTypeInternal() {}
  union {
    UpdateSiteResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateSiteResponseDefaultTypeInternal _UpdateSiteResponse_default_instance_;

inline constexpr UpdateSiteRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        site_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR UpdateSiteRequest::UpdateSiteRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct UpdateSiteRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateSiteRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateSiteRequestDefaultTypeInternal() {}
  union {
    UpdateSiteRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateSiteRequestDefaultTypeInternal _UpdateSiteRequest_default_instance_;

inline constexpr ListSiteResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : sites_{},
        invalid_count_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ListSiteResponse::ListSiteResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ListSiteResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListSiteResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListSiteResponseDefaultTypeInternal() {}
  union {
    ListSiteResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListSiteResponseDefaultTypeInternal _ListSiteResponse_default_instance_;

inline constexpr GetSiteResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        site_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR GetSiteResponse::GetSiteResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetSiteResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetSiteResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetSiteResponseDefaultTypeInternal() {}
  union {
    GetSiteResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetSiteResponseDefaultTypeInternal _GetSiteResponse_default_instance_;

inline constexpr CreateSiteResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        site_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR CreateSiteResponse::CreateSiteResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CreateSiteResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateSiteResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateSiteResponseDefaultTypeInternal() {}
  union {
    CreateSiteResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateSiteResponseDefaultTypeInternal _CreateSiteResponse_default_instance_;

inline constexpr CreateSiteRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        site_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR CreateSiteRequest::CreateSiteRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CreateSiteRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateSiteRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateSiteRequestDefaultTypeInternal() {}
  union {
    CreateSiteRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateSiteRequestDefaultTypeInternal _CreateSiteRequest_default_instance_;
}  // namespace v202106alpha1
}  // namespace site
}  // namespace kentik
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_kentik_2fsite_2fv202106alpha1_2fsite_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_kentik_2fsite_2fv202106alpha1_2fsite_2eproto = nullptr;
const ::uint32_t
    TableStruct_kentik_2fsite_2fv202106alpha1_2fsite_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::site::v202106alpha1::SiteIpClassification, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::site::v202106alpha1::SiteIpClassification, _impl_.infrastructure_networks_),
        PROTOBUF_FIELD_OFFSET(::kentik::site::v202106alpha1::SiteIpClassification, _impl_.user_access_networks_),
        PROTOBUF_FIELD_OFFSET(::kentik::site::v202106alpha1::SiteIpClassification, _impl_.other_ips_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::site::v202106alpha1::SubLayer, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::site::v202106alpha1::SubLayer, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::kentik::site::v202106alpha1::SubLayer, _impl_.device_ids_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::site::v202106alpha1::Layer, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::site::v202106alpha1::Layer, _impl_.sub_layers_),
        PROTOBUF_FIELD_OFFSET(::kentik::site::v202106alpha1::Site, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::kentik::site::v202106alpha1::Site, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::site::v202106alpha1::Site, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::kentik::site::v202106alpha1::Site, _impl_.title_),
        PROTOBUF_FIELD_OFFSET(::kentik::site::v202106alpha1::Site, _impl_.coordinate_),
        PROTOBUF_FIELD_OFFSET(::kentik::site::v202106alpha1::Site, _impl_.address_),
        PROTOBUF_FIELD_OFFSET(::kentik::site::v202106alpha1::Site, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::kentik::site::v202106alpha1::Site, _impl_.classification_),
        PROTOBUF_FIELD_OFFSET(::kentik::site::v202106alpha1::Site, _impl_.architecture_),
        ~0u,
        ~0u,
        0,
        1,
        ~0u,
        2,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::site::v202106alpha1::ListSiteRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::site::v202106alpha1::ListSiteResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::site::v202106alpha1::ListSiteResponse, _impl_.sites_),
        PROTOBUF_FIELD_OFFSET(::kentik::site::v202106alpha1::ListSiteResponse, _impl_.invalid_count_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::site::v202106alpha1::GetSiteRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::site::v202106alpha1::GetSiteRequest, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::kentik::site::v202106alpha1::GetSiteResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::kentik::site::v202106alpha1::GetSiteResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::site::v202106alpha1::GetSiteResponse, _impl_.site_),
        0,
        PROTOBUF_FIELD_OFFSET(::kentik::site::v202106alpha1::CreateSiteRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::kentik::site::v202106alpha1::CreateSiteRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::site::v202106alpha1::CreateSiteRequest, _impl_.site_),
        0,
        PROTOBUF_FIELD_OFFSET(::kentik::site::v202106alpha1::CreateSiteResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::kentik::site::v202106alpha1::CreateSiteResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::site::v202106alpha1::CreateSiteResponse, _impl_.site_),
        0,
        PROTOBUF_FIELD_OFFSET(::kentik::site::v202106alpha1::UpdateSiteRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::kentik::site::v202106alpha1::UpdateSiteRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::site::v202106alpha1::UpdateSiteRequest, _impl_.site_),
        0,
        PROTOBUF_FIELD_OFFSET(::kentik::site::v202106alpha1::UpdateSiteResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::kentik::site::v202106alpha1::UpdateSiteResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::site::v202106alpha1::UpdateSiteResponse, _impl_.site_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::site::v202106alpha1::DeleteSiteRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::site::v202106alpha1::DeleteSiteRequest, _impl_.id_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::site::v202106alpha1::DeleteSiteResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::kentik::site::v202106alpha1::SiteIpClassification)},
        {11, -1, -1, sizeof(::kentik::site::v202106alpha1::SubLayer)},
        {21, -1, -1, sizeof(::kentik::site::v202106alpha1::Layer)},
        {30, 45, -1, sizeof(::kentik::site::v202106alpha1::Site)},
        {52, -1, -1, sizeof(::kentik::site::v202106alpha1::ListSiteRequest)},
        {60, -1, -1, sizeof(::kentik::site::v202106alpha1::ListSiteResponse)},
        {70, -1, -1, sizeof(::kentik::site::v202106alpha1::GetSiteRequest)},
        {79, 88, -1, sizeof(::kentik::site::v202106alpha1::GetSiteResponse)},
        {89, 98, -1, sizeof(::kentik::site::v202106alpha1::CreateSiteRequest)},
        {99, 108, -1, sizeof(::kentik::site::v202106alpha1::CreateSiteResponse)},
        {109, 118, -1, sizeof(::kentik::site::v202106alpha1::UpdateSiteRequest)},
        {119, 128, -1, sizeof(::kentik::site::v202106alpha1::UpdateSiteResponse)},
        {129, -1, -1, sizeof(::kentik::site::v202106alpha1::DeleteSiteRequest)},
        {138, -1, -1, sizeof(::kentik::site::v202106alpha1::DeleteSiteResponse)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::kentik::site::v202106alpha1::_SiteIpClassification_default_instance_._instance,
    &::kentik::site::v202106alpha1::_SubLayer_default_instance_._instance,
    &::kentik::site::v202106alpha1::_Layer_default_instance_._instance,
    &::kentik::site::v202106alpha1::_Site_default_instance_._instance,
    &::kentik::site::v202106alpha1::_ListSiteRequest_default_instance_._instance,
    &::kentik::site::v202106alpha1::_ListSiteResponse_default_instance_._instance,
    &::kentik::site::v202106alpha1::_GetSiteRequest_default_instance_._instance,
    &::kentik::site::v202106alpha1::_GetSiteResponse_default_instance_._instance,
    &::kentik::site::v202106alpha1::_CreateSiteRequest_default_instance_._instance,
    &::kentik::site::v202106alpha1::_CreateSiteResponse_default_instance_._instance,
    &::kentik::site::v202106alpha1::_UpdateSiteRequest_default_instance_._instance,
    &::kentik::site::v202106alpha1::_UpdateSiteResponse_default_instance_._instance,
    &::kentik::site::v202106alpha1::_DeleteSiteRequest_default_instance_._instance,
    &::kentik::site::v202106alpha1::_DeleteSiteResponse_default_instance_._instance,
};
const char descriptor_table_protodef_kentik_2fsite_2fv202106alpha1_2fsite_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n$kentik/site/v202106alpha1/site.proto\022\031"
    "kentik.site.v202106alpha1\032\034google/api/an"
    "notations.proto\032\027google/api/client.proto"
    "\032\030google/type/latlng.proto\032 google/type/"
    "postal_address.proto\032.protoc-gen-openapi"
    "v2/options/annotations.proto\032%kentik/cor"
    "e/v202303/annotations.proto\"\236\001\n\024SiteIpCl"
    "assification\0227\n\027infrastructure_networks\030"
    "\001 \003(\tR\026infrastructureNetworks\0220\n\024user_ac"
    "cess_networks\030\002 \003(\tR\022userAccessNetworks\022"
    "\033\n\tother_ips\030\003 \003(\tR\010otherIps\"=\n\010SubLayer"
    "\022\022\n\004name\030\001 \001(\tR\004name\022\035\n\ndevice_ids\030\002 \003(\t"
    "R\tdeviceIds\"K\n\005Layer\022B\n\nsub_layers\030\001 \003(\013"
    "2#.kentik.site.v202106alpha1.SubLayerR\ts"
    "ubLayers\"\365\002\n\004Site\022\016\n\002id\030\001 \001(\tR\002id\022\024\n\005tit"
    "le\030\003 \001(\tR\005title\0223\n\ncoordinate\030\004 \001(\0132\023.go"
    "ogle.type.LatLngR\ncoordinate\0224\n\007address\030"
    "\005 \001(\0132\032.google.type.PostalAddressR\007addre"
    "ss\0227\n\004type\030\006 \001(\0162#.kentik.site.v202106al"
    "pha1.SiteTypeR\004type\022W\n\016classification\030\007 "
    "\001(\0132/.kentik.site.v202106alpha1.SiteIpCl"
    "assificationR\016classification\022D\n\014architec"
    "ture\030\010 \003(\0132 .kentik.site.v202106alpha1.L"
    "ayerR\014architectureJ\004\010\002\020\003\"\021\n\017ListSiteRequ"
    "est\"n\n\020ListSiteResponse\0225\n\005sites\030\001 \003(\0132\037"
    ".kentik.site.v202106alpha1.SiteR\005sites\022#"
    "\n\rinvalid_count\030\002 \001(\rR\014invalidCount\" \n\016G"
    "etSiteRequest\022\016\n\002id\030\001 \001(\tR\002id\"F\n\017GetSite"
    "Response\0223\n\004site\030\001 \001(\0132\037.kentik.site.v20"
    "2106alpha1.SiteR\004site\"H\n\021CreateSiteReque"
    "st\0223\n\004site\030\001 \001(\0132\037.kentik.site.v202106al"
    "pha1.SiteR\004site\"I\n\022CreateSiteResponse\0223\n"
    "\004site\030\001 \001(\0132\037.kentik.site.v202106alpha1."
    "SiteR\004site\"H\n\021UpdateSiteRequest\0223\n\004site\030"
    "\001 \001(\0132\037.kentik.site.v202106alpha1.SiteR\004"
    "site\"I\n\022UpdateSiteResponse\0223\n\004site\030\001 \001(\013"
    "2\037.kentik.site.v202106alpha1.SiteR\004site\""
    "#\n\021DeleteSiteRequest\022\016\n\002id\030\001 \001(\tR\002id\"\024\n\022"
    "DeleteSiteResponse*\264\001\n\010SiteType\022\031\n\025SITE_"
    "TYPE_UNSPECIFIED\020\000\022\031\n\025SITE_TYPE_DATA_CEN"
    "TER\020\001\022\023\n\017SITE_TYPE_CLOUD\020\002\022\024\n\020SITE_TYPE_"
    "BRANCH\020\003\022\032\n\026SITE_TYPE_CONNECTIVITY\020\004\022\026\n\022"
    "SITE_TYPE_CUSTOMER\020\005\022\023\n\017SITE_TYPE_OTHER\020"
    "\0062\334\t\n\013SiteService\022\315\001\n\010ListSite\022*.kentik."
    "site.v202106alpha1.ListSiteRequest\032+.ken"
    "tik.site.v202106alpha1.ListSiteResponse\""
    "h\222A1\022\013List sites.\032\030Returns a list of sit"
    "es.*\010SiteList\362\327\002\017admin.site:read\202\323\344\223\002\033\022\031"
    "/site/v202106alpha1/sites\022\352\001\n\007GetSite\022)."
    "kentik.site.v202106alpha1.GetSiteRequest"
    "\032*.kentik.site.v202106alpha1.GetSiteResp"
    "onse\"\207\001\222AK\022\013Get a site.\0323Returns informa"
    "tion about a site specified with ID.*\007Si"
    "teGet\362\327\002\017admin.site:read\202\323\344\223\002 \022\036/site/v2"
    "02106alpha1/sites/{id}\022\361\001\n\nCreateSite\022,."
    "kentik.site.v202106alpha1.CreateSiteRequ"
    "est\032-.kentik.site.v202106alpha1.CreateSi"
    "teResponse\"\205\001\222AJ\022\016Create a site.\032,Create"
    " a site from request. returns created.*\n"
    "SiteCreate\362\327\002\020admin.site:write\202\323\344\223\002\036\"\031/s"
    "ite/v202106alpha1/sites:\001*\022\205\002\n\nUpdateSit"
    "e\022,.kentik.site.v202106alpha1.UpdateSite"
    "Request\032-.kentik.site.v202106alpha1.Upda"
    "teSiteResponse\"\231\001\222AT\022\016Update a site.\0326Re"
    "places the entire site attributes specif"
    "ied with id.*\nSiteUpdate\362\327\002\020admin.site:w"
    "rite\202\323\344\223\002(\032#/site/v202106alpha1/sites/{s"
    "ite.id}:\001*\022\351\001\n\nDeleteSite\022,.kentik.site."
    "v202106alpha1.DeleteSiteRequest\032-.kentik"
    ".site.v202106alpha1.DeleteSiteResponse\"~"
    "\222AA\022\016Delete a site.\032#Deletes the site sp"
    "ecified with id.*\nSiteDelete\362\327\002\020admin.si"
    "te:write\202\323\344\223\002 *\036/site/v202106alpha1/site"
    "s/{id}\032(\312A\023grpc.api.kentik.com\352\327\002\nadmin."
    "site\220\330\002\003B\264\003ZIgithub.com/kentik/api-schem"
    "a-public/gen/go/kentik/site/v202106alpha"
    "1;site\222A\345\002\022\177\n\010Site API\022K--- This API has"
    " been deprecated and will be removed in "
    "the near future ---\"\030\n\026Kentik API Engine"
    "ering2\014202106alpha1*\001\0022\020application/json"
    ":\020application/jsonZD\n\036\n\005email\022\025\010\002\032\017X-CH-"
    "Auth-Email \002\n\"\n\005token\022\031\010\002\032\023X-CH-Auth-API"
    "-Token \002b\026\n\t\n\005email\022\000\n\t\n\005token\022\000r]\n%Gene"
    "ral information about Kentik APIs\0224https"
    "://kb.kentik.com/v0/Ab09.htm#Ab09-APIs_O"
    "verviewb\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_kentik_2fsite_2fv202106alpha1_2fsite_2eproto_deps[6] =
    {
        &::descriptor_table_google_2fapi_2fannotations_2eproto,
        &::descriptor_table_google_2fapi_2fclient_2eproto,
        &::descriptor_table_google_2ftype_2flatlng_2eproto,
        &::descriptor_table_google_2ftype_2fpostal_5faddress_2eproto,
        &::descriptor_table_kentik_2fcore_2fv202303_2fannotations_2eproto,
        &::descriptor_table_protoc_2dgen_2dopenapiv2_2foptions_2fannotations_2eproto,
};
static ::absl::once_flag descriptor_table_kentik_2fsite_2fv202106alpha1_2fsite_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_kentik_2fsite_2fv202106alpha1_2fsite_2eproto = {
    false,
    false,
    3415,
    descriptor_table_protodef_kentik_2fsite_2fv202106alpha1_2fsite_2eproto,
    "kentik/site/v202106alpha1/site.proto",
    &descriptor_table_kentik_2fsite_2fv202106alpha1_2fsite_2eproto_once,
    descriptor_table_kentik_2fsite_2fv202106alpha1_2fsite_2eproto_deps,
    6,
    14,
    schemas,
    file_default_instances,
    TableStruct_kentik_2fsite_2fv202106alpha1_2fsite_2eproto::offsets,
    file_level_enum_descriptors_kentik_2fsite_2fv202106alpha1_2fsite_2eproto,
    file_level_service_descriptors_kentik_2fsite_2fv202106alpha1_2fsite_2eproto,
};
namespace kentik {
namespace site {
namespace v202106alpha1 {
const ::google::protobuf::EnumDescriptor* SiteType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_kentik_2fsite_2fv202106alpha1_2fsite_2eproto);
  return file_level_enum_descriptors_kentik_2fsite_2fv202106alpha1_2fsite_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t SiteType_internal_data_[] = {
    458752u, 0u, };
bool SiteType_IsValid(int value) {
  return 0 <= value && value <= 6;
}
// ===================================================================

class SiteIpClassification::_Internal {
 public:
};

SiteIpClassification::SiteIpClassification(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.site.v202106alpha1.SiteIpClassification)
}
inline PROTOBUF_NDEBUG_INLINE SiteIpClassification::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::site::v202106alpha1::SiteIpClassification& from_msg)
      : infrastructure_networks_{visibility, arena, from.infrastructure_networks_},
        user_access_networks_{visibility, arena, from.user_access_networks_},
        other_ips_{visibility, arena, from.other_ips_},
        _cached_size_{0} {}

SiteIpClassification::SiteIpClassification(
    ::google::protobuf::Arena* arena,
    const SiteIpClassification& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SiteIpClassification* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:kentik.site.v202106alpha1.SiteIpClassification)
}
inline PROTOBUF_NDEBUG_INLINE SiteIpClassification::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : infrastructure_networks_{visibility, arena},
        user_access_networks_{visibility, arena},
        other_ips_{visibility, arena},
        _cached_size_{0} {}

inline void SiteIpClassification::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
SiteIpClassification::~SiteIpClassification() {
  // @@protoc_insertion_point(destructor:kentik.site.v202106alpha1.SiteIpClassification)
  SharedDtor(*this);
}
inline void SiteIpClassification::SharedDtor(MessageLite& self) {
  SiteIpClassification& this_ = static_cast<SiteIpClassification&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* SiteIpClassification::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SiteIpClassification(arena);
}
constexpr auto SiteIpClassification::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(SiteIpClassification, _impl_.infrastructure_networks_) +
          decltype(SiteIpClassification::_impl_.infrastructure_networks_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(SiteIpClassification, _impl_.user_access_networks_) +
          decltype(SiteIpClassification::_impl_.user_access_networks_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(SiteIpClassification, _impl_.other_ips_) +
          decltype(SiteIpClassification::_impl_.other_ips_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(SiteIpClassification), alignof(SiteIpClassification), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&SiteIpClassification::PlacementNew_,
                                 sizeof(SiteIpClassification),
                                 alignof(SiteIpClassification));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SiteIpClassification::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SiteIpClassification_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SiteIpClassification::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SiteIpClassification>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SiteIpClassification::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SiteIpClassification>(), &SiteIpClassification::ByteSizeLong,
            &SiteIpClassification::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SiteIpClassification, _impl_._cached_size_),
        false,
    },
    &SiteIpClassification::kDescriptorMethods,
    &descriptor_table_kentik_2fsite_2fv202106alpha1_2fsite_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SiteIpClassification::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 107, 2> SiteIpClassification::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::site::v202106alpha1::SiteIpClassification>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated string infrastructure_networks = 1 [json_name = "infrastructureNetworks"];
    {::_pbi::TcParser::FastUR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SiteIpClassification, _impl_.infrastructure_networks_)}},
    // repeated string user_access_networks = 2 [json_name = "userAccessNetworks"];
    {::_pbi::TcParser::FastUR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SiteIpClassification, _impl_.user_access_networks_)}},
    // repeated string other_ips = 3 [json_name = "otherIps"];
    {::_pbi::TcParser::FastUR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(SiteIpClassification, _impl_.other_ips_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string infrastructure_networks = 1 [json_name = "infrastructureNetworks"];
    {PROTOBUF_FIELD_OFFSET(SiteIpClassification, _impl_.infrastructure_networks_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated string user_access_networks = 2 [json_name = "userAccessNetworks"];
    {PROTOBUF_FIELD_OFFSET(SiteIpClassification, _impl_.user_access_networks_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated string other_ips = 3 [json_name = "otherIps"];
    {PROTOBUF_FIELD_OFFSET(SiteIpClassification, _impl_.other_ips_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\56\27\24\11\0\0\0\0"
    "kentik.site.v202106alpha1.SiteIpClassification"
    "infrastructure_networks"
    "user_access_networks"
    "other_ips"
  }},
};

PROTOBUF_NOINLINE void SiteIpClassification::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.site.v202106alpha1.SiteIpClassification)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.infrastructure_networks_.Clear();
  _impl_.user_access_networks_.Clear();
  _impl_.other_ips_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SiteIpClassification::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SiteIpClassification& this_ = static_cast<const SiteIpClassification&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SiteIpClassification::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SiteIpClassification& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.site.v202106alpha1.SiteIpClassification)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated string infrastructure_networks = 1 [json_name = "infrastructureNetworks"];
          for (int i = 0, n = this_._internal_infrastructure_networks_size(); i < n; ++i) {
            const auto& s = this_._internal_infrastructure_networks().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.site.v202106alpha1.SiteIpClassification.infrastructure_networks");
            target = stream->WriteString(1, s, target);
          }

          // repeated string user_access_networks = 2 [json_name = "userAccessNetworks"];
          for (int i = 0, n = this_._internal_user_access_networks_size(); i < n; ++i) {
            const auto& s = this_._internal_user_access_networks().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.site.v202106alpha1.SiteIpClassification.user_access_networks");
            target = stream->WriteString(2, s, target);
          }

          // repeated string other_ips = 3 [json_name = "otherIps"];
          for (int i = 0, n = this_._internal_other_ips_size(); i < n; ++i) {
            const auto& s = this_._internal_other_ips().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.site.v202106alpha1.SiteIpClassification.other_ips");
            target = stream->WriteString(3, s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.site.v202106alpha1.SiteIpClassification)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SiteIpClassification::ByteSizeLong(const MessageLite& base) {
          const SiteIpClassification& this_ = static_cast<const SiteIpClassification&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SiteIpClassification::ByteSizeLong() const {
          const SiteIpClassification& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.site.v202106alpha1.SiteIpClassification)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string infrastructure_networks = 1 [json_name = "infrastructureNetworks"];
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_infrastructure_networks().size());
              for (int i = 0, n = this_._internal_infrastructure_networks().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_infrastructure_networks().Get(i));
              }
            }
            // repeated string user_access_networks = 2 [json_name = "userAccessNetworks"];
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_user_access_networks().size());
              for (int i = 0, n = this_._internal_user_access_networks().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_user_access_networks().Get(i));
              }
            }
            // repeated string other_ips = 3 [json_name = "otherIps"];
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_other_ips().size());
              for (int i = 0, n = this_._internal_other_ips().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_other_ips().Get(i));
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SiteIpClassification::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SiteIpClassification*>(&to_msg);
  auto& from = static_cast<const SiteIpClassification&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.site.v202106alpha1.SiteIpClassification)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_infrastructure_networks()->MergeFrom(from._internal_infrastructure_networks());
  _this->_internal_mutable_user_access_networks()->MergeFrom(from._internal_user_access_networks());
  _this->_internal_mutable_other_ips()->MergeFrom(from._internal_other_ips());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SiteIpClassification::CopyFrom(const SiteIpClassification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.site.v202106alpha1.SiteIpClassification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SiteIpClassification::InternalSwap(SiteIpClassification* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.infrastructure_networks_.InternalSwap(&other->_impl_.infrastructure_networks_);
  _impl_.user_access_networks_.InternalSwap(&other->_impl_.user_access_networks_);
  _impl_.other_ips_.InternalSwap(&other->_impl_.other_ips_);
}

::google::protobuf::Metadata SiteIpClassification::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SubLayer::_Internal {
 public:
};

SubLayer::SubLayer(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.site.v202106alpha1.SubLayer)
}
inline PROTOBUF_NDEBUG_INLINE SubLayer::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::site::v202106alpha1::SubLayer& from_msg)
      : device_ids_{visibility, arena, from.device_ids_},
        name_(arena, from.name_),
        _cached_size_{0} {}

SubLayer::SubLayer(
    ::google::protobuf::Arena* arena,
    const SubLayer& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SubLayer* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:kentik.site.v202106alpha1.SubLayer)
}
inline PROTOBUF_NDEBUG_INLINE SubLayer::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : device_ids_{visibility, arena},
        name_(arena),
        _cached_size_{0} {}

inline void SubLayer::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
SubLayer::~SubLayer() {
  // @@protoc_insertion_point(destructor:kentik.site.v202106alpha1.SubLayer)
  SharedDtor(*this);
}
inline void SubLayer::SharedDtor(MessageLite& self) {
  SubLayer& this_ = static_cast<SubLayer&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.~Impl_();
}

inline void* SubLayer::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SubLayer(arena);
}
constexpr auto SubLayer::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(SubLayer, _impl_.device_ids_) +
          decltype(SubLayer::_impl_.device_ids_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(SubLayer), alignof(SubLayer), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&SubLayer::PlacementNew_,
                                 sizeof(SubLayer),
                                 alignof(SubLayer));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SubLayer::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SubLayer_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SubLayer::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SubLayer>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SubLayer::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SubLayer>(), &SubLayer::ByteSizeLong,
            &SubLayer::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SubLayer, _impl_._cached_size_),
        false,
    },
    &SubLayer::kDescriptorMethods,
    &descriptor_table_kentik_2fsite_2fv202106alpha1_2fsite_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SubLayer::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 57, 2> SubLayer::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::site::v202106alpha1::SubLayer>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated string device_ids = 2 [json_name = "deviceIds"];
    {::_pbi::TcParser::FastUR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SubLayer, _impl_.device_ids_)}},
    // string name = 1 [json_name = "name"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SubLayer, _impl_.name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1 [json_name = "name"];
    {PROTOBUF_FIELD_OFFSET(SubLayer, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated string device_ids = 2 [json_name = "deviceIds"];
    {PROTOBUF_FIELD_OFFSET(SubLayer, _impl_.device_ids_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\42\4\12\0\0\0\0\0"
    "kentik.site.v202106alpha1.SubLayer"
    "name"
    "device_ids"
  }},
};

PROTOBUF_NOINLINE void SubLayer::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.site.v202106alpha1.SubLayer)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.device_ids_.Clear();
  _impl_.name_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SubLayer::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SubLayer& this_ = static_cast<const SubLayer&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SubLayer::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SubLayer& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.site.v202106alpha1.SubLayer)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string name = 1 [json_name = "name"];
          if (!this_._internal_name().empty()) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.site.v202106alpha1.SubLayer.name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // repeated string device_ids = 2 [json_name = "deviceIds"];
          for (int i = 0, n = this_._internal_device_ids_size(); i < n; ++i) {
            const auto& s = this_._internal_device_ids().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.site.v202106alpha1.SubLayer.device_ids");
            target = stream->WriteString(2, s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.site.v202106alpha1.SubLayer)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SubLayer::ByteSizeLong(const MessageLite& base) {
          const SubLayer& this_ = static_cast<const SubLayer&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SubLayer::ByteSizeLong() const {
          const SubLayer& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.site.v202106alpha1.SubLayer)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string device_ids = 2 [json_name = "deviceIds"];
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_device_ids().size());
              for (int i = 0, n = this_._internal_device_ids().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_device_ids().Get(i));
              }
            }
          }
           {
            // string name = 1 [json_name = "name"];
            if (!this_._internal_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SubLayer::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SubLayer*>(&to_msg);
  auto& from = static_cast<const SubLayer&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.site.v202106alpha1.SubLayer)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_device_ids()->MergeFrom(from._internal_device_ids());
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SubLayer::CopyFrom(const SubLayer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.site.v202106alpha1.SubLayer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SubLayer::InternalSwap(SubLayer* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.device_ids_.InternalSwap(&other->_impl_.device_ids_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
}

::google::protobuf::Metadata SubLayer::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Layer::_Internal {
 public:
};

Layer::Layer(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.site.v202106alpha1.Layer)
}
inline PROTOBUF_NDEBUG_INLINE Layer::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::site::v202106alpha1::Layer& from_msg)
      : sub_layers_{visibility, arena, from.sub_layers_},
        _cached_size_{0} {}

Layer::Layer(
    ::google::protobuf::Arena* arena,
    const Layer& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Layer* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:kentik.site.v202106alpha1.Layer)
}
inline PROTOBUF_NDEBUG_INLINE Layer::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : sub_layers_{visibility, arena},
        _cached_size_{0} {}

inline void Layer::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Layer::~Layer() {
  // @@protoc_insertion_point(destructor:kentik.site.v202106alpha1.Layer)
  SharedDtor(*this);
}
inline void Layer::SharedDtor(MessageLite& self) {
  Layer& this_ = static_cast<Layer&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* Layer::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Layer(arena);
}
constexpr auto Layer::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Layer, _impl_.sub_layers_) +
          decltype(Layer::_impl_.sub_layers_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(Layer), alignof(Layer), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Layer::PlacementNew_,
                                 sizeof(Layer),
                                 alignof(Layer));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Layer::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Layer_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Layer::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Layer>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Layer::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Layer>(), &Layer::ByteSizeLong,
            &Layer::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Layer, _impl_._cached_size_),
        false,
    },
    &Layer::kDescriptorMethods,
    &descriptor_table_kentik_2fsite_2fv202106alpha1_2fsite_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Layer::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> Layer::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::site::v202106alpha1::Layer>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .kentik.site.v202106alpha1.SubLayer sub_layers = 1 [json_name = "subLayers"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Layer, _impl_.sub_layers_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .kentik.site.v202106alpha1.SubLayer sub_layers = 1 [json_name = "subLayers"];
    {PROTOBUF_FIELD_OFFSET(Layer, _impl_.sub_layers_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::kentik::site::v202106alpha1::SubLayer>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Layer::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.site.v202106alpha1.Layer)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.sub_layers_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Layer::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Layer& this_ = static_cast<const Layer&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Layer::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Layer& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.site.v202106alpha1.Layer)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .kentik.site.v202106alpha1.SubLayer sub_layers = 1 [json_name = "subLayers"];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_sub_layers_size());
               i < n; i++) {
            const auto& repfield = this_._internal_sub_layers().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.site.v202106alpha1.Layer)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Layer::ByteSizeLong(const MessageLite& base) {
          const Layer& this_ = static_cast<const Layer&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Layer::ByteSizeLong() const {
          const Layer& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.site.v202106alpha1.Layer)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .kentik.site.v202106alpha1.SubLayer sub_layers = 1 [json_name = "subLayers"];
            {
              total_size += 1UL * this_._internal_sub_layers_size();
              for (const auto& msg : this_._internal_sub_layers()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Layer::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Layer*>(&to_msg);
  auto& from = static_cast<const Layer&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.site.v202106alpha1.Layer)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_sub_layers()->MergeFrom(
      from._internal_sub_layers());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Layer::CopyFrom(const Layer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.site.v202106alpha1.Layer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Layer::InternalSwap(Layer* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.sub_layers_.InternalSwap(&other->_impl_.sub_layers_);
}

::google::protobuf::Metadata Layer::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Site::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Site>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Site, _impl_._has_bits_);
};

void Site::clear_coordinate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.coordinate_ != nullptr) _impl_.coordinate_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void Site::clear_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.address_ != nullptr) _impl_.address_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
Site::Site(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.site.v202106alpha1.Site)
}
inline PROTOBUF_NDEBUG_INLINE Site::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::site::v202106alpha1::Site& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        architecture_{visibility, arena, from.architecture_},
        id_(arena, from.id_),
        title_(arena, from.title_) {}

Site::Site(
    ::google::protobuf::Arena* arena,
    const Site& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Site* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.coordinate_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::type::LatLng>(
                              arena, *from._impl_.coordinate_)
                        : nullptr;
  _impl_.address_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::google::type::PostalAddress>(
                              arena, *from._impl_.address_)
                        : nullptr;
  _impl_.classification_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::kentik::site::v202106alpha1::SiteIpClassification>(
                              arena, *from._impl_.classification_)
                        : nullptr;
  _impl_.type_ = from._impl_.type_;

  // @@protoc_insertion_point(copy_constructor:kentik.site.v202106alpha1.Site)
}
inline PROTOBUF_NDEBUG_INLINE Site::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        architecture_{visibility, arena},
        id_(arena),
        title_(arena) {}

inline void Site::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, coordinate_),
           0,
           offsetof(Impl_, type_) -
               offsetof(Impl_, coordinate_) +
               sizeof(Impl_::type_));
}
Site::~Site() {
  // @@protoc_insertion_point(destructor:kentik.site.v202106alpha1.Site)
  SharedDtor(*this);
}
inline void Site::SharedDtor(MessageLite& self) {
  Site& this_ = static_cast<Site&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.id_.Destroy();
  this_._impl_.title_.Destroy();
  delete this_._impl_.coordinate_;
  delete this_._impl_.address_;
  delete this_._impl_.classification_;
  this_._impl_.~Impl_();
}

inline void* Site::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Site(arena);
}
constexpr auto Site::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Site, _impl_.architecture_) +
          decltype(Site::_impl_.architecture_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(Site), alignof(Site), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Site::PlacementNew_,
                                 sizeof(Site),
                                 alignof(Site));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Site::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Site_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Site::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Site>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Site::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Site>(), &Site::ByteSizeLong,
            &Site::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Site, _impl_._cached_size_),
        false,
    },
    &Site::kDescriptorMethods,
    &descriptor_table_kentik_2fsite_2fv202106alpha1_2fsite_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Site::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 4, 46, 2> Site::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Site, _impl_._has_bits_),
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967042,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::site::v202106alpha1::Site>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .kentik.site.v202106alpha1.Layer architecture = 8 [json_name = "architecture"];
    {::_pbi::TcParser::FastMtR1,
     {66, 63, 3, PROTOBUF_FIELD_OFFSET(Site, _impl_.architecture_)}},
    // string id = 1 [json_name = "id"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Site, _impl_.id_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // string title = 3 [json_name = "title"];
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Site, _impl_.title_)}},
    // .google.type.LatLng coordinate = 4 [json_name = "coordinate"];
    {::_pbi::TcParser::FastMtS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(Site, _impl_.coordinate_)}},
    // .google.type.PostalAddress address = 5 [json_name = "address"];
    {::_pbi::TcParser::FastMtS1,
     {42, 1, 1, PROTOBUF_FIELD_OFFSET(Site, _impl_.address_)}},
    // .kentik.site.v202106alpha1.SiteType type = 6 [json_name = "type"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Site, _impl_.type_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(Site, _impl_.type_)}},
    // .kentik.site.v202106alpha1.SiteIpClassification classification = 7 [json_name = "classification"];
    {::_pbi::TcParser::FastMtS1,
     {58, 2, 2, PROTOBUF_FIELD_OFFSET(Site, _impl_.classification_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1 [json_name = "id"];
    {PROTOBUF_FIELD_OFFSET(Site, _impl_.id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string title = 3 [json_name = "title"];
    {PROTOBUF_FIELD_OFFSET(Site, _impl_.title_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .google.type.LatLng coordinate = 4 [json_name = "coordinate"];
    {PROTOBUF_FIELD_OFFSET(Site, _impl_.coordinate_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.type.PostalAddress address = 5 [json_name = "address"];
    {PROTOBUF_FIELD_OFFSET(Site, _impl_.address_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .kentik.site.v202106alpha1.SiteType type = 6 [json_name = "type"];
    {PROTOBUF_FIELD_OFFSET(Site, _impl_.type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .kentik.site.v202106alpha1.SiteIpClassification classification = 7 [json_name = "classification"];
    {PROTOBUF_FIELD_OFFSET(Site, _impl_.classification_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .kentik.site.v202106alpha1.Layer architecture = 8 [json_name = "architecture"];
    {PROTOBUF_FIELD_OFFSET(Site, _impl_.architecture_), -1, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::type::LatLng>()},
    {::_pbi::TcParser::GetTable<::google::type::PostalAddress>()},
    {::_pbi::TcParser::GetTable<::kentik::site::v202106alpha1::SiteIpClassification>()},
    {::_pbi::TcParser::GetTable<::kentik::site::v202106alpha1::Layer>()},
  }}, {{
    "\36\2\5\0\0\0\0\0"
    "kentik.site.v202106alpha1.Site"
    "id"
    "title"
  }},
};

PROTOBUF_NOINLINE void Site::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.site.v202106alpha1.Site)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.architecture_.Clear();
  _impl_.id_.ClearToEmpty();
  _impl_.title_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.coordinate_ != nullptr);
      _impl_.coordinate_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.address_ != nullptr);
      _impl_.address_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.classification_ != nullptr);
      _impl_.classification_->Clear();
    }
  }
  _impl_.type_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Site::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Site& this_ = static_cast<const Site&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Site::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Site& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.site.v202106alpha1.Site)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string id = 1 [json_name = "id"];
          if (!this_._internal_id().empty()) {
            const std::string& _s = this_._internal_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.site.v202106alpha1.Site.id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string title = 3 [json_name = "title"];
          if (!this_._internal_title().empty()) {
            const std::string& _s = this_._internal_title();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.site.v202106alpha1.Site.title");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .google.type.LatLng coordinate = 4 [json_name = "coordinate"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                4, *this_._impl_.coordinate_, this_._impl_.coordinate_->GetCachedSize(), target,
                stream);
          }

          // .google.type.PostalAddress address = 5 [json_name = "address"];
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                5, *this_._impl_.address_, this_._impl_.address_->GetCachedSize(), target,
                stream);
          }

          // .kentik.site.v202106alpha1.SiteType type = 6 [json_name = "type"];
          if (this_._internal_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                6, this_._internal_type(), target);
          }

          // .kentik.site.v202106alpha1.SiteIpClassification classification = 7 [json_name = "classification"];
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                7, *this_._impl_.classification_, this_._impl_.classification_->GetCachedSize(), target,
                stream);
          }

          // repeated .kentik.site.v202106alpha1.Layer architecture = 8 [json_name = "architecture"];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_architecture_size());
               i < n; i++) {
            const auto& repfield = this_._internal_architecture().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    8, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.site.v202106alpha1.Site)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Site::ByteSizeLong(const MessageLite& base) {
          const Site& this_ = static_cast<const Site&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Site::ByteSizeLong() const {
          const Site& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.site.v202106alpha1.Site)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .kentik.site.v202106alpha1.Layer architecture = 8 [json_name = "architecture"];
            {
              total_size += 1UL * this_._internal_architecture_size();
              for (const auto& msg : this_._internal_architecture()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string id = 1 [json_name = "id"];
            if (!this_._internal_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_id());
            }
            // string title = 3 [json_name = "title"];
            if (!this_._internal_title().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_title());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000007u) {
            // .google.type.LatLng coordinate = 4 [json_name = "coordinate"];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.coordinate_);
            }
            // .google.type.PostalAddress address = 5 [json_name = "address"];
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.address_);
            }
            // .kentik.site.v202106alpha1.SiteIpClassification classification = 7 [json_name = "classification"];
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.classification_);
            }
          }
           {
            // .kentik.site.v202106alpha1.SiteType type = 6 [json_name = "type"];
            if (this_._internal_type() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_type());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Site::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Site*>(&to_msg);
  auto& from = static_cast<const Site&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.site.v202106alpha1.Site)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_architecture()->MergeFrom(
      from._internal_architecture());
  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (!from._internal_title().empty()) {
    _this->_internal_set_title(from._internal_title());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.coordinate_ != nullptr);
      if (_this->_impl_.coordinate_ == nullptr) {
        _this->_impl_.coordinate_ =
            ::google::protobuf::Message::CopyConstruct<::google::type::LatLng>(arena, *from._impl_.coordinate_);
      } else {
        _this->_impl_.coordinate_->MergeFrom(*from._impl_.coordinate_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.address_ != nullptr);
      if (_this->_impl_.address_ == nullptr) {
        _this->_impl_.address_ =
            ::google::protobuf::Message::CopyConstruct<::google::type::PostalAddress>(arena, *from._impl_.address_);
      } else {
        _this->_impl_.address_->MergeFrom(*from._impl_.address_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.classification_ != nullptr);
      if (_this->_impl_.classification_ == nullptr) {
        _this->_impl_.classification_ =
            ::google::protobuf::Message::CopyConstruct<::kentik::site::v202106alpha1::SiteIpClassification>(arena, *from._impl_.classification_);
      } else {
        _this->_impl_.classification_->MergeFrom(*from._impl_.classification_);
      }
    }
  }
  if (from._internal_type() != 0) {
    _this->_impl_.type_ = from._impl_.type_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Site::CopyFrom(const Site& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.site.v202106alpha1.Site)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Site::InternalSwap(Site* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.architecture_.InternalSwap(&other->_impl_.architecture_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.title_, &other->_impl_.title_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Site, _impl_.type_)
      + sizeof(Site::_impl_.type_)
      - PROTOBUF_FIELD_OFFSET(Site, _impl_.coordinate_)>(
          reinterpret_cast<char*>(&_impl_.coordinate_),
          reinterpret_cast<char*>(&other->_impl_.coordinate_));
}

::google::protobuf::Metadata Site::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ListSiteRequest::_Internal {
 public:
};

ListSiteRequest::ListSiteRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:kentik.site.v202106alpha1.ListSiteRequest)
}
ListSiteRequest::ListSiteRequest(
    ::google::protobuf::Arena* arena,
    const ListSiteRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ListSiteRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:kentik.site.v202106alpha1.ListSiteRequest)
}

inline void* ListSiteRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ListSiteRequest(arena);
}
constexpr auto ListSiteRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ListSiteRequest),
                                            alignof(ListSiteRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ListSiteRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ListSiteRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ListSiteRequest::MergeImpl,
        ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<ListSiteRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ListSiteRequest::SharedDtor,
        ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<ListSiteRequest>(), &ListSiteRequest::ByteSizeLong,
            &ListSiteRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ListSiteRequest, _impl_._cached_size_),
        false,
    },
    &ListSiteRequest::kDescriptorMethods,
    &descriptor_table_kentik_2fsite_2fv202106alpha1_2fsite_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ListSiteRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> ListSiteRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::site::v202106alpha1::ListSiteRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata ListSiteRequest::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ListSiteResponse::_Internal {
 public:
};

ListSiteResponse::ListSiteResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.site.v202106alpha1.ListSiteResponse)
}
inline PROTOBUF_NDEBUG_INLINE ListSiteResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::site::v202106alpha1::ListSiteResponse& from_msg)
      : sites_{visibility, arena, from.sites_},
        _cached_size_{0} {}

ListSiteResponse::ListSiteResponse(
    ::google::protobuf::Arena* arena,
    const ListSiteResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ListSiteResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.invalid_count_ = from._impl_.invalid_count_;

  // @@protoc_insertion_point(copy_constructor:kentik.site.v202106alpha1.ListSiteResponse)
}
inline PROTOBUF_NDEBUG_INLINE ListSiteResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : sites_{visibility, arena},
        _cached_size_{0} {}

inline void ListSiteResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.invalid_count_ = {};
}
ListSiteResponse::~ListSiteResponse() {
  // @@protoc_insertion_point(destructor:kentik.site.v202106alpha1.ListSiteResponse)
  SharedDtor(*this);
}
inline void ListSiteResponse::SharedDtor(MessageLite& self) {
  ListSiteResponse& this_ = static_cast<ListSiteResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* ListSiteResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ListSiteResponse(arena);
}
constexpr auto ListSiteResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ListSiteResponse, _impl_.sites_) +
          decltype(ListSiteResponse::_impl_.sites_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(ListSiteResponse), alignof(ListSiteResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ListSiteResponse::PlacementNew_,
                                 sizeof(ListSiteResponse),
                                 alignof(ListSiteResponse));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ListSiteResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ListSiteResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ListSiteResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ListSiteResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ListSiteResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ListSiteResponse>(), &ListSiteResponse::ByteSizeLong,
            &ListSiteResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ListSiteResponse, _impl_._cached_size_),
        false,
    },
    &ListSiteResponse::kDescriptorMethods,
    &descriptor_table_kentik_2fsite_2fv202106alpha1_2fsite_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ListSiteResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> ListSiteResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::site::v202106alpha1::ListSiteResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 invalid_count = 2 [json_name = "invalidCount"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ListSiteResponse, _impl_.invalid_count_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(ListSiteResponse, _impl_.invalid_count_)}},
    // repeated .kentik.site.v202106alpha1.Site sites = 1 [json_name = "sites"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ListSiteResponse, _impl_.sites_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .kentik.site.v202106alpha1.Site sites = 1 [json_name = "sites"];
    {PROTOBUF_FIELD_OFFSET(ListSiteResponse, _impl_.sites_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint32 invalid_count = 2 [json_name = "invalidCount"];
    {PROTOBUF_FIELD_OFFSET(ListSiteResponse, _impl_.invalid_count_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::kentik::site::v202106alpha1::Site>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void ListSiteResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.site.v202106alpha1.ListSiteResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.sites_.Clear();
  _impl_.invalid_count_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ListSiteResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ListSiteResponse& this_ = static_cast<const ListSiteResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ListSiteResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ListSiteResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.site.v202106alpha1.ListSiteResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .kentik.site.v202106alpha1.Site sites = 1 [json_name = "sites"];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_sites_size());
               i < n; i++) {
            const auto& repfield = this_._internal_sites().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // uint32 invalid_count = 2 [json_name = "invalidCount"];
          if (this_._internal_invalid_count() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_invalid_count(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.site.v202106alpha1.ListSiteResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ListSiteResponse::ByteSizeLong(const MessageLite& base) {
          const ListSiteResponse& this_ = static_cast<const ListSiteResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ListSiteResponse::ByteSizeLong() const {
          const ListSiteResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.site.v202106alpha1.ListSiteResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .kentik.site.v202106alpha1.Site sites = 1 [json_name = "sites"];
            {
              total_size += 1UL * this_._internal_sites_size();
              for (const auto& msg : this_._internal_sites()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // uint32 invalid_count = 2 [json_name = "invalidCount"];
            if (this_._internal_invalid_count() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_invalid_count());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ListSiteResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ListSiteResponse*>(&to_msg);
  auto& from = static_cast<const ListSiteResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.site.v202106alpha1.ListSiteResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_sites()->MergeFrom(
      from._internal_sites());
  if (from._internal_invalid_count() != 0) {
    _this->_impl_.invalid_count_ = from._impl_.invalid_count_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ListSiteResponse::CopyFrom(const ListSiteResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.site.v202106alpha1.ListSiteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ListSiteResponse::InternalSwap(ListSiteResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.sites_.InternalSwap(&other->_impl_.sites_);
        swap(_impl_.invalid_count_, other->_impl_.invalid_count_);
}

::google::protobuf::Metadata ListSiteResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetSiteRequest::_Internal {
 public:
};

GetSiteRequest::GetSiteRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.site.v202106alpha1.GetSiteRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetSiteRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::site::v202106alpha1::GetSiteRequest& from_msg)
      : id_(arena, from.id_),
        _cached_size_{0} {}

GetSiteRequest::GetSiteRequest(
    ::google::protobuf::Arena* arena,
    const GetSiteRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetSiteRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:kentik.site.v202106alpha1.GetSiteRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetSiteRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : id_(arena),
        _cached_size_{0} {}

inline void GetSiteRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GetSiteRequest::~GetSiteRequest() {
  // @@protoc_insertion_point(destructor:kentik.site.v202106alpha1.GetSiteRequest)
  SharedDtor(*this);
}
inline void GetSiteRequest::SharedDtor(MessageLite& self) {
  GetSiteRequest& this_ = static_cast<GetSiteRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* GetSiteRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GetSiteRequest(arena);
}
constexpr auto GetSiteRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(GetSiteRequest),
                                            alignof(GetSiteRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GetSiteRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GetSiteRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GetSiteRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GetSiteRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GetSiteRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GetSiteRequest>(), &GetSiteRequest::ByteSizeLong,
            &GetSiteRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GetSiteRequest, _impl_._cached_size_),
        false,
    },
    &GetSiteRequest::kDescriptorMethods,
    &descriptor_table_kentik_2fsite_2fv202106alpha1_2fsite_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GetSiteRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 51, 2> GetSiteRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::site::v202106alpha1::GetSiteRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string id = 1 [json_name = "id"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetSiteRequest, _impl_.id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1 [json_name = "id"];
    {PROTOBUF_FIELD_OFFSET(GetSiteRequest, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\50\2\0\0\0\0\0\0"
    "kentik.site.v202106alpha1.GetSiteRequest"
    "id"
  }},
};

PROTOBUF_NOINLINE void GetSiteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.site.v202106alpha1.GetSiteRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GetSiteRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GetSiteRequest& this_ = static_cast<const GetSiteRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GetSiteRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GetSiteRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.site.v202106alpha1.GetSiteRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string id = 1 [json_name = "id"];
          if (!this_._internal_id().empty()) {
            const std::string& _s = this_._internal_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.site.v202106alpha1.GetSiteRequest.id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.site.v202106alpha1.GetSiteRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GetSiteRequest::ByteSizeLong(const MessageLite& base) {
          const GetSiteRequest& this_ = static_cast<const GetSiteRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GetSiteRequest::ByteSizeLong() const {
          const GetSiteRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.site.v202106alpha1.GetSiteRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // string id = 1 [json_name = "id"];
            if (!this_._internal_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GetSiteRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetSiteRequest*>(&to_msg);
  auto& from = static_cast<const GetSiteRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.site.v202106alpha1.GetSiteRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetSiteRequest::CopyFrom(const GetSiteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.site.v202106alpha1.GetSiteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetSiteRequest::InternalSwap(GetSiteRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
}

::google::protobuf::Metadata GetSiteRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetSiteResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<GetSiteResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetSiteResponse, _impl_._has_bits_);
};

GetSiteResponse::GetSiteResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.site.v202106alpha1.GetSiteResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetSiteResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::site::v202106alpha1::GetSiteResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

GetSiteResponse::GetSiteResponse(
    ::google::protobuf::Arena* arena,
    const GetSiteResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetSiteResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.site_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::kentik::site::v202106alpha1::Site>(
                              arena, *from._impl_.site_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:kentik.site.v202106alpha1.GetSiteResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetSiteResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void GetSiteResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.site_ = {};
}
GetSiteResponse::~GetSiteResponse() {
  // @@protoc_insertion_point(destructor:kentik.site.v202106alpha1.GetSiteResponse)
  SharedDtor(*this);
}
inline void GetSiteResponse::SharedDtor(MessageLite& self) {
  GetSiteResponse& this_ = static_cast<GetSiteResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.site_;
  this_._impl_.~Impl_();
}

inline void* GetSiteResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GetSiteResponse(arena);
}
constexpr auto GetSiteResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(GetSiteResponse),
                                            alignof(GetSiteResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GetSiteResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GetSiteResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GetSiteResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GetSiteResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GetSiteResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GetSiteResponse>(), &GetSiteResponse::ByteSizeLong,
            &GetSiteResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GetSiteResponse, _impl_._cached_size_),
        false,
    },
    &GetSiteResponse::kDescriptorMethods,
    &descriptor_table_kentik_2fsite_2fv202106alpha1_2fsite_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GetSiteResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> GetSiteResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetSiteResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::site::v202106alpha1::GetSiteResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .kentik.site.v202106alpha1.Site site = 1 [json_name = "site"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GetSiteResponse, _impl_.site_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .kentik.site.v202106alpha1.Site site = 1 [json_name = "site"];
    {PROTOBUF_FIELD_OFFSET(GetSiteResponse, _impl_.site_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::kentik::site::v202106alpha1::Site>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void GetSiteResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.site.v202106alpha1.GetSiteResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.site_ != nullptr);
    _impl_.site_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GetSiteResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GetSiteResponse& this_ = static_cast<const GetSiteResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GetSiteResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GetSiteResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.site.v202106alpha1.GetSiteResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .kentik.site.v202106alpha1.Site site = 1 [json_name = "site"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.site_, this_._impl_.site_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.site.v202106alpha1.GetSiteResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GetSiteResponse::ByteSizeLong(const MessageLite& base) {
          const GetSiteResponse& this_ = static_cast<const GetSiteResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GetSiteResponse::ByteSizeLong() const {
          const GetSiteResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.site.v202106alpha1.GetSiteResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .kentik.site.v202106alpha1.Site site = 1 [json_name = "site"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.site_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GetSiteResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetSiteResponse*>(&to_msg);
  auto& from = static_cast<const GetSiteResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.site.v202106alpha1.GetSiteResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.site_ != nullptr);
    if (_this->_impl_.site_ == nullptr) {
      _this->_impl_.site_ =
          ::google::protobuf::Message::CopyConstruct<::kentik::site::v202106alpha1::Site>(arena, *from._impl_.site_);
    } else {
      _this->_impl_.site_->MergeFrom(*from._impl_.site_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetSiteResponse::CopyFrom(const GetSiteResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.site.v202106alpha1.GetSiteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetSiteResponse::InternalSwap(GetSiteResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.site_, other->_impl_.site_);
}

::google::protobuf::Metadata GetSiteResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CreateSiteRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CreateSiteRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CreateSiteRequest, _impl_._has_bits_);
};

CreateSiteRequest::CreateSiteRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.site.v202106alpha1.CreateSiteRequest)
}
inline PROTOBUF_NDEBUG_INLINE CreateSiteRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::site::v202106alpha1::CreateSiteRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CreateSiteRequest::CreateSiteRequest(
    ::google::protobuf::Arena* arena,
    const CreateSiteRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CreateSiteRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.site_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::kentik::site::v202106alpha1::Site>(
                              arena, *from._impl_.site_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:kentik.site.v202106alpha1.CreateSiteRequest)
}
inline PROTOBUF_NDEBUG_INLINE CreateSiteRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void CreateSiteRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.site_ = {};
}
CreateSiteRequest::~CreateSiteRequest() {
  // @@protoc_insertion_point(destructor:kentik.site.v202106alpha1.CreateSiteRequest)
  SharedDtor(*this);
}
inline void CreateSiteRequest::SharedDtor(MessageLite& self) {
  CreateSiteRequest& this_ = static_cast<CreateSiteRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.site_;
  this_._impl_.~Impl_();
}

inline void* CreateSiteRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CreateSiteRequest(arena);
}
constexpr auto CreateSiteRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CreateSiteRequest),
                                            alignof(CreateSiteRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull CreateSiteRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_CreateSiteRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &CreateSiteRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<CreateSiteRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &CreateSiteRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<CreateSiteRequest>(), &CreateSiteRequest::ByteSizeLong,
            &CreateSiteRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(CreateSiteRequest, _impl_._cached_size_),
        false,
    },
    &CreateSiteRequest::kDescriptorMethods,
    &descriptor_table_kentik_2fsite_2fv202106alpha1_2fsite_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* CreateSiteRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> CreateSiteRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CreateSiteRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::site::v202106alpha1::CreateSiteRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .kentik.site.v202106alpha1.Site site = 1 [json_name = "site"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CreateSiteRequest, _impl_.site_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .kentik.site.v202106alpha1.Site site = 1 [json_name = "site"];
    {PROTOBUF_FIELD_OFFSET(CreateSiteRequest, _impl_.site_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::kentik::site::v202106alpha1::Site>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void CreateSiteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.site.v202106alpha1.CreateSiteRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.site_ != nullptr);
    _impl_.site_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CreateSiteRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CreateSiteRequest& this_ = static_cast<const CreateSiteRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CreateSiteRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CreateSiteRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.site.v202106alpha1.CreateSiteRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .kentik.site.v202106alpha1.Site site = 1 [json_name = "site"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.site_, this_._impl_.site_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.site.v202106alpha1.CreateSiteRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CreateSiteRequest::ByteSizeLong(const MessageLite& base) {
          const CreateSiteRequest& this_ = static_cast<const CreateSiteRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CreateSiteRequest::ByteSizeLong() const {
          const CreateSiteRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.site.v202106alpha1.CreateSiteRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .kentik.site.v202106alpha1.Site site = 1 [json_name = "site"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.site_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CreateSiteRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CreateSiteRequest*>(&to_msg);
  auto& from = static_cast<const CreateSiteRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.site.v202106alpha1.CreateSiteRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.site_ != nullptr);
    if (_this->_impl_.site_ == nullptr) {
      _this->_impl_.site_ =
          ::google::protobuf::Message::CopyConstruct<::kentik::site::v202106alpha1::Site>(arena, *from._impl_.site_);
    } else {
      _this->_impl_.site_->MergeFrom(*from._impl_.site_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CreateSiteRequest::CopyFrom(const CreateSiteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.site.v202106alpha1.CreateSiteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CreateSiteRequest::InternalSwap(CreateSiteRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.site_, other->_impl_.site_);
}

::google::protobuf::Metadata CreateSiteRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CreateSiteResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CreateSiteResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CreateSiteResponse, _impl_._has_bits_);
};

CreateSiteResponse::CreateSiteResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.site.v202106alpha1.CreateSiteResponse)
}
inline PROTOBUF_NDEBUG_INLINE CreateSiteResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::site::v202106alpha1::CreateSiteResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CreateSiteResponse::CreateSiteResponse(
    ::google::protobuf::Arena* arena,
    const CreateSiteResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CreateSiteResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.site_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::kentik::site::v202106alpha1::Site>(
                              arena, *from._impl_.site_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:kentik.site.v202106alpha1.CreateSiteResponse)
}
inline PROTOBUF_NDEBUG_INLINE CreateSiteResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void CreateSiteResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.site_ = {};
}
CreateSiteResponse::~CreateSiteResponse() {
  // @@protoc_insertion_point(destructor:kentik.site.v202106alpha1.CreateSiteResponse)
  SharedDtor(*this);
}
inline void CreateSiteResponse::SharedDtor(MessageLite& self) {
  CreateSiteResponse& this_ = static_cast<CreateSiteResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.site_;
  this_._impl_.~Impl_();
}

inline void* CreateSiteResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CreateSiteResponse(arena);
}
constexpr auto CreateSiteResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CreateSiteResponse),
                                            alignof(CreateSiteResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull CreateSiteResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_CreateSiteResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &CreateSiteResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<CreateSiteResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &CreateSiteResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<CreateSiteResponse>(), &CreateSiteResponse::ByteSizeLong,
            &CreateSiteResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(CreateSiteResponse, _impl_._cached_size_),
        false,
    },
    &CreateSiteResponse::kDescriptorMethods,
    &descriptor_table_kentik_2fsite_2fv202106alpha1_2fsite_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* CreateSiteResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> CreateSiteResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CreateSiteResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::site::v202106alpha1::CreateSiteResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .kentik.site.v202106alpha1.Site site = 1 [json_name = "site"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CreateSiteResponse, _impl_.site_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .kentik.site.v202106alpha1.Site site = 1 [json_name = "site"];
    {PROTOBUF_FIELD_OFFSET(CreateSiteResponse, _impl_.site_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::kentik::site::v202106alpha1::Site>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void CreateSiteResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.site.v202106alpha1.CreateSiteResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.site_ != nullptr);
    _impl_.site_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CreateSiteResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CreateSiteResponse& this_ = static_cast<const CreateSiteResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CreateSiteResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CreateSiteResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.site.v202106alpha1.CreateSiteResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .kentik.site.v202106alpha1.Site site = 1 [json_name = "site"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.site_, this_._impl_.site_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.site.v202106alpha1.CreateSiteResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CreateSiteResponse::ByteSizeLong(const MessageLite& base) {
          const CreateSiteResponse& this_ = static_cast<const CreateSiteResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CreateSiteResponse::ByteSizeLong() const {
          const CreateSiteResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.site.v202106alpha1.CreateSiteResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .kentik.site.v202106alpha1.Site site = 1 [json_name = "site"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.site_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CreateSiteResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CreateSiteResponse*>(&to_msg);
  auto& from = static_cast<const CreateSiteResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.site.v202106alpha1.CreateSiteResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.site_ != nullptr);
    if (_this->_impl_.site_ == nullptr) {
      _this->_impl_.site_ =
          ::google::protobuf::Message::CopyConstruct<::kentik::site::v202106alpha1::Site>(arena, *from._impl_.site_);
    } else {
      _this->_impl_.site_->MergeFrom(*from._impl_.site_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CreateSiteResponse::CopyFrom(const CreateSiteResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.site.v202106alpha1.CreateSiteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CreateSiteResponse::InternalSwap(CreateSiteResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.site_, other->_impl_.site_);
}

::google::protobuf::Metadata CreateSiteResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class UpdateSiteRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<UpdateSiteRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(UpdateSiteRequest, _impl_._has_bits_);
};

UpdateSiteRequest::UpdateSiteRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.site.v202106alpha1.UpdateSiteRequest)
}
inline PROTOBUF_NDEBUG_INLINE UpdateSiteRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::site::v202106alpha1::UpdateSiteRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

UpdateSiteRequest::UpdateSiteRequest(
    ::google::protobuf::Arena* arena,
    const UpdateSiteRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  UpdateSiteRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.site_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::kentik::site::v202106alpha1::Site>(
                              arena, *from._impl_.site_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:kentik.site.v202106alpha1.UpdateSiteRequest)
}
inline PROTOBUF_NDEBUG_INLINE UpdateSiteRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void UpdateSiteRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.site_ = {};
}
UpdateSiteRequest::~UpdateSiteRequest() {
  // @@protoc_insertion_point(destructor:kentik.site.v202106alpha1.UpdateSiteRequest)
  SharedDtor(*this);
}
inline void UpdateSiteRequest::SharedDtor(MessageLite& self) {
  UpdateSiteRequest& this_ = static_cast<UpdateSiteRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.site_;
  this_._impl_.~Impl_();
}

inline void* UpdateSiteRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) UpdateSiteRequest(arena);
}
constexpr auto UpdateSiteRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(UpdateSiteRequest),
                                            alignof(UpdateSiteRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull UpdateSiteRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_UpdateSiteRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &UpdateSiteRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<UpdateSiteRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &UpdateSiteRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<UpdateSiteRequest>(), &UpdateSiteRequest::ByteSizeLong,
            &UpdateSiteRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(UpdateSiteRequest, _impl_._cached_size_),
        false,
    },
    &UpdateSiteRequest::kDescriptorMethods,
    &descriptor_table_kentik_2fsite_2fv202106alpha1_2fsite_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* UpdateSiteRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> UpdateSiteRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UpdateSiteRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::site::v202106alpha1::UpdateSiteRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .kentik.site.v202106alpha1.Site site = 1 [json_name = "site"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(UpdateSiteRequest, _impl_.site_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .kentik.site.v202106alpha1.Site site = 1 [json_name = "site"];
    {PROTOBUF_FIELD_OFFSET(UpdateSiteRequest, _impl_.site_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::kentik::site::v202106alpha1::Site>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void UpdateSiteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.site.v202106alpha1.UpdateSiteRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.site_ != nullptr);
    _impl_.site_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* UpdateSiteRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const UpdateSiteRequest& this_ = static_cast<const UpdateSiteRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* UpdateSiteRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const UpdateSiteRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.site.v202106alpha1.UpdateSiteRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .kentik.site.v202106alpha1.Site site = 1 [json_name = "site"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.site_, this_._impl_.site_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.site.v202106alpha1.UpdateSiteRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t UpdateSiteRequest::ByteSizeLong(const MessageLite& base) {
          const UpdateSiteRequest& this_ = static_cast<const UpdateSiteRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t UpdateSiteRequest::ByteSizeLong() const {
          const UpdateSiteRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.site.v202106alpha1.UpdateSiteRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .kentik.site.v202106alpha1.Site site = 1 [json_name = "site"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.site_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void UpdateSiteRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UpdateSiteRequest*>(&to_msg);
  auto& from = static_cast<const UpdateSiteRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.site.v202106alpha1.UpdateSiteRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.site_ != nullptr);
    if (_this->_impl_.site_ == nullptr) {
      _this->_impl_.site_ =
          ::google::protobuf::Message::CopyConstruct<::kentik::site::v202106alpha1::Site>(arena, *from._impl_.site_);
    } else {
      _this->_impl_.site_->MergeFrom(*from._impl_.site_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateSiteRequest::CopyFrom(const UpdateSiteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.site.v202106alpha1.UpdateSiteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UpdateSiteRequest::InternalSwap(UpdateSiteRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.site_, other->_impl_.site_);
}

::google::protobuf::Metadata UpdateSiteRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class UpdateSiteResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<UpdateSiteResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(UpdateSiteResponse, _impl_._has_bits_);
};

UpdateSiteResponse::UpdateSiteResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.site.v202106alpha1.UpdateSiteResponse)
}
inline PROTOBUF_NDEBUG_INLINE UpdateSiteResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::site::v202106alpha1::UpdateSiteResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

UpdateSiteResponse::UpdateSiteResponse(
    ::google::protobuf::Arena* arena,
    const UpdateSiteResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  UpdateSiteResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.site_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::kentik::site::v202106alpha1::Site>(
                              arena, *from._impl_.site_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:kentik.site.v202106alpha1.UpdateSiteResponse)
}
inline PROTOBUF_NDEBUG_INLINE UpdateSiteResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void UpdateSiteResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.site_ = {};
}
UpdateSiteResponse::~UpdateSiteResponse() {
  // @@protoc_insertion_point(destructor:kentik.site.v202106alpha1.UpdateSiteResponse)
  SharedDtor(*this);
}
inline void UpdateSiteResponse::SharedDtor(MessageLite& self) {
  UpdateSiteResponse& this_ = static_cast<UpdateSiteResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.site_;
  this_._impl_.~Impl_();
}

inline void* UpdateSiteResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) UpdateSiteResponse(arena);
}
constexpr auto UpdateSiteResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(UpdateSiteResponse),
                                            alignof(UpdateSiteResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull UpdateSiteResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_UpdateSiteResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &UpdateSiteResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<UpdateSiteResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &UpdateSiteResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<UpdateSiteResponse>(), &UpdateSiteResponse::ByteSizeLong,
            &UpdateSiteResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(UpdateSiteResponse, _impl_._cached_size_),
        false,
    },
    &UpdateSiteResponse::kDescriptorMethods,
    &descriptor_table_kentik_2fsite_2fv202106alpha1_2fsite_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* UpdateSiteResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> UpdateSiteResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UpdateSiteResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::site::v202106alpha1::UpdateSiteResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .kentik.site.v202106alpha1.Site site = 1 [json_name = "site"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(UpdateSiteResponse, _impl_.site_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .kentik.site.v202106alpha1.Site site = 1 [json_name = "site"];
    {PROTOBUF_FIELD_OFFSET(UpdateSiteResponse, _impl_.site_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::kentik::site::v202106alpha1::Site>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void UpdateSiteResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.site.v202106alpha1.UpdateSiteResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.site_ != nullptr);
    _impl_.site_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* UpdateSiteResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const UpdateSiteResponse& this_ = static_cast<const UpdateSiteResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* UpdateSiteResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const UpdateSiteResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.site.v202106alpha1.UpdateSiteResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .kentik.site.v202106alpha1.Site site = 1 [json_name = "site"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.site_, this_._impl_.site_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.site.v202106alpha1.UpdateSiteResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t UpdateSiteResponse::ByteSizeLong(const MessageLite& base) {
          const UpdateSiteResponse& this_ = static_cast<const UpdateSiteResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t UpdateSiteResponse::ByteSizeLong() const {
          const UpdateSiteResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.site.v202106alpha1.UpdateSiteResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .kentik.site.v202106alpha1.Site site = 1 [json_name = "site"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.site_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void UpdateSiteResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UpdateSiteResponse*>(&to_msg);
  auto& from = static_cast<const UpdateSiteResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.site.v202106alpha1.UpdateSiteResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.site_ != nullptr);
    if (_this->_impl_.site_ == nullptr) {
      _this->_impl_.site_ =
          ::google::protobuf::Message::CopyConstruct<::kentik::site::v202106alpha1::Site>(arena, *from._impl_.site_);
    } else {
      _this->_impl_.site_->MergeFrom(*from._impl_.site_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateSiteResponse::CopyFrom(const UpdateSiteResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.site.v202106alpha1.UpdateSiteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UpdateSiteResponse::InternalSwap(UpdateSiteResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.site_, other->_impl_.site_);
}

::google::protobuf::Metadata UpdateSiteResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DeleteSiteRequest::_Internal {
 public:
};

DeleteSiteRequest::DeleteSiteRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.site.v202106alpha1.DeleteSiteRequest)
}
inline PROTOBUF_NDEBUG_INLINE DeleteSiteRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::site::v202106alpha1::DeleteSiteRequest& from_msg)
      : id_(arena, from.id_),
        _cached_size_{0} {}

DeleteSiteRequest::DeleteSiteRequest(
    ::google::protobuf::Arena* arena,
    const DeleteSiteRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DeleteSiteRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:kentik.site.v202106alpha1.DeleteSiteRequest)
}
inline PROTOBUF_NDEBUG_INLINE DeleteSiteRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : id_(arena),
        _cached_size_{0} {}

inline void DeleteSiteRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
DeleteSiteRequest::~DeleteSiteRequest() {
  // @@protoc_insertion_point(destructor:kentik.site.v202106alpha1.DeleteSiteRequest)
  SharedDtor(*this);
}
inline void DeleteSiteRequest::SharedDtor(MessageLite& self) {
  DeleteSiteRequest& this_ = static_cast<DeleteSiteRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* DeleteSiteRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) DeleteSiteRequest(arena);
}
constexpr auto DeleteSiteRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(DeleteSiteRequest),
                                            alignof(DeleteSiteRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull DeleteSiteRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_DeleteSiteRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &DeleteSiteRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<DeleteSiteRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &DeleteSiteRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<DeleteSiteRequest>(), &DeleteSiteRequest::ByteSizeLong,
            &DeleteSiteRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(DeleteSiteRequest, _impl_._cached_size_),
        false,
    },
    &DeleteSiteRequest::kDescriptorMethods,
    &descriptor_table_kentik_2fsite_2fv202106alpha1_2fsite_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* DeleteSiteRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 54, 2> DeleteSiteRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::site::v202106alpha1::DeleteSiteRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string id = 1 [json_name = "id"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(DeleteSiteRequest, _impl_.id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1 [json_name = "id"];
    {PROTOBUF_FIELD_OFFSET(DeleteSiteRequest, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\53\2\0\0\0\0\0\0"
    "kentik.site.v202106alpha1.DeleteSiteRequest"
    "id"
  }},
};

PROTOBUF_NOINLINE void DeleteSiteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.site.v202106alpha1.DeleteSiteRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* DeleteSiteRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const DeleteSiteRequest& this_ = static_cast<const DeleteSiteRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* DeleteSiteRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const DeleteSiteRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.site.v202106alpha1.DeleteSiteRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string id = 1 [json_name = "id"];
          if (!this_._internal_id().empty()) {
            const std::string& _s = this_._internal_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.site.v202106alpha1.DeleteSiteRequest.id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.site.v202106alpha1.DeleteSiteRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t DeleteSiteRequest::ByteSizeLong(const MessageLite& base) {
          const DeleteSiteRequest& this_ = static_cast<const DeleteSiteRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t DeleteSiteRequest::ByteSizeLong() const {
          const DeleteSiteRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.site.v202106alpha1.DeleteSiteRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // string id = 1 [json_name = "id"];
            if (!this_._internal_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void DeleteSiteRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DeleteSiteRequest*>(&to_msg);
  auto& from = static_cast<const DeleteSiteRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.site.v202106alpha1.DeleteSiteRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteSiteRequest::CopyFrom(const DeleteSiteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.site.v202106alpha1.DeleteSiteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DeleteSiteRequest::InternalSwap(DeleteSiteRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
}

::google::protobuf::Metadata DeleteSiteRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DeleteSiteResponse::_Internal {
 public:
};

DeleteSiteResponse::DeleteSiteResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:kentik.site.v202106alpha1.DeleteSiteResponse)
}
DeleteSiteResponse::DeleteSiteResponse(
    ::google::protobuf::Arena* arena,
    const DeleteSiteResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DeleteSiteResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:kentik.site.v202106alpha1.DeleteSiteResponse)
}

inline void* DeleteSiteResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) DeleteSiteResponse(arena);
}
constexpr auto DeleteSiteResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(DeleteSiteResponse),
                                            alignof(DeleteSiteResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull DeleteSiteResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_DeleteSiteResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &DeleteSiteResponse::MergeImpl,
        ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<DeleteSiteResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &DeleteSiteResponse::SharedDtor,
        ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<DeleteSiteResponse>(), &DeleteSiteResponse::ByteSizeLong,
            &DeleteSiteResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(DeleteSiteResponse, _impl_._cached_size_),
        false,
    },
    &DeleteSiteResponse::kDescriptorMethods,
    &descriptor_table_kentik_2fsite_2fv202106alpha1_2fsite_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* DeleteSiteResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> DeleteSiteResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::site::v202106alpha1::DeleteSiteResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata DeleteSiteResponse::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v202106alpha1
}  // namespace site
}  // namespace kentik
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_kentik_2fsite_2fv202106alpha1_2fsite_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
