// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: kentik/site/v202106alpha1/site.proto
// Protobuf C++ Version: 5.29.3

#ifndef kentik_2fsite_2fv202106alpha1_2fsite_2eproto_2epb_2eh
#define kentik_2fsite_2fv202106alpha1_2fsite_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "google/api/annotations.pb.h"
#include "google/api/client.pb.h"
#include "google/type/latlng.pb.h"
#include "google/type/postal_address.pb.h"
#include "protoc-gen-openapiv2/options/annotations.pb.h"
#include "kentik/core/v202303/annotations.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_kentik_2fsite_2fv202106alpha1_2fsite_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_kentik_2fsite_2fv202106alpha1_2fsite_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_kentik_2fsite_2fv202106alpha1_2fsite_2eproto;
namespace kentik {
namespace site {
namespace v202106alpha1 {
class CreateSiteRequest;
struct CreateSiteRequestDefaultTypeInternal;
extern CreateSiteRequestDefaultTypeInternal _CreateSiteRequest_default_instance_;
class CreateSiteResponse;
struct CreateSiteResponseDefaultTypeInternal;
extern CreateSiteResponseDefaultTypeInternal _CreateSiteResponse_default_instance_;
class DeleteSiteRequest;
struct DeleteSiteRequestDefaultTypeInternal;
extern DeleteSiteRequestDefaultTypeInternal _DeleteSiteRequest_default_instance_;
class DeleteSiteResponse;
struct DeleteSiteResponseDefaultTypeInternal;
extern DeleteSiteResponseDefaultTypeInternal _DeleteSiteResponse_default_instance_;
class GetSiteRequest;
struct GetSiteRequestDefaultTypeInternal;
extern GetSiteRequestDefaultTypeInternal _GetSiteRequest_default_instance_;
class GetSiteResponse;
struct GetSiteResponseDefaultTypeInternal;
extern GetSiteResponseDefaultTypeInternal _GetSiteResponse_default_instance_;
class Layer;
struct LayerDefaultTypeInternal;
extern LayerDefaultTypeInternal _Layer_default_instance_;
class ListSiteRequest;
struct ListSiteRequestDefaultTypeInternal;
extern ListSiteRequestDefaultTypeInternal _ListSiteRequest_default_instance_;
class ListSiteResponse;
struct ListSiteResponseDefaultTypeInternal;
extern ListSiteResponseDefaultTypeInternal _ListSiteResponse_default_instance_;
class Site;
struct SiteDefaultTypeInternal;
extern SiteDefaultTypeInternal _Site_default_instance_;
class SiteIpClassification;
struct SiteIpClassificationDefaultTypeInternal;
extern SiteIpClassificationDefaultTypeInternal _SiteIpClassification_default_instance_;
class SubLayer;
struct SubLayerDefaultTypeInternal;
extern SubLayerDefaultTypeInternal _SubLayer_default_instance_;
class UpdateSiteRequest;
struct UpdateSiteRequestDefaultTypeInternal;
extern UpdateSiteRequestDefaultTypeInternal _UpdateSiteRequest_default_instance_;
class UpdateSiteResponse;
struct UpdateSiteResponseDefaultTypeInternal;
extern UpdateSiteResponseDefaultTypeInternal _UpdateSiteResponse_default_instance_;
}  // namespace v202106alpha1
}  // namespace site
}  // namespace kentik
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace kentik {
namespace site {
namespace v202106alpha1 {
enum SiteType : int {
  SITE_TYPE_UNSPECIFIED = 0,
  SITE_TYPE_DATA_CENTER = 1,
  SITE_TYPE_CLOUD = 2,
  SITE_TYPE_BRANCH = 3,
  SITE_TYPE_CONNECTIVITY = 4,
  SITE_TYPE_CUSTOMER = 5,
  SITE_TYPE_OTHER = 6,
  SiteType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  SiteType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool SiteType_IsValid(int value);
extern const uint32_t SiteType_internal_data_[];
constexpr SiteType SiteType_MIN = static_cast<SiteType>(0);
constexpr SiteType SiteType_MAX = static_cast<SiteType>(6);
constexpr int SiteType_ARRAYSIZE = 6 + 1;
const ::google::protobuf::EnumDescriptor*
SiteType_descriptor();
template <typename T>
const std::string& SiteType_Name(T value) {
  static_assert(std::is_same<T, SiteType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to SiteType_Name().");
  return SiteType_Name(static_cast<SiteType>(value));
}
template <>
inline const std::string& SiteType_Name(SiteType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<SiteType_descriptor,
                                                 0, 6>(
      static_cast<int>(value));
}
inline bool SiteType_Parse(absl::string_view name, SiteType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SiteType>(
      SiteType_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class SubLayer final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.site.v202106alpha1.SubLayer) */ {
 public:
  inline SubLayer() : SubLayer(nullptr) {}
  ~SubLayer() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SubLayer* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SubLayer));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SubLayer(
      ::google::protobuf::internal::ConstantInitialized);

  inline SubLayer(const SubLayer& from) : SubLayer(nullptr, from) {}
  inline SubLayer(SubLayer&& from) noexcept
      : SubLayer(nullptr, std::move(from)) {}
  inline SubLayer& operator=(const SubLayer& from) {
    CopyFrom(from);
    return *this;
  }
  inline SubLayer& operator=(SubLayer&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SubLayer& default_instance() {
    return *internal_default_instance();
  }
  static inline const SubLayer* internal_default_instance() {
    return reinterpret_cast<const SubLayer*>(
        &_SubLayer_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(SubLayer& a, SubLayer& b) { a.Swap(&b); }
  inline void Swap(SubLayer* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SubLayer* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SubLayer* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SubLayer>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SubLayer& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SubLayer& from) { SubLayer::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SubLayer* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.site.v202106alpha1.SubLayer"; }

 protected:
  explicit SubLayer(::google::protobuf::Arena* arena);
  SubLayer(::google::protobuf::Arena* arena, const SubLayer& from);
  SubLayer(::google::protobuf::Arena* arena, SubLayer&& from) noexcept
      : SubLayer(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDeviceIdsFieldNumber = 2,
    kNameFieldNumber = 1,
  };
  // repeated string device_ids = 2 [json_name = "deviceIds"];
  int device_ids_size() const;
  private:
  int _internal_device_ids_size() const;

  public:
  void clear_device_ids() ;
  const std::string& device_ids(int index) const;
  std::string* mutable_device_ids(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_device_ids(int index, Arg_&& value, Args_... args);
  std::string* add_device_ids();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_device_ids(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& device_ids() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_device_ids();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_device_ids() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_device_ids();

  public:
  // string name = 1 [json_name = "name"];
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // @@protoc_insertion_point(class_scope:kentik.site.v202106alpha1.SubLayer)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      57, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SubLayer& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> device_ids_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fsite_2fv202106alpha1_2fsite_2eproto;
};
// -------------------------------------------------------------------

class SiteIpClassification final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.site.v202106alpha1.SiteIpClassification) */ {
 public:
  inline SiteIpClassification() : SiteIpClassification(nullptr) {}
  ~SiteIpClassification() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SiteIpClassification* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SiteIpClassification));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SiteIpClassification(
      ::google::protobuf::internal::ConstantInitialized);

  inline SiteIpClassification(const SiteIpClassification& from) : SiteIpClassification(nullptr, from) {}
  inline SiteIpClassification(SiteIpClassification&& from) noexcept
      : SiteIpClassification(nullptr, std::move(from)) {}
  inline SiteIpClassification& operator=(const SiteIpClassification& from) {
    CopyFrom(from);
    return *this;
  }
  inline SiteIpClassification& operator=(SiteIpClassification&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SiteIpClassification& default_instance() {
    return *internal_default_instance();
  }
  static inline const SiteIpClassification* internal_default_instance() {
    return reinterpret_cast<const SiteIpClassification*>(
        &_SiteIpClassification_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(SiteIpClassification& a, SiteIpClassification& b) { a.Swap(&b); }
  inline void Swap(SiteIpClassification* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SiteIpClassification* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SiteIpClassification* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SiteIpClassification>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SiteIpClassification& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SiteIpClassification& from) { SiteIpClassification::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SiteIpClassification* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.site.v202106alpha1.SiteIpClassification"; }

 protected:
  explicit SiteIpClassification(::google::protobuf::Arena* arena);
  SiteIpClassification(::google::protobuf::Arena* arena, const SiteIpClassification& from);
  SiteIpClassification(::google::protobuf::Arena* arena, SiteIpClassification&& from) noexcept
      : SiteIpClassification(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kInfrastructureNetworksFieldNumber = 1,
    kUserAccessNetworksFieldNumber = 2,
    kOtherIpsFieldNumber = 3,
  };
  // repeated string infrastructure_networks = 1 [json_name = "infrastructureNetworks"];
  int infrastructure_networks_size() const;
  private:
  int _internal_infrastructure_networks_size() const;

  public:
  void clear_infrastructure_networks() ;
  const std::string& infrastructure_networks(int index) const;
  std::string* mutable_infrastructure_networks(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_infrastructure_networks(int index, Arg_&& value, Args_... args);
  std::string* add_infrastructure_networks();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_infrastructure_networks(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& infrastructure_networks() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_infrastructure_networks();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_infrastructure_networks() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_infrastructure_networks();

  public:
  // repeated string user_access_networks = 2 [json_name = "userAccessNetworks"];
  int user_access_networks_size() const;
  private:
  int _internal_user_access_networks_size() const;

  public:
  void clear_user_access_networks() ;
  const std::string& user_access_networks(int index) const;
  std::string* mutable_user_access_networks(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_user_access_networks(int index, Arg_&& value, Args_... args);
  std::string* add_user_access_networks();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_user_access_networks(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& user_access_networks() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_user_access_networks();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_user_access_networks() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_user_access_networks();

  public:
  // repeated string other_ips = 3 [json_name = "otherIps"];
  int other_ips_size() const;
  private:
  int _internal_other_ips_size() const;

  public:
  void clear_other_ips() ;
  const std::string& other_ips(int index) const;
  std::string* mutable_other_ips(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_other_ips(int index, Arg_&& value, Args_... args);
  std::string* add_other_ips();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_other_ips(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& other_ips() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_other_ips();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_other_ips() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_other_ips();

  public:
  // @@protoc_insertion_point(class_scope:kentik.site.v202106alpha1.SiteIpClassification)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      107, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SiteIpClassification& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> infrastructure_networks_;
    ::google::protobuf::RepeatedPtrField<std::string> user_access_networks_;
    ::google::protobuf::RepeatedPtrField<std::string> other_ips_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fsite_2fv202106alpha1_2fsite_2eproto;
};
// -------------------------------------------------------------------

class ListSiteRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:kentik.site.v202106alpha1.ListSiteRequest) */ {
 public:
  inline ListSiteRequest() : ListSiteRequest(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ListSiteRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ListSiteRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListSiteRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListSiteRequest(const ListSiteRequest& from) : ListSiteRequest(nullptr, from) {}
  inline ListSiteRequest(ListSiteRequest&& from) noexcept
      : ListSiteRequest(nullptr, std::move(from)) {}
  inline ListSiteRequest& operator=(const ListSiteRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListSiteRequest& operator=(ListSiteRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListSiteRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListSiteRequest* internal_default_instance() {
    return reinterpret_cast<const ListSiteRequest*>(
        &_ListSiteRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(ListSiteRequest& a, ListSiteRequest& b) { a.Swap(&b); }
  inline void Swap(ListSiteRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListSiteRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListSiteRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<ListSiteRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const ListSiteRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const ListSiteRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.site.v202106alpha1.ListSiteRequest"; }

 protected:
  explicit ListSiteRequest(::google::protobuf::Arena* arena);
  ListSiteRequest(::google::protobuf::Arena* arena, const ListSiteRequest& from);
  ListSiteRequest(::google::protobuf::Arena* arena, ListSiteRequest&& from) noexcept
      : ListSiteRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:kentik.site.v202106alpha1.ListSiteRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListSiteRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_kentik_2fsite_2fv202106alpha1_2fsite_2eproto;
};
// -------------------------------------------------------------------

class GetSiteRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.site.v202106alpha1.GetSiteRequest) */ {
 public:
  inline GetSiteRequest() : GetSiteRequest(nullptr) {}
  ~GetSiteRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetSiteRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetSiteRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetSiteRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetSiteRequest(const GetSiteRequest& from) : GetSiteRequest(nullptr, from) {}
  inline GetSiteRequest(GetSiteRequest&& from) noexcept
      : GetSiteRequest(nullptr, std::move(from)) {}
  inline GetSiteRequest& operator=(const GetSiteRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetSiteRequest& operator=(GetSiteRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetSiteRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetSiteRequest* internal_default_instance() {
    return reinterpret_cast<const GetSiteRequest*>(
        &_GetSiteRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(GetSiteRequest& a, GetSiteRequest& b) { a.Swap(&b); }
  inline void Swap(GetSiteRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetSiteRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetSiteRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetSiteRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetSiteRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetSiteRequest& from) { GetSiteRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetSiteRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.site.v202106alpha1.GetSiteRequest"; }

 protected:
  explicit GetSiteRequest(::google::protobuf::Arena* arena);
  GetSiteRequest(::google::protobuf::Arena* arena, const GetSiteRequest& from);
  GetSiteRequest(::google::protobuf::Arena* arena, GetSiteRequest&& from) noexcept
      : GetSiteRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
  };
  // string id = 1 [json_name = "id"];
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // @@protoc_insertion_point(class_scope:kentik.site.v202106alpha1.GetSiteRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      51, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetSiteRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fsite_2fv202106alpha1_2fsite_2eproto;
};
// -------------------------------------------------------------------

class DeleteSiteResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:kentik.site.v202106alpha1.DeleteSiteResponse) */ {
 public:
  inline DeleteSiteResponse() : DeleteSiteResponse(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DeleteSiteResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DeleteSiteResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeleteSiteResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline DeleteSiteResponse(const DeleteSiteResponse& from) : DeleteSiteResponse(nullptr, from) {}
  inline DeleteSiteResponse(DeleteSiteResponse&& from) noexcept
      : DeleteSiteResponse(nullptr, std::move(from)) {}
  inline DeleteSiteResponse& operator=(const DeleteSiteResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteSiteResponse& operator=(DeleteSiteResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeleteSiteResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeleteSiteResponse* internal_default_instance() {
    return reinterpret_cast<const DeleteSiteResponse*>(
        &_DeleteSiteResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 13;
  friend void swap(DeleteSiteResponse& a, DeleteSiteResponse& b) { a.Swap(&b); }
  inline void Swap(DeleteSiteResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteSiteResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeleteSiteResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<DeleteSiteResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const DeleteSiteResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const DeleteSiteResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.site.v202106alpha1.DeleteSiteResponse"; }

 protected:
  explicit DeleteSiteResponse(::google::protobuf::Arena* arena);
  DeleteSiteResponse(::google::protobuf::Arena* arena, const DeleteSiteResponse& from);
  DeleteSiteResponse(::google::protobuf::Arena* arena, DeleteSiteResponse&& from) noexcept
      : DeleteSiteResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:kentik.site.v202106alpha1.DeleteSiteResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DeleteSiteResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_kentik_2fsite_2fv202106alpha1_2fsite_2eproto;
};
// -------------------------------------------------------------------

class DeleteSiteRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.site.v202106alpha1.DeleteSiteRequest) */ {
 public:
  inline DeleteSiteRequest() : DeleteSiteRequest(nullptr) {}
  ~DeleteSiteRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DeleteSiteRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DeleteSiteRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeleteSiteRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline DeleteSiteRequest(const DeleteSiteRequest& from) : DeleteSiteRequest(nullptr, from) {}
  inline DeleteSiteRequest(DeleteSiteRequest&& from) noexcept
      : DeleteSiteRequest(nullptr, std::move(from)) {}
  inline DeleteSiteRequest& operator=(const DeleteSiteRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteSiteRequest& operator=(DeleteSiteRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeleteSiteRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeleteSiteRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteSiteRequest*>(
        &_DeleteSiteRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(DeleteSiteRequest& a, DeleteSiteRequest& b) { a.Swap(&b); }
  inline void Swap(DeleteSiteRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteSiteRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeleteSiteRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DeleteSiteRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DeleteSiteRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DeleteSiteRequest& from) { DeleteSiteRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DeleteSiteRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.site.v202106alpha1.DeleteSiteRequest"; }

 protected:
  explicit DeleteSiteRequest(::google::protobuf::Arena* arena);
  DeleteSiteRequest(::google::protobuf::Arena* arena, const DeleteSiteRequest& from);
  DeleteSiteRequest(::google::protobuf::Arena* arena, DeleteSiteRequest&& from) noexcept
      : DeleteSiteRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
  };
  // string id = 1 [json_name = "id"];
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // @@protoc_insertion_point(class_scope:kentik.site.v202106alpha1.DeleteSiteRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      54, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DeleteSiteRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fsite_2fv202106alpha1_2fsite_2eproto;
};
// -------------------------------------------------------------------

class Layer final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.site.v202106alpha1.Layer) */ {
 public:
  inline Layer() : Layer(nullptr) {}
  ~Layer() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Layer* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Layer));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Layer(
      ::google::protobuf::internal::ConstantInitialized);

  inline Layer(const Layer& from) : Layer(nullptr, from) {}
  inline Layer(Layer&& from) noexcept
      : Layer(nullptr, std::move(from)) {}
  inline Layer& operator=(const Layer& from) {
    CopyFrom(from);
    return *this;
  }
  inline Layer& operator=(Layer&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Layer& default_instance() {
    return *internal_default_instance();
  }
  static inline const Layer* internal_default_instance() {
    return reinterpret_cast<const Layer*>(
        &_Layer_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(Layer& a, Layer& b) { a.Swap(&b); }
  inline void Swap(Layer* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Layer* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Layer* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Layer>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Layer& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Layer& from) { Layer::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Layer* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.site.v202106alpha1.Layer"; }

 protected:
  explicit Layer(::google::protobuf::Arena* arena);
  Layer(::google::protobuf::Arena* arena, const Layer& from);
  Layer(::google::protobuf::Arena* arena, Layer&& from) noexcept
      : Layer(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSubLayersFieldNumber = 1,
  };
  // repeated .kentik.site.v202106alpha1.SubLayer sub_layers = 1 [json_name = "subLayers"];
  int sub_layers_size() const;
  private:
  int _internal_sub_layers_size() const;

  public:
  void clear_sub_layers() ;
  ::kentik::site::v202106alpha1::SubLayer* mutable_sub_layers(int index);
  ::google::protobuf::RepeatedPtrField<::kentik::site::v202106alpha1::SubLayer>* mutable_sub_layers();

  private:
  const ::google::protobuf::RepeatedPtrField<::kentik::site::v202106alpha1::SubLayer>& _internal_sub_layers() const;
  ::google::protobuf::RepeatedPtrField<::kentik::site::v202106alpha1::SubLayer>* _internal_mutable_sub_layers();
  public:
  const ::kentik::site::v202106alpha1::SubLayer& sub_layers(int index) const;
  ::kentik::site::v202106alpha1::SubLayer* add_sub_layers();
  const ::google::protobuf::RepeatedPtrField<::kentik::site::v202106alpha1::SubLayer>& sub_layers() const;
  // @@protoc_insertion_point(class_scope:kentik.site.v202106alpha1.Layer)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Layer& from_msg);
    ::google::protobuf::RepeatedPtrField< ::kentik::site::v202106alpha1::SubLayer > sub_layers_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fsite_2fv202106alpha1_2fsite_2eproto;
};
// -------------------------------------------------------------------

class Site final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.site.v202106alpha1.Site) */ {
 public:
  inline Site() : Site(nullptr) {}
  ~Site() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Site* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Site));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Site(
      ::google::protobuf::internal::ConstantInitialized);

  inline Site(const Site& from) : Site(nullptr, from) {}
  inline Site(Site&& from) noexcept
      : Site(nullptr, std::move(from)) {}
  inline Site& operator=(const Site& from) {
    CopyFrom(from);
    return *this;
  }
  inline Site& operator=(Site&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Site& default_instance() {
    return *internal_default_instance();
  }
  static inline const Site* internal_default_instance() {
    return reinterpret_cast<const Site*>(
        &_Site_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(Site& a, Site& b) { a.Swap(&b); }
  inline void Swap(Site* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Site* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Site* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Site>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Site& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Site& from) { Site::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Site* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.site.v202106alpha1.Site"; }

 protected:
  explicit Site(::google::protobuf::Arena* arena);
  Site(::google::protobuf::Arena* arena, const Site& from);
  Site(::google::protobuf::Arena* arena, Site&& from) noexcept
      : Site(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kArchitectureFieldNumber = 8,
    kIdFieldNumber = 1,
    kTitleFieldNumber = 3,
    kCoordinateFieldNumber = 4,
    kAddressFieldNumber = 5,
    kClassificationFieldNumber = 7,
    kTypeFieldNumber = 6,
  };
  // repeated .kentik.site.v202106alpha1.Layer architecture = 8 [json_name = "architecture"];
  int architecture_size() const;
  private:
  int _internal_architecture_size() const;

  public:
  void clear_architecture() ;
  ::kentik::site::v202106alpha1::Layer* mutable_architecture(int index);
  ::google::protobuf::RepeatedPtrField<::kentik::site::v202106alpha1::Layer>* mutable_architecture();

  private:
  const ::google::protobuf::RepeatedPtrField<::kentik::site::v202106alpha1::Layer>& _internal_architecture() const;
  ::google::protobuf::RepeatedPtrField<::kentik::site::v202106alpha1::Layer>* _internal_mutable_architecture();
  public:
  const ::kentik::site::v202106alpha1::Layer& architecture(int index) const;
  ::kentik::site::v202106alpha1::Layer* add_architecture();
  const ::google::protobuf::RepeatedPtrField<::kentik::site::v202106alpha1::Layer>& architecture() const;
  // string id = 1 [json_name = "id"];
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // string title = 3 [json_name = "title"];
  void clear_title() ;
  const std::string& title() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_title(Arg_&& arg, Args_... args);
  std::string* mutable_title();
  PROTOBUF_NODISCARD std::string* release_title();
  void set_allocated_title(std::string* value);

  private:
  const std::string& _internal_title() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_title(
      const std::string& value);
  std::string* _internal_mutable_title();

  public:
  // .google.type.LatLng coordinate = 4 [json_name = "coordinate"];
  bool has_coordinate() const;
  void clear_coordinate() ;
  const ::google::type::LatLng& coordinate() const;
  PROTOBUF_NODISCARD ::google::type::LatLng* release_coordinate();
  ::google::type::LatLng* mutable_coordinate();
  void set_allocated_coordinate(::google::type::LatLng* value);
  void unsafe_arena_set_allocated_coordinate(::google::type::LatLng* value);
  ::google::type::LatLng* unsafe_arena_release_coordinate();

  private:
  const ::google::type::LatLng& _internal_coordinate() const;
  ::google::type::LatLng* _internal_mutable_coordinate();

  public:
  // .google.type.PostalAddress address = 5 [json_name = "address"];
  bool has_address() const;
  void clear_address() ;
  const ::google::type::PostalAddress& address() const;
  PROTOBUF_NODISCARD ::google::type::PostalAddress* release_address();
  ::google::type::PostalAddress* mutable_address();
  void set_allocated_address(::google::type::PostalAddress* value);
  void unsafe_arena_set_allocated_address(::google::type::PostalAddress* value);
  ::google::type::PostalAddress* unsafe_arena_release_address();

  private:
  const ::google::type::PostalAddress& _internal_address() const;
  ::google::type::PostalAddress* _internal_mutable_address();

  public:
  // .kentik.site.v202106alpha1.SiteIpClassification classification = 7 [json_name = "classification"];
  bool has_classification() const;
  void clear_classification() ;
  const ::kentik::site::v202106alpha1::SiteIpClassification& classification() const;
  PROTOBUF_NODISCARD ::kentik::site::v202106alpha1::SiteIpClassification* release_classification();
  ::kentik::site::v202106alpha1::SiteIpClassification* mutable_classification();
  void set_allocated_classification(::kentik::site::v202106alpha1::SiteIpClassification* value);
  void unsafe_arena_set_allocated_classification(::kentik::site::v202106alpha1::SiteIpClassification* value);
  ::kentik::site::v202106alpha1::SiteIpClassification* unsafe_arena_release_classification();

  private:
  const ::kentik::site::v202106alpha1::SiteIpClassification& _internal_classification() const;
  ::kentik::site::v202106alpha1::SiteIpClassification* _internal_mutable_classification();

  public:
  // .kentik.site.v202106alpha1.SiteType type = 6 [json_name = "type"];
  void clear_type() ;
  ::kentik::site::v202106alpha1::SiteType type() const;
  void set_type(::kentik::site::v202106alpha1::SiteType value);

  private:
  ::kentik::site::v202106alpha1::SiteType _internal_type() const;
  void _internal_set_type(::kentik::site::v202106alpha1::SiteType value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.site.v202106alpha1.Site)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 4,
      46, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Site& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::kentik::site::v202106alpha1::Layer > architecture_;
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::ArenaStringPtr title_;
    ::google::type::LatLng* coordinate_;
    ::google::type::PostalAddress* address_;
    ::kentik::site::v202106alpha1::SiteIpClassification* classification_;
    int type_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fsite_2fv202106alpha1_2fsite_2eproto;
};
// -------------------------------------------------------------------

class UpdateSiteResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.site.v202106alpha1.UpdateSiteResponse) */ {
 public:
  inline UpdateSiteResponse() : UpdateSiteResponse(nullptr) {}
  ~UpdateSiteResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UpdateSiteResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UpdateSiteResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateSiteResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdateSiteResponse(const UpdateSiteResponse& from) : UpdateSiteResponse(nullptr, from) {}
  inline UpdateSiteResponse(UpdateSiteResponse&& from) noexcept
      : UpdateSiteResponse(nullptr, std::move(from)) {}
  inline UpdateSiteResponse& operator=(const UpdateSiteResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateSiteResponse& operator=(UpdateSiteResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateSiteResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateSiteResponse* internal_default_instance() {
    return reinterpret_cast<const UpdateSiteResponse*>(
        &_UpdateSiteResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(UpdateSiteResponse& a, UpdateSiteResponse& b) { a.Swap(&b); }
  inline void Swap(UpdateSiteResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateSiteResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateSiteResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<UpdateSiteResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateSiteResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateSiteResponse& from) { UpdateSiteResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(UpdateSiteResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.site.v202106alpha1.UpdateSiteResponse"; }

 protected:
  explicit UpdateSiteResponse(::google::protobuf::Arena* arena);
  UpdateSiteResponse(::google::protobuf::Arena* arena, const UpdateSiteResponse& from);
  UpdateSiteResponse(::google::protobuf::Arena* arena, UpdateSiteResponse&& from) noexcept
      : UpdateSiteResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSiteFieldNumber = 1,
  };
  // .kentik.site.v202106alpha1.Site site = 1 [json_name = "site"];
  bool has_site() const;
  void clear_site() ;
  const ::kentik::site::v202106alpha1::Site& site() const;
  PROTOBUF_NODISCARD ::kentik::site::v202106alpha1::Site* release_site();
  ::kentik::site::v202106alpha1::Site* mutable_site();
  void set_allocated_site(::kentik::site::v202106alpha1::Site* value);
  void unsafe_arena_set_allocated_site(::kentik::site::v202106alpha1::Site* value);
  ::kentik::site::v202106alpha1::Site* unsafe_arena_release_site();

  private:
  const ::kentik::site::v202106alpha1::Site& _internal_site() const;
  ::kentik::site::v202106alpha1::Site* _internal_mutable_site();

  public:
  // @@protoc_insertion_point(class_scope:kentik.site.v202106alpha1.UpdateSiteResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdateSiteResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::kentik::site::v202106alpha1::Site* site_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fsite_2fv202106alpha1_2fsite_2eproto;
};
// -------------------------------------------------------------------

class UpdateSiteRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.site.v202106alpha1.UpdateSiteRequest) */ {
 public:
  inline UpdateSiteRequest() : UpdateSiteRequest(nullptr) {}
  ~UpdateSiteRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UpdateSiteRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UpdateSiteRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateSiteRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdateSiteRequest(const UpdateSiteRequest& from) : UpdateSiteRequest(nullptr, from) {}
  inline UpdateSiteRequest(UpdateSiteRequest&& from) noexcept
      : UpdateSiteRequest(nullptr, std::move(from)) {}
  inline UpdateSiteRequest& operator=(const UpdateSiteRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateSiteRequest& operator=(UpdateSiteRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateSiteRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateSiteRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateSiteRequest*>(
        &_UpdateSiteRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(UpdateSiteRequest& a, UpdateSiteRequest& b) { a.Swap(&b); }
  inline void Swap(UpdateSiteRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateSiteRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateSiteRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<UpdateSiteRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateSiteRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateSiteRequest& from) { UpdateSiteRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(UpdateSiteRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.site.v202106alpha1.UpdateSiteRequest"; }

 protected:
  explicit UpdateSiteRequest(::google::protobuf::Arena* arena);
  UpdateSiteRequest(::google::protobuf::Arena* arena, const UpdateSiteRequest& from);
  UpdateSiteRequest(::google::protobuf::Arena* arena, UpdateSiteRequest&& from) noexcept
      : UpdateSiteRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSiteFieldNumber = 1,
  };
  // .kentik.site.v202106alpha1.Site site = 1 [json_name = "site"];
  bool has_site() const;
  void clear_site() ;
  const ::kentik::site::v202106alpha1::Site& site() const;
  PROTOBUF_NODISCARD ::kentik::site::v202106alpha1::Site* release_site();
  ::kentik::site::v202106alpha1::Site* mutable_site();
  void set_allocated_site(::kentik::site::v202106alpha1::Site* value);
  void unsafe_arena_set_allocated_site(::kentik::site::v202106alpha1::Site* value);
  ::kentik::site::v202106alpha1::Site* unsafe_arena_release_site();

  private:
  const ::kentik::site::v202106alpha1::Site& _internal_site() const;
  ::kentik::site::v202106alpha1::Site* _internal_mutable_site();

  public:
  // @@protoc_insertion_point(class_scope:kentik.site.v202106alpha1.UpdateSiteRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdateSiteRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::kentik::site::v202106alpha1::Site* site_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fsite_2fv202106alpha1_2fsite_2eproto;
};
// -------------------------------------------------------------------

class ListSiteResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.site.v202106alpha1.ListSiteResponse) */ {
 public:
  inline ListSiteResponse() : ListSiteResponse(nullptr) {}
  ~ListSiteResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ListSiteResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ListSiteResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListSiteResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListSiteResponse(const ListSiteResponse& from) : ListSiteResponse(nullptr, from) {}
  inline ListSiteResponse(ListSiteResponse&& from) noexcept
      : ListSiteResponse(nullptr, std::move(from)) {}
  inline ListSiteResponse& operator=(const ListSiteResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListSiteResponse& operator=(ListSiteResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListSiteResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListSiteResponse* internal_default_instance() {
    return reinterpret_cast<const ListSiteResponse*>(
        &_ListSiteResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(ListSiteResponse& a, ListSiteResponse& b) { a.Swap(&b); }
  inline void Swap(ListSiteResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListSiteResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListSiteResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ListSiteResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListSiteResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListSiteResponse& from) { ListSiteResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ListSiteResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.site.v202106alpha1.ListSiteResponse"; }

 protected:
  explicit ListSiteResponse(::google::protobuf::Arena* arena);
  ListSiteResponse(::google::protobuf::Arena* arena, const ListSiteResponse& from);
  ListSiteResponse(::google::protobuf::Arena* arena, ListSiteResponse&& from) noexcept
      : ListSiteResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSitesFieldNumber = 1,
    kInvalidCountFieldNumber = 2,
  };
  // repeated .kentik.site.v202106alpha1.Site sites = 1 [json_name = "sites"];
  int sites_size() const;
  private:
  int _internal_sites_size() const;

  public:
  void clear_sites() ;
  ::kentik::site::v202106alpha1::Site* mutable_sites(int index);
  ::google::protobuf::RepeatedPtrField<::kentik::site::v202106alpha1::Site>* mutable_sites();

  private:
  const ::google::protobuf::RepeatedPtrField<::kentik::site::v202106alpha1::Site>& _internal_sites() const;
  ::google::protobuf::RepeatedPtrField<::kentik::site::v202106alpha1::Site>* _internal_mutable_sites();
  public:
  const ::kentik::site::v202106alpha1::Site& sites(int index) const;
  ::kentik::site::v202106alpha1::Site* add_sites();
  const ::google::protobuf::RepeatedPtrField<::kentik::site::v202106alpha1::Site>& sites() const;
  // uint32 invalid_count = 2 [json_name = "invalidCount"];
  void clear_invalid_count() ;
  ::uint32_t invalid_count() const;
  void set_invalid_count(::uint32_t value);

  private:
  ::uint32_t _internal_invalid_count() const;
  void _internal_set_invalid_count(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.site.v202106alpha1.ListSiteResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListSiteResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::kentik::site::v202106alpha1::Site > sites_;
    ::uint32_t invalid_count_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fsite_2fv202106alpha1_2fsite_2eproto;
};
// -------------------------------------------------------------------

class GetSiteResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.site.v202106alpha1.GetSiteResponse) */ {
 public:
  inline GetSiteResponse() : GetSiteResponse(nullptr) {}
  ~GetSiteResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetSiteResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetSiteResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetSiteResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetSiteResponse(const GetSiteResponse& from) : GetSiteResponse(nullptr, from) {}
  inline GetSiteResponse(GetSiteResponse&& from) noexcept
      : GetSiteResponse(nullptr, std::move(from)) {}
  inline GetSiteResponse& operator=(const GetSiteResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetSiteResponse& operator=(GetSiteResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetSiteResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetSiteResponse* internal_default_instance() {
    return reinterpret_cast<const GetSiteResponse*>(
        &_GetSiteResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(GetSiteResponse& a, GetSiteResponse& b) { a.Swap(&b); }
  inline void Swap(GetSiteResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetSiteResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetSiteResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetSiteResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetSiteResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetSiteResponse& from) { GetSiteResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetSiteResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.site.v202106alpha1.GetSiteResponse"; }

 protected:
  explicit GetSiteResponse(::google::protobuf::Arena* arena);
  GetSiteResponse(::google::protobuf::Arena* arena, const GetSiteResponse& from);
  GetSiteResponse(::google::protobuf::Arena* arena, GetSiteResponse&& from) noexcept
      : GetSiteResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSiteFieldNumber = 1,
  };
  // .kentik.site.v202106alpha1.Site site = 1 [json_name = "site"];
  bool has_site() const;
  void clear_site() ;
  const ::kentik::site::v202106alpha1::Site& site() const;
  PROTOBUF_NODISCARD ::kentik::site::v202106alpha1::Site* release_site();
  ::kentik::site::v202106alpha1::Site* mutable_site();
  void set_allocated_site(::kentik::site::v202106alpha1::Site* value);
  void unsafe_arena_set_allocated_site(::kentik::site::v202106alpha1::Site* value);
  ::kentik::site::v202106alpha1::Site* unsafe_arena_release_site();

  private:
  const ::kentik::site::v202106alpha1::Site& _internal_site() const;
  ::kentik::site::v202106alpha1::Site* _internal_mutable_site();

  public:
  // @@protoc_insertion_point(class_scope:kentik.site.v202106alpha1.GetSiteResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetSiteResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::kentik::site::v202106alpha1::Site* site_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fsite_2fv202106alpha1_2fsite_2eproto;
};
// -------------------------------------------------------------------

class CreateSiteResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.site.v202106alpha1.CreateSiteResponse) */ {
 public:
  inline CreateSiteResponse() : CreateSiteResponse(nullptr) {}
  ~CreateSiteResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CreateSiteResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CreateSiteResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateSiteResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateSiteResponse(const CreateSiteResponse& from) : CreateSiteResponse(nullptr, from) {}
  inline CreateSiteResponse(CreateSiteResponse&& from) noexcept
      : CreateSiteResponse(nullptr, std::move(from)) {}
  inline CreateSiteResponse& operator=(const CreateSiteResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateSiteResponse& operator=(CreateSiteResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateSiteResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateSiteResponse* internal_default_instance() {
    return reinterpret_cast<const CreateSiteResponse*>(
        &_CreateSiteResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(CreateSiteResponse& a, CreateSiteResponse& b) { a.Swap(&b); }
  inline void Swap(CreateSiteResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateSiteResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateSiteResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CreateSiteResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateSiteResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateSiteResponse& from) { CreateSiteResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CreateSiteResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.site.v202106alpha1.CreateSiteResponse"; }

 protected:
  explicit CreateSiteResponse(::google::protobuf::Arena* arena);
  CreateSiteResponse(::google::protobuf::Arena* arena, const CreateSiteResponse& from);
  CreateSiteResponse(::google::protobuf::Arena* arena, CreateSiteResponse&& from) noexcept
      : CreateSiteResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSiteFieldNumber = 1,
  };
  // .kentik.site.v202106alpha1.Site site = 1 [json_name = "site"];
  bool has_site() const;
  void clear_site() ;
  const ::kentik::site::v202106alpha1::Site& site() const;
  PROTOBUF_NODISCARD ::kentik::site::v202106alpha1::Site* release_site();
  ::kentik::site::v202106alpha1::Site* mutable_site();
  void set_allocated_site(::kentik::site::v202106alpha1::Site* value);
  void unsafe_arena_set_allocated_site(::kentik::site::v202106alpha1::Site* value);
  ::kentik::site::v202106alpha1::Site* unsafe_arena_release_site();

  private:
  const ::kentik::site::v202106alpha1::Site& _internal_site() const;
  ::kentik::site::v202106alpha1::Site* _internal_mutable_site();

  public:
  // @@protoc_insertion_point(class_scope:kentik.site.v202106alpha1.CreateSiteResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateSiteResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::kentik::site::v202106alpha1::Site* site_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fsite_2fv202106alpha1_2fsite_2eproto;
};
// -------------------------------------------------------------------

class CreateSiteRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.site.v202106alpha1.CreateSiteRequest) */ {
 public:
  inline CreateSiteRequest() : CreateSiteRequest(nullptr) {}
  ~CreateSiteRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CreateSiteRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CreateSiteRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateSiteRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateSiteRequest(const CreateSiteRequest& from) : CreateSiteRequest(nullptr, from) {}
  inline CreateSiteRequest(CreateSiteRequest&& from) noexcept
      : CreateSiteRequest(nullptr, std::move(from)) {}
  inline CreateSiteRequest& operator=(const CreateSiteRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateSiteRequest& operator=(CreateSiteRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateSiteRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateSiteRequest* internal_default_instance() {
    return reinterpret_cast<const CreateSiteRequest*>(
        &_CreateSiteRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(CreateSiteRequest& a, CreateSiteRequest& b) { a.Swap(&b); }
  inline void Swap(CreateSiteRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateSiteRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateSiteRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CreateSiteRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateSiteRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateSiteRequest& from) { CreateSiteRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CreateSiteRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.site.v202106alpha1.CreateSiteRequest"; }

 protected:
  explicit CreateSiteRequest(::google::protobuf::Arena* arena);
  CreateSiteRequest(::google::protobuf::Arena* arena, const CreateSiteRequest& from);
  CreateSiteRequest(::google::protobuf::Arena* arena, CreateSiteRequest&& from) noexcept
      : CreateSiteRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSiteFieldNumber = 1,
  };
  // .kentik.site.v202106alpha1.Site site = 1 [json_name = "site"];
  bool has_site() const;
  void clear_site() ;
  const ::kentik::site::v202106alpha1::Site& site() const;
  PROTOBUF_NODISCARD ::kentik::site::v202106alpha1::Site* release_site();
  ::kentik::site::v202106alpha1::Site* mutable_site();
  void set_allocated_site(::kentik::site::v202106alpha1::Site* value);
  void unsafe_arena_set_allocated_site(::kentik::site::v202106alpha1::Site* value);
  ::kentik::site::v202106alpha1::Site* unsafe_arena_release_site();

  private:
  const ::kentik::site::v202106alpha1::Site& _internal_site() const;
  ::kentik::site::v202106alpha1::Site* _internal_mutable_site();

  public:
  // @@protoc_insertion_point(class_scope:kentik.site.v202106alpha1.CreateSiteRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateSiteRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::kentik::site::v202106alpha1::Site* site_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fsite_2fv202106alpha1_2fsite_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// SiteIpClassification

// repeated string infrastructure_networks = 1 [json_name = "infrastructureNetworks"];
inline int SiteIpClassification::_internal_infrastructure_networks_size() const {
  return _internal_infrastructure_networks().size();
}
inline int SiteIpClassification::infrastructure_networks_size() const {
  return _internal_infrastructure_networks_size();
}
inline void SiteIpClassification::clear_infrastructure_networks() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.infrastructure_networks_.Clear();
}
inline std::string* SiteIpClassification::add_infrastructure_networks() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_infrastructure_networks()->Add();
  // @@protoc_insertion_point(field_add_mutable:kentik.site.v202106alpha1.SiteIpClassification.infrastructure_networks)
  return _s;
}
inline const std::string& SiteIpClassification::infrastructure_networks(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.site.v202106alpha1.SiteIpClassification.infrastructure_networks)
  return _internal_infrastructure_networks().Get(index);
}
inline std::string* SiteIpClassification::mutable_infrastructure_networks(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.site.v202106alpha1.SiteIpClassification.infrastructure_networks)
  return _internal_mutable_infrastructure_networks()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void SiteIpClassification::set_infrastructure_networks(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_infrastructure_networks()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:kentik.site.v202106alpha1.SiteIpClassification.infrastructure_networks)
}
template <typename Arg_, typename... Args_>
inline void SiteIpClassification::add_infrastructure_networks(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_infrastructure_networks(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:kentik.site.v202106alpha1.SiteIpClassification.infrastructure_networks)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
SiteIpClassification::infrastructure_networks() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.site.v202106alpha1.SiteIpClassification.infrastructure_networks)
  return _internal_infrastructure_networks();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
SiteIpClassification::mutable_infrastructure_networks() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.site.v202106alpha1.SiteIpClassification.infrastructure_networks)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_infrastructure_networks();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
SiteIpClassification::_internal_infrastructure_networks() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.infrastructure_networks_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
SiteIpClassification::_internal_mutable_infrastructure_networks() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.infrastructure_networks_;
}

// repeated string user_access_networks = 2 [json_name = "userAccessNetworks"];
inline int SiteIpClassification::_internal_user_access_networks_size() const {
  return _internal_user_access_networks().size();
}
inline int SiteIpClassification::user_access_networks_size() const {
  return _internal_user_access_networks_size();
}
inline void SiteIpClassification::clear_user_access_networks() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.user_access_networks_.Clear();
}
inline std::string* SiteIpClassification::add_user_access_networks() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_user_access_networks()->Add();
  // @@protoc_insertion_point(field_add_mutable:kentik.site.v202106alpha1.SiteIpClassification.user_access_networks)
  return _s;
}
inline const std::string& SiteIpClassification::user_access_networks(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.site.v202106alpha1.SiteIpClassification.user_access_networks)
  return _internal_user_access_networks().Get(index);
}
inline std::string* SiteIpClassification::mutable_user_access_networks(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.site.v202106alpha1.SiteIpClassification.user_access_networks)
  return _internal_mutable_user_access_networks()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void SiteIpClassification::set_user_access_networks(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_user_access_networks()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:kentik.site.v202106alpha1.SiteIpClassification.user_access_networks)
}
template <typename Arg_, typename... Args_>
inline void SiteIpClassification::add_user_access_networks(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_user_access_networks(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:kentik.site.v202106alpha1.SiteIpClassification.user_access_networks)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
SiteIpClassification::user_access_networks() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.site.v202106alpha1.SiteIpClassification.user_access_networks)
  return _internal_user_access_networks();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
SiteIpClassification::mutable_user_access_networks() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.site.v202106alpha1.SiteIpClassification.user_access_networks)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_user_access_networks();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
SiteIpClassification::_internal_user_access_networks() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.user_access_networks_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
SiteIpClassification::_internal_mutable_user_access_networks() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.user_access_networks_;
}

// repeated string other_ips = 3 [json_name = "otherIps"];
inline int SiteIpClassification::_internal_other_ips_size() const {
  return _internal_other_ips().size();
}
inline int SiteIpClassification::other_ips_size() const {
  return _internal_other_ips_size();
}
inline void SiteIpClassification::clear_other_ips() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.other_ips_.Clear();
}
inline std::string* SiteIpClassification::add_other_ips() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_other_ips()->Add();
  // @@protoc_insertion_point(field_add_mutable:kentik.site.v202106alpha1.SiteIpClassification.other_ips)
  return _s;
}
inline const std::string& SiteIpClassification::other_ips(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.site.v202106alpha1.SiteIpClassification.other_ips)
  return _internal_other_ips().Get(index);
}
inline std::string* SiteIpClassification::mutable_other_ips(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.site.v202106alpha1.SiteIpClassification.other_ips)
  return _internal_mutable_other_ips()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void SiteIpClassification::set_other_ips(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_other_ips()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:kentik.site.v202106alpha1.SiteIpClassification.other_ips)
}
template <typename Arg_, typename... Args_>
inline void SiteIpClassification::add_other_ips(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_other_ips(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:kentik.site.v202106alpha1.SiteIpClassification.other_ips)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
SiteIpClassification::other_ips() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.site.v202106alpha1.SiteIpClassification.other_ips)
  return _internal_other_ips();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
SiteIpClassification::mutable_other_ips() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.site.v202106alpha1.SiteIpClassification.other_ips)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_other_ips();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
SiteIpClassification::_internal_other_ips() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.other_ips_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
SiteIpClassification::_internal_mutable_other_ips() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.other_ips_;
}

// -------------------------------------------------------------------

// SubLayer

// string name = 1 [json_name = "name"];
inline void SubLayer::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& SubLayer::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.site.v202106alpha1.SubLayer.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SubLayer::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.site.v202106alpha1.SubLayer.name)
}
inline std::string* SubLayer::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:kentik.site.v202106alpha1.SubLayer.name)
  return _s;
}
inline const std::string& SubLayer::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void SubLayer::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* SubLayer::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* SubLayer::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.site.v202106alpha1.SubLayer.name)
  return _impl_.name_.Release();
}
inline void SubLayer::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.site.v202106alpha1.SubLayer.name)
}

// repeated string device_ids = 2 [json_name = "deviceIds"];
inline int SubLayer::_internal_device_ids_size() const {
  return _internal_device_ids().size();
}
inline int SubLayer::device_ids_size() const {
  return _internal_device_ids_size();
}
inline void SubLayer::clear_device_ids() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_ids_.Clear();
}
inline std::string* SubLayer::add_device_ids() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_device_ids()->Add();
  // @@protoc_insertion_point(field_add_mutable:kentik.site.v202106alpha1.SubLayer.device_ids)
  return _s;
}
inline const std::string& SubLayer::device_ids(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.site.v202106alpha1.SubLayer.device_ids)
  return _internal_device_ids().Get(index);
}
inline std::string* SubLayer::mutable_device_ids(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.site.v202106alpha1.SubLayer.device_ids)
  return _internal_mutable_device_ids()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void SubLayer::set_device_ids(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_device_ids()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:kentik.site.v202106alpha1.SubLayer.device_ids)
}
template <typename Arg_, typename... Args_>
inline void SubLayer::add_device_ids(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_device_ids(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:kentik.site.v202106alpha1.SubLayer.device_ids)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
SubLayer::device_ids() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.site.v202106alpha1.SubLayer.device_ids)
  return _internal_device_ids();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
SubLayer::mutable_device_ids() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.site.v202106alpha1.SubLayer.device_ids)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_device_ids();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
SubLayer::_internal_device_ids() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.device_ids_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
SubLayer::_internal_mutable_device_ids() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.device_ids_;
}

// -------------------------------------------------------------------

// Layer

// repeated .kentik.site.v202106alpha1.SubLayer sub_layers = 1 [json_name = "subLayers"];
inline int Layer::_internal_sub_layers_size() const {
  return _internal_sub_layers().size();
}
inline int Layer::sub_layers_size() const {
  return _internal_sub_layers_size();
}
inline void Layer::clear_sub_layers() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sub_layers_.Clear();
}
inline ::kentik::site::v202106alpha1::SubLayer* Layer::mutable_sub_layers(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.site.v202106alpha1.Layer.sub_layers)
  return _internal_mutable_sub_layers()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::kentik::site::v202106alpha1::SubLayer>* Layer::mutable_sub_layers()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.site.v202106alpha1.Layer.sub_layers)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_sub_layers();
}
inline const ::kentik::site::v202106alpha1::SubLayer& Layer::sub_layers(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.site.v202106alpha1.Layer.sub_layers)
  return _internal_sub_layers().Get(index);
}
inline ::kentik::site::v202106alpha1::SubLayer* Layer::add_sub_layers() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::kentik::site::v202106alpha1::SubLayer* _add = _internal_mutable_sub_layers()->Add();
  // @@protoc_insertion_point(field_add:kentik.site.v202106alpha1.Layer.sub_layers)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::site::v202106alpha1::SubLayer>& Layer::sub_layers() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.site.v202106alpha1.Layer.sub_layers)
  return _internal_sub_layers();
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::site::v202106alpha1::SubLayer>&
Layer::_internal_sub_layers() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sub_layers_;
}
inline ::google::protobuf::RepeatedPtrField<::kentik::site::v202106alpha1::SubLayer>*
Layer::_internal_mutable_sub_layers() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.sub_layers_;
}

// -------------------------------------------------------------------

// Site

// string id = 1 [json_name = "id"];
inline void Site::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& Site::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.site.v202106alpha1.Site.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Site::set_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.site.v202106alpha1.Site.id)
}
inline std::string* Site::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:kentik.site.v202106alpha1.Site.id)
  return _s;
}
inline const std::string& Site::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void Site::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(value, GetArena());
}
inline std::string* Site::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* Site::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.site.v202106alpha1.Site.id)
  return _impl_.id_.Release();
}
inline void Site::set_allocated_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.id_.IsDefault()) {
    _impl_.id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.site.v202106alpha1.Site.id)
}

// string title = 3 [json_name = "title"];
inline void Site::clear_title() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.title_.ClearToEmpty();
}
inline const std::string& Site::title() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.site.v202106alpha1.Site.title)
  return _internal_title();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Site::set_title(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.title_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.site.v202106alpha1.Site.title)
}
inline std::string* Site::mutable_title() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_title();
  // @@protoc_insertion_point(field_mutable:kentik.site.v202106alpha1.Site.title)
  return _s;
}
inline const std::string& Site::_internal_title() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.title_.Get();
}
inline void Site::_internal_set_title(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.title_.Set(value, GetArena());
}
inline std::string* Site::_internal_mutable_title() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.title_.Mutable( GetArena());
}
inline std::string* Site::release_title() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.site.v202106alpha1.Site.title)
  return _impl_.title_.Release();
}
inline void Site::set_allocated_title(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.title_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.title_.IsDefault()) {
    _impl_.title_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.site.v202106alpha1.Site.title)
}

// .google.type.LatLng coordinate = 4 [json_name = "coordinate"];
inline bool Site::has_coordinate() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.coordinate_ != nullptr);
  return value;
}
inline const ::google::type::LatLng& Site::_internal_coordinate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::type::LatLng* p = _impl_.coordinate_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::type::LatLng&>(::google::type::_LatLng_default_instance_);
}
inline const ::google::type::LatLng& Site::coordinate() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.site.v202106alpha1.Site.coordinate)
  return _internal_coordinate();
}
inline void Site::unsafe_arena_set_allocated_coordinate(::google::type::LatLng* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.coordinate_);
  }
  _impl_.coordinate_ = reinterpret_cast<::google::type::LatLng*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.site.v202106alpha1.Site.coordinate)
}
inline ::google::type::LatLng* Site::release_coordinate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::type::LatLng* released = _impl_.coordinate_;
  _impl_.coordinate_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::type::LatLng* Site::unsafe_arena_release_coordinate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.site.v202106alpha1.Site.coordinate)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::type::LatLng* temp = _impl_.coordinate_;
  _impl_.coordinate_ = nullptr;
  return temp;
}
inline ::google::type::LatLng* Site::_internal_mutable_coordinate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.coordinate_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::type::LatLng>(GetArena());
    _impl_.coordinate_ = reinterpret_cast<::google::type::LatLng*>(p);
  }
  return _impl_.coordinate_;
}
inline ::google::type::LatLng* Site::mutable_coordinate() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::google::type::LatLng* _msg = _internal_mutable_coordinate();
  // @@protoc_insertion_point(field_mutable:kentik.site.v202106alpha1.Site.coordinate)
  return _msg;
}
inline void Site::set_allocated_coordinate(::google::type::LatLng* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.coordinate_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.coordinate_ = reinterpret_cast<::google::type::LatLng*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.site.v202106alpha1.Site.coordinate)
}

// .google.type.PostalAddress address = 5 [json_name = "address"];
inline bool Site::has_address() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.address_ != nullptr);
  return value;
}
inline const ::google::type::PostalAddress& Site::_internal_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::type::PostalAddress* p = _impl_.address_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::type::PostalAddress&>(::google::type::_PostalAddress_default_instance_);
}
inline const ::google::type::PostalAddress& Site::address() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.site.v202106alpha1.Site.address)
  return _internal_address();
}
inline void Site::unsafe_arena_set_allocated_address(::google::type::PostalAddress* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.address_);
  }
  _impl_.address_ = reinterpret_cast<::google::type::PostalAddress*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.site.v202106alpha1.Site.address)
}
inline ::google::type::PostalAddress* Site::release_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::type::PostalAddress* released = _impl_.address_;
  _impl_.address_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::type::PostalAddress* Site::unsafe_arena_release_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.site.v202106alpha1.Site.address)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::type::PostalAddress* temp = _impl_.address_;
  _impl_.address_ = nullptr;
  return temp;
}
inline ::google::type::PostalAddress* Site::_internal_mutable_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.address_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::type::PostalAddress>(GetArena());
    _impl_.address_ = reinterpret_cast<::google::type::PostalAddress*>(p);
  }
  return _impl_.address_;
}
inline ::google::type::PostalAddress* Site::mutable_address() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::google::type::PostalAddress* _msg = _internal_mutable_address();
  // @@protoc_insertion_point(field_mutable:kentik.site.v202106alpha1.Site.address)
  return _msg;
}
inline void Site::set_allocated_address(::google::type::PostalAddress* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.address_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.address_ = reinterpret_cast<::google::type::PostalAddress*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.site.v202106alpha1.Site.address)
}

// .kentik.site.v202106alpha1.SiteType type = 6 [json_name = "type"];
inline void Site::clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = 0;
}
inline ::kentik::site::v202106alpha1::SiteType Site::type() const {
  // @@protoc_insertion_point(field_get:kentik.site.v202106alpha1.Site.type)
  return _internal_type();
}
inline void Site::set_type(::kentik::site::v202106alpha1::SiteType value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:kentik.site.v202106alpha1.Site.type)
}
inline ::kentik::site::v202106alpha1::SiteType Site::_internal_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::kentik::site::v202106alpha1::SiteType>(_impl_.type_);
}
inline void Site::_internal_set_type(::kentik::site::v202106alpha1::SiteType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = value;
}

// .kentik.site.v202106alpha1.SiteIpClassification classification = 7 [json_name = "classification"];
inline bool Site::has_classification() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.classification_ != nullptr);
  return value;
}
inline void Site::clear_classification() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.classification_ != nullptr) _impl_.classification_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::kentik::site::v202106alpha1::SiteIpClassification& Site::_internal_classification() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::site::v202106alpha1::SiteIpClassification* p = _impl_.classification_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::site::v202106alpha1::SiteIpClassification&>(::kentik::site::v202106alpha1::_SiteIpClassification_default_instance_);
}
inline const ::kentik::site::v202106alpha1::SiteIpClassification& Site::classification() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.site.v202106alpha1.Site.classification)
  return _internal_classification();
}
inline void Site::unsafe_arena_set_allocated_classification(::kentik::site::v202106alpha1::SiteIpClassification* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.classification_);
  }
  _impl_.classification_ = reinterpret_cast<::kentik::site::v202106alpha1::SiteIpClassification*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.site.v202106alpha1.Site.classification)
}
inline ::kentik::site::v202106alpha1::SiteIpClassification* Site::release_classification() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::kentik::site::v202106alpha1::SiteIpClassification* released = _impl_.classification_;
  _impl_.classification_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::site::v202106alpha1::SiteIpClassification* Site::unsafe_arena_release_classification() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.site.v202106alpha1.Site.classification)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::kentik::site::v202106alpha1::SiteIpClassification* temp = _impl_.classification_;
  _impl_.classification_ = nullptr;
  return temp;
}
inline ::kentik::site::v202106alpha1::SiteIpClassification* Site::_internal_mutable_classification() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.classification_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::site::v202106alpha1::SiteIpClassification>(GetArena());
    _impl_.classification_ = reinterpret_cast<::kentik::site::v202106alpha1::SiteIpClassification*>(p);
  }
  return _impl_.classification_;
}
inline ::kentik::site::v202106alpha1::SiteIpClassification* Site::mutable_classification() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::kentik::site::v202106alpha1::SiteIpClassification* _msg = _internal_mutable_classification();
  // @@protoc_insertion_point(field_mutable:kentik.site.v202106alpha1.Site.classification)
  return _msg;
}
inline void Site::set_allocated_classification(::kentik::site::v202106alpha1::SiteIpClassification* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.classification_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.classification_ = reinterpret_cast<::kentik::site::v202106alpha1::SiteIpClassification*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.site.v202106alpha1.Site.classification)
}

// repeated .kentik.site.v202106alpha1.Layer architecture = 8 [json_name = "architecture"];
inline int Site::_internal_architecture_size() const {
  return _internal_architecture().size();
}
inline int Site::architecture_size() const {
  return _internal_architecture_size();
}
inline void Site::clear_architecture() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.architecture_.Clear();
}
inline ::kentik::site::v202106alpha1::Layer* Site::mutable_architecture(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.site.v202106alpha1.Site.architecture)
  return _internal_mutable_architecture()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::kentik::site::v202106alpha1::Layer>* Site::mutable_architecture()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.site.v202106alpha1.Site.architecture)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_architecture();
}
inline const ::kentik::site::v202106alpha1::Layer& Site::architecture(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.site.v202106alpha1.Site.architecture)
  return _internal_architecture().Get(index);
}
inline ::kentik::site::v202106alpha1::Layer* Site::add_architecture() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::kentik::site::v202106alpha1::Layer* _add = _internal_mutable_architecture()->Add();
  // @@protoc_insertion_point(field_add:kentik.site.v202106alpha1.Site.architecture)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::site::v202106alpha1::Layer>& Site::architecture() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.site.v202106alpha1.Site.architecture)
  return _internal_architecture();
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::site::v202106alpha1::Layer>&
Site::_internal_architecture() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.architecture_;
}
inline ::google::protobuf::RepeatedPtrField<::kentik::site::v202106alpha1::Layer>*
Site::_internal_mutable_architecture() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.architecture_;
}

// -------------------------------------------------------------------

// ListSiteRequest

// -------------------------------------------------------------------

// ListSiteResponse

// repeated .kentik.site.v202106alpha1.Site sites = 1 [json_name = "sites"];
inline int ListSiteResponse::_internal_sites_size() const {
  return _internal_sites().size();
}
inline int ListSiteResponse::sites_size() const {
  return _internal_sites_size();
}
inline void ListSiteResponse::clear_sites() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sites_.Clear();
}
inline ::kentik::site::v202106alpha1::Site* ListSiteResponse::mutable_sites(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.site.v202106alpha1.ListSiteResponse.sites)
  return _internal_mutable_sites()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::kentik::site::v202106alpha1::Site>* ListSiteResponse::mutable_sites()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.site.v202106alpha1.ListSiteResponse.sites)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_sites();
}
inline const ::kentik::site::v202106alpha1::Site& ListSiteResponse::sites(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.site.v202106alpha1.ListSiteResponse.sites)
  return _internal_sites().Get(index);
}
inline ::kentik::site::v202106alpha1::Site* ListSiteResponse::add_sites() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::kentik::site::v202106alpha1::Site* _add = _internal_mutable_sites()->Add();
  // @@protoc_insertion_point(field_add:kentik.site.v202106alpha1.ListSiteResponse.sites)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::site::v202106alpha1::Site>& ListSiteResponse::sites() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.site.v202106alpha1.ListSiteResponse.sites)
  return _internal_sites();
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::site::v202106alpha1::Site>&
ListSiteResponse::_internal_sites() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sites_;
}
inline ::google::protobuf::RepeatedPtrField<::kentik::site::v202106alpha1::Site>*
ListSiteResponse::_internal_mutable_sites() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.sites_;
}

// uint32 invalid_count = 2 [json_name = "invalidCount"];
inline void ListSiteResponse::clear_invalid_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.invalid_count_ = 0u;
}
inline ::uint32_t ListSiteResponse::invalid_count() const {
  // @@protoc_insertion_point(field_get:kentik.site.v202106alpha1.ListSiteResponse.invalid_count)
  return _internal_invalid_count();
}
inline void ListSiteResponse::set_invalid_count(::uint32_t value) {
  _internal_set_invalid_count(value);
  // @@protoc_insertion_point(field_set:kentik.site.v202106alpha1.ListSiteResponse.invalid_count)
}
inline ::uint32_t ListSiteResponse::_internal_invalid_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.invalid_count_;
}
inline void ListSiteResponse::_internal_set_invalid_count(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.invalid_count_ = value;
}

// -------------------------------------------------------------------

// GetSiteRequest

// string id = 1 [json_name = "id"];
inline void GetSiteRequest::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& GetSiteRequest::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.site.v202106alpha1.GetSiteRequest.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetSiteRequest::set_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.site.v202106alpha1.GetSiteRequest.id)
}
inline std::string* GetSiteRequest::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:kentik.site.v202106alpha1.GetSiteRequest.id)
  return _s;
}
inline const std::string& GetSiteRequest::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void GetSiteRequest::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(value, GetArena());
}
inline std::string* GetSiteRequest::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* GetSiteRequest::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.site.v202106alpha1.GetSiteRequest.id)
  return _impl_.id_.Release();
}
inline void GetSiteRequest::set_allocated_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.id_.IsDefault()) {
    _impl_.id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.site.v202106alpha1.GetSiteRequest.id)
}

// -------------------------------------------------------------------

// GetSiteResponse

// .kentik.site.v202106alpha1.Site site = 1 [json_name = "site"];
inline bool GetSiteResponse::has_site() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.site_ != nullptr);
  return value;
}
inline void GetSiteResponse::clear_site() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.site_ != nullptr) _impl_.site_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::kentik::site::v202106alpha1::Site& GetSiteResponse::_internal_site() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::site::v202106alpha1::Site* p = _impl_.site_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::site::v202106alpha1::Site&>(::kentik::site::v202106alpha1::_Site_default_instance_);
}
inline const ::kentik::site::v202106alpha1::Site& GetSiteResponse::site() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.site.v202106alpha1.GetSiteResponse.site)
  return _internal_site();
}
inline void GetSiteResponse::unsafe_arena_set_allocated_site(::kentik::site::v202106alpha1::Site* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.site_);
  }
  _impl_.site_ = reinterpret_cast<::kentik::site::v202106alpha1::Site*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.site.v202106alpha1.GetSiteResponse.site)
}
inline ::kentik::site::v202106alpha1::Site* GetSiteResponse::release_site() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::site::v202106alpha1::Site* released = _impl_.site_;
  _impl_.site_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::site::v202106alpha1::Site* GetSiteResponse::unsafe_arena_release_site() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.site.v202106alpha1.GetSiteResponse.site)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::site::v202106alpha1::Site* temp = _impl_.site_;
  _impl_.site_ = nullptr;
  return temp;
}
inline ::kentik::site::v202106alpha1::Site* GetSiteResponse::_internal_mutable_site() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.site_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::site::v202106alpha1::Site>(GetArena());
    _impl_.site_ = reinterpret_cast<::kentik::site::v202106alpha1::Site*>(p);
  }
  return _impl_.site_;
}
inline ::kentik::site::v202106alpha1::Site* GetSiteResponse::mutable_site() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::kentik::site::v202106alpha1::Site* _msg = _internal_mutable_site();
  // @@protoc_insertion_point(field_mutable:kentik.site.v202106alpha1.GetSiteResponse.site)
  return _msg;
}
inline void GetSiteResponse::set_allocated_site(::kentik::site::v202106alpha1::Site* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.site_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.site_ = reinterpret_cast<::kentik::site::v202106alpha1::Site*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.site.v202106alpha1.GetSiteResponse.site)
}

// -------------------------------------------------------------------

// CreateSiteRequest

// .kentik.site.v202106alpha1.Site site = 1 [json_name = "site"];
inline bool CreateSiteRequest::has_site() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.site_ != nullptr);
  return value;
}
inline void CreateSiteRequest::clear_site() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.site_ != nullptr) _impl_.site_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::kentik::site::v202106alpha1::Site& CreateSiteRequest::_internal_site() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::site::v202106alpha1::Site* p = _impl_.site_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::site::v202106alpha1::Site&>(::kentik::site::v202106alpha1::_Site_default_instance_);
}
inline const ::kentik::site::v202106alpha1::Site& CreateSiteRequest::site() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.site.v202106alpha1.CreateSiteRequest.site)
  return _internal_site();
}
inline void CreateSiteRequest::unsafe_arena_set_allocated_site(::kentik::site::v202106alpha1::Site* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.site_);
  }
  _impl_.site_ = reinterpret_cast<::kentik::site::v202106alpha1::Site*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.site.v202106alpha1.CreateSiteRequest.site)
}
inline ::kentik::site::v202106alpha1::Site* CreateSiteRequest::release_site() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::site::v202106alpha1::Site* released = _impl_.site_;
  _impl_.site_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::site::v202106alpha1::Site* CreateSiteRequest::unsafe_arena_release_site() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.site.v202106alpha1.CreateSiteRequest.site)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::site::v202106alpha1::Site* temp = _impl_.site_;
  _impl_.site_ = nullptr;
  return temp;
}
inline ::kentik::site::v202106alpha1::Site* CreateSiteRequest::_internal_mutable_site() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.site_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::site::v202106alpha1::Site>(GetArena());
    _impl_.site_ = reinterpret_cast<::kentik::site::v202106alpha1::Site*>(p);
  }
  return _impl_.site_;
}
inline ::kentik::site::v202106alpha1::Site* CreateSiteRequest::mutable_site() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::kentik::site::v202106alpha1::Site* _msg = _internal_mutable_site();
  // @@protoc_insertion_point(field_mutable:kentik.site.v202106alpha1.CreateSiteRequest.site)
  return _msg;
}
inline void CreateSiteRequest::set_allocated_site(::kentik::site::v202106alpha1::Site* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.site_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.site_ = reinterpret_cast<::kentik::site::v202106alpha1::Site*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.site.v202106alpha1.CreateSiteRequest.site)
}

// -------------------------------------------------------------------

// CreateSiteResponse

// .kentik.site.v202106alpha1.Site site = 1 [json_name = "site"];
inline bool CreateSiteResponse::has_site() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.site_ != nullptr);
  return value;
}
inline void CreateSiteResponse::clear_site() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.site_ != nullptr) _impl_.site_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::kentik::site::v202106alpha1::Site& CreateSiteResponse::_internal_site() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::site::v202106alpha1::Site* p = _impl_.site_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::site::v202106alpha1::Site&>(::kentik::site::v202106alpha1::_Site_default_instance_);
}
inline const ::kentik::site::v202106alpha1::Site& CreateSiteResponse::site() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.site.v202106alpha1.CreateSiteResponse.site)
  return _internal_site();
}
inline void CreateSiteResponse::unsafe_arena_set_allocated_site(::kentik::site::v202106alpha1::Site* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.site_);
  }
  _impl_.site_ = reinterpret_cast<::kentik::site::v202106alpha1::Site*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.site.v202106alpha1.CreateSiteResponse.site)
}
inline ::kentik::site::v202106alpha1::Site* CreateSiteResponse::release_site() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::site::v202106alpha1::Site* released = _impl_.site_;
  _impl_.site_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::site::v202106alpha1::Site* CreateSiteResponse::unsafe_arena_release_site() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.site.v202106alpha1.CreateSiteResponse.site)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::site::v202106alpha1::Site* temp = _impl_.site_;
  _impl_.site_ = nullptr;
  return temp;
}
inline ::kentik::site::v202106alpha1::Site* CreateSiteResponse::_internal_mutable_site() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.site_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::site::v202106alpha1::Site>(GetArena());
    _impl_.site_ = reinterpret_cast<::kentik::site::v202106alpha1::Site*>(p);
  }
  return _impl_.site_;
}
inline ::kentik::site::v202106alpha1::Site* CreateSiteResponse::mutable_site() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::kentik::site::v202106alpha1::Site* _msg = _internal_mutable_site();
  // @@protoc_insertion_point(field_mutable:kentik.site.v202106alpha1.CreateSiteResponse.site)
  return _msg;
}
inline void CreateSiteResponse::set_allocated_site(::kentik::site::v202106alpha1::Site* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.site_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.site_ = reinterpret_cast<::kentik::site::v202106alpha1::Site*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.site.v202106alpha1.CreateSiteResponse.site)
}

// -------------------------------------------------------------------

// UpdateSiteRequest

// .kentik.site.v202106alpha1.Site site = 1 [json_name = "site"];
inline bool UpdateSiteRequest::has_site() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.site_ != nullptr);
  return value;
}
inline void UpdateSiteRequest::clear_site() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.site_ != nullptr) _impl_.site_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::kentik::site::v202106alpha1::Site& UpdateSiteRequest::_internal_site() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::site::v202106alpha1::Site* p = _impl_.site_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::site::v202106alpha1::Site&>(::kentik::site::v202106alpha1::_Site_default_instance_);
}
inline const ::kentik::site::v202106alpha1::Site& UpdateSiteRequest::site() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.site.v202106alpha1.UpdateSiteRequest.site)
  return _internal_site();
}
inline void UpdateSiteRequest::unsafe_arena_set_allocated_site(::kentik::site::v202106alpha1::Site* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.site_);
  }
  _impl_.site_ = reinterpret_cast<::kentik::site::v202106alpha1::Site*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.site.v202106alpha1.UpdateSiteRequest.site)
}
inline ::kentik::site::v202106alpha1::Site* UpdateSiteRequest::release_site() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::site::v202106alpha1::Site* released = _impl_.site_;
  _impl_.site_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::site::v202106alpha1::Site* UpdateSiteRequest::unsafe_arena_release_site() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.site.v202106alpha1.UpdateSiteRequest.site)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::site::v202106alpha1::Site* temp = _impl_.site_;
  _impl_.site_ = nullptr;
  return temp;
}
inline ::kentik::site::v202106alpha1::Site* UpdateSiteRequest::_internal_mutable_site() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.site_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::site::v202106alpha1::Site>(GetArena());
    _impl_.site_ = reinterpret_cast<::kentik::site::v202106alpha1::Site*>(p);
  }
  return _impl_.site_;
}
inline ::kentik::site::v202106alpha1::Site* UpdateSiteRequest::mutable_site() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::kentik::site::v202106alpha1::Site* _msg = _internal_mutable_site();
  // @@protoc_insertion_point(field_mutable:kentik.site.v202106alpha1.UpdateSiteRequest.site)
  return _msg;
}
inline void UpdateSiteRequest::set_allocated_site(::kentik::site::v202106alpha1::Site* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.site_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.site_ = reinterpret_cast<::kentik::site::v202106alpha1::Site*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.site.v202106alpha1.UpdateSiteRequest.site)
}

// -------------------------------------------------------------------

// UpdateSiteResponse

// .kentik.site.v202106alpha1.Site site = 1 [json_name = "site"];
inline bool UpdateSiteResponse::has_site() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.site_ != nullptr);
  return value;
}
inline void UpdateSiteResponse::clear_site() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.site_ != nullptr) _impl_.site_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::kentik::site::v202106alpha1::Site& UpdateSiteResponse::_internal_site() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::site::v202106alpha1::Site* p = _impl_.site_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::site::v202106alpha1::Site&>(::kentik::site::v202106alpha1::_Site_default_instance_);
}
inline const ::kentik::site::v202106alpha1::Site& UpdateSiteResponse::site() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.site.v202106alpha1.UpdateSiteResponse.site)
  return _internal_site();
}
inline void UpdateSiteResponse::unsafe_arena_set_allocated_site(::kentik::site::v202106alpha1::Site* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.site_);
  }
  _impl_.site_ = reinterpret_cast<::kentik::site::v202106alpha1::Site*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.site.v202106alpha1.UpdateSiteResponse.site)
}
inline ::kentik::site::v202106alpha1::Site* UpdateSiteResponse::release_site() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::site::v202106alpha1::Site* released = _impl_.site_;
  _impl_.site_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::site::v202106alpha1::Site* UpdateSiteResponse::unsafe_arena_release_site() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.site.v202106alpha1.UpdateSiteResponse.site)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::site::v202106alpha1::Site* temp = _impl_.site_;
  _impl_.site_ = nullptr;
  return temp;
}
inline ::kentik::site::v202106alpha1::Site* UpdateSiteResponse::_internal_mutable_site() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.site_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::site::v202106alpha1::Site>(GetArena());
    _impl_.site_ = reinterpret_cast<::kentik::site::v202106alpha1::Site*>(p);
  }
  return _impl_.site_;
}
inline ::kentik::site::v202106alpha1::Site* UpdateSiteResponse::mutable_site() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::kentik::site::v202106alpha1::Site* _msg = _internal_mutable_site();
  // @@protoc_insertion_point(field_mutable:kentik.site.v202106alpha1.UpdateSiteResponse.site)
  return _msg;
}
inline void UpdateSiteResponse::set_allocated_site(::kentik::site::v202106alpha1::Site* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.site_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.site_ = reinterpret_cast<::kentik::site::v202106alpha1::Site*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.site.v202106alpha1.UpdateSiteResponse.site)
}

// -------------------------------------------------------------------

// DeleteSiteRequest

// string id = 1 [json_name = "id"];
inline void DeleteSiteRequest::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& DeleteSiteRequest::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.site.v202106alpha1.DeleteSiteRequest.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeleteSiteRequest::set_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.site.v202106alpha1.DeleteSiteRequest.id)
}
inline std::string* DeleteSiteRequest::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:kentik.site.v202106alpha1.DeleteSiteRequest.id)
  return _s;
}
inline const std::string& DeleteSiteRequest::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void DeleteSiteRequest::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(value, GetArena());
}
inline std::string* DeleteSiteRequest::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* DeleteSiteRequest::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.site.v202106alpha1.DeleteSiteRequest.id)
  return _impl_.id_.Release();
}
inline void DeleteSiteRequest::set_allocated_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.id_.IsDefault()) {
    _impl_.id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.site.v202106alpha1.DeleteSiteRequest.id)
}

// -------------------------------------------------------------------

// DeleteSiteResponse

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v202106alpha1
}  // namespace site
}  // namespace kentik


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::kentik::site::v202106alpha1::SiteType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::kentik::site::v202106alpha1::SiteType>() {
  return ::kentik::site::v202106alpha1::SiteType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // kentik_2fsite_2fv202106alpha1_2fsite_2eproto_2epb_2eh
