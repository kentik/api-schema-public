syntax = "proto3";

package kentik.pathfinder.v202505beta1;
option go_package = "github.com/kentik/api-schema-public/gen/go/kentik/pathfinder/v202505beta1;pathfinder";

import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/api/field_behavior.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "google/protobuf/timestamp.proto";

import "kentik/core/v202303/annotations.proto";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Pathfinder API"
    version: "v202505beta1"
    contact: {
      name: "Kentik API Engineering"
      url: "https://github.com/kentik/api-schema-public"
    }
    description: "# Overview\n"
    "The **Pathfinder API** provides programmatic access to Kentik's **Cloud Pathfinder**, enabling you to check "
    "and monitor **forward and return network paths** between two points in your cloud environment. "
    "It supports entities like instances, subnets, and network interfaces over a specified time range."
    "\n"
    "### Supported Cloud Providers\n"
    "The API's functionality and configuration parameter vary by cloud provider, as follows:\n"
    "* [Amazon Web Services](https://kb.kentik.com/v0/Bd06.htm) (AWS)\n"
    "* [Microsoft Azure](https://kb.kentik.com/v0/Bd08.htm)\n"
    "\n"
    "### Supported Entity Types\n"
    "For AWS, the API supports checking connectivity between:\n"
    "* Subnets\n"
    "* Instances\n"
    "* Network Interfaces\n"
    "\n"
    "For Azure, the API supports checking connectivity between:\n"
    "* Subnets"
    "\n"
    "### Requirements\n"
    "To successfully query connections between entity resources with Kentik's Pathfinder API, you "
    "must first configure a Kentik **cloud export** "
    "(see [Cloud Exports and Devices](https://kb.kentik.com/v4/Na00.htm#Na00-Cloud_Exports_and_Devices)) "
    "for a supported cloud provider (AWS or Azure).\n"
    "Once configured, Kentik will regularly pull metadata from "
    "the specified cloud account. Pathfinder then uses this metadata to:\n"
    "* Visualize the path for connections between any two points in your AWS network.\n"
    "* Check routing and NACL/SG configurations to quickly highlight blocked connections.\n"
    "* Provide a direct link to misconfigured gateways or security policies in the cloud dashboard for quick issue resolution.\n"
    "\n"
    "### Frequency of available data\n"
    "Since Pathfinder relies on discovered metadata, "
    "query results are limited to the timeframe of the latest metadata retrieval fetch, currently 15-minutes intervals."
  }
  external_docs: {
    url: "https://kb.kentik.com/v4/Na05.htm"
    description: "Kentik Pathfinder documentation"
  }
  schemes: HTTPS
  consumes: "application/json"
  produces: "application/json"
  security_definitions: {
    security: {
      key: "email"
      value: {
        type: TYPE_API_KEY
        in: IN_HEADER
        name: "X-CH-Auth-Email"
      }
    }
    security: {
      key: "token"
      value: {
        type: TYPE_API_KEY
        in: IN_HEADER
        name: "X-CH-Auth-API-Token"
      }
    }
  }
  security: {
    security_requirement: {
      key: "email"
      value: {}
    }
    security_requirement: {
      key: "token"
      value: {}
    }
  }
};

// {{.Name}}
enum CloudProvider {
  // Invalid value.
  CLOUD_PROVIDER_UNSPECIFIED = 0;
  // Amazon Web Services
  CLOUD_PROVIDER_AWS = 1;
  // Microsoft Azure
  CLOUD_PROVIDER_AZURE = 2;
}


// {{.Name}}
enum EntityType {
  // Invalid value.
  ENTITY_TYPE_UNSPECIFIED = 0;
  // Subnet
  ENTITY_TYPE_SUBNET = 1;
  // Instance
  ENTITY_TYPE_INSTANCE = 2;
  // Network Interfaces
  ENTITY_TYPE_NETWORK_INTERFACE = 3;
}

message PathElement {
  string type = 1;
  string value = 2;
  string region = 3;
}



// {{.Name}}
message CreatePathfinderReportRequest {
  CloudProvider cloud_provider = 1 [
    (google.api.field_behavior) = REQUIRED,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Cloud provider identification"
    }
  ];
  string src = 2 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Source"
    },
    (google.api.field_behavior) = REQUIRED
  ];
  string dst = 3 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Destination"
    },
    (google.api.field_behavior) = REQUIRED
  ];
  string dst_port = 4 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Destination Port"
    },
    (google.api.field_behavior) = REQUIRED
  ];
  string protocol = 5 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Protocol"
    },
    (google.api.field_behavior) = REQUIRED
  ];
  EntityType src_type = 6 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Source Entity Type"
    }
  ];
  EntityType dst_type = 7 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Destination Entity Type"
    }
  ];
  google.protobuf.Timestamp start_time = 8 [
    (google.api.field_behavior) = REQUIRED,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Start Timestamp (UTC) which defines the time range for the report."
    }
  ];
  google.protobuf.Timestamp end_time = 9 [
    (google.api.field_behavior) = REQUIRED,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "End timestamp (UTC) which defines the time range for the report."
    }
  ];
  string name = 10 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Report Name"
    },
    (google.api.field_behavior) = OPTIONAL
  ];
}

// {{.Name}}
message CreatePathfinderReportResponse {
  string reachable = 1 [
    (google.api.field_behavior) = OUTPUT_ONLY,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Attribute controlling whether the instance is active"
    }
  ];
  string return_reachable = 2 [
    (google.api.field_behavior) = OUTPUT_ONLY,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Attribute controlling whether the instance is active"
    }
  ];
  string query_status = 3 [
    (google.api.field_behavior) = OUTPUT_ONLY,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Status of the query."
    }
  ];
  string report_url = 4 [
    (google.api.field_behavior) = OUTPUT_ONLY,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "URL to view the pathfinder report in the Kentik platform."
    }
  ];
  repeated PathElement paths = 5 [
    (google.api.field_behavior) = OUTPUT_ONLY,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "The connection paths in your network."
    }
  ];
  repeated PathElement return_paths = 6 [
    (google.api.field_behavior) = OUTPUT_ONLY,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "The return connection paths in your network."
    }
  ];
  string last_metadata_fetch = 7 [
    (google.api.field_behavior) = OUTPUT_ONLY,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "The timestamp indicating when the metadata used to build the pathfinder report was last fetched."
    }
  ];
  string summary = 8 [
    (google.api.field_behavior) = OUTPUT_ONLY,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "The pathfinder report summary"
    }
  ];
}


service PathfinderAdminService {
  option (google.api.default_host) = "grpc.api.kentik.com";
  option (kentik.core.v202303.visibility) = SERVICE_VISIBILITY_PUBLIC;
  option (kentik.core.v202303.service_scope) = "admin.pathfinder";

  rpc CreatePathfinderReport(CreatePathfinderReportRequest) returns (CreatePathfinderReportResponse) {
    option (kentik.core.v202303.method_scope) = "admin.pathfinder:write";
    option (google.api.http) = {
      post: "/pathfinder/v202505beta1/create"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      operation_id: "CreatePathfinderReport"
      summary: "Create a Pathfinder Report."
      description: "Create a pathfinder report based on configuration provided in the request."
    };
  }
}
