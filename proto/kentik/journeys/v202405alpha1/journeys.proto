syntax = "proto3";

package kentik.journeys.v202405alpha1;
option go_package = "github.com/kentik/api-schema-public/gen/go/kentik/journeys/v202405alpha1;journeys";

import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/api/field_behavior.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

import "kentik/core/v202303/annotations.proto";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Journeys AI NLQ API"
    version: "v202405alpha1"
    contact: {
      name: "Kentik API Engineering"
      url: "https://github.com/kentik/api-schema-public"
    }
    description: "# Overview\n"
    "Journeys AI API provides programmatic access to Natural Language Query (NLQ)"
  }
  external_docs: {
    url: "https://kb.kentik.com/v0/Ab09.htm#Ab09-APIs_Overview"
    description: "General information about Kentik APIs"
  }
  schemes: HTTPS
  consumes: "application/json"
  produces: "application/json"
  security_definitions: {
    security: {
      key: "email"
      value: {
        type: TYPE_API_KEY
        in: IN_HEADER
        name: "X-CH-Auth-Email"
      }
    }
    security: {
      key: "token"
      value: {
        type: TYPE_API_KEY
        in: IN_HEADER
        name: "X-CH-Auth-API-Token"
      }
    }
  }
  security: {
    security_requirement: {
      key: "email"
      value: {}
    }
    security_requirement: {
      key: "token"
      value: {}
    }
  }
};

enum ResultType {
  RESULT_TYPE_UNSPECIFIED = 0;
  RESULT_TYPE_ERROR = 1;
  RESULT_TYPE_DE_QUERY_OBJECT = 2;
  RESULT_TYPE_ME_QUERY_OBJECT = 3;
  RESULT_TYPE_KNOWLEDGE_BASE = 4;
}

enum ResultFormat {
  RESULT_FORMAT_UNSPECIFIED = 0;
  RESULT_FORMAT_JSON = 1;
  RESULT_FORMAT_MARKDOWN = 2;
  RESULT_FORMAT_PLAIN_TEXT = 3;
}

// {{.Name}}
message GetJourneysNlqRequest {
  string prompt = 1 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "The text prompt to be converted to a Journeys NLQ result."
    },
    (google.api.field_behavior) = REQUIRED
  ];
}

// {{.Name}}
message GetJourneysNlqResponse {
  string result = 1;
  ResultType result_type = 2;
  ResultFormat result_format = 3;
}

service JourneysDataService {
  option (google.api.default_host) = "grpc.api.kentik.com";
  option (kentik.core.v202303.visibility) = SERVICE_VISIBILITY_PUBLIC;
  option (kentik.core.v202303.service_scope) = "journeys";

  rpc GetJourneysNlq(GetJourneysNlqRequest) returns (GetJourneysNlqResponse) {
    option (kentik.core.v202303.method_scope) = "journeys:read";
    option (google.api.http) = {
      get: "/journeys/v202405alpha1/GetJourneysNlq"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      operation_id: "GetJourneysNlq"
      summary: "Journeys AI NLQ Service"
      description: "Perform Natural Language (NLQ) to query object translation"
    };
  }
}
