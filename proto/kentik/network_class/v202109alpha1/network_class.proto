syntax = "proto3";

package kentik.network_class.v202109alpha1;
option go_package = "github.com/kentik/api-schema/gen/go/kentik/network_class/v202109alpha1;network_class";

import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/type/latlng.proto";
import "google/type/postal_address.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "kentik/core/v202012alpha1/annotations.proto";


option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Network Classification API"
    version: "202109alpha1"
    contact: {
      name: "Kentik API Engineering"
    }
  }
  external_docs: {
    url: "https://docs.kentik.com/api"
    description: "More about Kentik APIs"
  }
  schemes: HTTPS
  consumes: "application/json"
  produces: "application/json"
  security_definitions: {
    security: {
      key: "email"
      value: {
        type: TYPE_API_KEY
        in: IN_HEADER
        name: "X-CH-Auth-Email"
      }
    }
    security: {
      key: "token"
      value: {
        type: TYPE_API_KEY
        in: IN_HEADER
        name: "X-CH-Auth-API-Token"
      }
    }
  }
  security: {
    security_requirement: {
      key: "email"
      value: {}
    }
    security_requirement: {
      key: "token"
      value: {}
    }
  }
};

enum CloudType {
  CLOUD_TYPE_UNSPECIFIED = 0;
  CLOUD_TYPE_AWS = 1;
  CLOUD_TYPE_AZURE = 2;
  CLOUD_TYPE_GCE = 3;
  CLOUD_TYPE_IBM = 4;
}

message CloudSubnet {
  // Cloud provider
  CloudType type = 1;
  // Subnet masks
  repeated string subnets = 2;
}


message NetworkClass {
  // Internal ASNs
  repeated string internal_asns = 1;
  // Internal IPs
  repeated string internal_ips = 2;
  // Specify to use internal ASNs
  bool use_private_asns = 3;
  // Specify to use internal IPs
  bool use_private_subnets = 4;
  // Cloud provider and subnet info.
  repeated CloudSubnet cloud_subnets = 5;
}


message GetNetworkClassRequest {}
message GetNetworkClassResponse {
  NetworkClass network_class = 1;
}

message UpdateNetworkClassRequest {
  NetworkClass network_class = 1;
}
message UpdateNetworkClassResponse {
  NetworkClass network_class = 1;
}


service NetworkClassService {
  option (google.api.default_host) = "grpc.api.kentik.com";
  option (kentik.core.v202012alpha1.service_scope) = "admin.network_class";


  rpc GetNetworkClass(GetNetworkClassRequest) returns (GetNetworkClassResponse) {
    option (kentik.core.v202012alpha1.method_scope) = "admin.network_class:read";
    option (google.api.http) = {
      get: "/network_class/v202109alpha1/network_class"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      operation_id: "NetworkClassGet"
      summary: "Get a network classification."
      description: "Returns information about a network classification for the company."
    };
  }

  rpc UpdateNetworkClass(UpdateNetworkClassRequest) returns (UpdateNetworkClassResponse) {
    option (kentik.core.v202012alpha1.method_scope) = "admin.network_class:write";
    option (google.api.http) = {
      post: "/network_class/v202109alpha1/network_class"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      operation_id: "NetworkClassUpdate"
      summary: "Update a network classification."
      description: "Replaces the entire network classification attributes for the company."
    };
  }
}
