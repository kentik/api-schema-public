syntax = "proto3";

package kentik.event_view_model.v202204alpha1;
option go_package = "github.com/kentik/api-schema/gen/go/kentik/event_view_model/v202204alpha1;event_view_model";

import "google/api/annotations.proto";
import "google/api/client.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "kentik/core/v202012alpha1/annotations.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/struct.proto";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "EventViewModel API"
    version: "202204alpha1"
    contact: {
      name: "Kentik API Engineering"
    }
  }
  external_docs: {
    url: "https://docs.kentik.com/api"
    description: "More about Kentik APIs"
  }
  schemes: HTTPS
  consumes: "application/json"
  produces: "application/json"
};

message AlarmEvent {
  string id = 1;
}

message MitigationEvent {
  string id = 1;
}

message InsightEvent {
  string id = 1;
}

message GetViewModelRequest {
  oneof event {
    AlarmEvent alarm = 2;
    MitigationEvent mitigation = 3;
    InsightEvent insight = 4;
  }
}

enum EventViewType {
  EVENT_VIEW_TYPE_UNSPECIFIED = 0;
  EVENT_VIEW_TYPE_ALERT = 1;
  EVENT_VIEW_TYPE_MITIGATION = 2;
  EVENT_VIEW_TYPE_SYNTHETIC = 3;
  EVENT_VIEW_TYPE_INSIGHT = 4;
  EVENT_VIEW_TYPE_CUSTOM_INSIGHT = 5;
}

enum EventViewImportance {
  EVENT_VIEW_IMPORTANCE_UNSPECIFIED = 0;
  EVENT_VIEW_IMPORTANCE_HEALTHY = 1;
  EVENT_VIEW_IMPORTANCE_NOTICE = 2;
  EVENT_VIEW_IMPORTANCE_MINOR = 3;
  EVENT_VIEW_IMPORTANCE_WARNING = 4;
  EVENT_VIEW_IMPORTANCE_MAJOR = 5;
  EVENT_VIEW_IMPORTANCE_SEVERE = 6;
  EVENT_VIEW_IMPORTANCE_CRITICAL = 7;
}

message EventViewDetail {
  string name = 1;
  string label = 2;
  string tag = 3;
  google.protobuf.Value value = 4;
}

message EventViewModel {
  EventViewType type = 1;
  string group = 2;
  string description = 3;
  bool is_active = 4;
  google.protobuf.Timestamp start_time = 5;
  google.protobuf.Timestamp end_time = 6;
  string current_state = 7;
  string previous_state = 8;
  EventViewImportance importance = 9;
  repeated EventViewDetail details = 10;
}

message GetViewModelResponse {
  EventViewModel model = 1;
}

service EventViewModelService {
  option (google.api.default_host) = "grpc.api.kentik.com";
  option (kentik.core.v202012alpha1.private_service) = true;

  rpc GetViewModel(GetViewModelRequest) returns (GetViewModelResponse) {
    option (google.api.http) = {
      post: "/event_view_model/v202204alpha1/event_view_model"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      operation_id: "GetViewModel"
      summary: "Event view model will provide event context necessary to render notifications"
      description: "GetViewModel will provide event view model data structure"
    };
  }
}
