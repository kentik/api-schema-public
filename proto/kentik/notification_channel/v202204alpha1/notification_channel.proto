syntax = "proto3";

package kentik.notification_channel.v202204alpha1;
option go_package = "github.com/kentik/api-schema/gen/go/kentik/notification_channel/v202204alpha1;notification_channel";

import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/type/latlng.proto";
import "google/type/postal_address.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "kentik/core/v202012alpha1/annotations.proto";
import "google/protobuf/timestamp.proto";


option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "NotificationChannel API"
    version: "202204alpha1"
    contact: {
      name: "Kentik API Engineering"
    }
  }
  external_docs: {
    url: "https://docs.kentik.com/api"
    description: "More about Kentik APIs"
  }
  schemes: HTTPS
  consumes: "application/json"
  produces: "application/json"
  security_definitions: {
    security: {
      key: "email"
      value: {
        type: TYPE_API_KEY
        in: IN_HEADER
        name: "X-CH-Auth-Email"
      }
    }
    security: {
      key: "token"
      value: {
        type: TYPE_API_KEY
        in: IN_HEADER
        name: "X-CH-Auth-API-Token"
      }
    }
  }
  security: {
    security_requirement: {
      key: "email"
      value: {}
    }
    security_requirement: {
      key: "token"
      value: {}
    }
  }
};

enum ChannelType {
  CHANNEL_TYPE_UNSPECIFIED = 0;
  CHANNEL_TYPE_XMATTERS = 1;
  CHANNEL_TYPE_SLACK = 2;
  CHANNEL_TYPE_SERVICENOW = 3;
  CHANNEL_TYPE_SYSLOG = 4;
  CHANNEL_TYPE_OPSGENIE = 5;
  CHANNEL_TYPE_CUSTOM_WEBHOOK = 6;
  CHANNEL_TYPE_SPLUNK = 7;
  CHANNEL_TYPE_MSTEAMS = 8;
  CHANNEL_TYPE_JSON = 9;
  CHANNEL_TYPE_EMAIL = 10;
  CHANNEL_TYPE_VICTOROPS = 11;
  CHANNEL_TYPE_PAGERDUTY = 12;
}

message NotificationChannel {
  string id = 1;
  string name = 2;
  ChannelType type = 3;
  string status = 4;
  // Create timestamp.
  google.protobuf.Timestamp cdate = 5;
  // Update timestamp.
  google.protobuf.Timestamp edate = 6;
}

message ListNotificationChannelsRequest {
}
message ListNotificationChannelsResponse {
  repeated NotificationChannel notification_channels = 1;
  int32 invalid_count = 2;
}

message GetNotificationChannelRequest {
  string id = 1;
}
message GetNotificationChannelResponse {
  NotificationChannel notification_channel = 1;
}

service NotificationChannelService {
  option (google.api.default_host) = "grpc.api.kentik.com";
  option (kentik.core.v202012alpha1.service_scope) = "admin.notification_channel";


  rpc ListNotificationChannels(ListNotificationChannelsRequest) returns (ListNotificationChannelsResponse) {
    option (kentik.core.v202012alpha1.method_scope) = "admin.notification_channel:read";
    option (google.api.http) = {
      get: "/notification_channel/v202204alpha1/notification_channels"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      operation_id: "ListNotificationChannels"
      summary: "Fetch Search NotificationChannels"
      description: "Return list of notification_channels matches search critera."
    };
  }

  rpc GetNotificationChannel(GetNotificationChannelRequest) returns (GetNotificationChannelResponse) {
    option (kentik.core.v202012alpha1.method_scope) = "admin.notification_channel:read";
    option (google.api.http) = {
      get: "/notification_channel/v202204alpha1/notification_channels/{id}"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      operation_id: "GetNotificationChannel"
      summary: "Get information about NotificationChannel"
      description: "Returns information about notification_channel specified with ID."
    };
  }
}
